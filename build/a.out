/*!

 * AudioC JavaScript Library

 */

;(function (root, factory) {

    if (typeof define === "function" && define.amd) {

        define([], function () {

            factory(root);

        });

    } else if (typeof module === "object" && module.exports) {

        module.exports = factory(root);

    } else {

        factory(root);

    }

})(this.globalThis || (this.globalThis = this), function (window) {



    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1

    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode

    // arguments.callee.caller (trac-13335).

    "use strict";





    // amrnb.js: opencore-amr compiled to js



    const AMRNB = (function () {





// The Module object: Our interface to the outside world. We import

// and export values on it. There are various ways Module can be used:

// 1. Not defined. We create it here

// 2. A function parameter, function(Module) { ..generated code.. }

// 3. pre-run appended it, var Module = {}; ..generated code..

// 4. External script tag defines var Module.

// We need to check if Module already exists (e.g. case 3 above).

// Substitution will be replaced with actual code on later stage of the build,

// this way Closure Compiler will not mangle it (e.g. case 4. above).

// Note that if you want to run closure, and also to use Module

// after the generated code, you will need to define   var Module = {};

// before the code. Then that object will be used in the code, and you

// can continue to use Module afterwards as well.

        var Module = typeof Module != 'undefined' ? Module : {};



// See https://caniuse.com/mdn-javascript_builtins_object_assign



// See https://caniuse.com/mdn-javascript_builtins_bigint64array



// --pre-jses are emitted after the Module integration code, so that they can

// refer to Module (if they choose; they can also define Module)

// {{PRE_JSES}}



// Sometimes an existing Module object exists with properties

// meant to overwrite the default module functionality. Here

// we collect those properties and reapply _after_ we configure

// the current environment's defaults to avoid having to be so

// defensive during initialization.

        var moduleOverrides = Object.assign({}, Module);



        var arguments_ = [];

        var thisProgram = './this.program';

        var quit_ = (status, toThrow) => {

            throw toThrow;

        };



// Determine the runtime environment we are in. You can customize this by

// setting the ENVIRONMENT setting at compile time (see settings.js).



// Attempt to auto-detect the environment

        var ENVIRONMENT_IS_WEB = typeof window == 'object';

        var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';

// N.b. Electron.js environment is simultaneously a NODE-environment, but

// also a web environment.

        var ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';

        var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;



        if (Module['ENVIRONMENT']) {

            throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');

        }



// `/` should be present at the end if `scriptDirectory` is not empty

        var scriptDirectory = '';



        function locateFile(path) {

            if (Module['locateFile']) {

                return Module['locateFile'](path, scriptDirectory);

            }

            return scriptDirectory + path;

        }



// Hooks that are implemented differently in different runtime environments.

        var read_,

            readAsync,

            readBinary,

            setWindowTitle;



// Normally we don't log exceptions but instead let them bubble out the top

// level where the embedding environment (e.g. the browser) can handle

// them.

// However under v8 and node we sometimes exit the process direcly in which case

// its up to use us to log the exception before exiting.

// If we fix https://github.com/emscripten-core/emscripten/issues/15080

// this may no longer be needed under node.

        function logExceptionOnExit(e) {

            if (e instanceof ExitStatus) return;

            let toLog = e;

            if (e && typeof e == 'object' && e.stack) {

                toLog = [e, e.stack];

            }

            err('exiting due to exception: ' + toLog);

        }



        if (ENVIRONMENT_IS_NODE) {

            if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');

            // `require()` is no-op in an ESM module, use `createRequire()` to construct

            // the require()` function.  This is only necessary for multi-environment

            // builds, `-sENVIRONMENT=node` emits a static import declaration instead.

            // TODO: Swap all `require()`'s with `import()`'s?

            // These modules will usually be used on Node.js. Load them eagerly to avoid

            // the complexity of lazy-loading.

            var fs = require('fs');

            var nodePath = require('path');



            if (ENVIRONMENT_IS_WORKER) {

                scriptDirectory = nodePath.dirname(scriptDirectory) + '/';

            } else {

                scriptDirectory = __dirname + '/';

            }



// include: node_shell_read.js





            read_ = (filename, binary) => {

                var ret = tryParseAsDataURI(filename);

                if (ret) {

                    return binary ? ret : ret.toString();

                }

                // We need to re-wrap `file://` strings to URLs. Normalizing isn't

                // necessary in that case, the path should already be absolute.

                filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);

                return fs.readFileSync(filename, binary ? undefined : 'utf8');

            };



            readBinary = (filename) => {

                var ret = read_(filename, true);

                if (!ret.buffer) {

                    ret = new Uint8Array(ret);

                }

                assert(ret.buffer);

                return ret;

            };



            readAsync = (filename, onload, onerror) => {

                var ret = tryParseAsDataURI(filename);

                if (ret) {

                    onload(ret);

                }

                // See the comment in the `read_` function.

                filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);

                fs.readFile(filename, function (err, data) {

                    if (err) onerror(err);

                    else onload(data.buffer);

                });

            };



// end include: node_shell_read.js

            if (process['argv'].length > 1) {

                thisProgram = process['argv'][1].replace(/\\/g, '/');

            }



            arguments_ = process['argv'].slice(2);



            if (typeof module != 'undefined') {

                module['exports'] = Module;

            }



            process['on']('uncaughtException', function (ex) {

                // suppress ExitStatus exceptions from showing an error

                if (!(ex instanceof ExitStatus)) {

                    throw ex;

                }

            });



            // Without this older versions of node (< v15) will log unhandled rejections

            // but return 0, which is not normally the desired behaviour.  This is

            // not be needed with node v15 and about because it is now the default

            // behaviour:

            // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode

            process['on']('unhandledRejection', function (reason) {

                throw reason;

            });



            quit_ = (status, toThrow) => {

                if (keepRuntimeAlive()) {

                    process['exitCode'] = status;

                    throw toThrow;

                }

                logExceptionOnExit(toThrow);

                process['exit'](status);

            };



            Module['inspect'] = function () {

                return '[Emscripten Module object]';

            };



        } else if (ENVIRONMENT_IS_SHELL) {



            if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');



            if (typeof read != 'undefined') {

                read_ = function shell_read(f) {

                    const data = tryParseAsDataURI(f);

                    if (data) {

                        return intArrayToString(data);

                    }

                    return read(f);

                };

            }



            readBinary = function readBinary(f) {

                let data;

                data = tryParseAsDataURI(f);

                if (data) {

                    return data;

                }

                if (typeof readbuffer == 'function') {

                    return new Uint8Array(readbuffer(f));

                }

                data = read(f, 'binary');

                assert(typeof data == 'object');

                return data;

            };



            readAsync = function readAsync(f, onload, onerror) {

                setTimeout(() => onload(readBinary(f)), 0);

            };



            if (typeof scriptArgs != 'undefined') {

                arguments_ = scriptArgs;

            } else if (typeof arguments != 'undefined') {

                arguments_ = arguments;

            }



            if (typeof quit == 'function') {

                quit_ = (status, toThrow) => {

                    logExceptionOnExit(toThrow);

                    quit(status);

                };

            }



            if (typeof print != 'undefined') {

                // Prefer to use print/printErr where they exist, as they usually work better.

                if (typeof console == 'undefined') console = /** @type{!Console} */({});

                console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);

                console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);

            }



        } else



// Note that this includes Node.js workers when relevant (pthreads is enabled).

// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and

// ENVIRONMENT_IS_NODE.

        if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {

            if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled

                scriptDirectory = self.location.href;

            } else if (typeof document != 'undefined' && document.currentScript) { // web

                scriptDirectory = document.currentScript.src;

            }

            // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.

            // otherwise, slice off the final part of the url to find the script directory.

            // if scriptDirectory does not contain a slash, lastIndexOf will return -1,

            // and scriptDirectory will correctly be replaced with an empty string.

            // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),

            // they are removed because they could contain a slash.

            if (scriptDirectory.indexOf('blob:') !== 0) {

                scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, "").lastIndexOf('/') + 1);

            } else {

                scriptDirectory = '';

            }



            if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');



            // Differentiate the Web Worker from the Node Worker case, as reading must

            // be done differently.

            {

// include: web_or_worker_shell_read.js





                read_ = (url) => {

                    try {

                        var xhr = new XMLHttpRequest();

                        xhr.open('GET', url, false);

                        xhr.send(null);

                        return xhr.responseText;

                    } catch (err) {

                        var data = tryParseAsDataURI(url);

                        if (data) {

                            return intArrayToString(data);

                        }

                        throw err;

                    }

                }



                if (ENVIRONMENT_IS_WORKER) {

                    readBinary = (url) => {

                        try {

                            var xhr = new XMLHttpRequest();

                            xhr.open('GET', url, false);

                            xhr.responseType = 'arraybuffer';

                            xhr.send(null);

                            return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));

                        } catch (err) {

                            var data = tryParseAsDataURI(url);

                            if (data) {

                                return data;

                            }

                            throw err;

                        }

                    };

                }



                readAsync = (url, onload, onerror) => {

                    var xhr = new XMLHttpRequest();

                    xhr.open('GET', url, true);

                    xhr.responseType = 'arraybuffer';

                    xhr.onload = () => {

                        if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0

                            onload(xhr.response);

                            return;

                        }

                        var data = tryParseAsDataURI(url);

                        if (data) {

                            onload(data.buffer);

                            return;

                        }

                        onerror();

                    };

                    xhr.onerror = onerror;

                    xhr.send(null);

                }



// end include: web_or_worker_shell_read.js

            }



            setWindowTitle = (title) => document.title = title;

        } else {

            throw new Error('environment detection error');

        }



        var out = Module['print'] || console.log.bind(console);

        var err = Module['printErr'] || console.warn.bind(console);



// Merge back in the overrides

        Object.assign(Module, moduleOverrides);

// Free the object hierarchy contained in the overrides, this lets the GC

// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.

        moduleOverrides = null;

        checkIncomingModuleAPI();



// Emit code to handle expected values on the Module object. This applies Module.x

// to the proper local x. This has two benefits: first, we only emit it if it is

// expected to arrive, and second, by using a local everywhere else that can be

// minified.



        if (Module['arguments']) arguments_ = Module['arguments'];

        legacyModuleProp('arguments', 'arguments_');



        if (Module['thisProgram']) thisProgram = Module['thisProgram'];

        legacyModuleProp('thisProgram', 'thisProgram');



        if (Module['quit']) quit_ = Module['quit'];

        legacyModuleProp('quit', 'quit_');



// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message

// Assertions on removed incoming Module JS APIs.

        assert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');

        assert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');

        assert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');

        assert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');

        assert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');

        assert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');

        assert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');

        assert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');

        assert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');

        legacyModuleProp('read', 'read_');

        legacyModuleProp('readAsync', 'readAsync');

        legacyModuleProp('readBinary', 'readBinary');

        legacyModuleProp('setWindowTitle', 'setWindowTitle');

        var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';

        var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';

        var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';

        var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';



        assert(!ENVIRONMENT_IS_SHELL, "shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.");



// include: support.js





        var STACK_ALIGN = 16;

        var POINTER_SIZE = 4;



        function getNativeTypeSize(type) {

            switch (type) {

                case 'i1':

                case 'i8':

                case 'u8':

                    return 1;

                case 'i16':

                case 'u16':

                    return 2;

                case 'i32':

                case 'u32':

                    return 4;

                case 'i64':

                case 'u64':

                    return 8;

                case 'float':

                    return 4;

                case 'double':

                    return 8;

                default: {

                    if (type[type.length - 1] === '*') {

                        return POINTER_SIZE;

                    }

                    if (type[0] === 'i') {

                        const bits = Number(type.substr(1));

                        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);

                        return bits / 8;

                    }

                    return 0;

                }

            }

        }



// include: runtime_debug.js





        function legacyModuleProp(prop, newName) {

            if (!Object.getOwnPropertyDescriptor(Module, prop)) {

                Object.defineProperty(Module, prop, {

                    configurable: true,

                    get: function () {

                        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');

                    }

                });

            }

        }



        function ignoredModuleProp(prop) {

            if (Object.getOwnPropertyDescriptor(Module, prop)) {

                abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');

            }

        }



// forcing the filesystem exports a few things by default

        function isExportedByForceFilesystem(name) {

            return name === 'FS_createPath' ||

                name === 'FS_createDataFile' ||

                name === 'FS_createPreloadedFile' ||

                name === 'FS_unlink' ||

                name === 'addRunDependency' ||

                // The old FS has some functionality that WasmFS lacks.

                name === 'FS_createLazyFile' ||

                name === 'FS_createDevice' ||

                name === 'removeRunDependency';

        }



        function missingGlobal(sym, msg) {

            Object.defineProperty(globalThis, sym, {

                configurable: true,

                get: function () {

                    warnOnce('`' + sym + '` is not longer defined by emscripten. ' + msg);

                    return undefined;

                }

            });

        }



        missingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');



        function missingLibrarySymbol(sym) {

            if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {

                Object.defineProperty(globalThis, sym, {

                    configurable: true,

                    get: function () {

                        // Can't `abort()` here because it would break code that does runtime

                        // checks.  e.g. `if (typeof SDL === 'undefined')`.

                        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';

                        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in

                        // library.js, which means $name for a JS name with no prefix, or name

                        // for a JS name like _name.

                        var librarySymbol = sym;

                        if (!librarySymbol.startsWith('_')) {

                            librarySymbol = '$' + sym;

                        }

                        msg += " (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=" + librarySymbol + ")";

                        if (isExportedByForceFilesystem(sym)) {

                            msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';

                        }

                        warnOnce(msg);

                        return undefined;

                    }

                });

            }

        }



        function unexportedRuntimeSymbol(sym) {

            if (!Object.getOwnPropertyDescriptor(Module, sym)) {

                Object.defineProperty(Module, sym, {

                    configurable: true,

                    get: function () {

                        var msg = "'" + sym + "' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)";

                        if (isExportedByForceFilesystem(sym)) {

                            msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';

                        }

                        abort(msg);

                    }

                });

            }

        }



// end include: runtime_debug.js

// end include: support.js





// === Preamble library stuff ===



// Documentation for the public APIs defined in this file must be updated in:

//    site/source/docs/api_reference/preamble.js.rst

// A prebuilt local version of the documentation is available at:

//    site/build/text/docs/api_reference/preamble.js.txt

// You can also build docs locally as HTML or other formats in site/

// An online HTML version (which may be of a different version of Emscripten)

//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html



        var wasmBinary;

        if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];

        legacyModuleProp('wasmBinary', 'wasmBinary');

        var noExitRuntime = Module['noExitRuntime'] || true;

        legacyModuleProp('noExitRuntime', 'noExitRuntime');



// include: wasm2js.js





// wasm2js.js - enough of a polyfill for the WebAssembly object so that we can load

// wasm2js code that way.



// Emit "var WebAssembly" if definitely using wasm2js. Otherwise, in MAYBE_WASM2JS

// mode, we can't use a "var" since it would prevent normal wasm from working.

        /** @suppress{duplicate, const} */

        var

            WebAssembly = {

                // Note that we do not use closure quoting (this['buffer'], etc.) on these

                // functions, as they are just meant for internal use. In other words, this is

                // not a fully general polyfill.

                /** @constructor */

                Memory: function (opts) {

                    this.buffer = new ArrayBuffer(opts['initial'] * 65536);

                },



                Module: function (binary) {

                    // TODO: use the binary and info somehow - right now the wasm2js output is embedded in

                    // the main JS

                },



                /** @constructor */

                Instance: function (module, info) {

                    // TODO: use the module somehow - right now the wasm2js output is embedded in

                    // the main JS

                    // This will be replaced by the actual wasm2js code.

                    this.exports = (

                        function instantiate(info) {

                            function Table(ret) {

                                // grow method not included; table is not growable

                                ret.set = function (i, func) {

                                    this[i] = func;

                                };

                                ret.get = function (i) {

                                    return this[i];

                                };

                                return ret;

                            }



                            var bufferView;

                            var base64ReverseLookup = new Uint8Array(123/*'z'+1*/);

                            for (var i = 25; i >= 0; --i) {

                                base64ReverseLookup[48 + i] = 52 + i; // '0-9'

                                base64ReverseLookup[65 + i] = i; // 'A-Z'

                                base64ReverseLookup[97 + i] = 26 + i; // 'a-z'

                            }

                            base64ReverseLookup[43] = 62; // '+'

                            base64ReverseLookup[47] = 63; // '/'

                            /** @noinline Inlining this function would mean expanding the base64 string 4x times in the source code, which Closure seems to be happy to do. */

                            function base64DecodeToExistingUint8Array(uint8Array, offset, b64) {

                                var b1, b2, i = 0, j = offset, bLength = b64.length,

                                    end = offset + (bLength * 3 >> 2) - (b64[bLength - 2] == '=') - (b64[bLength - 1] == '=');

                                for (; i < bLength; i += 4) {

                                    b1 = base64ReverseLookup[b64.charCodeAt(i + 1)];

                                    b2 = base64ReverseLookup[b64.charCodeAt(i + 2)];

                                    uint8Array[j++] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;

                                    if (j < end) uint8Array[j++] = b1 << 4 | b2 >> 2;

                                    if (j < end) uint8Array[j++] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i + 3)];

                                }

                            }



                            function initActiveSegments(imports) {

                                base64DecodeToExistingUint8Array(bufferView, 65536, "");

                                base64DecodeToExistingUint8Array(bufferView, 99312, "cBUBAKAVAQDQFQEAABYBADAWAQBgFgEAkBYBAOAWAQBSFwEAAAAAAAAAAAAAAAAAgBcBAEAYAQAQGQEAABoBABAbAQBAHAEAgB0BACAfAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYIYBAA==");

                                base64DecodeToExistingUint8Array(bufferView

                            }



                            function asmFunc(imports) {

                                var env = imports.env;

                                var memory = env.memory;

                                var buffer = memory.buffer;

                                memory.grow = __wasm_memory_grow;

                                var HEAP8 = new Int8Array(buffer);

                                var HEAP16 = new Int16Array(buffer);

                                var HEAP32 = new Int32Array(buffer);

                                var HEAPU8 = new Uint8Array(buffer);

                                var HEAPU16 = new Uint16Array(buffer);

                                var HEAPU32 = new Uint32Array(buffer);

                                var HEAPF32 = new Float32Array(buffer);

                                var HEAPF64 = new Float64Array(buffer);

                                var Math_imul = Math.imul;

                                var Math_fround = Math.fround;

                                var Math_abs = Math.abs;

                                var Math_clz32 = Math.clz32;

                                var Math_min = Math.min;

                                var Math_max = Math.max;

                                var Math_floor = Math.floor;

                                var Math_ceil = Math.ceil;

                                var Math_trunc = Math.trunc;

                                var Math_sqrt = Math.sqrt;

                                var fimport$0 = env.emscripten_memcpy_big;

                                var fimport$1 = env.emscripten_resize_heap;

                                var global$0 = 65536;

                                var global$1 = 0;

                                var global$2 = 0;

                                var global$3 = 0;

                                var global$4 = 0;

                                var global$5 = 65552;

                                var global$6 = 65584;

                                var global$7 = 65856;

                                var global$8 = 70624;

                                var global$9 = 70656;

                                var global$10 = 69952;

                                var global$11 = 69968;

                                var global$12 = 70688;

                                var global$13 = 70752;

                                var global$14 = 70784;

                                var global$15 = 70112;

                                var global$16 = 74336;

                                var global$17 = 75200;

                                var global$18 = 75120;

                                var global$19 = 75040;

                                var global$20 = 74960;

                                var global$21 = 98832;

                                var global$22 = 98352;

                                var global$23 = 97872;

                                var global$24 = 74e3;

                                var global$25 = 99360;

                                var global$26 = 71520;

                                var global$27 = 99312;

                                var global$28 = 70992;

                                var global$29 = 96224;

                                var global$30 = 97248;

                                var global$31 = 74032;

                                var global$32 = 74064;

                                var global$33 = 74096;

                                var global$34 = 75680;

                                var global$35 = 75488;

                                var global$36 = 85440;

                                var global$37 = 84416;

                                var global$38 = 88512;

                                var global$39 = 75648;

                                var global$40 = 74928;

                                var global$41 = 74304;

                                var global$42 = 95712;

                                var global$43 = 93664;

                                var global$44 = 91616;

                                var global$45 = 80320;

                                var global$46 = 89568;

                                var global$47 = 77248;

                                var global$48 = 88544;

                                var global$49 = 75712;

                                var global$50 = 74320;

                                var global$51 = 74464;

                                var global$52 = 74576;

                                var global$53 = 74656;

                                var global$54 = 74800;

                                var global$55 = 75280;

                                var global$56 = 75360;

                                var global$57 = 97760;

                                var i64toi32_i32$HIGH_BITS = 0;

                                // EMSCRIPTEN_START_FUNCS

                                ;



                                function $0() {

                                    $242();

                                }



                                function $1() {

                                    var $0_1 = 0, $1_1 = 0;

                                    $0_1 = global$0 - 16 | 0;

                                    global$0 = $0_1;

                                    HEAP32[($0_1 + 12 | 0) >> 2] = 0;

                                    $62($0_1 + 12 | 0 | 0, global$4 + 65544 | 0 | 0) | 0;

                                    $1_1 = HEAP32[($0_1 + 12 | 0) >> 2] | 0;

                                    global$0 = $0_1 + 16 | 0;

                                    return $1_1 | 0;

                                }



                                function $2($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    $1_1 = global$0 - 16 | 0;

                                    global$0 = $1_1;

                                    HEAP32[($1_1 + 12 | 0) >> 2] = $0_1;

                                    $63($1_1 + 12 | 0 | 0);

                                    global$0 = $1_1 + 16 | 0;

                                }



                                function $3($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0, wasm2js_i32$2 = 0;

                                    $10($0_1 | 0, (wasm2js_i32$0 = 15, wasm2js_i32$1 = ((HEAPU8[$1_1 >> 0] | 0) >>> 3 | 0) & 15 | 0, wasm2js_i32$2 = $3_1, wasm2js_i32$2 ? wasm2js_i32$0 : wasm2js_i32$1) | 0, $1_1 + 1 | 0 | 0, $2_1 | 0, 2 | 0) | 0;

                                }



                                function $4($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    $1_1 = $231(8 | 0) | 0;

                                    $66($1_1 | 0, $1_1 + 4 | 0 | 0, $0_1 | 0) | 0;

                                    return $1_1 | 0;

                                }



                                function $5($0_1) {

                                    $0_1 = $0_1 | 0;

                                    $67($0_1 | 0, $0_1 + 4 | 0 | 0);

                                    $232($0_1 | 0);

                                }



                                function $6($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $5_1 = 0;

                                    $5_1 = global$0 - 16 | 0;

                                    global$0 = $5_1;

                                    HEAP32[($5_1 + 12 | 0) >> 2] = $1_1;

                                    $1_1 = $68(HEAP32[$0_1 >> 2] | 0 | 0, HEAP32[($0_1 + 4 | 0) >> 2] | 0 | 0, $1_1 | 0, $2_1 | 0, $3_1 | 0, $5_1 + 12 | 0 | 0, 3 | 0) | 0;

                                    HEAP8[$3_1 >> 0] = HEAPU8[$3_1 >> 0] | 0 | 4 | 0;

                                    global$0 = $5_1 + 16 | 0;

                                    return $1_1 | 0;

                                }



                                function $7($0_1) {

                                    $0_1 = $0_1 | 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[$0_1 >> 1] = 4096;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $8($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $6_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0, $7_1 = 0, $8_1 = 0, $12_1 = 0,

                                        $13_1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    if (($4_1 | 0) >= (1 | 0)) {

                                                        break label$4

                                                    }

                                                    $6_1 = 0;

                                                    break label$3;

                                                }

                                                $7_1 = HEAP32[$5_1 >> 2] | 0;

                                                $8_1 = $4_1 & 65535 | 0;

                                                $9_1 = 0;

                                                $6_1 = 0;

                                                label$5 : while (1) {

                                                    $10_1 = $6_1;

                                                    $6_1 = 2147483647;

                                                    label$6 : {

                                                        label$7 : {

                                                            $11_1 = HEAP16[($2_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0;

                                                            $11_1 = Math_imul($11_1, $11_1);

                                                            if (($11_1 | 0) == (1073741824 | 0)) {

                                                                break label$7

                                                            }

                                                            $6_1 = ($11_1 << 1 | 0) + $10_1 | 0;

                                                            if (($11_1 ^ $10_1 | 0 | 0) < (1 | 0)) {

                                                                break label$6

                                                            }

                                                            if (($6_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                                break label$6

                                                            }

                                                            $6_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                                        }

                                                        HEAP32[$5_1 >> 2] = 1;

                                                    }

                                                    $9_1 = $9_1 + 1 | 0;

                                                    if (($9_1 | 0) != ($8_1 | 0)) {

                                                        continue label$5

                                                    }

                                                    break label$5;

                                                }

                                                ;

                                                if (($6_1 | 0) == (2147483647 | 0)) {

                                                    break label$2

                                                }

                                            }

                                            $6_1 = $6_1 >> 4 | 0;

                                            break label$1;

                                        }

                                        HEAP32[$5_1 >> 2] = $7_1;

                                        $10_1 = 0;

                                        $6_1 = 0;

                                        label$8 : while (1) {

                                            $9_1 = (HEAP16[($2_1 + ($10_1 << 1 | 0) | 0) >> 1] | 0) >> 2 | 0;

                                            $11_1 = Math_imul($9_1, $9_1);

                                            $9_1 = $6_1;

                                            $6_1 = ($11_1 << 1 | 0) + $9_1 | 0;

                                            label$9 : {

                                                if (($11_1 ^ $9_1 | 0 | 0) < (1 | 0)) {

                                                    break label$9

                                                }

                                                if (($6_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$9

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $6_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $10_1 = $10_1 + 1 | 0;

                                            if (($10_1 | 0) != ($8_1 | 0)) {

                                                continue label$8

                                            }

                                            break label$8;

                                        }

                                        ;

                                    }

                                    label$10 : {

                                        if ($6_1) {

                                            break label$10

                                        }

                                        HEAP16[$0_1 >> 1] = 0;

                                        return;

                                    }

                                    label$11 : {

                                        label$12 : {

                                            $10_1 = $209($6_1 | 0) | 0;

                                            $7_1 = ($10_1 + -1 | 0) << 16 >> 16;

                                            if (($7_1 | 0) < (1 | 0)) {

                                                break label$12

                                            }

                                            $10_1 = $7_1 & 65535 | 0;

                                            $9_1 = $6_1 << $10_1 | 0;

                                            if (($9_1 >> $10_1 | 0 | 0) == ($6_1 | 0)) {

                                                break label$11

                                            }

                                            $9_1 = ($6_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$11;

                                        }

                                        $9_1 = 0;

                                        $10_1 = (1 - $10_1 | 0) << 16 >> 16;

                                        if (($10_1 | 0) > (30 | 0)) {

                                            break label$11

                                        }

                                        $9_1 = $6_1 >> ($10_1 & 65535 | 0) | 0;

                                    }

                                    $12_1 = $220($9_1 | 0, $5_1 | 0) | 0;

                                    label$13 : {

                                        label$14 : {

                                            label$15 : {

                                                label$16 : {

                                                    if (($4_1 | 0) >= (1 | 0)) {

                                                        break label$16

                                                    }

                                                    $6_1 = 0;

                                                    break label$15;

                                                }

                                                $13_1 = HEAP32[$5_1 >> 2] | 0;

                                                $8_1 = $4_1 & 65535 | 0;

                                                $9_1 = 0;

                                                $6_1 = 0;

                                                label$17 : while (1) {

                                                    $10_1 = $6_1;

                                                    $6_1 = 2147483647;

                                                    label$18 : {

                                                        label$19 : {

                                                            $11_1 = HEAP16[($1_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0;

                                                            $11_1 = Math_imul($11_1, $11_1);

                                                            if (($11_1 | 0) == (1073741824 | 0)) {

                                                                break label$19

                                                            }

                                                            $6_1 = ($11_1 << 1 | 0) + $10_1 | 0;

                                                            if (($11_1 ^ $10_1 | 0 | 0) < (1 | 0)) {

                                                                break label$18

                                                            }

                                                            if (($6_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                                break label$18

                                                            }

                                                            $6_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                                        }

                                                        HEAP32[$5_1 >> 2] = 1;

                                                    }

                                                    $9_1 = $9_1 + 1 | 0;

                                                    if (($9_1 | 0) != ($8_1 | 0)) {

                                                        continue label$17

                                                    }

                                                    break label$17;

                                                }

                                                ;

                                                if (($6_1 | 0) == (2147483647 | 0)) {

                                                    break label$14

                                                }

                                            }

                                            $6_1 = $6_1 >> 4 | 0;

                                            break label$13;

                                        }

                                        HEAP32[$5_1 >> 2] = $13_1;

                                        $10_1 = 0;

                                        $6_1 = 0;

                                        label$20 : while (1) {

                                            $9_1 = (HEAP16[($1_1 + ($10_1 << 1 | 0) | 0) >> 1] | 0) >> 2 | 0;

                                            $11_1 = Math_imul($9_1, $9_1);

                                            $9_1 = $6_1;

                                            $6_1 = ($11_1 << 1 | 0) + $9_1 | 0;

                                            label$21 : {

                                                if (($11_1 ^ $9_1 | 0 | 0) < (1 | 0)) {

                                                    break label$21

                                                }

                                                if (($6_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$21

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $6_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $10_1 = $10_1 + 1 | 0;

                                            if (($10_1 | 0) != ($8_1 | 0)) {

                                                continue label$20

                                            }

                                            break label$20;

                                        }

                                        ;

                                    }

                                    label$22 : {

                                        label$23 : {

                                            if ($6_1) {

                                                break label$23

                                            }

                                            $9_1 = 0;

                                            break label$22;

                                        }

                                        $9_1 = $209($6_1 | 0) | 0;

                                        $11_1 = $185($12_1 | 0, $220($6_1 << ($9_1 & 65535 | 0) | 0 | 0, $5_1 | 0) | 0 | 0) | 0;

                                        $10_1 = $11_1 << 7 | 0;

                                        label$24 : {

                                            label$25 : {

                                                $9_1 = $7_1 - $9_1 | 0;

                                                if (($9_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                    break label$25

                                                }

                                                $6_1 = 0;

                                                if (($9_1 & 65535 | 0) >>> 0 > 30 >>> 0) {

                                                    break label$24

                                                }

                                                $6_1 = $10_1 >> ($9_1 & 65535 | 0) | 0;

                                                break label$24;

                                            }

                                            $9_1 = (0 - $9_1 | 0) << 16 >> 16;

                                            $6_1 = $10_1 << $9_1 | 0;

                                            if (($6_1 >> $9_1 | 0 | 0) == ($10_1 | 0)) {

                                                break label$24

                                            }

                                            $6_1 = ($11_1 >> 15 | 0) ^ 2147483647 | 0;

                                        }

                                        $9_1 = (Math_imul($3_1 ^ 32767 | 0, ((($196($6_1 | 0, $5_1 | 0) | 0) << 9 | 0) + 32768 | 0) >> 16 | 0) << 1 | 0) >> 16 | 0;

                                    }

                                    $6_1 = HEAPU16[$0_1 >> 1] | 0;

                                    label$26 : {

                                        if (($4_1 | 0) < (1 | 0)) {

                                            break label$26

                                        }

                                        $5_1 = $4_1 & 1 | 0;

                                        label$27 : {

                                            if (($4_1 | 0) == (1 | 0)) {

                                                break label$27

                                            }

                                            $11_1 = $4_1 & 65534 | 0;

                                            $10_1 = 0;

                                            label$28 : while (1) {

                                                $6_1 = ((Math_imul($6_1 << 16 >> 16, $3_1) >>> 15 | 0) + $9_1 | 0) << 16 >> 16;

                                                HEAP16[$2_1 >> 1] = Math_imul($6_1, HEAP16[$2_1 >> 1] | 0) >>> 12 | 0;

                                                $6_1 = (Math_imul($6_1, $3_1) >>> 15 | 0) + $9_1 | 0;

                                                HEAP16[($2_1 + 2 | 0) >> 1] = Math_imul($6_1 << 16 >> 16, HEAP16[($2_1 + 2 | 0) >> 1] | 0) >>> 12 | 0;

                                                $2_1 = $2_1 + 4 | 0;

                                                $10_1 = $10_1 + 2 | 0;

                                                if (($10_1 & 65535 | 0 | 0) != ($11_1 | 0)) {

                                                    continue label$28

                                                }

                                                break label$28;

                                            }

                                            ;

                                        }

                                        if (!$5_1) {

                                            break label$26

                                        }

                                        $6_1 = (Math_imul($6_1 << 16 >> 16, $3_1) >>> 15 | 0) + $9_1 | 0;

                                        HEAP16[$2_1 >> 1] = Math_imul($6_1 << 16 >> 16, HEAP16[$2_1 >> 1] | 0) >>> 12 | 0;

                                    }

                                    HEAP16[$0_1 >> 1] = $6_1;

                                }



                                function $9($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0, $7_1 = 0, $8_1 = 0, $9_1 = 0, $6_1 = 0, $5_1 = 0, $10_1 = 0,

                                        $11_1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    if (($2_1 | 0) >= (1 | 0)) {

                                                        break label$4

                                                    }

                                                    $4_1 = 0;

                                                    break label$3;

                                                }

                                                $5_1 = HEAP32[$3_1 >> 2] | 0;

                                                $6_1 = $2_1 & 65535 | 0;

                                                $7_1 = 0;

                                                $4_1 = 0;

                                                label$5 : while (1) {

                                                    $8_1 = $4_1;

                                                    $4_1 = 2147483647;

                                                    label$6 : {

                                                        label$7 : {

                                                            $9_1 = HEAP16[($1_1 + ($7_1 << 1 | 0) | 0) >> 1] | 0;

                                                            $9_1 = Math_imul($9_1, $9_1);

                                                            if (($9_1 | 0) == (1073741824 | 0)) {

                                                                break label$7

                                                            }

                                                            $4_1 = ($9_1 << 1 | 0) + $8_1 | 0;

                                                            if (($9_1 ^ $8_1 | 0 | 0) < (1 | 0)) {

                                                                break label$6

                                                            }

                                                            if (($4_1 ^ $8_1 | 0 | 0) > (-1 | 0)) {

                                                                break label$6

                                                            }

                                                            $4_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                                        }

                                                        HEAP32[$3_1 >> 2] = 1;

                                                    }

                                                    $7_1 = $7_1 + 1 | 0;

                                                    if (($7_1 | 0) != ($6_1 | 0)) {

                                                        continue label$5

                                                    }

                                                    break label$5;

                                                }

                                                ;

                                                if (($4_1 | 0) == (2147483647 | 0)) {

                                                    break label$2

                                                }

                                            }

                                            $4_1 = $4_1 >> 4 | 0;

                                            break label$1;

                                        }

                                        HEAP32[$3_1 >> 2] = $5_1;

                                        $8_1 = 0;

                                        $4_1 = 0;

                                        label$8 : while (1) {

                                            $7_1 = (HEAP16[($1_1 + ($8_1 << 1 | 0) | 0) >> 1] | 0) >> 2 | 0;

                                            $9_1 = Math_imul($7_1, $7_1);

                                            $7_1 = $4_1;

                                            $4_1 = ($9_1 << 1 | 0) + $4_1 | 0;

                                            label$9 : {

                                                if (($9_1 ^ $7_1 | 0 | 0) < (1 | 0)) {

                                                    break label$9

                                                }

                                                if (($4_1 ^ $7_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$9

                                                }

                                                HEAP32[$3_1 >> 2] = 1;

                                                $4_1 = ($7_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $8_1 = $8_1 + 1 | 0;

                                            if (($8_1 | 0) != ($6_1 | 0)) {

                                                continue label$8

                                            }

                                            break label$8;

                                        }

                                        ;

                                    }

                                    label$10 : {

                                        if (!$4_1) {

                                            break label$10

                                        }

                                        label$11 : {

                                            label$12 : {

                                                $8_1 = $209($4_1 | 0) | 0;

                                                $5_1 = ($8_1 + -1 | 0) << 16 >> 16;

                                                if (($5_1 | 0) < (1 | 0)) {

                                                    break label$12

                                                }

                                                $8_1 = $5_1 & 65535 | 0;

                                                $7_1 = $4_1 << $8_1 | 0;

                                                if (($7_1 >> $8_1 | 0 | 0) == ($4_1 | 0)) {

                                                    break label$11

                                                }

                                                $7_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                                break label$11;

                                            }

                                            $7_1 = 0;

                                            $8_1 = (1 - $8_1 | 0) << 16 >> 16;

                                            if (($8_1 | 0) > (30 | 0)) {

                                                break label$11

                                            }

                                            $7_1 = $4_1 >> ($8_1 & 65535 | 0) | 0;

                                        }

                                        $10_1 = $220($7_1 | 0, $3_1 | 0) | 0;

                                        label$13 : {

                                            label$14 : {

                                                label$15 : {

                                                    label$16 : {

                                                        if (($2_1 | 0) >= (1 | 0)) {

                                                            break label$16

                                                        }

                                                        $4_1 = 0;

                                                        break label$15;

                                                    }

                                                    $11_1 = HEAP32[$3_1 >> 2] | 0;

                                                    $6_1 = $2_1 & 65535 | 0;

                                                    $7_1 = 0;

                                                    $4_1 = 0;

                                                    label$17 : while (1) {

                                                        $8_1 = $4_1;

                                                        $4_1 = 2147483647;

                                                        label$18 : {

                                                            label$19 : {

                                                                $9_1 = HEAP16[($0_1 + ($7_1 << 1 | 0) | 0) >> 1] | 0;

                                                                $9_1 = Math_imul($9_1, $9_1);

                                                                if (($9_1 | 0) == (1073741824 | 0)) {

                                                                    break label$19

                                                                }

                                                                $4_1 = ($9_1 << 1 | 0) + $8_1 | 0;

                                                                if (($9_1 ^ $8_1 | 0 | 0) < (1 | 0)) {

                                                                    break label$18

                                                                }

                                                                if (($4_1 ^ $8_1 | 0 | 0) > (-1 | 0)) {

                                                                    break label$18

                                                                }

                                                                $4_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                                            }

                                                            HEAP32[$3_1 >> 2] = 1;

                                                        }

                                                        $7_1 = $7_1 + 1 | 0;

                                                        if (($7_1 | 0) != ($6_1 | 0)) {

                                                            continue label$17

                                                        }

                                                        break label$17;

                                                    }

                                                    ;

                                                    if (($4_1 | 0) == (2147483647 | 0)) {

                                                        break label$14

                                                    }

                                                }

                                                $4_1 = $4_1 >> 4 | 0;

                                                break label$13;

                                            }

                                            HEAP32[$3_1 >> 2] = $11_1;

                                            $8_1 = 0;

                                            $4_1 = 0;

                                            label$20 : while (1) {

                                                $7_1 = (HEAP16[($0_1 + ($8_1 << 1 | 0) | 0) >> 1] | 0) >> 2 | 0;

                                                $9_1 = Math_imul($7_1, $7_1);

                                                $7_1 = $4_1;

                                                $4_1 = ($9_1 << 1 | 0) + $4_1 | 0;

                                                label$21 : {

                                                    if (($9_1 ^ $7_1 | 0 | 0) < (1 | 0)) {

                                                        break label$21

                                                    }

                                                    if (($4_1 ^ $7_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$21

                                                    }

                                                    HEAP32[$3_1 >> 2] = 1;

                                                    $4_1 = ($7_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                $8_1 = $8_1 + 1 | 0;

                                                if (($8_1 | 0) != ($6_1 | 0)) {

                                                    continue label$20

                                                }

                                                break label$20;

                                            }

                                            ;

                                        }

                                        $6_1 = 0;

                                        label$22 : {

                                            if (!$4_1) {

                                                break label$22

                                            }

                                            label$23 : {

                                                label$24 : {

                                                    $7_1 = $209($4_1 | 0) | 0;

                                                    if (($7_1 | 0) < (1 | 0)) {

                                                        break label$24

                                                    }

                                                    $9_1 = $7_1 & 65535 | 0;

                                                    $8_1 = $4_1 << $9_1 | 0;

                                                    if (($8_1 >> $9_1 | 0 | 0) == ($4_1 | 0)) {

                                                        break label$23

                                                    }

                                                    $8_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    break label$23;

                                                }

                                                $8_1 = 0;

                                                $9_1 = (0 - $7_1 | 0) << 16 >> 16;

                                                if (($9_1 | 0) > (30 | 0)) {

                                                    break label$23

                                                }

                                                $8_1 = $4_1 >> ($9_1 & 65535 | 0) | 0;

                                            }

                                            $9_1 = $185($10_1 | 0, $220($8_1 | 0, $3_1 | 0) | 0 | 0) | 0;

                                            $8_1 = $9_1 << 7 | 0;

                                            label$25 : {

                                                label$26 : {

                                                    $7_1 = $5_1 - $7_1 | 0;

                                                    if (($7_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                        break label$26

                                                    }

                                                    $4_1 = 0;

                                                    $7_1 = $7_1 & 65535 | 0;

                                                    if ($7_1 >>> 0 > 30 >>> 0) {

                                                        break label$25

                                                    }

                                                    $4_1 = $8_1 >> $7_1 | 0;

                                                    break label$25;

                                                }

                                                $7_1 = (0 - $7_1 | 0) << 16 >> 16;

                                                $4_1 = $8_1 << $7_1 | 0;

                                                if (($4_1 >> $7_1 | 0 | 0) == ($8_1 | 0)) {

                                                    break label$25

                                                }

                                                $4_1 = ($9_1 >> 15 | 0) ^ 2147483647 | 0;

                                            }

                                            $4_1 = $196($4_1 | 0, $3_1 | 0) | 0;

                                            $6_1 = $220((($4_1 | 0) > (4194303 | 0) ? 2147483647 : ($4_1 | 0) < (-4194304 | 0) ? -2147483648 : $4_1 << 9 | 0) | 0, $3_1 | 0) | 0;

                                        }

                                        $4_1 = ($2_1 + -1 | 0) << 16 >> 16;

                                        if (($4_1 | 0) < (0 | 0)) {

                                            break label$10

                                        }

                                        label$27 : while (1) {

                                            label$28 : {

                                                label$29 : {

                                                    $8_1 = $1_1 + (($4_1 & 65535 | 0) << 1 | 0) | 0;

                                                    $9_1 = Math_imul($6_1, HEAP16[$8_1 >> 1] | 0);

                                                    if (($9_1 | 0) != (1073741824 | 0)) {

                                                        break label$29

                                                    }

                                                    HEAP32[$3_1 >> 2] = 1;

                                                    $7_1 = 32767;

                                                    break label$28;

                                                }

                                                $7_1 = 32767;

                                                if (($9_1 | 0) > (134217727 | 0)) {

                                                    break label$28

                                                }

                                                $7_1 = 32768;

                                                if (($9_1 | 0) < (-134217728 | 0)) {

                                                    break label$28

                                                }

                                                $7_1 = $9_1 >>> 12 | 0;

                                            }

                                            HEAP16[$8_1 >> 1] = $7_1;

                                            $4_1 = ($4_1 + -1 | 0) << 16 >> 16;

                                            if (($4_1 | 0) > (-1 | 0)) {

                                                continue label$27

                                            }

                                            break label$27;

                                        }

                                        ;

                                    }

                                }



                                function $10($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $5_1 = 0, $6_1 = 0;

                                    $5_1 = global$0 - 496 | 0;

                                    global$0 = $5_1;

                                    $6_1 = 65535;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    label$5 : {

                                                        switch ($4_1 | 0) {

                                                            case 2:

                                                                $65($1_1 | 0, $2_1 | 0, $5_1 | 0, $0_1 + 1168 | 0 | 0);

                                                                $2_1 = global$5;

                                                                break label$4;

                                                            case 0:

                                                                break label$3;

                                                            case 4:

                                                                break label$5;

                                                            default:

                                                                break label$1;

                                                        }

                                                        ;

                                                    }

                                                    $48($1_1 | 0, $2_1 | 0, $5_1 | 0, $0_1 + 1168 | 0 | 0);

                                                    $2_1 = global$6;

                                                }

                                                $2_1 = HEAPU16[($2_1 + ($1_1 << 1 | 0) | 0) >> 1] | 0;

                                                $4_1 = 0;

                                                label$7 : {

                                                    if ($1_1 >>> 0 < 8 >>> 0) {

                                                        break label$7

                                                    }

                                                    label$8 : {

                                                        if (($1_1 | 0) != (8 | 0)) {

                                                            break label$8

                                                        }

                                                        $4_1 = HEAPU16[($5_1 + 70 | 0) >> 1] | 0 ? 5 : 4;

                                                        $1_1 = (HEAP16[($5_1 + 76 | 0) >> 1] | 0) << 2 | 0 | ((HEAP16[($5_1 + 74 | 0) >> 1] | 0) << 1 | 0 | (HEAP16[($5_1 + 72 | 0) >> 1] | 0) | 0) | 0;

                                                        break label$7;

                                                    }

                                                    if ($1_1 >>> 0 < 15 >>> 0) {

                                                        break label$1

                                                    }

                                                    $1_1 = HEAP32[($0_1 + 1760 | 0) >> 2] | 0;

                                                    $4_1 = 7;

                                                }

                                                $6_1 = 65535;

                                                if (($2_1 & 65535 | 0 | 0) != (65535 | 0)) {

                                                    break label$2

                                                }

                                                break label$1;

                                            }

                                            $4_1 = HEAP16[$2_1 >> 1] | 0;

                                            $227($5_1 | 0, $2_1 + 2 | 0 | 0, 488 | 0) | 0;

                                            label$9 : {

                                                if (($4_1 | 0) == (7 | 0)) {

                                                    break label$9

                                                }

                                                $1_1 = HEAP16[($2_1 + 490 | 0) >> 1] | 0;

                                                $2_1 = 492;

                                                break label$2;

                                            }

                                            $1_1 = HEAP32[($0_1 + 1760 | 0) >> 2] | 0;

                                            $2_1 = 492;

                                            $4_1 = 7;

                                        }

                                        $64($0_1 | 0, $1_1 | 0, $5_1 | 0, $4_1 | 0, $3_1 | 0);

                                        HEAP32[($0_1 + 1760 | 0) >> 2] = $1_1;

                                        $6_1 = $2_1;

                                    }

                                    global$0 = $5_1 + 496 | 0;

                                    return $6_1 << 16 >> 16 | 0;

                                }



                                function $11($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var i64toi32_i32$1 = 0, $7_1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $9_1 = 0, $8_1 = 0,

                                        i64toi32_i32$2 = 0, $5_1 = 0, $6_1 = 0, $4_1 = 0, $12_1 = 0, $21_1 = 0,

                                        $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0, $10_1 = 0, $15_1 = 0, $26_1 = 0,

                                        $28_1 = 0, $29_1 = 0, $30_1 = 0, $27_1 = 0, $31_1 = 0, $11_1 = 0, $13_1 = 0,

                                        $14_1 = 0;

                                    $3_1 = global$0 - 64 | 0;

                                    global$0 = $3_1;

                                    $21_1 = $0_1 + 16 | 0;

                                    HEAP32[(($3_1 + 32 | 0) + 16 | 0) >> 2] = HEAPU16[$21_1 >> 1] | 0 | ((HEAPU16[($21_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$2 = $0_1;

                                    i64toi32_i32$0 = HEAPU16[$0_1 >> 1] | 0 | ((HEAPU16[($0_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($0_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $27_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $3_1;

                                    HEAP32[($3_1 + 32 | 0) >> 2] = $27_1;

                                    HEAP32[($3_1 + 36 | 0) >> 2] = i64toi32_i32$1;

                                    i64toi32_i32$2 = $0_1 + 8 | 0;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $31_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $3_1;

                                    HEAP32[($3_1 + 40 | 0) >> 2] = $31_1;

                                    HEAP32[($3_1 + 44 | 0) >> 2] = i64toi32_i32$0;

                                    $4_1 = 9;

                                    $5_1 = 0;

                                    $6_1 = 9;

                                    label$1 : {

                                        label$2 : while (1) {

                                            label$3 : {

                                                $7_1 = $4_1 << 1 | 0;

                                                $0_1 = HEAP16[(($3_1 + 32 | 0) + $7_1 | 0) >> 1] | 0;

                                                $8_1 = $0_1 >> 15 | 0;

                                                $9_1 = $8_1 + $0_1 | 0;

                                                if (((($9_1 << 16 >> 16 >>> 15 | 0) ^ $9_1 | 0) << 16 >> 16 | 0) < (4096 | 0)) {

                                                    break label$3

                                                }

                                                i64toi32_i32$1 = $1_1;

                                                i64toi32_i32$0 = 0;

                                                $22_1 = 0;

                                                HEAP16[i64toi32_i32$1 >> 1] = $22_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $22_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                $23_1 = i64toi32_i32$1 + 16 | 0;

                                                $24_1 = 0;

                                                HEAP16[$23_1 >> 1] = $24_1;

                                                HEAP16[($23_1 + 2 | 0) >> 1] = $24_1 >>> 16 | 0;

                                                i64toi32_i32$1 = i64toi32_i32$1 + 8 | 0;

                                                i64toi32_i32$0 = 0;

                                                $25_1 = 0;

                                                HEAP16[i64toi32_i32$1 >> 1] = $25_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $25_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                break label$1;

                                            }

                                            $10_1 = $1_1 + $7_1 | 0;

                                            $0_1 = (($0_1 + 4096 | 0) & 65535 | 0) >>> 0 < 8192 >>> 0 ? $0_1 << 3 | 0 : $8_1 ^ 32767 | 0;

                                            HEAP16[$10_1 >> 1] = $0_1;

                                            label$4 : {

                                                label$5 : {

                                                    $0_1 = $0_1 << 16 >> 16;

                                                    $0_1 = Math_imul($0_1, $0_1);

                                                    if (($0_1 | 0) != (1073741824 | 0)) {

                                                        break label$5

                                                    }

                                                    HEAP32[$2_1 >> 2] = 1;

                                                    $0_1 = 0;

                                                    break label$4;

                                                }

                                                $0_1 = ($0_1 << 1 | 0) ^ 2147483647 | 0;

                                            }

                                            label$6 : {

                                                label$7 : {

                                                    $9_1 = $209($0_1 | 0) | 0;

                                                    if (($9_1 | 0) < (1 | 0)) {

                                                        break label$7

                                                    }

                                                    $7_1 = $9_1 & 65535 | 0;

                                                    $8_1 = $0_1 << $7_1 | 0;

                                                    $7_1 = ($8_1 >> $7_1 | 0 | 0) == ($0_1 | 0) ? $8_1 : 2147483647;

                                                    break label$6;

                                                }

                                                $7_1 = 0;

                                                $8_1 = (0 - $9_1 | 0) << 16 >> 16;

                                                if (($8_1 | 0) > (30 | 0)) {

                                                    break label$6

                                                }

                                                $7_1 = $0_1 >>> ($8_1 & 65535 | 0) | 0;

                                            }

                                            $11_1 = $185(16384 | 0, $220($7_1 | 0, $2_1 | 0) | 0 | 0) | 0;

                                            label$8 : {

                                                $12_1 = $6_1 & 65535 | 0;

                                                if (!$12_1) {

                                                    break label$8

                                                }

                                                $13_1 = 18 - ($5_1 << 1 | 0) | 0;

                                                $14_1 = 15 - $9_1 | 0;

                                                $9_1 = 0;

                                                label$9 : while (1) {

                                                    $15_1 = $9_1 << 1 | 0;

                                                    $0_1 = (HEAPU16[(($3_1 + 32 | 0) + $15_1 | 0) >> 1] | 0) << 16 | 0;

                                                    label$10 : {

                                                        label$11 : {

                                                            $7_1 = Math_imul(HEAP16[(($3_1 + 32 | 0) + (($4_1 + ($9_1 ^ -1 | 0) | 0) << 1 | 0) | 0) >> 1] | 0, HEAP16[$10_1 >> 1] | 0);

                                                            if (($7_1 | 0) == (1073741824 | 0)) {

                                                                break label$11

                                                            }

                                                            $8_1 = $7_1 << 1 | 0;

                                                            break label$10;

                                                        }

                                                        HEAP32[$2_1 >> 2] = 1;

                                                        $8_1 = 2147483647;

                                                    }

                                                    $7_1 = $0_1 - $8_1 | 0;

                                                    label$12 : {

                                                        if (($8_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$12

                                                        }

                                                        if (($7_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$12

                                                        }

                                                        HEAP32[$2_1 >> 2] = 1;

                                                        $7_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    }

                                                    label$13 : {

                                                        label$14 : {

                                                            $0_1 = Math_imul($220($7_1 | 0, $2_1 | 0) | 0, $11_1);

                                                            if (($0_1 | 0) == (1073741824 | 0)) {

                                                                break label$14

                                                            }

                                                            $0_1 = $0_1 << 1 | 0;

                                                            break label$13;

                                                        }

                                                        HEAP32[$2_1 >> 2] = 1;

                                                        $0_1 = 2147483647;

                                                    }

                                                    label$15 : {

                                                        label$16 : {

                                                            $0_1 = $200($0_1 | 0, $14_1 << 16 >> 16 | 0, $2_1 | 0) | 0;

                                                            $7_1 = ($0_1 >> 31 | 0) + $0_1 | 0;

                                                            if ((($7_1 >> 31 | 0) ^ $7_1 | 0 | 0) < (32768 | 0)) {

                                                                break label$16

                                                            }

                                                            i64toi32_i32$1 = $1_1;

                                                            i64toi32_i32$0 = 0;

                                                            $26_1 = 0;

                                                            HEAP16[i64toi32_i32$1 >> 1] = $26_1;

                                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $26_1 >>> 16 | 0;

                                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                            $28_1 = i64toi32_i32$1 + 16 | 0;

                                                            $29_1 = 0;

                                                            HEAP16[$28_1 >> 1] = $29_1;

                                                            HEAP16[($28_1 + 2 | 0) >> 1] = $29_1 >>> 16 | 0;

                                                            i64toi32_i32$1 = i64toi32_i32$1 + 8 | 0;

                                                            i64toi32_i32$0 = 0;

                                                            $30_1 = 0;

                                                            HEAP16[i64toi32_i32$1 >> 1] = $30_1;

                                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $30_1 >>> 16 | 0;

                                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                            break label$15;

                                                        }

                                                        HEAP16[($3_1 + $15_1 | 0) >> 1] = $0_1;

                                                        $9_1 = $9_1 + 1 | 0;

                                                        if (($9_1 | 0) != ($12_1 | 0)) {

                                                            continue label$9

                                                        }

                                                    }

                                                    break label$9;

                                                }

                                                ;

                                                if (!$12_1) {

                                                    break label$8

                                                }

                                                $227($3_1 + 32 | 0 | 0, $3_1 | 0, $13_1 | 0) | 0;

                                            }

                                            $6_1 = $6_1 + -1 | 0;

                                            $4_1 = $6_1 << 16 >> 16;

                                            $5_1 = $5_1 + 1 | 0;

                                            if (($5_1 | 0) != (10 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    global$0 = $3_1 + 64 | 0;

                                }



                                function $12($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var $3_1 = 0, $4_1 = 0, $6_1 = 0, $2_1 = 0, $5_1 = 0;

                                    label$1 : {

                                        if (($1_1 | 0) >= (1 | 0)) {

                                            break label$1

                                        }

                                        return 0 << 16 >> 16 | 0;

                                    }

                                    $2_1 = $1_1 & 1 | 0;

                                    $3_1 = HEAP32[$0_1 >> 2] | 0;

                                    label$2 : {

                                        label$3 : {

                                            if (($1_1 | 0) != (1 | 0)) {

                                                break label$3

                                            }

                                            $4_1 = 0;

                                            break label$2;

                                        }

                                        $5_1 = $1_1 & 65534 | 0;

                                        $6_1 = 0;

                                        $4_1 = 0;

                                        label$4 : while (1) {

                                            $1_1 = $3_1 >> 1 | 0;

                                            $6_1 = $1_1 & 1 | 0 | ($6_1 << 2 | 0 | (($3_1 << 1 | 0) & 2 | 0) | 0) | 0;

                                            $1_1 = ((($1_1 >>> 28 | 0) ^ $1_1 | 0) << 30 | 0) & 1073741824 | 0 | ((((($3_1 >>> 28 | 0) ^ $3_1 | 0) << 30 | 0) & 1073741824 | 0 | $1_1 | 0) >> 1 | 0) | 0;

                                            $3_1 = $1_1;

                                            $4_1 = $4_1 + 2 | 0;

                                            if (($4_1 & 65535 | 0 | 0) != ($5_1 | 0)) {

                                                continue label$4

                                            }

                                            break label$4;

                                        }

                                        ;

                                        $4_1 = $6_1 << 1 | 0;

                                        $3_1 = $1_1;

                                    }

                                    label$5 : {

                                        if (!$2_1) {

                                            break label$5

                                        }

                                        $1_1 = ((($3_1 >>> 28 | 0) ^ $3_1 | 0) << 30 | 0) & 1073741824 | 0 | ($3_1 >> 1 | 0) | 0;

                                        $6_1 = $3_1 & 1 | 0 | $4_1 | 0;

                                    }

                                    HEAP32[$0_1 >> 2] = $1_1;

                                    return $6_1 << 16 >> 16 | 0;

                                }



                                function $13($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $5_1 = 0, $3_1 = 0, $4_1 = 0, $6_1 = 0;

                                    $3_1 = 0;

                                    $4_1 = $229($1_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $1_1 = HEAP32[$0_1 >> 2] | 0;

                                    label$1 : while (1) {

                                        $5_1 = $1_1 >> 1 | 0;

                                        HEAP32[$0_1 >> 2] = ((($5_1 >>> 28 | 0) ^ $5_1 | 0) << 30 | 0) & 1073741824 | 0 | ((((($1_1 >>> 28 | 0) ^ $1_1 | 0) << 30 | 0) & 1073741824 | 0 | $5_1 | 0) >> 1 | 0) | 0;

                                        $6_1 = $183(Math_imul($5_1 & 1 | 0 | (($1_1 << 1 | 0) & 2 | 0) | 0, 10) | 0, $3_1 << 16 >> 16 | 0, $2_1 | 0) | 0;

                                        $5_1 = HEAP32[$0_1 >> 2] | 0;

                                        $1_1 = ((($5_1 >>> 28 | 0) ^ $5_1 | 0) << 30 | 0) & 1073741824 | 0 | ($5_1 >> 1 | 0) | 0;

                                        HEAP32[$0_1 >> 2] = $1_1;

                                        HEAP16[($4_1 + ($6_1 << 1 | 0) | 0) >> 1] = $5_1 & 1 | 0 ? 4096 : -4096;

                                        $5_1 = $3_1 & 65535 | 0;

                                        $3_1 = $3_1 + 1 | 0;

                                        if ($5_1 >>> 0 < 9 >>> 0) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                }



                                function $14($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $8_1 = 0, $6_1 = 0, $7_1 = 0;

                                    $6_1 = HEAP16[$0_1 >> 1] | 0;

                                    $7_1 = Math_imul($6_1, 63642) >> 1 | 0;

                                    $8_1 = $7_1 + 13849 | 0;

                                    label$1 : {

                                        if (($6_1 | 0) < (0 | 0)) {

                                            break label$1

                                        }

                                        if (($8_1 ^ $7_1 | 0 | 0) > (-1 | 0)) {

                                            break label$1

                                        }

                                        HEAP32[$5_1 >> 2] = 1;

                                        $8_1 = 2147483647;

                                    }

                                    HEAP16[$0_1 >> 1] = $8_1;

                                    label$2 : {

                                        if (($1_1 | 0) < (1 | 0)) {

                                            break label$2

                                        }

                                        $5_1 = $1_1 & 1 | 0;

                                        $8_1 = $4_1 + (($8_1 & 127 | 0) << 1 | 0) | 0;

                                        $0_1 = 0;

                                        label$3 : {

                                            if (($1_1 | 0) == (1 | 0)) {

                                                break label$3

                                            }

                                            $7_1 = ($1_1 & 65535 | 0) & 65534 | 0;

                                            $0_1 = 0;

                                            $6_1 = 0;

                                            label$4 : while (1) {

                                                $1_1 = $0_1 << 1 | 0;

                                                HEAP16[($3_1 + $1_1 | 0) >> 1] = (HEAPU16[$8_1 >> 1] | 0) & ((65535 << (HEAPU16[($2_1 + $1_1 | 0) >> 1] | 0) | 0) ^ -1 | 0) | 0;

                                                $1_1 = $1_1 | 2 | 0;

                                                HEAP16[($3_1 + $1_1 | 0) >> 1] = (HEAPU16[($8_1 + 2 | 0) >> 1] | 0) & ((65535 << (HEAPU16[($2_1 + $1_1 | 0) >> 1] | 0) | 0) ^ -1 | 0) | 0;

                                                $0_1 = $0_1 + 2 | 0;

                                                $8_1 = $8_1 + 4 | 0;

                                                $6_1 = $6_1 + 2 | 0;

                                                if (($6_1 | 0) != ($7_1 | 0)) {

                                                    continue label$4

                                                }

                                                break label$4;

                                            }

                                            ;

                                        }

                                        if (!$5_1) {

                                            break label$2

                                        }

                                        $0_1 = $0_1 << 1 | 0;

                                        HEAP16[($3_1 + $0_1 | 0) >> 1] = (HEAPU16[$8_1 >> 1] | 0) & ((65535 << (HEAPU16[($2_1 + $0_1 | 0) >> 1] | 0) | 0) ^ -1 | 0) | 0;

                                    }

                                }



                                function $15($0_1) {

                                    $0_1 = $0_1 | 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $229($0_1 | 0, 0 | 0, 122 | 0) | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $16($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $7_1 = 0, $6_1 = 0, $5_1 = 0, $8_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0,

                                        $9_1 = 0;

                                    $5_1 = 159;

                                    $6_1 = 0;

                                    label$1 : while (1) {

                                        $7_1 = $5_1;

                                        $5_1 = HEAP16[($2_1 + ($7_1 << 1 | 0) | 0) >> 1] | 0;

                                        $5_1 = Math_imul($5_1, $5_1);

                                        $8_1 = ($5_1 | 0) == (1073741824 | 0) ? 2147483647 : $5_1 << 1 | 0;

                                        $5_1 = $6_1;

                                        $6_1 = $8_1 + $6_1 | 0;

                                        label$2 : {

                                            if (($8_1 ^ $5_1 | 0 | 0) < (0 | 0)) {

                                                break label$2

                                            }

                                            if (($6_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                break label$2

                                            }

                                            HEAP32[$4_1 >> 2] = 1;

                                            $6_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $5_1 = $7_1 + -1 | 0;

                                        if ($7_1) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $9_1 = $6_1 >>> 14 | 0;

                                    $8_1 = 32767;

                                    $5_1 = 59;

                                    label$3 : while (1) {

                                        $2_1 = $5_1 + -4 | 0;

                                        $4_1 = HEAP16[($0_1 + ($2_1 << 1 | 0) | 0) >> 1] | 0;

                                        $7_1 = $0_1 + ($5_1 << 1 | 0) | 0;

                                        $10_1 = HEAP16[($7_1 + -6 | 0) >> 1] | 0;

                                        $11_1 = HEAP16[($7_1 + -4 | 0) >> 1] | 0;

                                        $12_1 = HEAP16[($7_1 + -2 | 0) >> 1] | 0;

                                        $7_1 = HEAP16[$7_1 >> 1] | 0;

                                        $8_1 = $8_1 << 16 >> 16;

                                        $7_1 = ($7_1 | 0) < ($8_1 | 0) ? $7_1 : $8_1;

                                        $7_1 = ($12_1 | 0) < ($7_1 | 0) ? $12_1 : $7_1;

                                        $7_1 = ($11_1 | 0) < ($7_1 | 0) ? $11_1 : $7_1;

                                        $7_1 = ($10_1 | 0) < ($7_1 | 0) ? $10_1 : $7_1;

                                        $8_1 = ($4_1 | 0) < ($7_1 | 0) ? $4_1 : $7_1;

                                        $5_1 = $5_1 + -5 | 0;

                                        if ($2_1) {

                                            continue label$3

                                        }

                                        break label$3;

                                    }

                                    ;

                                    $10_1 = ($8_1 | 0) > (0 | 0) ? 32767 : 32768;

                                    $11_1 = ($8_1 << 20 | 0) >> 16 | 0;

                                    $7_1 = HEAPU16[$0_1 >> 1] | 0;

                                    $5_1 = 55;

                                    label$4 : while (1) {

                                        $2_1 = $7_1 << 16 >> 16;

                                        $7_1 = $0_1 + ($5_1 << 1 | 0) | 0;

                                        $4_1 = HEAP16[$7_1 >> 1] | 0;

                                        $2_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;

                                        $4_1 = HEAP16[($7_1 + -2 | 0) >> 1] | 0;

                                        $2_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;

                                        $4_1 = HEAP16[($7_1 + -4 | 0) >> 1] | 0;

                                        $2_1 = ($2_1 | 0) > ($4_1 | 0) ? $2_1 : $4_1;

                                        $7_1 = HEAP16[($7_1 + -6 | 0) >> 1] | 0;

                                        $7_1 = ($2_1 | 0) > ($7_1 | 0) ? $2_1 : $7_1;

                                        $2_1 = $5_1 + -4 | 0;

                                        $4_1 = HEAP16[($0_1 + ($2_1 << 1 | 0) | 0) >> 1] | 0;

                                        $7_1 = ($7_1 | 0) > ($4_1 | 0) ? $7_1 : $4_1;

                                        $5_1 = $5_1 + -5 | 0;

                                        if ($2_1 >>> 0 > 1 >>> 0) {

                                            continue label$4

                                        }

                                        break label$4;

                                    }

                                    ;

                                    $5_1 = (($6_1 | 0) > (536870911 | 0) ? 32767 : $9_1) << 16 >> 16;

                                    label$5 : {

                                        label$6 : {

                                            label$7 : {

                                                label$8 : {

                                                    if (($7_1 | 0) < (21 | 0)) {

                                                        break label$8

                                                    }

                                                    if (($5_1 | 0) > (17577 | 0)) {

                                                        break label$8

                                                    }

                                                    if (($5_1 | 0) < (21 | 0)) {

                                                        break label$8

                                                    }

                                                    label$9 : {

                                                        $7_1 = $8_1 << 4 | 0;

                                                        if (((($7_1 | 0) == ($11_1 | 0) ? $7_1 : $10_1) << 16 >> 16 | 0) > ($5_1 & 65535 | 0 | 0)) {

                                                            break label$9

                                                        }

                                                        $7_1 = HEAP16[($0_1 + 80 | 0) >> 1] | 0;

                                                        $6_1 = HEAP16[($0_1 + 82 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 84 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 86 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 88 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 90 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 92 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 94 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 96 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 98 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 100 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 102 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 104 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 106 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 108 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 110 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 112 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 114 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 116 | 0) >> 1] | 0;

                                                        $7_1 = ($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1;

                                                        $6_1 = HEAP16[($0_1 + 118 | 0) >> 1] | 0;

                                                        if (((($7_1 | 0) > ($6_1 | 0) ? $7_1 : $6_1) << 16 >> 16 | 0) > (1952 | 0)) {

                                                            break label$8

                                                        }

                                                    }

                                                    $7_1 = 30;

                                                    $6_1 = (HEAPU16[($0_1 + 120 | 0) >> 1] | 0) << 16 >> 16;

                                                    if (($6_1 | 0) < (30 | 0)) {

                                                        break label$7

                                                    }

                                                    HEAP16[($0_1 + 120 | 0) >> 1] = 30;

                                                    $0_1 = $228($0_1 | 0, $0_1 + 2 | 0 | 0, 118 | 0) | 0;

                                                    HEAP16[($0_1 + 118 | 0) >> 1] = $5_1;

                                                    $0_1 = $0_1 + 120 | 0;

                                                    break label$6;

                                                }

                                                $7_1 = 0;

                                                HEAP16[($0_1 + 120 | 0) >> 1] = 0;

                                                $0_1 = $228($0_1 | 0, $0_1 + 2 | 0 | 0, 118 | 0) | 0;

                                                HEAP16[($0_1 + 118 | 0) >> 1] = $5_1;

                                                $0_1 = $0_1 + 120 | 0;

                                                $5_1 = 13926;

                                                break label$5;

                                            }

                                            $7_1 = $6_1 + 1 | 0;

                                            HEAP16[($0_1 + 120 | 0) >> 1] = $7_1;

                                            $0_1 = $228($0_1 | 0, $0_1 + 2 | 0 | 0, 118 | 0) | 0;

                                            HEAP16[($0_1 + 118 | 0) >> 1] = $5_1;

                                            $0_1 = $0_1 + 120 | 0;

                                            if (($6_1 | 0) >= (15 | 0)) {

                                                break label$6

                                            }

                                            $5_1 = ($6_1 | 0) > (7 | 0) ? 15565 : 13926;

                                            break label$5;

                                        }

                                        $5_1 = 16383;

                                    }

                                    $6_1 = $191($1_1 + 8 | 0 | 0, 5 | 0) | 0;

                                    label$10 : {

                                        label$11 : {

                                            label$12 : {

                                                if ((HEAP16[$0_1 >> 1] | 0 | 0) < (21 | 0)) {

                                                    break label$12

                                                }

                                                $0_1 = 0;

                                                if (($5_1 | 0) >= ($191($1_1 | 0, 9 | 0) | 0 | 0)) {

                                                    break label$11

                                                }

                                                break label$10;

                                            }

                                            $0_1 = 0;

                                            if (($5_1 | 0) < ($6_1 | 0)) {

                                                break label$10

                                            }

                                        }

                                        $0_1 = ((HEAPU16[$3_1 >> 1] | 0) + 1 | 0) << 16 >> 16;

                                        $0_1 = ($0_1 | 0) < (10 | 0) ? $0_1 : 10;

                                    }

                                    HEAP16[$3_1 >> 1] = $0_1;

                                    return ($7_1 << 16 >> 16 | 0) > (1 | 0) | 0;

                                }



                                function $17($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $3_1 = 0;

                                    HEAP16[$0_1 >> 1] = $3_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP16[($0_1 + 16 | 0) >> 1] = 0;

                                    i64toi32_i32$1 = $0_1 + 8 | 0;

                                    i64toi32_i32$0 = 0;

                                    $4_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $18($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    var $14_1 = 0, $12_1 = 0, $18_1 = 0, $15_1 = 0, $17_1 = 0, $19_1 = 0, $13_1 = 0,

                                        $16_1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $24_1 = 0, $25_1 = 0,

                                        $26_1 = 0, $27_1 = 0, $221_1 = 0, $328 = 0;

                                    i64toi32_i32$2 = $0_1 + 2 | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $24_1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$0_1 >> 1] = $24_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $24_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    $25_1 = $0_1 + 10 | 0;

                                    $26_1 = $0_1 + 8 | 0;

                                    $27_1 = HEAPU16[$25_1 >> 1] | 0 | ((HEAPU16[($25_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$26_1 >> 1] = $27_1;

                                    HEAP16[($26_1 + 2 | 0) >> 1] = $27_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 12 | 0) >> 1] = $2_1;

                                    $12_1 = 0;

                                    $13_1 = 0;

                                    label$1 : while (1) {

                                        label$2 : {

                                            label$3 : {

                                                $14_1 = $12_1 << 1 | 0;

                                                $15_1 = $4_1 + $14_1 | 0;

                                                $14_1 = $224(HEAP16[$15_1 >> 1] | 0 | 0, HEAP16[($3_1 + $14_1 | 0) >> 1] | 0 | 0, $11_1 | 0) | 0;

                                                $14_1 = ($14_1 >> 15 | 0) + $14_1 | 0;

                                                $14_1 = (($14_1 << 16 >> 16 >>> 15 | 0) ^ $14_1 | 0) << 16 >> 16;

                                                $16_1 = $210($14_1 | 0) | 0;

                                                $17_1 = ($16_1 + -1 | 0) << 16 >> 16;

                                                if (($17_1 | 0) > (-1 | 0)) {

                                                    break label$3

                                                }

                                                $17_1 = 0;

                                                $18_1 = (1 - $16_1 | 0) << 16 >> 16;

                                                if (($18_1 | 0) > (14 | 0)) {

                                                    break label$2

                                                }

                                                $17_1 = $14_1 >> ($18_1 & 65535 | 0) | 0;

                                                break label$2;

                                            }

                                            $18_1 = $17_1 & 65535 | 0;

                                            $17_1 = $14_1 << $18_1 | 0;

                                            if (($17_1 << 16 >> 16 >> $18_1 | 0 | 0) == ($14_1 | 0)) {

                                                break label$2

                                            }

                                            $17_1 = ($14_1 >> 15 | 0) ^ 32767 | 0;

                                        }

                                        $14_1 = $210(HEAP16[$15_1 >> 1] | 0 | 0) | 0;

                                        $15_1 = HEAP16[$15_1 >> 1] | 0;

                                        label$4 : {

                                            label$5 : {

                                                if (($14_1 | 0) > (-1 | 0)) {

                                                    break label$5

                                                }

                                                $18_1 = 0;

                                                $19_1 = (0 - $14_1 | 0) << 16 >> 16;

                                                if (($19_1 | 0) > (14 | 0)) {

                                                    break label$4

                                                }

                                                $18_1 = $15_1 >> ($19_1 & 65535 | 0) | 0;

                                                break label$4;

                                            }

                                            $19_1 = $14_1 & 65535 | 0;

                                            $18_1 = $15_1 << $19_1 | 0;

                                            if (($18_1 << 16 >> 16 >> $19_1 | 0 | 0) == ($15_1 | 0)) {

                                                break label$4

                                            }

                                            $18_1 = ($15_1 >> 15 | 0) ^ 32767 | 0;

                                        }

                                        $15_1 = $185($17_1 << 16 >> 16 | 0, $18_1 << 16 >> 16 | 0) | 0;

                                        label$6 : {

                                            label$7 : {

                                                $14_1 = (($16_1 - $14_1 | 0) + 1 | 0) << 16 >> 16;

                                                if (($14_1 | 0) < (0 | 0)) {

                                                    break label$7

                                                }

                                                $14_1 = $221($15_1 | 0, $14_1 | 0, $11_1 | 0) | 0;

                                                break label$6;

                                            }

                                            label$8 : {

                                                $14_1 = (($14_1 | 0) == (-32768 | 0) ? 32767 : 0 - $14_1 | 0) << 16 >> 16;

                                                if (($14_1 | 0) > (-1 | 0)) {

                                                    break label$8

                                                }

                                                $14_1 = $15_1 >> ((0 - $14_1 | 0) & 65535 | 0) | 0;

                                                break label$6;

                                            }

                                            $17_1 = $14_1 & 65535 | 0;

                                            $14_1 = $15_1 << $17_1 | 0;

                                            if (($14_1 << 16 >> 16 >> $17_1 | 0 | 0) == ($15_1 | 0)) {

                                                break label$6

                                            }

                                            $14_1 = ($15_1 >> 15 | 0) ^ 32767 | 0;

                                        }

                                        $13_1 = $183($13_1 << 16 >> 16 | 0, $14_1 << 16 >> 16 | 0, $11_1 | 0) | 0;

                                        $12_1 = $12_1 + 1 | 0;

                                        if (($12_1 | 0) != (10 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $14_1 = $0_1 + 14 | 0;

                                    label$9 : {

                                        label$10 : {

                                            if (($13_1 | 0) < (5326 | 0)) {

                                                break label$10

                                            }

                                            $12_1 = (HEAPU16[$14_1 >> 1] | 0) + 1 | 0;

                                            HEAP16[$14_1 >> 1] = $12_1;

                                            if (($12_1 << 16 >> 16 | 0) < (11 | 0)) {

                                                break label$9

                                            }

                                            $14_1 = $0_1 + 16 | 0;

                                        }

                                        HEAP16[$14_1 >> 1] = 0;

                                    }

                                    label$11 : {

                                        label$12 : {

                                            if ($1_1 >>> 0 < 4 >>> 0) {

                                                break label$12

                                            }

                                            if (($1_1 | 0) != (6 | 0)) {

                                                break label$11

                                            }

                                        }

                                        $14_1 = ($10_1 | 0) > (1 | 0) ? -4506 : -3277;

                                        $19_1 = $6_1 | $5_1 | 0;

                                        $15_1 = ($13_1 + ($1_1 >>> 0 < 3 >>> 0 ? ($9_1 ? ($19_1 ? $14_1 : $7_1 ? ($8_1 ? $14_1 : -3277) : -3277) : -3277) : -3277) | 0) << 16 >> 16;

                                        $17_1 = ($15_1 | 0) > (0 | 0);

                                        $18_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                        $12_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                        $14_1 = Math_imul($18_1 + $12_1 | 0, 13108);

                                        $16_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                        label$13 : {

                                            $221_1 = Math_imul($18_1, 6554);

                                            $18_1 = Math_imul($12_1, 13108);

                                            if (($221_1 ^ $18_1 | 0 | 0) < (1 | 0)) {

                                                break label$13

                                            }

                                            if (($14_1 ^ $18_1 | 0 | 0) > (-1 | 0)) {

                                                break label$13

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $14_1 = ($12_1 >> 15 | 0) ^ 2147483647 | 0;

                                        }

                                        $15_1 = $17_1 ? $15_1 : 0;

                                        $17_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                        $12_1 = Math_imul($17_1, 13108) + $14_1 | 0;

                                        label$14 : {

                                            if ((Math_imul($17_1, 6554) ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                break label$14

                                            }

                                            if (($12_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                break label$14

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $12_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $17_1 = $15_1 >>> 0 > 2048 >>> 0;

                                        $15_1 = $15_1 << 2 | 0;

                                        $18_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                        $14_1 = Math_imul($18_1, 13108) + $12_1 | 0;

                                        label$15 : {

                                            if ((Math_imul($18_1, 6554) ^ $12_1 | 0 | 0) < (1 | 0)) {

                                                break label$15

                                            }

                                            if (($14_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                break label$15

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $14_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $15_1 = $17_1 ? 8192 : $15_1;

                                        $17_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                        $12_1 = Math_imul($17_1, 13108) + $14_1 | 0;

                                        label$16 : {

                                            if ((Math_imul($17_1, 6554) ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                break label$16

                                            }

                                            if (($12_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                break label$16

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $12_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $17_1 = ($13_1 | 0) > (5325 | 0) | ($16_1 | 0) < (40 | 0) | 0;

                                        $15_1 = $15_1 << 16 >> 16;

                                        $12_1 = $220($12_1 | 0, $11_1 | 0) | 0;

                                        label$17 : {

                                            if ($1_1 >>> 0 > 2 >>> 0) {

                                                break label$17

                                            }

                                            if (!$19_1) {

                                                break label$17

                                            }

                                            if (!$9_1) {

                                                break label$17

                                            }

                                            $18_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                            $12_1 = HEAP16[$0_1 >> 1] | 0;

                                            $14_1 = Math_imul($18_1 + $12_1 | 0, 9362);

                                            label$18 : {

                                                $328 = Math_imul($18_1, 4681);

                                                $18_1 = Math_imul($12_1, 9362);

                                                if (($328 ^ $18_1 | 0 | 0) < (1 | 0)) {

                                                    break label$18

                                                }

                                                if (($14_1 ^ $18_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$18

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $14_1 = ($12_1 >> 15 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                            $12_1 = Math_imul($18_1, 9362) + $14_1 | 0;

                                            label$19 : {

                                                if ((Math_imul($18_1, 4681) ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                    break label$19

                                                }

                                                if (($12_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$19

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $12_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                            $14_1 = Math_imul($18_1, 9362) + $12_1 | 0;

                                            label$20 : {

                                                if ((Math_imul($18_1, 4681) ^ $12_1 | 0 | 0) < (1 | 0)) {

                                                    break label$20

                                                }

                                                if (($14_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$20

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $14_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                            $12_1 = Math_imul($18_1, 9362) + $14_1 | 0;

                                            label$21 : {

                                                if ((Math_imul($18_1, 4681) ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                    break label$21

                                                }

                                                if (($12_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$21

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $12_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                            $14_1 = Math_imul($18_1, 9362) + $12_1 | 0;

                                            label$22 : {

                                                if ((Math_imul($18_1, 4681) ^ $12_1 | 0 | 0) < (1 | 0)) {

                                                    break label$22

                                                }

                                                if (($14_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$22

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $14_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                            $12_1 = Math_imul($18_1, 9362) + $14_1 | 0;

                                            label$23 : {

                                                if ((Math_imul($18_1, 4681) ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                    break label$23

                                                }

                                                if (($12_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$23

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $12_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $12_1 = $220($12_1 | 0, $11_1 | 0) | 0;

                                        }

                                        label$24 : {

                                            label$25 : {

                                                $17_1 = $17_1 ? 8192 : $15_1;

                                                $14_1 = Math_imul($17_1, $2_1);

                                                if (($14_1 | 0) == (1073741824 | 0)) {

                                                    break label$25

                                                }

                                                $15_1 = $14_1 << 1 | 0;

                                                break label$24;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $15_1 = 2147483647;

                                        }

                                        $14_1 = $15_1 + ($12_1 << 14 | 0) | 0;

                                        label$26 : {

                                            if (($15_1 ^ ($12_1 << 13 | 0) | 0 | 0) < (1 | 0)) {

                                                break label$26

                                            }

                                            if (($14_1 ^ $15_1 | 0 | 0) > (-1 | 0)) {

                                                break label$26

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $14_1 = ($15_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$27 : {

                                            label$28 : {

                                                $12_1 = Math_imul($17_1, $12_1);

                                                if (($12_1 | 0) == (1073741824 | 0)) {

                                                    break label$28

                                                }

                                                $15_1 = $12_1 << 1 | 0;

                                                break label$27;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $15_1 = 2147483647;

                                        }

                                        $12_1 = $14_1 - $15_1 | 0;

                                        label$29 : {

                                            if (($15_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                break label$29

                                            }

                                            if (($12_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                break label$29

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $12_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $2_1 = $220((($12_1 + 536870912 | 0) >>> 0 < 1073741824 >>> 0 ? $12_1 << 2 | 0 : ($12_1 >> 31 | 0) ^ 2147483647 | 0) | 0, $11_1 | 0) | 0;

                                    }

                                    HEAP16[($0_1 + 16 | 0) >> 1] = (HEAPU16[($0_1 + 16 | 0) >> 1] | 0) + 1 | 0;

                                    return $2_1 | 0;

                                }



                                function $19($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;

                                    $1_1 = $229($1_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $3_1 = HEAPU16[$0_1 >> 1] | 0;

                                    $4_1 = Math_imul(HEAPU16[($2_1 + (($3_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) << 16 >> 16;

                                    $3_1 = $3_1 & 8 | 0 ? -4096 : 4096;

                                    HEAP16[($1_1 + ($4_1 << 1 | 0) | 0) >> 1] = $3_1;

                                    $5_1 = Math_imul(HEAPU16[($2_1 + (((HEAPU16[($0_1 + 10 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) << 16 >> 16;

                                    $6_1 = $1_1 + ($5_1 << 1 | 0) | 0;

                                    HEAP16[$6_1 >> 1] = (($5_1 | 0) < ($4_1 | 0) ? 0 - $3_1 | 0 : $3_1) + (HEAPU16[$6_1 >> 1] | 0) | 0;

                                    $3_1 = HEAPU16[($0_1 + 2 | 0) >> 1] | 0;

                                    $4_1 = (Math_imul(HEAPU16[($2_1 + (($3_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 1 | 0) << 16 >> 16;

                                    $3_1 = $3_1 & 8 | 0 ? -4096 : 4096;

                                    HEAP16[($1_1 + ($4_1 << 1 | 0) | 0) >> 1] = $3_1;

                                    $5_1 = (Math_imul(HEAPU16[($2_1 + (((HEAPU16[($0_1 + 12 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 1 | 0) << 16 >> 16;

                                    $6_1 = $1_1 + ($5_1 << 1 | 0) | 0;

                                    HEAP16[$6_1 >> 1] = (($5_1 | 0) < ($4_1 | 0) ? 0 - $3_1 | 0 : $3_1) + (HEAPU16[$6_1 >> 1] | 0) | 0;

                                    $3_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                    $4_1 = (Math_imul(HEAPU16[($2_1 + (($3_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 2 | 0) << 16 >> 16;

                                    $3_1 = $3_1 & 8 | 0 ? -4096 : 4096;

                                    HEAP16[($1_1 + ($4_1 << 1 | 0) | 0) >> 1] = $3_1;

                                    $5_1 = (Math_imul(HEAPU16[($2_1 + (((HEAPU16[($0_1 + 14 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 2 | 0) << 16 >> 16;

                                    $6_1 = $1_1 + ($5_1 << 1 | 0) | 0;

                                    HEAP16[$6_1 >> 1] = (($5_1 | 0) < ($4_1 | 0) ? 0 - $3_1 | 0 : $3_1) + (HEAPU16[$6_1 >> 1] | 0) | 0;

                                    $3_1 = HEAPU16[($0_1 + 6 | 0) >> 1] | 0;

                                    $4_1 = (Math_imul(HEAPU16[($2_1 + (($3_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 3 | 0) << 16 >> 16;

                                    $3_1 = $3_1 & 8 | 0 ? -4096 : 4096;

                                    HEAP16[($1_1 + ($4_1 << 1 | 0) | 0) >> 1] = $3_1;

                                    $5_1 = (Math_imul(HEAPU16[($2_1 + (((HEAPU16[($0_1 + 16 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 3 | 0) << 16 >> 16;

                                    $6_1 = $1_1 + ($5_1 << 1 | 0) | 0;

                                    HEAP16[$6_1 >> 1] = (($5_1 | 0) < ($4_1 | 0) ? 0 - $3_1 | 0 : $3_1) + (HEAPU16[$6_1 >> 1] | 0) | 0;

                                    $3_1 = HEAPU16[($0_1 + 8 | 0) >> 1] | 0;

                                    $4_1 = (Math_imul(HEAPU16[($2_1 + (($3_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 4 | 0) << 16 >> 16;

                                    $3_1 = $3_1 & 8 | 0 ? -4096 : 4096;

                                    HEAP16[($1_1 + ($4_1 << 1 | 0) | 0) >> 1] = $3_1;

                                    $0_1 = (Math_imul(HEAPU16[($2_1 + (((HEAPU16[($0_1 + 18 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0, 5) + 4 | 0) << 16 >> 16;

                                    $2_1 = $1_1 + ($0_1 << 1 | 0) | 0;

                                    HEAP16[$2_1 >> 1] = (($0_1 | 0) < ($4_1 | 0) ? 0 - $3_1 | 0 : $3_1) + (HEAPU16[$2_1 >> 1] | 0) | 0;

                                }



                                function $20($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $24_1 = 0;

                                    $2_1 = $229($2_1 | 0, 0 | 0, 80 | 0) | 0;

                                    HEAP16[((((Math_imul(($1_1 >>> 1 | 0) & 7 | 0, 5) + (($1_1 << 1 | 0) & 2 | 0) | 0) << 1 | 0) + $2_1 | 0) + 2 | 0) >> 1] = $0_1 & 1 | 0 ? 8191 : -8192;

                                    $24_1 = Math_imul(($1_1 >>> 6 | 0) & 7 | 0, 5);

                                    $1_1 = ($1_1 >>> 4 | 0) & 3 | 0;

                                    HEAP16[($2_1 + (($24_1 + (($1_1 | 0) == (3 | 0) ? 4 : $1_1) | 0) << 1 | 0) | 0) >> 1] = $0_1 & 2 | 0 ? 8191 : -8192;

                                }



                                function $21($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $6_1 = 0, $7_1 = 0;

                                    $6_1 = ($2_1 & 65528 | 0) >>> 3 | 0;

                                    $0_1 = ($6_1 & 8 | 0) + ((($0_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? ($0_1 >> 15 | 0) ^ 32767 | 0 : $0_1 << 1 | 0) | 0;

                                    $7_1 = HEAPU16[($3_1 + (($0_1 + 1 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                    $0_1 = HEAPU16[($3_1 + ($0_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                    $3_1 = $229($4_1 | 0, 0 | 0, 80 | 0) | 0;

                                    HEAP16[($3_1 + (($0_1 + Math_imul($2_1 & 7 | 0, 5) | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = $1_1 & 1 | 0 ? 8191 : -8192;

                                    HEAP16[($3_1 + (($7_1 + Math_imul($6_1 & 7 | 0, 5) | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = $1_1 & 2 | 0 ? 8191 : -8192;

                                }



                                function $22($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $2_1 = $229($2_1 | 0, 0 | 0, 80 | 0) | 0;

                                    HEAP16[($2_1 + Math_imul($1_1 & 7 | 0, 10) | 0) >> 1] = $0_1 & 1 | 0 ? 8191 : -8192;

                                    HEAP16[(($2_1 + ((Math_imul(($1_1 >>> 4 | 0) & 7 | 0, 5) + (($1_1 >>> 2 | 0) & 2 | 0) | 0) << 1 | 0) | 0) + 2 | 0) >> 1] = $0_1 & 2 | 0 ? 8191 : -8192;

                                    HEAP16[(($2_1 + (((($1_1 >>> 6 | 0) & 2 | 0) + Math_imul(($1_1 >>> 8 | 0) & 7 | 0, 5) | 0) << 1 | 0) | 0) + 4 | 0) >> 1] = $0_1 & 4 | 0 ? 8191 : -8192;

                                }



                                function $23($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;

                                    $4_1 = $1_1 >>> 9 | 0;

                                    $5_1 = HEAPU16[($2_1 + ($4_1 & 14 | 0) | 0) >> 1] | 0;

                                    $6_1 = HEAPU16[($2_1 + (($1_1 >>> 5 | 0) & 14 | 0) | 0) >> 1] | 0;

                                    $7_1 = HEAPU16[($2_1 + (($1_1 >>> 2 | 0) & 14 | 0) | 0) >> 1] | 0;

                                    $2_1 = HEAPU16[($2_1 + (($1_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0;

                                    $1_1 = $229($3_1 | 0, 0 | 0, 80 | 0) | 0;

                                    HEAP16[($1_1 + (Math_imul($2_1, 5) << 16 >> 16 << 1 | 0) | 0) >> 1] = $0_1 & 1 | 0 ? 8191 : -8192;

                                    HEAP16[($1_1 + ((Math_imul($7_1, 5) + 1 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = $0_1 & 2 | 0 ? 8191 : -8192;

                                    HEAP16[($1_1 + ((Math_imul($6_1, 5) + 2 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = $0_1 & 4 | 0 ? 8191 : -8192;

                                    HEAP16[($1_1 + (((($4_1 & 1 | 0) + Math_imul($5_1, 5) | 0) + 3 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = $0_1 & 8 | 0 ? 8191 : -8192;

                                }



                                function $24($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $7_1 = 0, $8_1 = 0, $10_1 = 0, $12_1 = 0, $15_1 = 0, $13_1 = 0, $6_1 = 0,

                                        $9_1 = 0, $18_1 = 0, $5_1 = 0, $19_1 = 0, $14_1 = 0, $16_1 = 0, $11_1 = 0,

                                        $17_1 = 0, $22_1 = 0, $3_1 = 0, $4_1 = 0, $104_1 = 0, $20_1 = 0, $21_1 = 0;

                                    $1_1 = $229($1_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $3_1 = HEAPU16[($0_1 + 6 | 0) >> 1] | 0;

                                    $4_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                    $5_1 = HEAPU16[($0_1 + 2 | 0) >> 1] | 0;

                                    $6_1 = HEAPU16[$0_1 >> 1] | 0;

                                    $7_1 = HEAPU16[($0_1 + 8 | 0) >> 1] | 0;

                                    $8_1 = $7_1 << 16 >> 16 >> 3 | 0;

                                    $9_1 = ($8_1 | 0) < (124 | 0) ? $8_1 : 124;

                                    $8_1 = Math_imul($9_1, 1311);

                                    $10_1 = $8_1 >>> 15 | 0;

                                    $11_1 = $183(($7_1 >>> 2 | 0) & 1 | 0 | 0, ((($10_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? (($8_1 >> 15 | 0) >>> 15 | 0) ^ 32767 | 0 : $10_1 << 1 | 0) << 16 >> 16 | 0, $2_1 | 0) | 0;

                                    $8_1 = HEAPU16[($0_1 + 10 | 0) >> 1] | 0;

                                    $12_1 = $8_1 << 16 >> 16 >> 3 | 0;

                                    $13_1 = ($12_1 | 0) < (124 | 0) ? $12_1 : 124;

                                    $14_1 = Math_imul($13_1, 1311);

                                    $12_1 = $14_1 >>> 15 | 0;

                                    $15_1 = Math_imul($12_1, -25) + $13_1 | 0;

                                    $16_1 = Math_imul($15_1 << 16 >> 16, 6554);

                                    $13_1 = $16_1 >>> 15 | 0;

                                    $15_1 = Math_imul($13_1, -5) + $15_1 | 0;

                                    $17_1 = ($15_1 + 16384 | 0) << 16 >> 16;

                                    $18_1 = $15_1 << 16 >> 16 >> 15 | 0;

                                    $19_1 = Math_imul($10_1, -25) + $9_1 | 0;

                                    $10_1 = Math_imul($19_1 << 16 >> 16, 6554);

                                    $104_1 = ($10_1 >> 30 | 0) ^ -1 | 0;

                                    $10_1 = $10_1 >>> 15 | 0;

                                    $20_1 = ((($10_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? $104_1 : $10_1 << 1 | 0) + (($7_1 >>> 1 | 0) & 1 | 0) | 0;

                                    $21_1 = $13_1 + 16384 | 0;

                                    $14_1 = $183(($8_1 >>> 2 | 0) & 1 | 0 | 0, ((($12_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? (($14_1 >> 15 | 0) >>> 15 | 0) ^ 32767 | 0 : $12_1 << 1 | 0) << 16 >> 16 | 0, $2_1 | 0) | 0;

                                    $9_1 = $6_1 ? -8191 : 8191;

                                    $12_1 = HEAPU16[($0_1 + 12 | 0) >> 1] | 0;

                                    $6_1 = (Math_imul($12_1 << 16 >> 16 >> 2 | 0, 1638400) + 786432 | 0) >> 21 | 0;

                                    $22_1 = Math_imul($6_1, 6554);

                                    $0_1 = $22_1 >>> 15 | 0;

                                    $6_1 = Math_imul($0_1, 65531) + $6_1 | 0;

                                    $6_1 = $0_1 & 1 | 0 ? 4 - $6_1 | 0 : $6_1;

                                    $6_1 = $183(((($6_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? ($6_1 << 16 >> 16 >>> 15 | 0) ^ 32767 | 0 : $6_1 << 1 | 0) << 16 >> 16 | 0, $12_1 & 1 | 0 | 0, $2_1 | 0) | 0;

                                    label$1 : {

                                        $2_1 = Math_imul($10_1, -5) + $19_1 | 0;

                                        $2_1 = ((((($2_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? ($2_1 << 16 >> 16 ^ -1 | 0) >>> 15 | 0 : $2_1 << 1 | 0) + ($7_1 & 1 | 0) | 0) << 2 | 0) << 16 >> 16;

                                        if (($2_1 | 0) > (39 | 0)) {

                                            break label$1

                                        }

                                        HEAP16[($1_1 + ($2_1 << 1 | 0) | 0) >> 1] = $9_1;

                                    }

                                    $7_1 = $16_1 >> 30 | 0;

                                    $10_1 = $21_1 << 16 >> 16;

                                    $15_1 = $15_1 << 1 | 0;

                                    $16_1 = ($17_1 | 0) < (0 | 0);

                                    $17_1 = $18_1 ^ -1 | 0;

                                    label$2 : {

                                        $18_1 = ($20_1 << 2 | 0) << 16 >> 16;

                                        if (($18_1 | 0) > (39 | 0)) {

                                            break label$2

                                        }

                                        $19_1 = $1_1 + ($18_1 << 1 | 0) | 0;

                                        HEAP16[$19_1 >> 1] = (HEAPU16[$19_1 >> 1] | 0) + (($18_1 | 0) < ($2_1 | 0) ? 0 - $9_1 | 0 : $9_1) | 0;

                                    }

                                    $9_1 = $0_1 + 16384 | 0;

                                    $13_1 = $13_1 << 1 | 0;

                                    $7_1 = $7_1 ^ -1 | 0;

                                    $10_1 = ($10_1 | 0) < (0 | 0);

                                    $18_1 = $8_1 >>> 1 | 0;

                                    $15_1 = $16_1 ? $17_1 : $15_1;

                                    $8_1 = $8_1 & 1 | 0;

                                    $2_1 = $5_1 & 65535 | 0 ? -8191 : 8191;

                                    label$3 : {

                                        $5_1 = ($11_1 << 2 | 0 | 1 | 0) << 16 >> 16;

                                        if (($5_1 | 0) > (39 | 0)) {

                                            break label$3

                                        }

                                        HEAP16[($1_1 + ($5_1 << 1 | 0) | 0) >> 1] = $2_1;

                                    }

                                    $11_1 = $22_1 >> 30 | 0;

                                    $9_1 = $9_1 << 16 >> 16;

                                    $7_1 = $10_1 ? $7_1 : $13_1;

                                    $10_1 = $18_1 & 1 | 0;

                                    $8_1 = $15_1 + $8_1 | 0;

                                    label$4 : {

                                        $13_1 = ($14_1 << 2 | 0 | 1 | 0) << 16 >> 16;

                                        if (($13_1 | 0) > (39 | 0)) {

                                            break label$4

                                        }

                                        $15_1 = $1_1 + ($13_1 << 1 | 0) | 0;

                                        HEAP16[$15_1 >> 1] = (HEAPU16[$15_1 >> 1] | 0) + (($13_1 | 0) < ($5_1 | 0) ? 0 - $2_1 | 0 : $2_1) | 0;

                                    }

                                    $2_1 = $0_1 << 1 | 0;

                                    $13_1 = $11_1 ^ -1 | 0;

                                    $15_1 = ($9_1 | 0) < (0 | 0);

                                    $12_1 = $12_1 >>> 1 | 0;

                                    $7_1 = $7_1 + $10_1 | 0;

                                    $0_1 = $4_1 & 65535 | 0 ? -8191 : 8191;

                                    label$5 : {

                                        $8_1 = ($8_1 << 2 | 0 | 2 | 0) << 16 >> 16;

                                        if (($8_1 | 0) > (39 | 0)) {

                                            break label$5

                                        }

                                        HEAP16[($1_1 + ($8_1 << 1 | 0) | 0) >> 1] = $0_1;

                                    }

                                    $2_1 = $15_1 ? $13_1 : $2_1;

                                    $10_1 = $12_1 & 1 | 0;

                                    label$6 : {

                                        $7_1 = ($7_1 << 2 | 0 | 2 | 0) << 16 >> 16;

                                        if (($7_1 | 0) > (39 | 0)) {

                                            break label$6

                                        }

                                        $12_1 = $1_1 + ($7_1 << 1 | 0) | 0;

                                        HEAP16[$12_1 >> 1] = (HEAPU16[$12_1 >> 1] | 0) + (($7_1 | 0) < ($8_1 | 0) ? 0 - $0_1 | 0 : $0_1) | 0;

                                    }

                                    $2_1 = $2_1 + $10_1 | 0;

                                    $0_1 = $3_1 & 65535 | 0 ? -8191 : 8191;

                                    label$7 : {

                                        $7_1 = ($6_1 << 2 | 0 | 3 | 0) << 16 >> 16;

                                        if (($7_1 | 0) > (39 | 0)) {

                                            break label$7

                                        }

                                        HEAP16[($1_1 + ($7_1 << 1 | 0) | 0) >> 1] = $0_1;

                                    }

                                    label$8 : {

                                        $2_1 = ($2_1 << 2 | 0 | 3 | 0) << 16 >> 16;

                                        if (($2_1 | 0) > (39 | 0)) {

                                            break label$8

                                        }

                                        $1_1 = $1_1 + ($2_1 << 1 | 0) | 0;

                                        HEAP16[$1_1 >> 1] = (HEAPU16[$1_1 >> 1] | 0) + (($2_1 | 0) < ($7_1 | 0) ? 0 - $0_1 | 0 : $0_1) | 0;

                                    }

                                }



                                function $25($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $1_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $190($0_1 + 1168 | 0 | 0);

                                    HEAP32[($0_1 + 1164 | 0) >> 2] = 0;

                                    HEAP16[($0_1 + 460 | 0) >> 1] = 40;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $4_1 = 0;

                                    HEAP16[($0_1 + 462 | 0) >> 1] = $4_1;

                                    HEAP16[($0_1 + 464 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 466 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($0_1 + 468 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 470 | 0;

                                    i64toi32_i32$0 = 0;

                                    $5_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $5_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $5_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 476 | 0;

                                    i64toi32_i32$0 = 0;

                                    $6_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $6_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $1_1 = $0_1 + 1216 | 0;

                                    $36($0_1 + 646 | 0 | 0, HEAP32[$1_1 >> 2] | 0 | 0) | 0;

                                    $45($0_1 + 686 | 0 | 0) | 0;

                                    $41($0_1 + 700 | 0 | 0) | 0;

                                    $17($0_1 + 608 | 0 | 0) | 0;

                                    $50($0_1 + 626 | 0 | 0, HEAP32[$1_1 >> 2] | 0 | 0) | 0;

                                    $15($0_1 + 484 | 0 | 0) | 0;

                                    $52($0_1 + 730 | 0 | 0) | 0;

                                    $37($0_1 + 748 | 0 | 0) | 0;

                                    $186($0_1 + 714 | 0 | 0) | 0;

                                    $26($0_1 | 0, 0 | 0) | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $26($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8_1 = 0,

                                        $9_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $2_1 = 0, $13_1 = 0, $14_1 = 0,

                                        $15_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP32[($0_1 + 388 | 0) >> 2] = $0_1 + 308 | 0;

                                    $0_1 = $229($0_1 | 0, 0 | 0, 308 | 0) | 0;

                                    label$2 : {

                                        label$3 : {

                                            if (($1_1 | 0) == (8 | 0)) {

                                                break label$3

                                            }

                                            i64toi32_i32$1 = $0_1;

                                            i64toi32_i32$0 = 0;

                                            HEAP32[($0_1 + 412 | 0) >> 2] = 0;

                                            HEAP32[($0_1 + 416 | 0) >> 2] = i64toi32_i32$0;

                                            HEAP32[($0_1 + 1164 | 0) >> 2] = 0;

                                            HEAP16[($0_1 + 434 | 0) >> 1] = 40;

                                            HEAP16[($0_1 + 440 | 0) >> 1] = 0;

                                            HEAP32[($0_1 + 436 | 0) >> 2] = 0;

                                            i64toi32_i32$1 = $0_1;

                                            i64toi32_i32$0 = 983061e3;

                                            HEAP32[($0_1 + 392 | 0) >> 2] = 1703966e3;

                                            HEAP32[($0_1 + 396 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $0_1;

                                            i64toi32_i32$0 = 0;

                                            $5_1 = 0;

                                            HEAP16[($0_1 + 462 | 0) >> 1] = $5_1;

                                            HEAP16[($0_1 + 464 | 0) >> 1] = $5_1 >>> 16 | 0;

                                            HEAP16[($0_1 + 466 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[($0_1 + 468 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            i64toi32_i32$1 = $0_1 + 426 | 0;

                                            i64toi32_i32$0 = 0;

                                            $6_1 = 0;

                                            HEAP16[i64toi32_i32$1 >> 1] = $6_1;

                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            i64toi32_i32$1 = $0_1 + 420 | 0;

                                            i64toi32_i32$0 = 0;

                                            HEAP32[i64toi32_i32$1 >> 2] = 0;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            $7_1 = $0_1 + 458 | 0;

                                            $8_1 = 2621440;

                                            HEAP16[$7_1 >> 1] = $8_1;

                                            HEAP16[($7_1 + 2 | 0) >> 1] = $8_1 >>> 16 | 0;

                                            HEAP32[($0_1 + 408 | 0) >> 2] = -1703891464;

                                            i64toi32_i32$1 = $0_1 + 400 | 0;

                                            i64toi32_i32$0 = -982982464;

                                            HEAP32[i64toi32_i32$1 >> 2] = 8e3;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $0_1 + 442 | 0;

                                            i64toi32_i32$0 = 0;

                                            $9_1 = 0;

                                            HEAP16[i64toi32_i32$1 >> 1] = $9_1;

                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $9_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            i64toi32_i32$1 = $0_1 + 450 | 0;

                                            i64toi32_i32$0 = 0;

                                            $10_1 = 0;

                                            HEAP16[i64toi32_i32$1 >> 1] = $10_1;

                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $10_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            i64toi32_i32$1 = $0_1 + 470 | 0;

                                            i64toi32_i32$0 = 0;

                                            $11_1 = 0;

                                            HEAP16[i64toi32_i32$1 >> 1] = $11_1;

                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            i64toi32_i32$1 = $0_1 + 476 | 0;

                                            i64toi32_i32$0 = 0;

                                            $12_1 = 0;

                                            HEAP16[i64toi32_i32$1 >> 1] = $12_1;

                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            $17($0_1 + 608 | 0 | 0) | 0;

                                            $2_1 = $0_1 + 1216 | 0;

                                            $50($0_1 + 626 | 0 | 0, HEAP32[$2_1 >> 2] | 0 | 0) | 0;

                                            $36($0_1 + 646 | 0 | 0, HEAP32[$2_1 >> 2] | 0 | 0) | 0;

                                            $45($0_1 + 686 | 0 | 0) | 0;

                                            $41($0_1 + 700 | 0 | 0) | 0;

                                            $186($0_1 + 714 | 0 | 0) | 0;

                                            break label$2;

                                        }

                                        HEAP32[($0_1 + 1164 | 0) >> 2] = 0;

                                        i64toi32_i32$1 = $0_1;

                                        i64toi32_i32$0 = 0;

                                        $13_1 = 0;

                                        HEAP16[($0_1 + 462 | 0) >> 1] = $13_1;

                                        HEAP16[($0_1 + 464 | 0) >> 1] = $13_1 >>> 16 | 0;

                                        HEAP16[($0_1 + 466 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[($0_1 + 468 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        HEAP16[($0_1 + 460 | 0) >> 1] = 40;

                                        HEAP16[($0_1 + 440 | 0) >> 1] = 0;

                                        i64toi32_i32$1 = $0_1;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[($0_1 + 432 | 0) >> 2] = 2621440;

                                        HEAP32[($0_1 + 436 | 0) >> 2] = i64toi32_i32$0;

                                        i64toi32_i32$1 = $0_1 + 470 | 0;

                                        i64toi32_i32$0 = 0;

                                        $14_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $14_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $14_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $0_1 + 476 | 0;

                                        i64toi32_i32$0 = 0;

                                        $15_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $15_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $15_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $17($0_1 + 608 | 0 | 0) | 0;

                                        $36($0_1 + 646 | 0 | 0, HEAP32[($0_1 + 1216 | 0) >> 2] | 0 | 0) | 0;

                                        $45($0_1 + 686 | 0 | 0) | 0;

                                        $41($0_1 + 700 | 0 | 0) | 0;

                                    }

                                    $15($0_1 + 484 | 0 | 0) | 0;

                                    HEAP16[($0_1 + 606 | 0) >> 1] = 21845;

                                    $52($0_1 + 730 | 0 | 0) | 0;

                                    label$4 : {

                                        if (($1_1 | 0) == (8 | 0)) {

                                            break label$4

                                        }

                                        $37($0_1 + 748 | 0 | 0) | 0;

                                    }

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $27($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $15_1 = 0, $6_1 = 0, $8_1 = 0, $13_1 = 0, i64toi32_i32$1 = 0, $17_1 = 0,

                                        i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, $19_1 = 0, $46_1 = 0, $47_1 = 0,

                                        $12_1 = 0, $14_1 = 0, $40_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $42_1 = 0,

                                        $51_1 = 0, $11_1 = 0, $18_1 = 0, $43_1 = 0, $26_1 = 0, $49_1 = 0, $51$hi = 0,

                                        $10_1 = 0, $16_1 = 0, $36_1 = 0, $7_1 = 0, $9_1 = 0, $24_1 = 0, $27_1 = 0,

                                        $29_1 = 0, $35_1 = 0, $41_1 = 0, $44_1 = 0, $64_1 = 0, $65_1 = 0, $66_1 = 0,

                                        $67_1 = 0, $68_1 = 0, $20_1 = 0, $30_1 = 0, $37_1 = 0, $38_1 = 0, $45_1 = 0,

                                        $48_1 = 0, $69_1 = 0, $50_1 = 0, $70_1 = 0, $71_1 = 0, $72_1 = 0, $73_1 = 0,

                                        $74_1 = 0, $168_1 = 0, $173_1 = 0, $218_1 = 0, $222_1 = 0, $21_1 = 0, $22_1 = 0,

                                        $23_1 = 0, $25_1 = 0, $28_1 = 0, $31_1 = 0, $39_1 = 0, $307 = 0, $942 = 0,

                                        $1247 = 0, $1374 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $6_1 = global$0 - 384 | 0;

                                    global$0 = $6_1;

                                    label$1 : {

                                        label$2 : {

                                            $7_1 = $0_1 + 748 | 0;

                                            $8_1 = $0_1 + 1164 | 0;

                                            $9_1 = $40($7_1 | 0, $3_1 | 0, $8_1 | 0) | 0;

                                            if (!$9_1) {

                                                break label$2

                                            }

                                            $26($0_1 | 0, 8 | 0) | 0;

                                            $38($7_1 | 0, $0_1 + 412 | 0 | 0, $0_1 + 646 | 0 | 0, $0_1 + 714 | 0 | 0, $0_1 + 608 | 0 | 0, $9_1 | 0, $1_1 | 0, $2_1 | 0, $0_1 + 1168 | 0 | 0, $4_1 | 0, $5_1 | 0, $8_1 | 0);

                                            $2_1 = $0_1 + 666 | 0;

                                            $206($2_1 | 0, $0_1 + 392 | 0 | 0, 10 | 0, $8_1 | 0);

                                            $51($0_1 + 626 | 0 | 0, $2_1 | 0, $8_1 | 0);

                                            break label$1;

                                        }

                                        $10_1 = ($3_1 | 0) == (7 | 0) | ($3_1 & -2 | 0 | 0) == (2 | 0) | 0;

                                        $11_1 = 0;

                                        $12_1 = 0;

                                        label$3 : {

                                            label$4 : {

                                                label$5 : {

                                                    label$6 : {

                                                        label$7 : {

                                                            switch ($3_1 + -1 | 0 | 0) {

                                                                case 0:

                                                                    $11_1 = 1;

                                                                    $13_1 = $10_1 ^ 1 | 0;

                                                                    $12_1 = 0;

                                                                    break label$6;

                                                                case 1:

                                                                case 6:

                                                                    $12_1 = 1;

                                                                    $14($0_1 + 606 | 0 | 0, HEAP16[((HEAP32[($0_1 + 1256 | 0) >> 2] | 0) + ($1_1 << 1 | 0) | 0) >> 1] | 0 | 0, HEAP32[((HEAP32[($0_1 + 1260 | 0) >> 2] | 0) + ($1_1 << 2 | 0) | 0) >> 2] | 0 | 0, $2_1 | 0, HEAP32[($0_1 + 1276 | 0) >> 2] | 0 | 0, $8_1 | 0);

                                                                    break;

                                                                case 2:

                                                                    break label$5;

                                                                default:

                                                                    break label$7;

                                                            }

                                                            ;

                                                        }

                                                        $13_1 = $10_1 ^ 1 | 0;

                                                        if ($3_1 >>> 0 > 7 >>> 0) {

                                                            break label$6

                                                        }

                                                        if ((1 << $3_1 | 0) & 140 | 0) {

                                                            break label$4

                                                        }

                                                    }

                                                    HEAP16[($0_1 + 440 | 0) >> 1] = (HEAPU16[($0_1 + 440 | 0) >> 1] | 0 | 0) == (6 | 0) ? 5 : 0;

                                                    $14_1 = $0_1 + 440 | 0;

                                                    break label$3;

                                                }

                                                $12_1 = 1;

                                                $13_1 = $10_1 ^ 1 | 0;

                                            }

                                            $15_1 = (HEAPU16[($0_1 + 440 | 0) >> 1] | 0) + 1 | 0;

                                            HEAP16[($0_1 + 440 | 0) >> 1] = $15_1;

                                            $14_1 = $0_1 + 440 | 0;

                                            $11_1 = 0;

                                            if (($15_1 << 16 >> 16 | 0) < (7 | 0)) {

                                                break label$3

                                            }

                                            HEAP16[$14_1 >> 1] = 6;

                                            $11_1 = 0;

                                        }

                                        $15_1 = 0;

                                        label$10 : {

                                            switch ((HEAP32[($0_1 + 1156 | 0) >> 2] | 0) + -1 | 0 | 0) {

                                                case 1:

                                                    $15_1 = 1;

                                                case 0:

                                                    HEAP16[($0_1 + 436 | 0) >> 1] = $15_1;

                                                    HEAP16[($0_1 + 440 | 0) >> 1] = 5;

                                                    break;

                                                default:

                                                    break label$10;

                                            }

                                            ;

                                        }

                                        $64_1 = $0_1 + 682 | 0;

                                        HEAP32[($6_1 + 304 | 0) >> 2] = HEAPU16[$64_1 >> 1] | 0 | ((HEAPU16[($64_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$2 = $0_1 + 674 | 0;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $168_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $6_1;

                                        HEAP32[($6_1 + 296 | 0) >> 2] = $168_1;

                                        HEAP32[($6_1 + 300 | 0) >> 2] = i64toi32_i32$1;

                                        $16_1 = $0_1 + 666 | 0;

                                        i64toi32_i32$2 = $16_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $173_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $6_1;

                                        HEAP32[($6_1 + 288 | 0) >> 2] = $173_1;

                                        HEAP32[($6_1 + 292 | 0) >> 2] = i64toi32_i32$0;

                                        $15_1 = $0_1 + 392 | 0;

                                        $17_1 = $0_1 + 1168 | 0;

                                        $18_1 = $0_1 + 646 | 0;

                                        label$13 : {

                                            label$14 : {

                                                if (($1_1 | 0) == (7 | 0)) {

                                                    break label$14

                                                }

                                                $33($18_1 | 0, $1_1 | 0, $12_1 | 0, $2_1 | 0, $17_1 | 0, $6_1 + 352 | 0 | 0, $8_1 | 0);

                                                $194($15_1 | 0, $6_1 + 352 | 0 | 0, $5_1 | 0, $8_1 | 0);

                                                $19_1 = $2_1 + 6 | 0;

                                                break label$13;

                                            }

                                            $35($18_1 | 0, $12_1 | 0, $2_1 | 0, $17_1 | 0, $6_1 + 320 | 0 | 0, $6_1 + 352 | 0 | 0, $8_1 | 0);

                                            $192($15_1 | 0, $6_1 + 320 | 0 | 0, $6_1 + 352 | 0 | 0, $5_1 | 0, $8_1 | 0);

                                            $19_1 = $2_1 + 10 | 0;

                                        }

                                        i64toi32_i32$2 = $6_1;

                                        i64toi32_i32$0 = HEAP32[($6_1 + 360 | 0) >> 2] | 0;

                                        i64toi32_i32$1 = HEAP32[($6_1 + 364 | 0) >> 2] | 0;

                                        $218_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $0_1 + 400 | 0;

                                        $65_1 = $218_1;

                                        HEAP16[i64toi32_i32$0 >> 1] = $65_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $65_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $6_1;

                                        i64toi32_i32$1 = HEAP32[($6_1 + 352 | 0) >> 2] | 0;

                                        i64toi32_i32$0 = HEAP32[($6_1 + 356 | 0) >> 2] | 0;

                                        $222_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $0_1 + 392 | 0;

                                        $66_1 = $222_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $66_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $66_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $67_1 = $0_1 + 408 | 0;

                                        $68_1 = HEAP32[(($6_1 + 352 | 0) + 16 | 0) >> 2] | 0;

                                        HEAP16[$67_1 >> 1] = $68_1;

                                        HEAP16[($67_1 + 2 | 0) >> 1] = $68_1 >>> 16 | 0;

                                        $20_1 = $1_1 >>> 0 > 6 >>> 0;

                                        $18_1 = $20_1 ? 2 : 1;

                                        $2_1 = ($1_1 | 0) == (5 | 0);

                                        $21_1 = $2_1 ? -10 : -5;

                                        $22_1 = $0_1 + 444 | 0;

                                        $23_1 = $0_1 + 468 | 0;

                                        $24_1 = $0_1 + 466 | 0;

                                        $25_1 = $0_1 + 80 | 0;

                                        $26_1 = $0_1 + 412 | 0;

                                        $27_1 = $0_1 + 442 | 0;

                                        $28_1 = $13_1 & $11_1 | 0;

                                        $29_1 = $0_1 + 730 | 0;

                                        $30_1 = $0_1 + 626 | 0;

                                        $31_1 = $0_1 + 608 | 0;

                                        $32_1 = $0_1 + 714 | 0;

                                        $33_1 = $0_1 + 700 | 0;

                                        $34_1 = $0_1 + 686 | 0;

                                        $35_1 = $0_1 + 1168 | 0;

                                        $36_1 = $0_1 + 464 | 0;

                                        $37_1 = $1_1 >>> 0 < 4 >>> 0;

                                        $38_1 = $2_1 ? 19 : 9;

                                        $39_1 = 143 - $38_1 | 0;

                                        $40_1 = !$1_1;

                                        $41_1 = ($1_1 | 0) == (7 | 0);

                                        $42_1 = 0;

                                        $43_1 = 0;

                                        $44_1 = -1;

                                        $45_1 = 0;

                                        label$15 : while (1) {

                                            $13_1 = $1_1 >>> 0 > 1 >>> 0;

                                            $2_1 = $13_1 ? (($42_1 | 0) == (80 | 0) ? 0 : $42_1) : $42_1;

                                            $46_1 = $19_1 + 2 | 0;

                                            $44_1 = ($44_1 << 16 >> 16) + 1 | 0;

                                            $15_1 = HEAP16[$19_1 >> 1] | 0;

                                            label$16 : {

                                                label$17 : {

                                                    label$18 : {

                                                        label$19 : {

                                                            label$20 : {

                                                                if ($41_1) {

                                                                    break label$20

                                                                }

                                                                $47_1 = HEAP16[($0_1 + 434 | 0) >> 1] | 0;

                                                                $17_1 = ($47_1 + $21_1 | 0) << 16 >> 16;

                                                                $17_1 = ($17_1 | 0) > (20 | 0) ? $17_1 : 20;

                                                                $307 = $17_1;

                                                                $17_1 = ($17_1 + $38_1 | 0) << 16 >> 16;

                                                                $29($15_1 | 0, (($17_1 | 0) > (143 | 0) ? $39_1 : $307) | 0, (($17_1 | 0) < (143 | 0) ? $17_1 : 143) | 0, $2_1 << 16 >> 16 | 0, $47_1 | 0, $6_1 + 14 | 0 | 0, $6_1 + 12 | 0 | 0, $37_1 | 0, $8_1 | 0);

                                                                $15_1 = HEAPU16[($6_1 + 14 | 0) >> 1] | 0;

                                                                HEAP16[($0_1 + 460 | 0) >> 1] = $15_1;

                                                                label$21 : {

                                                                    label$22 : {

                                                                        if ($3_1 >>> 0 > 7 >>> 0) {

                                                                            break label$22

                                                                        }

                                                                        if ((1 << $3_1 | 0) & 140 | 0) {

                                                                            break label$21

                                                                        }

                                                                    }

                                                                    $17_1 = HEAPU16[($6_1 + 12 | 0) >> 1] | 0;

                                                                    break label$18;

                                                                }

                                                                label$23 : {

                                                                    $2_1 = HEAP16[($0_1 + 434 | 0) >> 1] | 0;

                                                                    if (($2_1 | 0) > (142 | 0)) {

                                                                        break label$23

                                                                    }

                                                                    $2_1 = $2_1 + 1 | 0;

                                                                    HEAP16[($0_1 + 434 | 0) >> 1] = $2_1;

                                                                }

                                                                $17_1 = 0;

                                                                HEAP16[($6_1 + 12 | 0) >> 1] = 0;

                                                                HEAP16[($6_1 + 14 | 0) >> 1] = $2_1;

                                                                label$24 : {

                                                                    if (HEAPU16[($0_1 + 462 | 0) >> 1] | 0) {

                                                                        break label$24

                                                                    }

                                                                    $15_1 = $2_1;

                                                                    break label$18;

                                                                }

                                                                label$25 : {

                                                                    if ($1_1 >>> 0 <= 2 >>> 0) {

                                                                        break label$25

                                                                    }

                                                                    $15_1 = $2_1;

                                                                    break label$18;

                                                                }

                                                                if ((HEAP16[$36_1 >> 1] | 0 | 0) >= (5 | 0)) {

                                                                    break label$19

                                                                }

                                                                $15_1 = $2_1;

                                                                break label$18;

                                                            }

                                                            $30($15_1 | 0, 18 | 0, 143 | 0, $2_1 << 16 >> 16 | 0, $6_1 + 14 | 0 | 0, $6_1 + 12 | 0 | 0, $8_1 | 0);

                                                            label$26 : {

                                                                label$27 : {

                                                                    label$28 : {

                                                                        if ($3_1 >>> 0 > 7 >>> 0) {

                                                                            break label$28

                                                                        }

                                                                        if ((1 << $3_1 | 0) & 140 | 0) {

                                                                            break label$27

                                                                        }

                                                                    }

                                                                    label$29 : {

                                                                        if (!($2_1 & 65535 | 0)) {

                                                                            break label$29

                                                                        }

                                                                        if (($15_1 | 0) > (60 | 0)) {

                                                                            break label$27

                                                                        }

                                                                    }

                                                                    $15_1 = HEAPU16[($6_1 + 12 | 0) >> 1] | 0;

                                                                    $2_1 = HEAPU16[($6_1 + 14 | 0) >> 1] | 0;

                                                                    break label$26;

                                                                }

                                                                HEAP16[($0_1 + 460 | 0) >> 1] = HEAPU16[($6_1 + 14 | 0) >> 1] | 0;

                                                                $2_1 = HEAPU16[($0_1 + 434 | 0) >> 1] | 0;

                                                                $15_1 = 0;

                                                                HEAP16[($6_1 + 12 | 0) >> 1] = 0;

                                                                HEAP16[($6_1 + 14 | 0) >> 1] = $2_1;

                                                            }

                                                            $47_1 = 0;

                                                            $212(HEAP32[($0_1 + 388 | 0) >> 2] | 0 | 0, $2_1 << 16 >> 16 | 0, $15_1 << 16 >> 16 | 0, 40 | 0, 0 | 0, $8_1 | 0);

                                                            break label$17;

                                                        }

                                                        HEAP16[($6_1 + 14 | 0) >> 1] = $15_1;

                                                    }

                                                    $212(HEAP32[($0_1 + 388 | 0) >> 2] | 0 | 0, $15_1 << 16 >> 16 | 0, $17_1 << 16 >> 16 | 0, 40 | 0, 1 | 0, $8_1 | 0);

                                                    label$30 : {

                                                        if ($13_1) {

                                                            break label$30

                                                        }

                                                        $21($44_1 << 16 >> 16 | 0, HEAP16[($19_1 + 4 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 2 | 0) >> 1] | 0 | 0, HEAP32[($0_1 + 1244 | 0) >> 2] | 0 | 0, $6_1 + 176 | 0 | 0, $8_1 | 0);

                                                        $46_1 = $19_1 + 6 | 0;

                                                        label$31 : {

                                                            $2_1 = HEAP16[($0_1 + 432 | 0) >> 1] | 0;

                                                            $15_1 = $2_1 << 1 | 0;

                                                            if (($15_1 | 0) != (($2_1 << 17 | 0) >> 16 | 0 | 0)) {

                                                                break label$31

                                                            }

                                                            $47_1 = $40_1;

                                                            break label$16;

                                                        }

                                                        $15_1 = ($2_1 | 0) > (0 | 0) ? 32767 : -32768;

                                                        $47_1 = $40_1;

                                                        break label$16;

                                                    }

                                                    label$32 : {

                                                        switch ($1_1 + -2 | 0 | 0) {

                                                            case 0:

                                                                $20(HEAP16[($19_1 + 4 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 2 | 0) >> 1] | 0 | 0, $6_1 + 176 | 0 | 0);

                                                                $46_1 = $19_1 + 6 | 0;

                                                                label$35 : {

                                                                    $2_1 = HEAP16[($0_1 + 432 | 0) >> 1] | 0;

                                                                    $15_1 = $2_1 << 1 | 0;

                                                                    if (($15_1 | 0) != (($2_1 << 17 | 0) >> 16 | 0 | 0)) {

                                                                        break label$35

                                                                    }

                                                                    $47_1 = $40_1;

                                                                    break label$16;

                                                                }

                                                                $15_1 = ($2_1 | 0) > (0 | 0) ? 32767 : -32768;

                                                                $47_1 = $40_1;

                                                                break label$16;

                                                            case 1:

                                                                $22(HEAP16[($19_1 + 4 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 2 | 0) >> 1] | 0 | 0, $6_1 + 176 | 0 | 0);

                                                                $46_1 = $19_1 + 6 | 0;

                                                                label$36 : {

                                                                    $2_1 = HEAP16[($0_1 + 432 | 0) >> 1] | 0;

                                                                    $15_1 = $2_1 << 1 | 0;

                                                                    if (($15_1 | 0) != (($2_1 << 17 | 0) >> 16 | 0 | 0)) {

                                                                        break label$36

                                                                    }

                                                                    $47_1 = $40_1;

                                                                    break label$16;

                                                                }

                                                                $15_1 = ($2_1 | 0) > (0 | 0) ? 32767 : -32768;

                                                                $47_1 = $40_1;

                                                                break label$16;

                                                            default:

                                                                break label$32;

                                                        }

                                                        ;

                                                    }

                                                    label$37 : {

                                                        if ($1_1 >>> 0 > 5 >>> 0) {

                                                            break label$37

                                                        }

                                                        $23(HEAP16[($19_1 + 4 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 2 | 0) >> 1] | 0 | 0, HEAP32[($0_1 + 1168 | 0) >> 2] | 0 | 0, $6_1 + 176 | 0 | 0);

                                                        $46_1 = $19_1 + 6 | 0;

                                                        label$38 : {

                                                            $2_1 = HEAP16[($0_1 + 432 | 0) >> 1] | 0;

                                                            $15_1 = $2_1 << 1 | 0;

                                                            if (($15_1 | 0) != (($2_1 << 17 | 0) >> 16 | 0 | 0)) {

                                                                break label$38

                                                            }

                                                            $47_1 = $40_1;

                                                            break label$16;

                                                        }

                                                        $15_1 = ($2_1 | 0) > (0 | 0) ? 32767 : -32768;

                                                        $47_1 = $40_1;

                                                        break label$16;

                                                    }

                                                    $47_1 = $40_1;

                                                    if (($1_1 | 0) != (6 | 0)) {

                                                        break label$17

                                                    }

                                                    $24($46_1 | 0, $6_1 + 176 | 0 | 0, $8_1 | 0);

                                                    $46_1 = $19_1 + 16 | 0;

                                                    label$39 : {

                                                        $2_1 = HEAP16[($0_1 + 432 | 0) >> 1] | 0;

                                                        $15_1 = $2_1 << 1 | 0;

                                                        if (($15_1 | 0) != (($2_1 << 17 | 0) >> 16 | 0 | 0)) {

                                                            break label$39

                                                        }

                                                        $47_1 = $40_1;

                                                        break label$16;

                                                    }

                                                    $15_1 = ($2_1 | 0) > (0 | 0) ? 32767 : -32768;

                                                    $47_1 = $40_1;

                                                    break label$16;

                                                }

                                                $2_1 = $19_1 + 4 | 0;

                                                label$40 : {

                                                    label$41 : {

                                                        if ($3_1 >>> 0 > 7 >>> 0) {

                                                            break label$41

                                                        }

                                                        if (!((1 << $3_1 | 0) & 140 | 0)) {

                                                            break label$41

                                                        }

                                                        $44($34_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                        break label$40;

                                                    }

                                                    (wasm2js_i32$0 = $6_1, wasm2js_i32$1 = $32($1_1 | 0, HEAP16[$46_1 >> 1] | 0 | 0, HEAP32[($0_1 + 1240 | 0) >> 2] | 0 | 0) | 0), HEAP16[(wasm2js_i32$0 + 10 | 0) >> 1] = wasm2js_i32$1;

                                                }

                                                $46($34_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                $19($2_1 | 0, $6_1 + 176 | 0 | 0, HEAP32[($0_1 + 1168 | 0) >> 2] | 0 | 0);

                                                $46_1 = $19_1 + 24 | 0;

                                                $2_1 = HEAP16[($6_1 + 10 | 0) >> 1] | 0;

                                                $15_1 = $2_1 << 1 | 0;

                                                if (($15_1 | 0) == (($2_1 << 17 | 0) >> 16 | 0 | 0)) {

                                                    break label$16

                                                }

                                                $15_1 = ($2_1 | 0) > (0 | 0) ? 32767 : -32768;

                                            }

                                            $19_1 = $43_1 & 65535 | 0;

                                            label$42 : {

                                                $2_1 = HEAP16[($6_1 + 14 | 0) >> 1] | 0;

                                                if (($2_1 | 0) > (39 | 0)) {

                                                    break label$42

                                                }

                                                $17_1 = $15_1 << 16 >> 16;

                                                label$43 : while (1) {

                                                    label$44 : {

                                                        label$45 : {

                                                            $15_1 = ($6_1 + 176 | 0) + ($2_1 << 1 | 0) | 0;

                                                            $13_1 = Math_imul($17_1, HEAP16[($15_1 - ((HEAP16[($6_1 + 14 | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0);

                                                            if (($13_1 | 0) >= (1073741824 | 0)) {

                                                                break label$45

                                                            }

                                                            $13_1 = $13_1 >> 15 | 0;

                                                            break label$44;

                                                        }

                                                        HEAP32[$8_1 >> 2] = 1;

                                                        $13_1 = 32767;

                                                    }

                                                    HEAP16[($6_1 + 6 | 0) >> 1] = $13_1;

                                                    (wasm2js_i32$0 = $15_1, wasm2js_i32$1 = $183(HEAP16[$15_1 >> 1] | 0 | 0, $13_1 << 16 >> 16 | 0, $8_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $2_1 = $2_1 + 1 | 0;

                                                    if (($2_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                        continue label$43

                                                    }

                                                    break label$43;

                                                }

                                                ;

                                            }

                                            $43_1 = 1 - $19_1 | 0;

                                            label$46 : {

                                                label$47 : {

                                                    label$48 : {

                                                        label$49 : {

                                                            if (!$47_1) {

                                                                break label$49

                                                            }

                                                            label$50 : {

                                                                label$51 : {

                                                                    $13_1 = $43_1 & 65535 | 0;

                                                                    if ($13_1) {

                                                                        break label$51

                                                                    }

                                                                    $19_1 = $46_1;

                                                                    break label$50;

                                                                }

                                                                $19_1 = $46_1 + 2 | 0;

                                                                $45_1 = HEAPU16[$46_1 >> 1] | 0;

                                                            }

                                                            label$52 : {

                                                                label$53 : {

                                                                    label$54 : {

                                                                        if ($3_1 >>> 0 > 7 >>> 0) {

                                                                            break label$54

                                                                        }

                                                                        if ((1 << $3_1 | 0) & 140 | 0) {

                                                                            break label$53

                                                                        }

                                                                    }

                                                                    $28($32_1 | 0, 0 | 0, $45_1 << 16 >> 16 | 0, $6_1 + 176 | 0 | 0, $43_1 << 16 >> 16 | 0, $6_1 + 10 | 0 | 0, $6_1 + 8 | 0 | 0, $35_1 | 0, $8_1 | 0);

                                                                    break label$52;

                                                                }

                                                                $44($34_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                                $42($33_1 | 0, $32_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                            }

                                                            $46($34_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                            $43($33_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                            $15_1 = HEAP16[($6_1 + 10 | 0) >> 1] | 0;

                                                            $2_1 = ($15_1 | 0) < (13017 | 0) ? $15_1 : 13017;

                                                            break label$48;

                                                        }

                                                        label$55 : {

                                                            label$56 : {

                                                                if (($1_1 + -1 | 0) >>> 0 < 4 >>> 0) {

                                                                    break label$56

                                                                }

                                                                if (($1_1 | 0) != (6 | 0)) {

                                                                    break label$55

                                                                }

                                                            }

                                                            label$57 : {

                                                                label$58 : {

                                                                    label$59 : {

                                                                        if ($3_1 >>> 0 > 7 >>> 0) {

                                                                            break label$59

                                                                        }

                                                                        if ((1 << $3_1 | 0) & 140 | 0) {

                                                                            break label$58

                                                                        }

                                                                    }

                                                                    $28($32_1 | 0, $1_1 | 0, HEAP16[$46_1 >> 1] | 0 | 0, $6_1 + 176 | 0 | 0, $43_1 << 16 >> 16 | 0, $6_1 + 10 | 0 | 0, $6_1 + 8 | 0 | 0, $35_1 | 0, $8_1 | 0);

                                                                    break label$57;

                                                                }

                                                                $44($34_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                                $42($33_1 | 0, $32_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                            }

                                                            $19_1 = $46_1 + 2 | 0;

                                                            $46($34_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                            $43($33_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                            $2_1 = HEAP16[($6_1 + 10 | 0) >> 1] | 0;

                                                            $15_1 = ($2_1 | 0) < (13017 | 0) ? $2_1 : 13017;

                                                            label$60 : {

                                                                if (($1_1 | 0) == (6 | 0)) {

                                                                    break label$60

                                                                }

                                                                $2_1 = $15_1;

                                                                break label$47;

                                                            }

                                                            label$61 : {

                                                                if ((HEAP16[($0_1 + 434 | 0) >> 1] | 0 | 0) >= (46 | 0)) {

                                                                    break label$61

                                                                }

                                                                $2_1 = $15_1;

                                                                break label$47;

                                                            }

                                                            label$62 : {

                                                                if (($15_1 | 0) > (-1 | 0)) {

                                                                    break label$62

                                                                }

                                                                $2_1 = $15_1 >> 2 | 0;

                                                                break label$47;

                                                            }

                                                            $2_1 = ($15_1 & 65532 | 0) >>> 2 | 0;

                                                            break label$47;

                                                        }

                                                        $19_1 = $46_1 + 2 | 0;

                                                        $2_1 = HEAPU16[$46_1 >> 1] | 0;

                                                        label$63 : {

                                                            if (($1_1 | 0) != (5 | 0)) {

                                                                break label$63

                                                            }

                                                            label$64 : {

                                                                label$65 : {

                                                                    $15_1 = $3_1 >>> 0 > 7 >>> 0;

                                                                    if ($15_1) {

                                                                        break label$65

                                                                    }

                                                                    if (!((1 << $3_1 | 0) & 140 | 0)) {

                                                                        break label$65

                                                                    }

                                                                    $44($34_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                                    break label$64;

                                                                }

                                                                (wasm2js_i32$0 = $6_1, wasm2js_i32$1 = $32(5 | 0, $2_1 << 16 >> 16 | 0, HEAP32[($0_1 + 1240 | 0) >> 2] | 0 | 0) | 0), HEAP16[(wasm2js_i32$0 + 10 | 0) >> 1] = wasm2js_i32$1;

                                                            }

                                                            $46($34_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 10 | 0 | 0, $8_1 | 0);

                                                            label$66 : {

                                                                label$67 : {

                                                                    label$68 : {

                                                                        if ($15_1) {

                                                                            break label$68

                                                                        }

                                                                        if ((1 << $3_1 | 0) & 140 | 0) {

                                                                            break label$67

                                                                        }

                                                                    }

                                                                    $31($32_1 | 0, 5 | 0, HEAP16[$19_1 >> 1] | 0 | 0, $6_1 + 176 | 0 | 0, HEAP32[($0_1 + 1236 | 0) >> 2] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                                    break label$66;

                                                                }

                                                                $42($33_1 | 0, $32_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                            }

                                                            $19_1 = $46_1 + 4 | 0;

                                                            $43($33_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                            $2_1 = HEAP16[($6_1 + 10 | 0) >> 1] | 0;

                                                            $15_1 = ($2_1 | 0) < (13017 | 0) ? $2_1 : 13017;

                                                            $2_1 = $15_1;

                                                            break label$47;

                                                        }

                                                        label$69 : {

                                                            label$70 : {

                                                                label$71 : {

                                                                    if ($3_1 >>> 0 > 7 >>> 0) {

                                                                        break label$71

                                                                    }

                                                                    if ((1 << $3_1 | 0) & 140 | 0) {

                                                                        break label$70

                                                                    }

                                                                }

                                                                $31($32_1 | 0, $1_1 | 0, $2_1 << 16 >> 16 | 0, $6_1 + 176 | 0 | 0, HEAP32[($0_1 + 1236 | 0) >> 2] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                                break label$69;

                                                            }

                                                            $42($33_1 | 0, $32_1 | 0, HEAP16[$14_1 >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                        }

                                                        $43($33_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $6_1 + 8 | 0 | 0, $8_1 | 0);

                                                        $13_1 = $43_1 & 65535 | 0;

                                                        $15_1 = HEAPU16[($6_1 + 10 | 0) >> 1] | 0;

                                                        $2_1 = $15_1;

                                                    }

                                                    label$72 : {

                                                        if ($1_1) {

                                                            break label$72

                                                        }

                                                        if ($13_1) {

                                                            break label$46

                                                        }

                                                    }

                                                    $15_1 = $15_1 << 16 >> 16;

                                                    $15_1 = ($15_1 | 0) < (13017 | 0) ? $15_1 : 13017;

                                                }

                                                HEAP16[($0_1 + 432 | 0) >> 1] = $15_1;

                                            }

                                            label$73 : {

                                                $2_1 = ((($2_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? ($2_1 << 16 >> 16 >>> 15 | 0) ^ 32767 | 0 : $2_1 << 1 | 0) << 16 >> 16;

                                                $48_1 = ($2_1 | 0) < (16385 | 0);

                                                if ($48_1) {

                                                    break label$73

                                                }

                                                $46_1 = $2_1 & 65535 | 0;

                                                $2_1 = 0;

                                                label$74 : while (1) {

                                                    label$75 : {

                                                        label$76 : {

                                                            $13_1 = $2_1 << 1 | 0;

                                                            $15_1 = Math_imul(HEAP16[((HEAP32[($0_1 + 388 | 0) >> 2] | 0) + $13_1 | 0) >> 1] | 0, $46_1);

                                                            if (($15_1 | 0) >= (1073741824 | 0)) {

                                                                break label$76

                                                            }

                                                            $15_1 = $15_1 >> 15 | 0;

                                                            break label$75;

                                                        }

                                                        HEAP32[$8_1 >> 2] = 1;

                                                        $15_1 = 32767;

                                                    }

                                                    HEAP16[($6_1 + 6 | 0) >> 1] = $15_1;

                                                    label$77 : {

                                                        label$78 : {

                                                            label$79 : {

                                                                $17_1 = Math_imul($15_1 << 16 >> 16, HEAP16[($6_1 + 10 | 0) >> 1] | 0);

                                                                if (($17_1 | 0) == (1073741824 | 0)) {

                                                                    break label$79

                                                                }

                                                                $15_1 = $17_1 << 1 | 0;

                                                                if (!$41_1) {

                                                                    break label$77

                                                                }

                                                                if (($17_1 | 0) > (-1 | 0)) {

                                                                    break label$78

                                                                }

                                                                $15_1 = $17_1 | -2147483648 | 0;

                                                                break label$77;

                                                            }

                                                            HEAP32[$8_1 >> 2] = 1;

                                                            $15_1 = 2147483647;

                                                            if (!$41_1) {

                                                                break label$77

                                                            }

                                                        }

                                                        $15_1 = $15_1 >>> 1 | 0;

                                                    }

                                                    (wasm2js_i32$0 = ($6_1 + 96 | 0) + $13_1 | 0, wasm2js_i32$1 = $220($15_1 | 0, $8_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $2_1 = $2_1 + 1 | 0;

                                                    if (($2_1 | 0) != (40 | 0)) {

                                                        continue label$74

                                                    }

                                                    break label$74;

                                                }

                                                ;

                                            }

                                            label$80 : {

                                                label$81 : {

                                                    $49_1 = $3_1 >>> 0 > 7 >>> 0;

                                                    if ($49_1) {

                                                        break label$81

                                                    }

                                                    if ((1 << $3_1 | 0) & 140 | 0) {

                                                        break label$80

                                                    }

                                                }

                                                i64toi32_i32$2 = $23_1;

                                                i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $51_1 = i64toi32_i32$0;

                                                $51$hi = i64toi32_i32$1;

                                                i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;

                                                i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $942 = i64toi32_i32$1;

                                                i64toi32_i32$1 = $24_1 + 8 | 0;

                                                $69_1 = $942;

                                                HEAP16[i64toi32_i32$1 >> 1] = $69_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $69_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                i64toi32_i32$0 = $51$hi;

                                                i64toi32_i32$1 = $24_1;

                                                HEAP16[i64toi32_i32$1 >> 1] = $51_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $51_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                HEAP16[($0_1 + 482 | 0) >> 1] = HEAPU16[($6_1 + 10 | 0) >> 1] | 0;

                                            }

                                            label$82 : {

                                                label$83 : {

                                                    if (HEAPU16[($0_1 + 436 | 0) >> 1] | 0) {

                                                        break label$83

                                                    }

                                                    if ($49_1) {

                                                        break label$82

                                                    }

                                                    if (!((1 << $3_1 | 0) & 140 | 0)) {

                                                        break label$82

                                                    }

                                                }

                                                if ($1_1 >>> 0 > 2 >>> 0) {

                                                    break label$82

                                                }

                                                if (!((HEAPU16[($0_1 + 462 | 0) >> 1] | 0) & 65535 | 0)) {

                                                    break label$82

                                                }

                                                $2_1 = HEAP16[($6_1 + 10 | 0) >> 1] | 0;

                                                if (($2_1 | 0) < (12289 | 0)) {

                                                    break label$82

                                                }

                                                $2_1 = ((($2_1 & 65535 | 0) + 118784 | 0) >>> 1 | 0) & 65535 | 0;

                                                HEAP16[($6_1 + 10 | 0) >> 1] = ($2_1 >>> 0 < 2457 >>> 0 ? $2_1 : 2457) | 12288 | 0;

                                            }

                                            $49($6_1 + 288 | 0 | 0, $16_1 | 0, $42_1 << 16 >> 16 | 0, $6_1 + 256 | 0 | 0, $8_1 | 0);

                                            $50_1 = $18($31_1 | 0, $1_1 | 0, HEAP16[($6_1 + 8 | 0) >> 1] | 0 | 0, $6_1 + 256 | 0 | 0, $30_1 | 0, $12_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $11_1 | 0, HEAP16[($0_1 + 438 | 0) >> 1] | 0 | 0, HEAP16[($0_1 + 462 | 0) >> 1] | 0 | 0, HEAP16[($0_1 + 464 | 0) >> 1] | 0 | 0, $8_1 | 0) | 0;

                                            label$84 : {

                                                if ($37_1) {

                                                    break label$84

                                                }

                                                if (($1_1 | 0) == (6 | 0)) {

                                                    break label$84

                                                }

                                                $50_1 = HEAPU16[($6_1 + 8 | 0) >> 1] | 0;

                                            }

                                            $47_1 = (HEAP16[($6_1 + 10 | 0) >> 1] | 0) >> $20_1 | 0;

                                            $2_1 = HEAP32[($0_1 + 388 | 0) >> 2] | 0;

                                            $13_1 = 0;

                                            label$85 : while (1) {

                                                $15_1 = $13_1 << 1 | 0;

                                                $2_1 = $2_1 + $15_1 | 0;

                                                HEAP16[(($6_1 + 16 | 0) + $15_1 | 0) >> 1] = HEAPU16[$2_1 >> 1] | 0;

                                                label$86 : {

                                                    label$87 : {

                                                        $2_1 = Math_imul(HEAP16[$2_1 >> 1] | 0, $47_1);

                                                        if (($2_1 | 0) == (1073741824 | 0)) {

                                                            break label$87

                                                        }

                                                        $17_1 = $2_1 << 1 | 0;

                                                        break label$86;

                                                    }

                                                    HEAP32[$8_1 >> 2] = 1;

                                                    $17_1 = 2147483647;

                                                }

                                                $2_1 = 2147483647;

                                                label$88 : {

                                                    label$89 : {

                                                        $46_1 = Math_imul(HEAP16[($6_1 + 8 | 0) >> 1] | 0, HEAP16[(($6_1 + 176 | 0) + $15_1 | 0) >> 1] | 0);

                                                        if (($46_1 | 0) == (1073741824 | 0)) {

                                                            break label$89

                                                        }

                                                        $2_1 = ($46_1 << 1 | 0) + $17_1 | 0;

                                                        if (($46_1 ^ $17_1 | 0 | 0) < (1 | 0)) {

                                                            break label$88

                                                        }

                                                        if (($2_1 ^ $17_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$88

                                                        }

                                                        $2_1 = ($17_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    }

                                                    HEAP32[$8_1 >> 2] = 1;

                                                }

                                                $17_1 = $2_1 << $18_1 | 0;

                                                $17_1 = $220((($17_1 >> $18_1 | 0 | 0) == ($2_1 | 0) ? $17_1 : ($2_1 >> 31 | 0) ^ 2147483647 | 0) | 0, $8_1 | 0) | 0;

                                                $2_1 = HEAP32[($0_1 + 388 | 0) >> 2] | 0;

                                                HEAP16[($2_1 + $15_1 | 0) >> 1] = $17_1;

                                                $13_1 = $13_1 + 1 | 0;

                                                if (($13_1 | 0) != (40 | 0)) {

                                                    continue label$85

                                                }

                                                break label$85;

                                            }

                                            ;

                                            $54($29_1 | 0);

                                            label$90 : {

                                                $46_1 = $1_1 >>> 0 > 2 >>> 0;

                                                if ($46_1) {

                                                    break label$90

                                                }

                                                if ((HEAP16[$36_1 >> 1] | 0 | 0) < (4 | 0)) {

                                                    break label$90

                                                }

                                                if ($10_1 ^ 1 | 0 | !(HEAPU16[($0_1 + 462 | 0) >> 1] | 0) | 0) {

                                                    break label$90

                                                }

                                                $53($29_1 | 0);

                                            }

                                            $55($29_1 | 0, $1_1 | 0, $6_1 + 16 | 0 | 0, $50_1 << 16 >> 16 | 0, HEAP16[($6_1 + 10 | 0) >> 1] | 0 | 0, $6_1 + 176 | 0 | 0, $47_1 | 0, $18_1 | 0, $35_1 | 0, $8_1 | 0);

                                            $15_1 = 0;

                                            $2_1 = 0;

                                            label$91 : while (1) {

                                                $13_1 = $2_1;

                                                $2_1 = 2147483647;

                                                label$92 : {

                                                    label$93 : {

                                                        $17_1 = HEAP16[(($6_1 + 16 | 0) + ($15_1 << 1 | 0) | 0) >> 1] | 0;

                                                        $17_1 = Math_imul($17_1, $17_1);

                                                        if (($17_1 | 0) == (1073741824 | 0)) {

                                                            break label$93

                                                        }

                                                        $2_1 = ($17_1 << 1 | 0) + $13_1 | 0;

                                                        if (($17_1 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                            break label$92

                                                        }

                                                        if (($2_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$92

                                                        }

                                                        $2_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    }

                                                    HEAP32[$8_1 >> 2] = 1;

                                                }

                                                $15_1 = $15_1 + 1 | 0;

                                                if (($15_1 | 0) != (40 | 0)) {

                                                    continue label$91

                                                }

                                                break label$91;

                                            }

                                            ;

                                            $15_1 = $2_1 >>> 1 | 0;

                                            $15_1 = $223((($2_1 | 0) < (0 | 0) ? $15_1 | -2147483648 | 0 : $15_1) | 0, $6_1 + 6 | 0 | 0, $8_1 | 0) | 0;

                                            $2_1 = HEAP16[($6_1 + 6 | 0) >> 1] | 0;

                                            $13_1 = $2_1 >> 1 | 0;

                                            label$94 : {

                                                label$95 : {

                                                    label$96 : {

                                                        if (($2_1 | 0) < (-28 | 0)) {

                                                            break label$96

                                                        }

                                                        $2_1 = 0;

                                                        $13_1 = $13_1 + 15 | 0;

                                                        if ($13_1 >>> 0 > 30 >>> 0) {

                                                            break label$94

                                                        }

                                                        $13_1 = $15_1 >> ($13_1 & 65535 | 0) | 0;

                                                        break label$95;

                                                    }

                                                    $2_1 = (-15 - $13_1 | 0) & 65535 | 0;

                                                    $13_1 = $15_1 << $2_1 | 0;

                                                    if (($13_1 >> $2_1 | 0 | 0) == ($15_1 | 0)) {

                                                        break label$95

                                                    }

                                                    $2_1 = 536870911;

                                                    if (($15_1 | 0) > (-1 | 0)) {

                                                        break label$94

                                                    }

                                                    $2_1 = -536870912;

                                                    break label$94;

                                                }

                                                $2_1 = $13_1 >>> 2 | 0;

                                                if (($13_1 | 0) > (-1 | 0)) {

                                                    break label$94

                                                }

                                                $2_1 = $2_1 | -1073741824 | 0;

                                            }

                                            label$97 : {

                                                label$98 : {

                                                    label$99 : {

                                                        label$100 : {

                                                            if ($46_1) {

                                                                break label$100

                                                            }

                                                            $15_1 = HEAP16[$36_1 >> 1] | 0;

                                                            if (($15_1 | 0) < (6 | 0)) {

                                                                break label$100

                                                            }

                                                            if (!(HEAPU16[($0_1 + 462 | 0) >> 1] | 0)) {

                                                                break label$98

                                                            }

                                                            if ((HEAP16[$14_1 >> 1] | 0 | 0) > (3 | 0)) {

                                                                break label$99

                                                            }

                                                            label$101 : {

                                                                label$102 : {

                                                                    label$103 : {

                                                                        if (!$11_1) {

                                                                            break label$103

                                                                        }

                                                                        if (HEAPU16[($0_1 + 438 | 0) >> 1] | 0) {

                                                                            break label$101

                                                                        }

                                                                        if ($49_1) {

                                                                            break label$102

                                                                        }

                                                                        if (!((1 << $3_1 | 0) & 140 | 0)) {

                                                                            break label$102

                                                                        }

                                                                        break label$101;

                                                                    }

                                                                    if ($49_1) {

                                                                        break label$102

                                                                    }

                                                                    if ((1 << $3_1 | 0) & 140 | 0) {

                                                                        break label$101

                                                                    }

                                                                }

                                                                if (!(HEAPU16[($0_1 + 436 | 0) >> 1] | 0)) {

                                                                    break label$100

                                                                }

                                                            }

                                                            $47($6_1 + 16 | 0 | 0, $2_1 << 16 >> 16 | 0, $27_1 | 0, $15_1 | 0, HEAP16[($0_1 + 436 | 0) >> 1] | 0 | 0, $28_1 | 0, $8_1 | 0) | 0;

                                                        }

                                                        if (!(HEAPU16[($0_1 + 462 | 0) >> 1] | 0)) {

                                                            break label$98

                                                        }

                                                    }

                                                    label$104 : {

                                                        label$105 : {

                                                            if ($49_1) {

                                                                break label$105

                                                            }

                                                            if ((1 << $3_1 | 0) & 140 | 0) {

                                                                break label$104

                                                            }

                                                        }

                                                        if (!(HEAPU16[($0_1 + 436 | 0) >> 1] | 0)) {

                                                            break label$98

                                                        }

                                                    }

                                                    if ((HEAP16[$14_1 >> 1] | 0 | 0) < (4 | 0)) {

                                                        break label$97

                                                    }

                                                }

                                                i64toi32_i32$2 = $22_1;

                                                i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $51_1 = i64toi32_i32$0;

                                                $51$hi = i64toi32_i32$1;

                                                i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;

                                                i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $1247 = i64toi32_i32$1;

                                                i64toi32_i32$1 = $27_1 + 8 | 0;

                                                $70_1 = $1247;

                                                HEAP16[i64toi32_i32$1 >> 1] = $70_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $70_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                i64toi32_i32$0 = $51$hi;

                                                i64toi32_i32$1 = $27_1;

                                                HEAP16[i64toi32_i32$1 >> 1] = $51_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $51_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                HEAP16[($0_1 + 458 | 0) >> 1] = $2_1;

                                            }

                                            $15_1 = $6_1 + 16 | 0;

                                            $2_1 = 0;

                                            label$106 : {

                                                if ($48_1) {

                                                    break label$106

                                                }

                                                label$107 : while (1) {

                                                    $13_1 = $2_1 << 1 | 0;

                                                    $15_1 = ($6_1 + 96 | 0) + $13_1 | 0;

                                                    (wasm2js_i32$0 = $15_1, wasm2js_i32$1 = $183(HEAP16[$15_1 >> 1] | 0 | 0, HEAP16[(($6_1 + 16 | 0) + $13_1 | 0) >> 1] | 0 | 0, $8_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $2_1 = $2_1 + 1 | 0;

                                                    if (($2_1 | 0) != (40 | 0)) {

                                                        continue label$107

                                                    }

                                                    break label$107;

                                                }

                                                ;

                                                $9($6_1 + 16 | 0 | 0, $6_1 + 96 | 0 | 0, 40 | 0, $8_1 | 0);

                                                $15_1 = $6_1 + 96 | 0;

                                            }

                                            HEAP32[$8_1 >> 2] = 0;

                                            $17_1 = $4_1 + ($42_1 << 1 | 0) | 0;

                                            $225($5_1 | 0, $15_1 | 0, $17_1 | 0, 40 | 0, $26_1 | 0, 0 | 0);

                                            $2_1 = 193;

                                            label$108 : {

                                                label$109 : {

                                                    if (!(HEAP32[$8_1 >> 2] | 0)) {

                                                        break label$109

                                                    }

                                                    label$110 : while (1) {

                                                        $15_1 = $0_1 + ($2_1 << 1 | 0) | 0;

                                                        HEAP16[$15_1 >> 1] = (HEAP16[$15_1 >> 1] | 0) >>> 2 | 0;

                                                        $15_1 = $2_1 + -1 | 0;

                                                        $13_1 = $0_1 + ($15_1 << 1 | 0) | 0;

                                                        HEAP16[$13_1 >> 1] = (HEAP16[$13_1 >> 1] | 0) >>> 2 | 0;

                                                        $2_1 = $2_1 + -2 | 0;

                                                        if ($15_1) {

                                                            continue label$110

                                                        }

                                                        break label$110;

                                                    }

                                                    ;

                                                    $15_1 = 39;

                                                    label$111 : while (1) {

                                                        $2_1 = ($6_1 + 16 | 0) + ($15_1 << 1 | 0) | 0;

                                                        HEAP16[$2_1 >> 1] = (HEAP16[$2_1 >> 1] | 0) >>> 2 | 0;

                                                        $13_1 = $2_1 + -2 | 0;

                                                        HEAP16[$13_1 >> 1] = (HEAP16[$13_1 >> 1] | 0) >>> 2 | 0;

                                                        $13_1 = $2_1 + -4 | 0;

                                                        HEAP16[$13_1 >> 1] = (HEAP16[$13_1 >> 1] | 0) >>> 2 | 0;

                                                        $2_1 = $2_1 + -6 | 0;

                                                        HEAP16[$2_1 >> 1] = (HEAP16[$2_1 >> 1] | 0) >>> 2 | 0;

                                                        $2_1 = $15_1 + -4 | 0;

                                                        $13_1 = ($6_1 + 16 | 0) + ($2_1 << 1 | 0) | 0;

                                                        HEAP16[$13_1 >> 1] = (HEAP16[$13_1 >> 1] | 0) >>> 2 | 0;

                                                        $15_1 = $15_1 + -5 | 0;

                                                        if ($2_1) {

                                                            continue label$111

                                                        }

                                                        break label$111;

                                                    }

                                                    ;

                                                    $225($5_1 | 0, $6_1 + 16 | 0 | 0, $17_1 | 0, 40 | 0, $26_1 | 0, 1 | 0);

                                                    break label$108;

                                                }

                                                i64toi32_i32$2 = $17_1 + 60 | 0;

                                                i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $51_1 = i64toi32_i32$0;

                                                $51$hi = i64toi32_i32$1;

                                                i64toi32_i32$2 = $17_1 + 68 | 0;

                                                i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $71_1 = $17_1 + 76 | 0;

                                                $72_1 = $26_1 + 16 | 0;

                                                $73_1 = HEAPU16[$71_1 >> 1] | 0 | ((HEAPU16[($71_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                HEAP16[$72_1 >> 1] = $73_1;

                                                HEAP16[($72_1 + 2 | 0) >> 1] = $73_1 >>> 16 | 0;

                                                $1374 = i64toi32_i32$1;

                                                i64toi32_i32$1 = $26_1 + 8 | 0;

                                                $74_1 = $1374;

                                                HEAP16[i64toi32_i32$1 >> 1] = $74_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $74_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                i64toi32_i32$0 = $51$hi;

                                                i64toi32_i32$1 = $26_1;

                                                HEAP16[i64toi32_i32$1 >> 1] = $51_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $51_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            }

                                            $15_1 = $228($0_1 | 0, $25_1 | 0, 308 | 0) | 0;

                                            HEAP16[($15_1 + 434 | 0) >> 1] = HEAPU16[($6_1 + 14 | 0) >> 1] | 0;

                                            $5_1 = $5_1 + 22 | 0;

                                            $2_1 = $42_1 >>> 0 < 120 >>> 0;

                                            $42_1 = $42_1 + 40 | 0;

                                            if ($2_1) {

                                                continue label$15

                                            }

                                            break label$15;

                                        }

                                        ;

                                        (wasm2js_i32$0 = $15_1, wasm2js_i32$1 = $16($15_1 + 484 | 0 | 0, $24_1 | 0, $4_1 | 0, $36_1 | 0, $8_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 462 | 0) >> 1] = wasm2js_i32$1;

                                        $39($7_1 | 0, $16_1 | 0, $4_1 | 0, $8_1 | 0);

                                        HEAP16[($15_1 + 438 | 0) >> 1] = $11_1;

                                        HEAP16[($15_1 + 436 | 0) >> 1] = $12_1;

                                        $51($30_1 | 0, $16_1 | 0, $8_1 | 0);

                                    }

                                    HEAP32[($0_1 + 1156 | 0) >> 2] = $9_1;

                                    global$0 = $6_1 + 384 | 0;

                                }



                                function $28($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    var $9_1 = 0, $10_1 = 0, $11_1 = 0, $73_1 = 0;

                                    $9_1 = global$0 - 16 | 0;

                                    global$0 = $9_1;

                                    $2_1 = ($2_1 + 8192 | 0) >>> 0 < 16384 >>> 0 ? $2_1 << 2 | 0 : ($2_1 >> 15 | 0) ^ 32767 | 0;

                                    label$1 : {

                                        label$2 : {

                                            switch ($1_1 | 0) {

                                                case 3:

                                                case 4:

                                                case 6:

                                                    $2_1 = (HEAP32[($7_1 + 84 | 0) >> 2] | 0) + ($2_1 << 16 >> 16 << 1 | 0) | 0;

                                                    HEAP16[$5_1 >> 1] = HEAPU16[$2_1 >> 1] | 0;

                                                    $5_1 = HEAPU16[($2_1 + 6 | 0) >> 1] | 0;

                                                    $7_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                                    $2_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                                    break label$1;

                                                case 0:

                                                    $2_1 = ((($4_1 << 1 | 0) ^ 2 | 0) + $2_1 | 0) << 16 >> 16;

                                                    $2_1 = global$7 + ((($2_1 | 0) < (1022 | 0) ? $2_1 : 1022) << 1 | 0) | 0;

                                                    HEAP16[$5_1 >> 1] = HEAPU16[$2_1 >> 1] | 0;

                                                    $2_1 = HEAP16[($2_1 + 2 | 0) >> 1] | 0;

                                                    $197($2_1 | 0, $9_1 + 12 | 0 | 0, $9_1 + 14 | 0 | 0, $8_1 | 0);

                                                    HEAP16[($9_1 + 12 | 0) >> 1] = (HEAPU16[($9_1 + 12 | 0) >> 1] | 0) + -12 | 0;

                                                    $73_1 = $222(HEAP16[($9_1 + 14 | 0) >> 1] | 0 | 0, 5 | 0, $8_1 | 0) | 0;

                                                    $5_1 = HEAP16[($9_1 + 12 | 0) >> 1] | 0;

                                                    $7_1 = $183($73_1 | 0, (($5_1 + 32 | 0) >>> 0 < 64 >>> 0 ? $5_1 << 10 | 0 : ($5_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 | 0, $8_1 | 0) | 0;

                                                    $10_1 = Math_imul(HEAP16[($9_1 + 14 | 0) >> 1] | 0, 24660) >> 15 | 0;

                                                    $11_1 = HEAP16[($9_1 + 12 | 0) >> 1] | 0;

                                                    $4_1 = Math_imul($11_1, 49320);

                                                    $5_1 = ($10_1 << 1 | 0) + $4_1 | 0;

                                                    label$5 : {

                                                        if (($10_1 ^ $4_1 | 0 | 0) < (1 | 0)) {

                                                            break label$5

                                                        }

                                                        if (($5_1 ^ $4_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$5

                                                        }

                                                        HEAP32[$8_1 >> 2] = 1;

                                                        $5_1 = ($11_1 >> 15 | 0) ^ 2147483647 | 0;

                                                    }

                                                    $5_1 = $220((($5_1 + 262144 | 0) >>> 0 < 524288 >>> 0 ? $5_1 << 13 | 0 : ($5_1 >> 31 | 0) ^ 2147483647 | 0) | 0, $8_1 | 0) | 0;

                                                    break label$1;

                                                default:

                                                    break label$2;

                                            }

                                            ;

                                        }

                                        $2_1 = (HEAP32[($7_1 + 80 | 0) >> 2] | 0) + ($2_1 << 16 >> 16 << 1 | 0) | 0;

                                        HEAP16[$5_1 >> 1] = HEAPU16[$2_1 >> 1] | 0;

                                        $5_1 = HEAPU16[($2_1 + 6 | 0) >> 1] | 0;

                                        $7_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        $2_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                    }

                                    $187($0_1 | 0, $1_1 | 0, $3_1 | 0, $9_1 + 12 | 0 | 0, $9_1 + 14 | 0 | 0, 0 | 0, 0 | 0, $8_1 | 0);

                                    label$6 : {

                                        label$7 : {

                                            $2_1 = Math_imul(($211(14 | 0, HEAP16[($9_1 + 14 | 0) >> 1] | 0 | 0, $8_1 | 0) | 0) << 16 >> 16, $2_1 << 16 >> 16);

                                            if (($2_1 | 0) == (1073741824 | 0)) {

                                                break label$7

                                            }

                                            $2_1 = $2_1 << 1 | 0;

                                            break label$6;

                                        }

                                        HEAP32[$8_1 >> 2] = 1;

                                        $2_1 = 2147483647;

                                    }

                                    label$8 : {

                                        label$9 : {

                                            $8_1 = HEAPU16[($9_1 + 12 | 0) >> 1] | 0;

                                            $1_1 = 10 - $8_1 | 0;

                                            if (($1_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                break label$9

                                            }

                                            $8_1 = 0;

                                            $1_1 = $1_1 & 65535 | 0;

                                            if ($1_1 >>> 0 > 30 >>> 0) {

                                                break label$8

                                            }

                                            $8_1 = $2_1 >> $1_1 | 0;

                                            break label$8;

                                        }

                                        $1_1 = ($8_1 + -10 | 0) << 16 >> 16;

                                        $8_1 = $2_1 << $1_1 | 0;

                                        if (($8_1 >> $1_1 | 0 | 0) == ($2_1 | 0)) {

                                            break label$8

                                        }

                                        $8_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    HEAP16[$6_1 >> 1] = $8_1 >>> 16 | 0;

                                    $188($0_1 | 0, $7_1 << 16 >> 16 | 0, $5_1 << 16 >> 16 | 0);

                                    global$0 = $9_1 + 16 | 0;

                                }



                                function $29($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    label$1 : {

                                        label$2 : {

                                            if ($3_1) {

                                                break label$2

                                            }

                                            label$3 : {

                                                if (($0_1 | 0) > (196 | 0)) {

                                                    break label$3

                                                }

                                                $1_1 = (Math_imul(($0_1 + 2 | 0) << 16 >> 16, 10923) >>> 15 | 0) + 19 | 0;

                                                HEAP16[$5_1 >> 1] = $1_1;

                                                HEAP16[$6_1 >> 1] = ($0_1 + Math_imul($1_1, -3) | 0) + 58 | 0;

                                                return;

                                            }

                                            HEAP16[$5_1 >> 1] = $0_1 + -112 | 0;

                                            break label$1;

                                        }

                                        label$4 : {

                                            if ($7_1) {

                                                break label$4

                                            }

                                            $3_1 = (Math_imul(($0_1 + 2 | 0) << 16 >> 16, 21846) + -65536 | 0) >> 16 | 0;

                                            HEAP16[$5_1 >> 1] = $3_1 + $1_1 | 0;

                                            HEAP16[$6_1 >> 1] = ($0_1 - (Math_imul($3_1, 196608) >>> 16 | 0) | 0) + -2 | 0;

                                            return;

                                        }

                                        $1_1 = ($224($4_1 | 0, $1_1 | 0, $8_1 | 0) | 0 | 0) > (5 | 0) ? $1_1 + 5 | 0 : $4_1;

                                        $1_1 = (($2_1 - $1_1 | 0) << 16 >> 16 | 0) > (4 | 0) ? $2_1 + -4 | 0 : $1_1;

                                        label$5 : {

                                            if (($0_1 | 0) > (3 | 0)) {

                                                break label$5

                                            }

                                            HEAP16[$5_1 >> 1] = ($0_1 + $1_1 | 0) + -5 | 0;

                                            break label$1;

                                        }

                                        label$6 : {

                                            if ($0_1 >>> 0 > 11 >>> 0) {

                                                break label$6

                                            }

                                            $3_1 = (Math_imul(($0_1 + -5 | 0) << 16 >> 16, 21846) + -65536 | 0) >> 16 | 0;

                                            HEAP16[$5_1 >> 1] = $1_1 + $3_1 | 0;

                                            HEAP16[$6_1 >> 1] = ($0_1 - (Math_imul($3_1, 196608) >>> 16 | 0) | 0) + -9 | 0;

                                            return;

                                        }

                                        HEAP16[$5_1 >> 1] = ($1_1 + $0_1 | 0) + -11 | 0;

                                    }

                                    HEAP16[$6_1 >> 1] = 0;

                                }



                                function $30($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $47_1 = 0;

                                    label$1 : {

                                        if ($3_1) {

                                            break label$1

                                        }

                                        label$2 : {

                                            if (($0_1 | 0) > (462 | 0)) {

                                                break label$2

                                            }

                                            $2_1 = (Math_imul(($0_1 + 5 | 0) << 16 >> 16, 5462) >>> 15 | 0) + 17 | 0;

                                            HEAP16[$4_1 >> 1] = $2_1;

                                            HEAP16[$5_1 >> 1] = ($0_1 + Math_imul($2_1, -6) | 0) + 105 | 0;

                                            return;

                                        }

                                        HEAP16[$4_1 >> 1] = $0_1 + -368 | 0;

                                        HEAP16[$5_1 >> 1] = 0;

                                        return;

                                    }

                                    $3_1 = ((HEAPU16[$4_1 >> 1] | 0) + -5 | 0) << 16 >> 16;

                                    $1_1 = ($3_1 | 0) > ($1_1 | 0) ? $3_1 : $1_1;

                                    $47_1 = (($1_1 + 9 | 0) << 16 >> 16 | 0) > ($2_1 | 0) ? $2_1 + -9 | 0 : $1_1;

                                    $2_1 = (Math_imul(($0_1 + 5 | 0) << 16 >> 16, 5462) >> 15 | 0) + -1 | 0;

                                    HEAP16[$4_1 >> 1] = $47_1 + $2_1 | 0;

                                    HEAP16[$5_1 >> 1] = ($0_1 - (Math_imul($2_1, 393216) >>> 16 | 0) | 0) + -3 | 0;

                                }



                                function $31($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0;

                                    $7_1 = global$0 - 16 | 0;

                                    global$0 = $7_1;

                                    $187($0_1 | 0, $1_1 | 0, $3_1 | 0, $7_1 + 14 | 0 | 0, $7_1 + 12 | 0 | 0, $7_1 + 10 | 0 | 0, $7_1 + 8 | 0 | 0, $6_1 | 0);

                                    $3_1 = $4_1 + Math_imul($2_1 & 31 | 0, 6) | 0;

                                    label$1 : {

                                        label$2 : {

                                            if ($224($1_1 << 16 >> 16 | 0, 7 | 0, $6_1 | 0) | 0) {

                                                break label$2

                                            }

                                            label$3 : {

                                                label$4 : {

                                                    $1_1 = $211(HEAP16[($7_1 + 14 | 0) >> 1] | 0 | 0, HEAP16[($7_1 + 12 | 0) >> 1] | 0 | 0, $6_1 | 0) | 0;

                                                    $1_1 = Math_imul(((($1_1 << 20 | 0) >> 20 | 0 | 0) == ($1_1 << 16 >> 16 | 0) ? $1_1 << 4 | 0 : ($1_1 << 16 | 0 | 0) > (-1 | 0) ? 32767 : 32768) << 16 >> 16, HEAP16[$3_1 >> 1] | 0);

                                                    if (($1_1 | 0) >= (1073741824 | 0)) {

                                                        break label$4

                                                    }

                                                    $6_1 = $1_1 >> 15 | 0;

                                                    break label$3;

                                                }

                                                HEAP32[$6_1 >> 2] = 1;

                                                $6_1 = 32767;

                                            }

                                            $1_1 = $6_1 << 16 | 0;

                                            $6_1 = (($6_1 << 17 | 0) >> 17 | 0 | 0) == ($6_1 << 16 >> 16 | 0) ? $1_1 >> 15 | 0 : ($1_1 >> 31 | 0) ^ 32767 | 0;

                                            break label$1;

                                        }

                                        label$5 : {

                                            label$6 : {

                                                $1_1 = Math_imul(($211(14 | 0, HEAP16[($7_1 + 12 | 0) >> 1] | 0 | 0, $6_1 | 0) | 0) << 16 >> 16, HEAP16[$3_1 >> 1] | 0);

                                                if (($1_1 | 0) == (1073741824 | 0)) {

                                                    break label$6

                                                }

                                                $2_1 = $1_1 << 1 | 0;

                                                break label$5;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                            $2_1 = 2147483647;

                                        }

                                        label$7 : {

                                            label$8 : {

                                                $1_1 = $224(9 | 0, HEAP16[($7_1 + 14 | 0) >> 1] | 0 | 0, $6_1 | 0) | 0;

                                                if (($1_1 | 0) < (1 | 0)) {

                                                    break label$8

                                                }

                                                $6_1 = 0;

                                                if ($1_1 >>> 0 > 30 >>> 0) {

                                                    break label$7

                                                }

                                                $6_1 = $2_1 >> ($1_1 & 65535 | 0) | 0;

                                                break label$7;

                                            }

                                            $1_1 = (0 - $1_1 | 0) << 16 >> 16;

                                            $6_1 = $2_1 << $1_1 | 0;

                                            if (($6_1 >> $1_1 | 0 | 0) == ($2_1 | 0)) {

                                                break label$7

                                            }

                                            $6_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $6_1 = $6_1 >>> 16 | 0;

                                    }

                                    HEAP16[$5_1 >> 1] = $6_1;

                                    $188($0_1 | 0, HEAP16[($3_1 + 2 | 0) >> 1] | 0 | 0, HEAP16[($3_1 + 4 | 0) >> 1] | 0 | 0);

                                    global$0 = $7_1 + 16 | 0;

                                }



                                function $32($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $1_1 = HEAPU16[($2_1 + ($1_1 << 1 | 0) | 0) >> 1] | 0;

                                    return (($0_1 | 0) == (7 | 0) ? $1_1 & 65532 | 0 : $1_1) << 16 >> 16 | 0;

                                }



                                function $33($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0, i64toi32_i32$0 = 0, $9_1 = 0, i64toi32_i32$1 = 0, $11_1 = 0, $8_1 = 0,

                                        $12_1 = 0, $13_1 = 0, $14_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0,

                                        $10_1 = 0, $126_1 = 0, $224_1 = 0, $267 = 0, $293 = 0, $296 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $7_1 = global$0 - 64 | 0;

                                    global$0 = $7_1;

                                    $8_1 = HEAP32[($4_1 + 64 | 0) >> 2] | 0;

                                    $9_1 = HEAP32[($4_1 + 44 | 0) >> 2] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (!$2_1) {

                                                break label$2

                                            }

                                            $4_1 = 0;

                                            label$3 : while (1) {

                                                $3_1 = $4_1 << 1 | 0;

                                                (wasm2js_i32$0 = $7_1 + $3_1 | 0, wasm2js_i32$1 = $183(Math_imul(HEAP16[($9_1 + $3_1 | 0) >> 1] | 0, 3277) >> 15 | 0 | 0, (Math_imul(HEAP16[(($0_1 + $3_1 | 0) + 20 | 0) >> 1] | 0, 29491) >>> 15 | 0) << 16 >> 16 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                $4_1 = $4_1 + 1 | 0;

                                                if (($4_1 | 0) != (10 | 0)) {

                                                    continue label$3

                                                }

                                                break label$3;

                                            }

                                            ;

                                            $4_1 = 0;

                                            label$4 : {

                                                if (($1_1 | 0) != (8 | 0)) {

                                                    break label$4

                                                }

                                                label$5 : while (1) {

                                                    $3_1 = $4_1 << 1 | 0;

                                                    $1_1 = $0_1 + $3_1 | 0;

                                                    $2_1 = $183(HEAP16[($9_1 + $3_1 | 0) >> 1] | 0 | 0, HEAP16[$1_1 >> 1] | 0 | 0, $6_1 | 0) | 0;

                                                    (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $224(HEAP16[($7_1 + $3_1 | 0) >> 1] | 0 | 0, $2_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $4_1 = $4_1 + 1 | 0;

                                                    if (($4_1 | 0) != (10 | 0)) {

                                                        continue label$5

                                                    }

                                                    break label$1;

                                                }

                                                ;

                                            }

                                            label$6 : while (1) {

                                                label$7 : {

                                                    label$8 : {

                                                        $3_1 = $4_1 << 1 | 0;

                                                        $1_1 = $0_1 + $3_1 | 0;

                                                        $2_1 = Math_imul(HEAP16[($8_1 + $3_1 | 0) >> 1] | 0, HEAP16[$1_1 >> 1] | 0);

                                                        if (($2_1 | 0) >= (1073741824 | 0)) {

                                                            break label$8

                                                        }

                                                        $2_1 = $2_1 >> 15 | 0;

                                                        break label$7;

                                                    }

                                                    HEAP32[$6_1 >> 2] = 1;

                                                    $2_1 = 32767;

                                                }

                                                $2_1 = $183(HEAP16[($9_1 + $3_1 | 0) >> 1] | 0 | 0, $2_1 << 16 >> 16 | 0, $6_1 | 0) | 0;

                                                (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $224(HEAP16[($7_1 + $3_1 | 0) >> 1] | 0 | 0, $2_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                $4_1 = $4_1 + 1 | 0;

                                                if (($4_1 | 0) != (10 | 0)) {

                                                    continue label$6

                                                }

                                                break label$1;

                                            }

                                            ;

                                        }

                                        $10_1 = HEAP32[($4_1 + 12 | 0) >> 2] | 0;

                                        $11_1 = HEAP32[($4_1 + 4 | 0) >> 2] | 0;

                                        label$9 : {

                                            label$10 : {

                                                $12_1 = $1_1 >>> 0 < 2 >>> 0;

                                                if (!$12_1) {

                                                    break label$10

                                                }

                                                $13_1 = HEAP32[($4_1 + 52 | 0) >> 2] | 0;

                                                $4_1 = 508;

                                                $2_1 = 765;

                                                break label$9;

                                            }

                                            $13_1 = HEAP32[($4_1 + 20 | 0) >> 2] | 0;

                                            $126_1 = HEAP32[($4_1 + 56 | 0) >> 2] | 0;

                                            $4_1 = ($1_1 | 0) == (5 | 0);

                                            $11_1 = $4_1 ? $126_1 : $11_1;

                                            $2_1 = $4_1 ? 1533 : 765;

                                            $4_1 = 2044;

                                        }

                                        $14_1 = Math_imul(HEAPU16[$3_1 >> 1] | 0, 3) << 16 >> 16;

                                        $2_1 = $11_1 + ((($14_1 | 0) < ($2_1 | 0) ? $14_1 : $2_1) << 1 | 0) | 0;

                                        HEAP16[($7_1 + 32 | 0) >> 1] = HEAPU16[$2_1 >> 1] | 0;

                                        HEAP16[($7_1 + 34 | 0) >> 1] = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 36 | 0) >> 1] = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        $2_1 = Math_imul((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << $12_1 | 0, 3) << 16 >> 16;

                                        $2_1 = $10_1 + ((($2_1 | 0) < (1533 | 0) ? $2_1 : 1533) << 1 | 0) | 0;

                                        HEAP16[($7_1 + 38 | 0) >> 1] = HEAPU16[$2_1 >> 1] | 0;

                                        HEAP16[($7_1 + 40 | 0) >> 1] = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 42 | 0) >> 1] = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        $3_1 = ((HEAPU16[($3_1 + 4 | 0) >> 1] | 0) << 2 | 0) << 16 >> 16;

                                        $4_1 = $13_1 + ((($3_1 | 0) < ($4_1 | 0) ? $3_1 : $4_1) << 1 | 0) | 0;

                                        HEAP16[($7_1 + 44 | 0) >> 1] = HEAPU16[$4_1 >> 1] | 0;

                                        HEAP16[($7_1 + 46 | 0) >> 1] = HEAPU16[($4_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 48 | 0) >> 1] = HEAPU16[($4_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 50 | 0) >> 1] = HEAPU16[($4_1 + 6 | 0) >> 1] | 0;

                                        $4_1 = 0;

                                        label$11 : {

                                            if (($1_1 | 0) != (8 | 0)) {

                                                break label$11

                                            }

                                            label$12 : while (1) {

                                                $3_1 = $4_1 << 1 | 0;

                                                $1_1 = $0_1 + $3_1 | 0;

                                                $2_1 = $183(HEAP16[($9_1 + $3_1 | 0) >> 1] | 0 | 0, HEAP16[$1_1 >> 1] | 0 | 0, $6_1 | 0) | 0;

                                                $224_1 = $7_1 + $3_1 | 0;

                                                $3_1 = HEAP16[(($7_1 + 32 | 0) + $3_1 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $224_1, wasm2js_i32$1 = $183($3_1 | 0, $2_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                HEAP16[$1_1 >> 1] = $3_1;

                                                $4_1 = $4_1 + 1 | 0;

                                                if (($4_1 | 0) != (10 | 0)) {

                                                    continue label$12

                                                }

                                                break label$1;

                                            }

                                            ;

                                        }

                                        label$13 : while (1) {

                                            label$14 : {

                                                label$15 : {

                                                    $3_1 = $4_1 << 1 | 0;

                                                    $1_1 = $0_1 + $3_1 | 0;

                                                    $2_1 = Math_imul(HEAP16[($8_1 + $3_1 | 0) >> 1] | 0, HEAP16[$1_1 >> 1] | 0);

                                                    if (($2_1 | 0) >= (1073741824 | 0)) {

                                                        break label$15

                                                    }

                                                    $2_1 = $2_1 >> 15 | 0;

                                                    break label$14;

                                                }

                                                HEAP32[$6_1 >> 2] = 1;

                                                $2_1 = 32767;

                                            }

                                            $2_1 = $183(HEAP16[($9_1 + $3_1 | 0) >> 1] | 0 | 0, $2_1 << 16 >> 16 | 0, $6_1 | 0) | 0;

                                            $267 = $7_1 + $3_1 | 0;

                                            $3_1 = HEAP16[(($7_1 + 32 | 0) + $3_1 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $267, wasm2js_i32$1 = $183($3_1 | 0, $2_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            HEAP16[$1_1 >> 1] = $3_1;

                                            $4_1 = $4_1 + 1 | 0;

                                            if (($4_1 | 0) != (10 | 0)) {

                                                continue label$13

                                            }

                                            break label$13;

                                        }

                                        ;

                                    }

                                    $218($7_1 | 0, 205 | 0, 10 | 0, $6_1 | 0);

                                    $22_1 = $0_1 + 36 | 0;

                                    $23_1 = HEAP32[($7_1 + 16 | 0) >> 2] | 0;

                                    HEAP16[$22_1 >> 1] = $23_1;

                                    HEAP16[($22_1 + 2 | 0) >> 1] = $23_1 >>> 16 | 0;

                                    i64toi32_i32$0 = HEAP32[($7_1 + 8 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($7_1 + 12 | 0) >> 2] | 0;

                                    $293 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 28 | 0;

                                    $24_1 = $293;

                                    HEAP16[i64toi32_i32$0 >> 1] = $24_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $24_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$1 = HEAP32[$7_1 >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($7_1 + 4 | 0) >> 2] | 0;

                                    $296 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $25_1 = $296;

                                    HEAP16[($0_1 + 20 | 0) >> 1] = $25_1;

                                    HEAP16[($0_1 + 22 | 0) >> 1] = $25_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 24 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($0_1 + 26 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $206($7_1 | 0, $5_1 | 0, 10 | 0, $6_1 | 0);

                                    global$0 = $7_1 + 64 | 0;

                                }



                                function $34($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $9_1 = 0, $10_1 = 0,

                                        $11_1 = 0, $12_1 = 0, $13_1 = 0, $3_1 = 0, $3$hi = 0, $21_1 = 0;

                                    $1_1 = $2_1 + Math_imul($1_1, 20) | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$0 = HEAPU16[$1_1 >> 1] | 0 | ((HEAPU16[($1_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($1_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $3_1 = i64toi32_i32$0;

                                    $3$hi = i64toi32_i32$1;

                                    i64toi32_i32$2 = $1_1 + 8 | 0;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $9_1 = $1_1 + 16 | 0;

                                    $10_1 = $0_1 + 16 | 0;

                                    $11_1 = HEAPU16[$9_1 >> 1] | 0 | ((HEAPU16[($9_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$10_1 >> 1] = $11_1;

                                    HEAP16[($10_1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                    $21_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1 + 8 | 0;

                                    $12_1 = $21_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $12_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = $3$hi;

                                    i64toi32_i32$1 = $0_1;

                                    $13_1 = $3_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $13_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $13_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                }



                                function $35($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0, $10_1 = 0, $9_1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $8_1 = 0,

                                        $19_1 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $11_1 = 0, $12_1 = 0, $76_1 = 0,

                                        $289 = 0, $318 = 0, $321 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $7_1 = global$0 - 128 | 0;

                                    global$0 = $7_1;

                                    $8_1 = HEAP32[($3_1 + 48 | 0) >> 2] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (!$1_1) {

                                                break label$2

                                            }

                                            $2_1 = 0;

                                            label$3 : while (1) {

                                                $3_1 = $2_1 << 1 | 0;

                                                $9_1 = $8_1 + $3_1 | 0;

                                                $1_1 = $0_1 + $3_1 | 0;

                                                $10_1 = $183(Math_imul(HEAP16[$9_1 >> 1] | 0, 1639) >> 15 | 0 | 0, (Math_imul(HEAP16[($1_1 + 20 | 0) >> 1] | 0, 31128) >>> 15 | 0) << 16 >> 16 | 0, $6_1 | 0) | 0;

                                                HEAP16[($7_1 + $3_1 | 0) >> 1] = $10_1;

                                                HEAP16[(($7_1 + 32 | 0) + $3_1 | 0) >> 1] = $10_1;

                                                (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $224($10_1 | 0, $183(HEAP16[$9_1 >> 1] | 0 | 0, (Math_imul(HEAP16[$1_1 >> 1] | 0, 21299) >>> 15 | 0) << 16 >> 16 | 0, $6_1 | 0) | 0 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                $2_1 = $2_1 + 1 | 0;

                                                if (($2_1 | 0) != (10 | 0)) {

                                                    continue label$3

                                                }

                                                break label$1;

                                            }

                                            ;

                                        }

                                        $11_1 = HEAP32[($3_1 + 32 | 0) >> 2] | 0;

                                        $12_1 = HEAP32[($3_1 + 28 | 0) >> 2] | 0;

                                        $1_1 = HEAP32[($3_1 + 24 | 0) >> 2] | 0;

                                        $10_1 = HEAP32[($3_1 + 16 | 0) >> 2] | 0;

                                        $76_1 = HEAP32[($3_1 + 8 | 0) >> 2] | 0;

                                        $3_1 = HEAP16[$2_1 >> 1] | 0;

                                        $3_1 = $76_1 + (((($3_1 + 8192 | 0) & 65535 | 0) >>> 0 < 16384 >>> 0 ? $3_1 << 2 | 0 : ($3_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 << 1 | 0) | 0;

                                        HEAP16[($7_1 + 96 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                        HEAP16[($7_1 + 98 | 0) >> 1] = HEAPU16[($3_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 64 | 0) >> 1] = HEAPU16[($3_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 66 | 0) >> 1] = HEAPU16[($3_1 + 6 | 0) >> 1] | 0;

                                        $3_1 = HEAP16[($2_1 + 2 | 0) >> 1] | 0;

                                        $3_1 = $10_1 + (((($3_1 + 8192 | 0) & 65535 | 0) >>> 0 < 16384 >>> 0 ? $3_1 << 2 | 0 : ($3_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 << 1 | 0) | 0;

                                        HEAP16[($7_1 + 100 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                        HEAP16[($7_1 + 102 | 0) >> 1] = HEAPU16[($3_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 68 | 0) >> 1] = HEAPU16[($3_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 70 | 0) >> 1] = HEAPU16[($3_1 + 6 | 0) >> 1] | 0;

                                        $10_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        $3_1 = $10_1 << 16 >> 16;

                                        $9_1 = $3_1 >> 1 | 0;

                                        $3_1 = $1_1 + ((($9_1 + 8192 | 0) >>> 0 < 16384 >>> 0 ? $9_1 << 2 | 0 : ($3_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 << 1 | 0) | 0;

                                        $1_1 = HEAPU16[$3_1 >> 1] | 0;

                                        label$4 : {

                                            label$5 : {

                                                if ($10_1 & 1 | 0) {

                                                    break label$5

                                                }

                                                $10_1 = HEAPU16[($3_1 + 6 | 0) >> 1] | 0;

                                                $9_1 = HEAPU16[($3_1 + 4 | 0) >> 1] | 0;

                                                $3_1 = HEAPU16[($3_1 + 2 | 0) >> 1] | 0;

                                                break label$4;

                                            }

                                            $10_1 = HEAPU16[($3_1 + 6 | 0) >> 1] | 0;

                                            $10_1 = ($10_1 | 0) == (32768 | 0) ? 32767 : 0 - $10_1 | 0;

                                            $9_1 = HEAPU16[($3_1 + 4 | 0) >> 1] | 0;

                                            $9_1 = ($9_1 | 0) == (32768 | 0) ? 32767 : 0 - $9_1 | 0;

                                            $3_1 = HEAPU16[($3_1 + 2 | 0) >> 1] | 0;

                                            $3_1 = ($3_1 | 0) == (32768 | 0) ? 32767 : 0 - $3_1 | 0;

                                            $1_1 = ($1_1 & 65535 | 0 | 0) == (32768 | 0) ? 32767 : 0 - $1_1 | 0;

                                        }

                                        HEAP16[($7_1 + 106 | 0) >> 1] = $3_1;

                                        HEAP16[($7_1 + 104 | 0) >> 1] = $1_1;

                                        HEAP16[($7_1 + 74 | 0) >> 1] = $10_1;

                                        HEAP16[($7_1 + 72 | 0) >> 1] = $9_1;

                                        $3_1 = HEAP16[($2_1 + 6 | 0) >> 1] | 0;

                                        $3_1 = $12_1 + (((($3_1 + 8192 | 0) & 65535 | 0) >>> 0 < 16384 >>> 0 ? $3_1 << 2 | 0 : ($3_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 << 1 | 0) | 0;

                                        HEAP16[($7_1 + 108 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                        HEAP16[($7_1 + 110 | 0) >> 1] = HEAPU16[($3_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 76 | 0) >> 1] = HEAPU16[($3_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 78 | 0) >> 1] = HEAPU16[($3_1 + 6 | 0) >> 1] | 0;

                                        $3_1 = HEAP16[($2_1 + 8 | 0) >> 1] | 0;

                                        $3_1 = $11_1 + (((($3_1 + 8192 | 0) & 65535 | 0) >>> 0 < 16384 >>> 0 ? $3_1 << 2 | 0 : ($3_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 << 1 | 0) | 0;

                                        HEAP16[($7_1 + 112 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                        HEAP16[($7_1 + 114 | 0) >> 1] = HEAPU16[($3_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 80 | 0) >> 1] = HEAPU16[($3_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($7_1 + 82 | 0) >> 1] = HEAPU16[($3_1 + 6 | 0) >> 1] | 0;

                                        $2_1 = 0;

                                        label$6 : while (1) {

                                            $3_1 = $2_1 << 1 | 0;

                                            $10_1 = $0_1 + $3_1 | 0;

                                            $1_1 = $183(HEAP16[($8_1 + $3_1 | 0) >> 1] | 0 | 0, (Math_imul(HEAP16[$10_1 >> 1] | 0, 21299) >>> 15 | 0) << 16 >> 16 | 0, $6_1 | 0) | 0;

                                            (wasm2js_i32$0 = ($7_1 + 32 | 0) + $3_1 | 0, wasm2js_i32$1 = $183(HEAP16[(($7_1 + 96 | 0) + $3_1 | 0) >> 1] | 0 | 0, $1_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $289 = $7_1 + $3_1 | 0;

                                            $3_1 = HEAP16[(($7_1 + 64 | 0) + $3_1 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $289, wasm2js_i32$1 = $183($3_1 | 0, $1_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            HEAP16[$10_1 >> 1] = $3_1;

                                            $2_1 = $2_1 + 1 | 0;

                                            if (($2_1 | 0) != (10 | 0)) {

                                                continue label$6

                                            }

                                            break label$6;

                                        }

                                        ;

                                    }

                                    $218($7_1 + 32 | 0 | 0, 205 | 0, 10 | 0, $6_1 | 0);

                                    $218($7_1 | 0, 205 | 0, 10 | 0, $6_1 | 0);

                                    $19_1 = $0_1 + 36 | 0;

                                    $20_1 = HEAP32[($7_1 + 16 | 0) >> 2] | 0;

                                    HEAP16[$19_1 >> 1] = $20_1;

                                    HEAP16[($19_1 + 2 | 0) >> 1] = $20_1 >>> 16 | 0;

                                    i64toi32_i32$0 = HEAP32[($7_1 + 8 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($7_1 + 12 | 0) >> 2] | 0;

                                    $318 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 28 | 0;

                                    $21_1 = $318;

                                    HEAP16[i64toi32_i32$0 >> 1] = $21_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $21_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$1 = HEAP32[$7_1 >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($7_1 + 4 | 0) >> 2] | 0;

                                    $321 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $22_1 = $321;

                                    HEAP16[(i64toi32_i32$1 + 20 | 0) >> 1] = $22_1;

                                    HEAP16[(i64toi32_i32$1 + 22 | 0) >> 1] = $22_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 24 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 26 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $206($7_1 + 32 | 0 | 0, $4_1 | 0, 10 | 0, $6_1 | 0);

                                    $206($7_1 | 0, $5_1 | 0, 10 | 0, $6_1 | 0);

                                    global$0 = $7_1 + 128 | 0;

                                }



                                function $36($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $9_1 = 0, $10_1 = 0,

                                        $11_1 = 0, $12_1 = 0, $13_1 = 0, $14_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0,

                                        $2_1 = 0, $2$hi = 0, $3_1 = 0, $3$hi = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $9_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $9_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $9_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $10_1 = i64toi32_i32$1 + 16 | 0;

                                    $11_1 = 0;

                                    HEAP16[$10_1 >> 1] = $11_1;

                                    HEAP16[($10_1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                    i64toi32_i32$1 = i64toi32_i32$1 + 8 | 0;

                                    i64toi32_i32$0 = 0;

                                    $12_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $12_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1 + 8 | 0;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $2_1 = i64toi32_i32$0;

                                    $2$hi = i64toi32_i32$1;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $3_1 = i64toi32_i32$1;

                                    $3$hi = i64toi32_i32$0;

                                    $13_1 = i64toi32_i32$2 + 16 | 0;

                                    $14_1 = $0_1 + 36 | 0;

                                    $15_1 = HEAPU16[$13_1 >> 1] | 0 | ((HEAPU16[($13_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$14_1 >> 1] = $15_1;

                                    HEAP16[($14_1 + 2 | 0) >> 1] = $15_1 >>> 16 | 0;

                                    i64toi32_i32$0 = $2$hi;

                                    i64toi32_i32$1 = $0_1 + 28 | 0;

                                    $16_1 = $2_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $16_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $16_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = $3$hi;

                                    i64toi32_i32$1 = $0_1;

                                    $17_1 = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 20 | 0) >> 1] = $17_1;

                                    HEAP16[(i64toi32_i32$1 + 22 | 0) >> 1] = $17_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 24 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 26 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $37($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $1_1 = 0, $3_1 = 0, $4_1 = 0, $2_1 = 0,

                                        $3$hi = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13_1 = 0, $14_1 = 0,

                                        $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0, $4$hi = 0,

                                        $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0,

                                        $28_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[($0_1 + 392 | 0) >> 1] = 0;

                                    HEAP16[($0_1 + 374 | 0) >> 1] = 0;

                                    HEAP16[($0_1 + 212 | 0) >> 1] = 0;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 983061e3;

                                    HEAP32[(i64toi32_i32$1 + 12 | 0) >> 2] = 1703966e3;

                                    HEAP32[(i64toi32_i32$1 + 16 | 0) >> 2] = i64toi32_i32$0;

                                    HEAP32[(i64toi32_i32$1 + 8 | 0) >> 2] = 1887529304;

                                    i64toi32_i32$0 = 229379500;

                                    HEAP32[i64toi32_i32$1 >> 2] = 536870912;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$0 = 334761308;

                                    HEAP32[(i64toi32_i32$1 + 52 | 0) >> 2] = 136119656;

                                    HEAP32[(i64toi32_i32$1 + 56 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$1 = i64toi32_i32$1 + 44 | 0;

                                    i64toi32_i32$0 = -1703891464;

                                    HEAP32[i64toi32_i32$1 >> 2] = -982982464;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$1 = $0_1 + 36 | 0;

                                    i64toi32_i32$0 = 8e3;

                                    HEAP32[i64toi32_i32$1 >> 2] = 983061e3;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$1 = $0_1 + 28 | 0;

                                    i64toi32_i32$0 = 1703966e3;

                                    HEAP32[i64toi32_i32$1 >> 2] = -1703891464;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$1 = $0_1 + 20 | 0;

                                    i64toi32_i32$0 = -982982464;

                                    HEAP32[i64toi32_i32$1 >> 2] = 8e3;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    $1_1 = $0_1 + 60 | 0;

                                    i64toi32_i32$1 = $1_1;

                                    i64toi32_i32$0 = 726935175;

                                    HEAP32[i64toi32_i32$1 >> 2] = 532290134;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    $2_1 = $0_1 + 68 | 0;

                                    HEAP32[$2_1 >> 2] = 897921450;

                                    $9_1 = $0_1 + 88 | 0;

                                    $10_1 = 897921450;

                                    HEAP16[$9_1 >> 1] = $10_1;

                                    HEAP16[($9_1 + 2 | 0) >> 1] = $10_1 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 80 | 0;

                                    i64toi32_i32$0 = 726935175;

                                    $11_1 = 532290134;

                                    HEAP16[i64toi32_i32$1 >> 1] = $11_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 72 | 0;

                                    i64toi32_i32$0 = 334761308;

                                    $12_1 = 136119656;

                                    HEAP16[i64toi32_i32$1 >> 1] = $12_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $13_1 = $0_1 + 108 | 0;

                                    $14_1 = 897921450;

                                    HEAP16[$13_1 >> 1] = $14_1;

                                    HEAP16[($13_1 + 2 | 0) >> 1] = $14_1 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 100 | 0;

                                    i64toi32_i32$0 = 726935175;

                                    $15_1 = 532290134;

                                    HEAP16[i64toi32_i32$1 >> 1] = $15_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $15_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 92 | 0;

                                    i64toi32_i32$0 = 334761308;

                                    $16_1 = 136119656;

                                    HEAP16[i64toi32_i32$1 >> 1] = $16_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $16_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $17_1 = $0_1 + 128 | 0;

                                    $18_1 = 897921450;

                                    HEAP16[$17_1 >> 1] = $18_1;

                                    HEAP16[($17_1 + 2 | 0) >> 1] = $18_1 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 120 | 0;

                                    i64toi32_i32$0 = 726935175;

                                    $19_1 = 532290134;

                                    HEAP16[i64toi32_i32$1 >> 1] = $19_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $19_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 112 | 0;

                                    i64toi32_i32$0 = 334761308;

                                    $20_1 = 136119656;

                                    HEAP16[i64toi32_i32$1 >> 1] = $20_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $20_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = HEAPU16[($0_1 + 52 | 0) >> 1] | 0 | ((HEAPU16[($0_1 + 54 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[($0_1 + 56 | 0) >> 1] | 0 | ((HEAPU16[($0_1 + 58 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $3_1 = i64toi32_i32$0;

                                    $3$hi = i64toi32_i32$1;

                                    i64toi32_i32$0 = $0_1 + 132 | 0;

                                    HEAP16[i64toi32_i32$0 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$1 = HEAPU16[$1_1 >> 1] | 0 | ((HEAPU16[($1_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($1_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $4_1 = i64toi32_i32$1;

                                    $4$hi = i64toi32_i32$0;

                                    i64toi32_i32$1 = $0_1 + 140 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $1_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $21_1 = $0_1 + 148 | 0;

                                    HEAP16[$21_1 >> 1] = $1_1;

                                    HEAP16[($21_1 + 2 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    i64toi32_i32$0 = $3$hi;

                                    i64toi32_i32$1 = $0_1 + 152 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = $4$hi;

                                    i64toi32_i32$1 = $0_1 + 160 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $22_1 = $0_1 + 168 | 0;

                                    HEAP16[$22_1 >> 1] = $1_1;

                                    HEAP16[($22_1 + 2 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    i64toi32_i32$0 = $3$hi;

                                    i64toi32_i32$1 = $0_1 + 172 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = $4$hi;

                                    i64toi32_i32$1 = $0_1 + 180 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $23_1 = $0_1 + 188 | 0;

                                    HEAP16[$23_1 >> 1] = $1_1;

                                    HEAP16[($23_1 + 2 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    $24_1 = $0_1 + 208 | 0;

                                    HEAP16[$24_1 >> 1] = $1_1;

                                    HEAP16[($24_1 + 2 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 200 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = $3$hi;

                                    i64toi32_i32$1 = $0_1 + 192 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $229($0_1 + 214 | 0 | 0, 0 | 0, 160 | 0) | 0;

                                    HEAP16[($0_1 + 412 | 0) >> 1] = 0;

                                    HEAP32[($0_1 + 408 | 0) >> 2] = 1;

                                    $25_1 = 0;

                                    HEAP16[($0_1 + 402 | 0) >> 1] = $25_1;

                                    HEAP16[($0_1 + 404 | 0) >> 1] = $25_1 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 32767;

                                    $26_1 = 458752;

                                    HEAP16[(i64toi32_i32$1 + 394 | 0) >> 1] = $26_1;

                                    HEAP16[(i64toi32_i32$1 + 396 | 0) >> 1] = $26_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 398 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 400 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = i64toi32_i32$1 + 384 | 0;

                                    i64toi32_i32$0 = 229379500;

                                    $27_1 = 229379500;

                                    HEAP16[i64toi32_i32$1 >> 1] = $27_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $27_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 229379500;

                                    $28_1 = 229379500;

                                    HEAP16[(i64toi32_i32$1 + 376 | 0) >> 1] = $28_1;

                                    HEAP16[(i64toi32_i32$1 + 378 | 0) >> 1] = $28_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 380 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 382 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $38($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    var $13_1 = 0, $15_1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $12_1 = 0,

                                        $16_1 = 0, $14_1 = 0, $28_1 = 0, i64toi32_i32$2 = 0, $19_1 = 0, $29_1 = 0,

                                        $30_1 = 0, $31_1 = 0, $20_1 = 0, $32_1 = 0, $17_1 = 0, $21_1 = 0, $22_1 = 0,

                                        $23_1 = 0, $24_1 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0, $33_1 = 0, $34_1 = 0,

                                        $67_1 = 0, $68_1 = 0, $69_1 = 0, $70_1 = 0, $71_1 = 0, $72_1 = 0, $73_1 = 0,

                                        $74_1 = 0, $75_1 = 0, $76_1 = 0, $77_1 = 0, $78_1 = 0, $18_1 = 0, $80_1 = 0,

                                        $81_1 = 0, $82_1 = 0, $83_1 = 0, $84_1 = 0, $85_1 = 0, $86_1 = 0, $87_1 = 0,

                                        $88_1 = 0, $89_1 = 0, $90_1 = 0, $91_1 = 0, $92_1 = 0, $93_1 = 0, $35_1 = 0,

                                        $35$hi = 0, $79_1 = 0, $579 = 0, $593 = 0, $667 = 0, $677 = 0, $735 = 0,

                                        $755 = 0, $984 = 0, $987 = 0, $995 = 0, $1054 = 0, $1057 = 0, $1081 = 0,

                                        $1085 = 0, $1088 = 0, $1092 = 0, $1096 = 0, $1099 = 0, $1102 = 0, $1106 = 0,

                                        $1110 = 0, $1113 = 0, $1117 = 0, $1121 = 0, $1285 = 0, $1592 = 0, $1597 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $12_1 = global$0 - 336 | 0;

                                    global$0 = $12_1;

                                    label$1 : {

                                        if (!(HEAPU16[($0_1 + 404 | 0) >> 1] | 0)) {

                                            break label$1

                                        }

                                        if (!(HEAPU16[($0_1 + 400 | 0) >> 1] | 0)) {

                                            break label$1

                                        }

                                        HEAP16[($0_1 + 394 | 0) >> 1] = HEAPU16[((global$4 + 65616 | 0) + ($6_1 << 1 | 0) | 0) >> 1] | 0;

                                        $13_1 = $0_1 + 52 | 0;

                                        $14_1 = HEAP16[($0_1 + 212 | 0) >> 1] | 0;

                                        $15_1 = $13_1 + ($14_1 << 1 | 0) | 0;

                                        i64toi32_i32$2 = $15_1 + 8 | 0;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $35_1 = i64toi32_i32$0;

                                        $35$hi = i64toi32_i32$1;

                                        $80_1 = $15_1 + 16 | 0;

                                        $16_1 = HEAPU16[$80_1 >> 1] | 0 | ((HEAPU16[($80_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $14_1 = $14_1 + 10 | 0;

                                        $13_1 = $13_1 + ((($14_1 & 65535 | 0 | 0) == (80 | 0) ? 0 : $14_1) << 16 >> 16 << 1 | 0) | 0;

                                        i64toi32_i32$2 = $15_1;

                                        i64toi32_i32$1 = HEAPU16[$15_1 >> 1] | 0 | ((HEAPU16[($15_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[($15_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($15_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $79_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $13_1;

                                        $81_1 = $79_1;

                                        HEAP16[$13_1 >> 1] = $81_1;

                                        HEAP16[($13_1 + 2 | 0) >> 1] = $81_1 >>> 16 | 0;

                                        HEAP16[($13_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[($13_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $82_1 = $13_1 + 16 | 0;

                                        HEAP16[$82_1 >> 1] = $16_1;

                                        HEAP16[($82_1 + 2 | 0) >> 1] = $16_1 >>> 16 | 0;

                                        i64toi32_i32$0 = $35$hi;

                                        i64toi32_i32$1 = $13_1 + 8 | 0;

                                        $83_1 = $35_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $83_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $83_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $15_1 = $0_1 + 376 | 0;

                                        $13_1 = HEAP16[($0_1 + 392 | 0) >> 1] | 0;

                                        $14_1 = $13_1 + 1 | 0;

                                        HEAP16[($15_1 + ((($14_1 & 65535 | 0 | 0) == (8 | 0) ? 0 : $14_1) << 16 >> 16 << 1 | 0) | 0) >> 1] = HEAPU16[($15_1 + ($13_1 << 1 | 0) | 0) >> 1] | 0;

                                        HEAP16[($0_1 + 4 | 0) >> 1] = 0;

                                        $17_1 = 7;

                                        $18_1 = 0;

                                        $15_1 = 0;

                                        $19_1 = 0;

                                        $20_1 = 0;

                                        $21_1 = 0;

                                        $22_1 = 0;

                                        $23_1 = 0;

                                        $24_1 = 0;

                                        $25_1 = 0;

                                        $26_1 = 0;

                                        $27_1 = 0;

                                        label$2 : while (1) {

                                            $13_1 = $26_1;

                                            $14_1 = $25_1;

                                            $16_1 = $24_1;

                                            $28_1 = $23_1;

                                            $29_1 = $22_1;

                                            $30_1 = $21_1;

                                            $31_1 = $20_1;

                                            $32_1 = $19_1;

                                            $33_1 = $15_1;

                                            $34_1 = $17_1;

                                            $18_1 = $183($18_1 << 16 >> 16 | 0, (HEAP16[(($0_1 + ($34_1 << 1 | 0) | 0) + 376 | 0) >> 1] | 0) >> 3 | 0 | 0, $11_1 | 0) | 0;

                                            HEAP16[($0_1 + 4 | 0) >> 1] = $18_1;

                                            $19_1 = $27_1;

                                            $17_1 = Math_imul($34_1, 10) << 1 | 0;

                                            $15_1 = $17_1 + $0_1 | 0;

                                            $20_1 = HEAP16[($15_1 + 70 | 0) >> 1] | 0;

                                            $27_1 = $19_1 + $20_1 | 0;

                                            label$3 : {

                                                if (($19_1 ^ $20_1 | 0 | 0) < (0 | 0)) {

                                                    break label$3

                                                }

                                                if (($27_1 ^ $19_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$3

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $27_1 = ($19_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $19_1 = HEAP16[($15_1 + 68 | 0) >> 1] | 0;

                                            $26_1 = $13_1 + $19_1 | 0;

                                            label$4 : {

                                                if (($13_1 ^ $19_1 | 0 | 0) < (0 | 0)) {

                                                    break label$4

                                                }

                                                if (($26_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$4

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $26_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 66 | 0) >> 1] | 0;

                                            $25_1 = $14_1 + $13_1 | 0;

                                            label$5 : {

                                                if (($14_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$5

                                                }

                                                if (($25_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$5

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $25_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 64 | 0) >> 1] | 0;

                                            $24_1 = $16_1 + $13_1 | 0;

                                            label$6 : {

                                                if (($16_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$6

                                                }

                                                if (($24_1 ^ $16_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$6

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $24_1 = ($16_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 62 | 0) >> 1] | 0;

                                            $23_1 = $28_1 + $13_1 | 0;

                                            label$7 : {

                                                if (($28_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$7

                                                }

                                                if (($23_1 ^ $28_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$7

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $23_1 = ($28_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 60 | 0) >> 1] | 0;

                                            $22_1 = $29_1 + $13_1 | 0;

                                            label$8 : {

                                                if (($29_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$8

                                                }

                                                if (($22_1 ^ $29_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$8

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $22_1 = ($29_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 58 | 0) >> 1] | 0;

                                            $21_1 = $30_1 + $13_1 | 0;

                                            label$9 : {

                                                if (($30_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$9

                                                }

                                                if (($21_1 ^ $30_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$9

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $21_1 = ($30_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 56 | 0) >> 1] | 0;

                                            $20_1 = $31_1 + $13_1 | 0;

                                            label$10 : {

                                                if (($31_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$10

                                                }

                                                if (($20_1 ^ $31_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$10

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $20_1 = ($31_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[(($0_1 + ($17_1 | 2 | 0) | 0) + 52 | 0) >> 1] | 0;

                                            $19_1 = $32_1 + $13_1 | 0;

                                            label$11 : {

                                                if (($32_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$11

                                                }

                                                if (($19_1 ^ $32_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$11

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $19_1 = ($32_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 52 | 0) >> 1] | 0;

                                            $15_1 = $33_1 + $13_1 | 0;

                                            label$12 : {

                                                if (($33_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$12

                                                }

                                                if (($15_1 ^ $33_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$12

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $15_1 = ($33_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $17_1 = $34_1 + -1 | 0;

                                            if (($34_1 | 0) > (0 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                        HEAP16[($12_1 + 16 | 0) >> 1] = $26_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 18 | 0) >> 1] = $27_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 14 | 0) >> 1] = $25_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 12 | 0) >> 1] = $24_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 10 | 0) >> 1] = $23_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 8 | 0) >> 1] = $22_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 6 | 0) >> 1] = $21_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 4 | 0) >> 1] = $20_1 >>> 3 | 0;

                                        HEAP16[($12_1 + 2 | 0) >> 1] = $19_1 >>> 3 | 0;

                                        HEAP16[$12_1 >> 1] = $15_1 >>> 3 | 0;

                                        $206($12_1 | 0, $0_1 + 12 | 0 | 0, 10 | 0, $11_1 | 0);

                                        (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $224(HEAP16[($0_1 + 4 | 0) >> 1] | 0 | 0, HEAP16[($0_1 + 394 | 0) >> 1] | 0 | 0, $11_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;

                                        $227($0_1 + 214 | 0 | 0, $0_1 + 52 | 0 | 0, 160 | 0) | 0;

                                        $29_1 = 9;

                                        label$13 : while (1) {

                                            $16_1 = $29_1 << 1 | 0;

                                            $15_1 = $0_1 + $16_1 | 0;

                                            $14_1 = HEAP16[($15_1 + 354 | 0) >> 1] | 0;

                                            $28_1 = HEAP16[($15_1 + 334 | 0) >> 1] | 0;

                                            $13_1 = $14_1 + $28_1 | 0;

                                            label$14 : {

                                                if (($14_1 ^ $28_1 | 0 | 0) < (0 | 0)) {

                                                    break label$14

                                                }

                                                if (($13_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$14

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $13_1 = ($14_1 >> 15 | 0) ^ 2147483647 | 0;

                                            }

                                            $28_1 = HEAP16[($15_1 + 314 | 0) >> 1] | 0;

                                            $14_1 = $13_1 + $28_1 | 0;

                                            label$15 : {

                                                if (($13_1 ^ $28_1 | 0 | 0) < (0 | 0)) {

                                                    break label$15

                                                }

                                                if (($14_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$15

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $14_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $28_1 = HEAP16[($15_1 + 294 | 0) >> 1] | 0;

                                            $13_1 = $14_1 + $28_1 | 0;

                                            label$16 : {

                                                if (($14_1 ^ $28_1 | 0 | 0) < (0 | 0)) {

                                                    break label$16

                                                }

                                                if (($13_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$16

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $13_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $28_1 = HEAP16[($15_1 + 274 | 0) >> 1] | 0;

                                            $14_1 = $13_1 + $28_1 | 0;

                                            label$17 : {

                                                if (($13_1 ^ $28_1 | 0 | 0) < (0 | 0)) {

                                                    break label$17

                                                }

                                                if (($14_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$17

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $14_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $28_1 = HEAP16[($15_1 + 254 | 0) >> 1] | 0;

                                            $13_1 = $14_1 + $28_1 | 0;

                                            label$18 : {

                                                if (($14_1 ^ $28_1 | 0 | 0) < (0 | 0)) {

                                                    break label$18

                                                }

                                                if (($13_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$18

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $13_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $28_1 = HEAP16[($15_1 + 234 | 0) >> 1] | 0;

                                            $14_1 = $13_1 + $28_1 | 0;

                                            label$19 : {

                                                if (($13_1 ^ $28_1 | 0 | 0) < (0 | 0)) {

                                                    break label$19

                                                }

                                                if (($14_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$19

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $14_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = HEAP16[($15_1 + 214 | 0) >> 1] | 0;

                                            $15_1 = $14_1 + $13_1 | 0;

                                            label$20 : {

                                                if (($14_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                                    break label$20

                                                }

                                                if (($15_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$20

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $15_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $30_1 = (global$4 + 65648 | 0) + $16_1 | 0;

                                            $31_1 = $15_1 >>> 3 | 0;

                                            $13_1 = 7;

                                            label$21 : while (1) {

                                                label$22 : {

                                                    label$23 : {

                                                        $15_1 = $13_1;

                                                        $14_1 = ($0_1 + ((Math_imul($13_1, 10) + $29_1 | 0) << 1 | 0) | 0) + 214 | 0;

                                                        $13_1 = Math_imul(HEAP16[$30_1 >> 1] | 0, $224(HEAP16[$14_1 >> 1] | 0 | 0, $31_1 << 16 >> 16 | 0, $11_1 | 0) | 0);

                                                        if (($13_1 | 0) >= (1073741824 | 0)) {

                                                            break label$23

                                                        }

                                                        $13_1 = $13_1 >> 15 | 0;

                                                        break label$22;

                                                    }

                                                    HEAP32[$11_1 >> 2] = 1;

                                                    $13_1 = 32767;

                                                }

                                                $16_1 = $13_1 << 16 >> 16;

                                                $13_1 = ($16_1 >> 15 | 0) + $13_1 | 0;

                                                $13_1 = ($13_1 << 16 >> 16 >> 15 | 0) ^ $13_1 | 0;

                                                $28_1 = $13_1 << 16 >> 16;

                                                $13_1 = (($28_1 | 0) > (655 | 0) ? (($28_1 + 261489 | 0) >>> 2 | 0) + 655 | 0 : $13_1) << 16 >> 16;

                                                $13_1 = ($13_1 | 0) < (1310 | 0) ? $13_1 : 1310;

                                                HEAP16[$14_1 >> 1] = ($16_1 | 0) < (0 | 0) ? 0 - $13_1 | 0 : $13_1;

                                                $13_1 = $15_1 + -1 | 0;

                                                if ($15_1) {

                                                    continue label$21

                                                }

                                                break label$21;

                                            }

                                            ;

                                            $15_1 = ($29_1 | 0) > (0 | 0);

                                            $29_1 = $29_1 + -1 | 0;

                                            if ($15_1) {

                                                continue label$13

                                            }

                                            break label$13;

                                        }

                                        ;

                                    }

                                    label$24 : {

                                        if (!(HEAPU16[($0_1 + 400 | 0) >> 1] | 0)) {

                                            break label$24

                                        }

                                        i64toi32_i32$2 = $0_1;

                                        i64toi32_i32$0 = HEAP32[($0_1 + 12 | 0) >> 2] | 0;

                                        i64toi32_i32$1 = HEAP32[($0_1 + 16 | 0) >> 2] | 0;

                                        $579 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $0_1;

                                        HEAP32[($0_1 + 32 | 0) >> 2] = $579;

                                        HEAP32[($0_1 + 36 | 0) >> 2] = i64toi32_i32$1;

                                        $15_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($0_1 + 6 | 0) >> 1] = $15_1;

                                        HEAP32[($0_1 + 48 | 0) >> 2] = HEAP32[($0_1 + 28 | 0) >> 2] | 0;

                                        i64toi32_i32$2 = $0_1 + 20 | 0;

                                        i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                        i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                        $593 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $0_1 + 40 | 0;

                                        HEAP32[i64toi32_i32$1 >> 2] = $593;

                                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        label$25 : {

                                            if (!(HEAPU16[($0_1 + 402 | 0) >> 1] | 0)) {

                                                break label$25

                                            }

                                            $15_1 = HEAP16[$0_1 >> 1] | 0;

                                            HEAP16[$0_1 >> 1] = 0;

                                            label$26 : {

                                                $14_1 = ($15_1 | 0) < (32 | 0) ? $15_1 : 32;

                                                $16_1 = $14_1 << 10 | 0;

                                                if (($16_1 | 0) == (($14_1 << 26 | 0) >> 16 | 0 | 0)) {

                                                    break label$26

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $16_1 = ($15_1 | 0) > (0 | 0) ? 32767 : -32768;

                                            }

                                            $13_1 = $0_1 + 12 | 0;

                                            $15_1 = 16384;

                                            label$27 : {

                                                if (($14_1 | 0) < (2 | 0)) {

                                                    break label$27

                                                }

                                                $15_1 = $185(1024 | 0, $16_1 << 16 >> 16 | 0) | 0;

                                            }

                                            HEAP16[($0_1 + 2 | 0) >> 1] = $15_1;

                                            $34($2_1 | 0, HEAP16[$7_1 >> 1] | 0 | 0, HEAP32[($8_1 + 60 | 0) >> 2] | 0 | 0);

                                            $33($2_1 | 0, 8 | 0, 0 | 0, $7_1 + 2 | 0 | 0, $8_1 | 0, $13_1 | 0, $11_1 | 0);

                                            $84_1 = $2_1 + 16 | 0;

                                            $85_1 = 0;

                                            HEAP16[$84_1 >> 1] = $85_1;

                                            HEAP16[($84_1 + 2 | 0) >> 1] = $85_1 >>> 16 | 0;

                                            i64toi32_i32$1 = $2_1 + 8 | 0;

                                            i64toi32_i32$0 = 0;

                                            $86_1 = 0;

                                            HEAP16[i64toi32_i32$1 >> 1] = $86_1;

                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $86_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            i64toi32_i32$1 = $2_1;

                                            i64toi32_i32$0 = 0;

                                            $87_1 = 0;

                                            HEAP16[i64toi32_i32$1 >> 1] = $87_1;

                                            HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $87_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            $15_1 = HEAPU16[($7_1 + 8 | 0) >> 1] | 0;

                                            $15_1 = $15_1 ? ((($15_1 + -64 | 0) & 65535 | 0) >>> 0 < 65408 >>> 0 ? (($15_1 << 16 >> 16 | 0) > (0 | 0) ? 32767 : -32768) : $15_1 << 9 | 0) + -5120 | 0 : -32768;

                                            HEAP16[($0_1 + 4 | 0) >> 1] = $15_1;

                                            label$28 : {

                                                if (!(HEAPU16[($0_1 + 412 | 0) >> 1] | 0)) {

                                                    break label$28

                                                }

                                                if (HEAP32[($0_1 + 408 | 0) >> 2] | 0) {

                                                    break label$25

                                                }

                                            }

                                            $14_1 = $0_1 + 32 | 0;

                                            i64toi32_i32$2 = $13_1;

                                            i64toi32_i32$0 = HEAP32[$13_1 >> 2] | 0;

                                            i64toi32_i32$1 = HEAP32[($13_1 + 4 | 0) >> 2] | 0;

                                            $667 = i64toi32_i32$0;

                                            i64toi32_i32$0 = $14_1;

                                            HEAP32[i64toi32_i32$0 >> 2] = $667;

                                            HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;

                                            HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] = HEAP32[($13_1 + 16 | 0) >> 2] | 0;

                                            i64toi32_i32$2 = $13_1 + 8 | 0;

                                            i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                            i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                            $677 = i64toi32_i32$1;

                                            i64toi32_i32$1 = $14_1 + 8 | 0;

                                            HEAP32[i64toi32_i32$1 >> 2] = $677;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            HEAP16[($0_1 + 6 | 0) >> 1] = $15_1;

                                        }

                                        $15_1 = $15_1 << 16 >> 16;

                                        $13_1 = $15_1 >> 1 | 0;

                                        $15_1 = ($15_1 | 0) > (18001 | 0) ? 0 : (($13_1 | 0) > (-5436 | 0) ? $13_1 : -5436) + -9e3 | 0;

                                        HEAP16[($3_1 + 6 | 0) >> 1] = $15_1;

                                        HEAP16[($3_1 + 4 | 0) >> 1] = $15_1;

                                        HEAP16[($3_1 + 2 | 0) >> 1] = $15_1;

                                        HEAP16[$3_1 >> 1] = $15_1;

                                        $15_1 = Math_imul($15_1, 5443) >>> 15 | 0;

                                        HEAP16[($3_1 + 14 | 0) >> 1] = $15_1;

                                        HEAP16[($3_1 + 12 | 0) >> 1] = $15_1;

                                        HEAP16[($3_1 + 10 | 0) >> 1] = $15_1;

                                        HEAP16[($3_1 + 8 | 0) >> 1] = $15_1;

                                    }

                                    $15_1 = global$4;

                                    (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $183((Math_imul(HEAP16[($0_1 + 394 | 0) >> 1] | 0, 29491) >>> 15 | 0) << 16 >> 16 | 0, Math_imul(HEAP16[(($15_1 + 65616 | 0) + ($6_1 << 1 | 0) | 0) >> 1] | 0, 209728) >> 21 | 0 | 0, $11_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 394 | 0) >> 1] = wasm2js_i32$1;

                                    $15_1 = 32767;

                                    label$29 : {

                                        label$30 : {

                                            $13_1 = (HEAPU16[$0_1 >> 1] | 0) + 1 | 0;

                                            $735 = $13_1 << 10 | 0;

                                            $13_1 = $13_1 << 16 >> 16;

                                            $13_1 = Math_imul((($13_1 + 32 | 0) >>> 0 < 64 >>> 0 ? $735 : ($13_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16, HEAP16[($0_1 + 2 | 0) >> 1] | 0);

                                            if (($13_1 | 0) >= (1073741824 | 0)) {

                                                break label$30

                                            }

                                            $15_1 = $13_1 >> 15 | 0;

                                            break label$29;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                    }

                                    label$31 : {

                                        label$32 : {

                                            $755 = $15_1 << 4 | 0;

                                            $15_1 = $15_1 << 16 >> 16;

                                            $14_1 = ($15_1 | 0) > (1024 | 0) ? 16384 : ($15_1 | 0) < (-2048 | 0) ? -32768 : $755;

                                            $15_1 = $14_1 << 16 >> 16;

                                            $13_1 = Math_imul($15_1, HEAP16[($0_1 + 4 | 0) >> 1] | 0);

                                            if (($13_1 | 0) == (1073741824 | 0)) {

                                                break label$32

                                            }

                                            $13_1 = $13_1 << 1 | 0;

                                            break label$31;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $13_1 = 2147483647;

                                    }

                                    label$33 : {

                                        label$34 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 30 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$34

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$33;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 322 | 0) >> 1] = $16_1;

                                    label$35 : {

                                        label$36 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 28 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$36

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$35;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 320 | 0) >> 1] = $16_1;

                                    label$37 : {

                                        label$38 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 26 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$38

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$37;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 318 | 0) >> 1] = $16_1;

                                    label$39 : {

                                        label$40 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 24 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$40

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$39;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 316 | 0) >> 1] = $16_1;

                                    label$41 : {

                                        label$42 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 22 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$42

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$41;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 314 | 0) >> 1] = $16_1;

                                    label$43 : {

                                        label$44 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 20 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$44

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$43;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 312 | 0) >> 1] = $16_1;

                                    label$45 : {

                                        label$46 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 18 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$46

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$45;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 310 | 0) >> 1] = $16_1;

                                    label$47 : {

                                        label$48 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 16 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$48

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$47;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 308 | 0) >> 1] = $16_1;

                                    label$49 : {

                                        label$50 : {

                                            $16_1 = Math_imul(HEAP16[($0_1 + 14 | 0) >> 1] | 0, $15_1);

                                            if (($16_1 | 0) >= (1073741824 | 0)) {

                                                break label$50

                                            }

                                            $16_1 = $16_1 >> 15 | 0;

                                            break label$49;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $16_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 306 | 0) >> 1] = $16_1;

                                    label$51 : {

                                        label$52 : {

                                            $15_1 = Math_imul(HEAP16[($0_1 + 12 | 0) >> 1] | 0, $15_1);

                                            if (($15_1 | 0) >= (1073741824 | 0)) {

                                                break label$52

                                            }

                                            $15_1 = $15_1 >> 15 | 0;

                                            break label$51;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $15_1 = 32767;

                                    }

                                    HEAP16[($12_1 + 304 | 0) >> 1] = $15_1;

                                    $31_1 = 2147483647;

                                    label$53 : {

                                        label$54 : {

                                            $28_1 = (16384 - $14_1 | 0) << 16 >> 16;

                                            $15_1 = Math_imul(HEAP16[($0_1 + 6 | 0) >> 1] | 0, $28_1);

                                            if (($15_1 | 0) == (1073741824 | 0)) {

                                                break label$54

                                            }

                                            $31_1 = ($15_1 << 1 | 0) + $13_1 | 0;

                                            if (($15_1 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                break label$53

                                            }

                                            if (($31_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                break label$53

                                            }

                                            $31_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                    }

                                    $32_1 = $0_1 + 12 | 0;

                                    $13_1 = 9;

                                    label$55 : while (1) {

                                        $15_1 = $13_1;

                                        $13_1 = $13_1 << 1 | 0;

                                        $16_1 = ($12_1 + 304 | 0) + $13_1 | 0;

                                        $14_1 = HEAPU16[$16_1 >> 1] | 0;

                                        label$56 : {

                                            label$57 : {

                                                $13_1 = Math_imul(HEAP16[(($0_1 + $13_1 | 0) + 32 | 0) >> 1] | 0, $28_1);

                                                if (($13_1 | 0) >= (1073741824 | 0)) {

                                                    break label$57

                                                }

                                                $13_1 = $13_1 >> 15 | 0;

                                                break label$56;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 32767;

                                        }

                                        label$58 : {

                                            $13_1 = $183($14_1 << 16 >> 16 | 0, $13_1 << 16 >> 16 | 0, $11_1 | 0) | 0;

                                            $14_1 = $13_1 << 1 | 0;

                                            if (($14_1 | 0) == (($13_1 << 17 | 0) >> 16 | 0 | 0)) {

                                                break label$58

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $14_1 = ($13_1 | 0) > (0 | 0) ? 32767 : -32768;

                                        }

                                        HEAP16[$16_1 >> 1] = $14_1;

                                        $13_1 = $15_1 + -1 | 0;

                                        if ($15_1) {

                                            continue label$55

                                        }

                                        break label$55;

                                    }

                                    ;

                                    $15_1 = HEAPU16[($0_1 + 374 | 0) >> 1] | 0;

                                    $30_1 = $0_1 + 8 | 0;

                                    $13_1 = $12($30_1 | 0, 3 | 0) | 0;

                                    $207($12_1 + 304 | 0 | 0, $12_1 + 128 | 0 | 0, 10 | 0, $11_1 | 0);

                                    HEAP32[(($12_1 + 96 | 0) + 16 | 0) >> 2] = HEAP32[(($12_1 + 128 | 0) + 16 | 0) >> 2] | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 136 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 140 | 0) >> 2] | 0;

                                    $984 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $12_1;

                                    HEAP32[($12_1 + 104 | 0) >> 2] = $984;

                                    HEAP32[($12_1 + 108 | 0) >> 2] = i64toi32_i32$1;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 128 | 0) >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 132 | 0) >> 2] | 0;

                                    $987 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $12_1;

                                    HEAP32[($12_1 + 96 | 0) >> 2] = $987;

                                    HEAP32[($12_1 + 100 | 0) >> 2] = i64toi32_i32$0;

                                    $15_1 = Math_imul(($15_1 + -2457 | 0) << 16 >> 16, 9830);

                                    $995 = -32768 - (($15_1 >>> 12 | 0) & 1048568 | 0) | 0;

                                    $15_1 = $15_1 >> 15 | 0;

                                    $28_1 = (($15_1 | 0) < (1 | 0) ? 32767 : ($15_1 | 0) > (4096 | 0) ? 0 : $995) << 16 >> 16;

                                    $29_1 = Math_imul($13_1, 10);

                                    $13_1 = 9;

                                    label$59 : while (1) {

                                        $15_1 = $13_1;

                                        $13_1 = ($12_1 + 96 | 0) + ($13_1 << 1 | 0) | 0;

                                        $14_1 = HEAPU16[$13_1 >> 1] | 0;

                                        label$60 : {

                                            label$61 : {

                                                $16_1 = Math_imul(HEAP16[(($0_1 + (($29_1 + $15_1 | 0) << 1 | 0) | 0) + 214 | 0) >> 1] | 0, $28_1);

                                                if (($16_1 | 0) >= (1073741824 | 0)) {

                                                    break label$61

                                                }

                                                $16_1 = $16_1 >> 15 | 0;

                                                break label$60;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $16_1 = 32767;

                                        }

                                        (wasm2js_i32$0 = $13_1, wasm2js_i32$1 = $183($14_1 << 16 >> 16 | 0, $16_1 << 16 >> 16 | 0, $11_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $13_1 = $15_1 + -1 | 0;

                                        if ($15_1) {

                                            continue label$59

                                        }

                                        break label$59;

                                    }

                                    ;

                                    $218($12_1 + 128 | 0 | 0, 205 | 0, 10 | 0, $11_1 | 0);

                                    $218($12_1 + 96 | 0 | 0, 205 | 0, 10 | 0, $11_1 | 0);

                                    $88_1 = $2_1 + 36 | 0;

                                    $89_1 = HEAP32[($12_1 + 144 | 0) >> 2] | 0;

                                    HEAP16[$88_1 >> 1] = $89_1;

                                    HEAP16[($88_1 + 2 | 0) >> 1] = $89_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 136 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 140 | 0) >> 2] | 0;

                                    $1054 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $2_1 + 28 | 0;

                                    $90_1 = $1054;

                                    HEAP16[i64toi32_i32$0 >> 1] = $90_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $90_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 128 | 0) >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 132 | 0) >> 2] | 0;

                                    $1057 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $2_1;

                                    $91_1 = $1057;

                                    HEAP16[(i64toi32_i32$1 + 20 | 0) >> 1] = $91_1;

                                    HEAP16[(i64toi32_i32$1 + 22 | 0) >> 1] = $91_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 24 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 26 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $206($12_1 + 128 | 0 | 0, $12_1 + 304 | 0 | 0, 10 | 0, $11_1 | 0);

                                    $206($12_1 + 96 | 0 | 0, $12_1 + 64 | 0 | 0, 10 | 0, $11_1 | 0);

                                    $201($12_1 + 304 | 0 | 0, $12_1 + 272 | 0 | 0, $11_1 | 0);

                                    $201($12_1 + 64 | 0 | 0, $12_1 + 32 | 0 | 0, $11_1 | 0);

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAPU16[($12_1 + 286 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 288 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[($12_1 + 290 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 292 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $1081 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1 + 14 | 0;

                                    $67_1 = $1081;

                                    HEAP8[i64toi32_i32$0 >> 0] = $67_1;

                                    HEAP8[(i64toi32_i32$0 + 1 | 0) >> 0] = $67_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 2 | 0) >> 0] = $67_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 3 | 0) >> 0] = $67_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$0 + 4 | 0) >> 0] = i64toi32_i32$1;

                                    HEAP8[(i64toi32_i32$0 + 5 | 0) >> 0] = i64toi32_i32$1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 6 | 0) >> 0] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 7 | 0) >> 0] = i64toi32_i32$1 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 280 | 0) >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 284 | 0) >> 2] | 0;

                                    $1085 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $10_1 + 8 | 0;

                                    $68_1 = $1085;

                                    HEAP8[i64toi32_i32$1 >> 0] = $68_1;

                                    HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $68_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $68_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $68_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;

                                    HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 272 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 276 | 0) >> 2] | 0;

                                    $1088 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1;

                                    $69_1 = $1088;

                                    HEAP8[i64toi32_i32$0 >> 0] = $69_1;

                                    HEAP8[(i64toi32_i32$0 + 1 | 0) >> 0] = $69_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 2 | 0) >> 0] = $69_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 3 | 0) >> 0] = $69_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$0 + 4 | 0) >> 0] = i64toi32_i32$1;

                                    HEAP8[(i64toi32_i32$0 + 5 | 0) >> 0] = i64toi32_i32$1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 6 | 0) >> 0] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 7 | 0) >> 0] = i64toi32_i32$1 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAPU16[($12_1 + 286 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 288 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[($12_1 + 290 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 292 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $1092 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $10_1 + 36 | 0;

                                    $70_1 = $1092;

                                    HEAP8[i64toi32_i32$1 >> 0] = $70_1;

                                    HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $70_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $70_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $70_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;

                                    HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 280 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 284 | 0) >> 2] | 0;

                                    $1096 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1 + 30 | 0;

                                    $71_1 = $1096;

                                    HEAP8[i64toi32_i32$0 >> 0] = $71_1;

                                    HEAP8[(i64toi32_i32$0 + 1 | 0) >> 0] = $71_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 2 | 0) >> 0] = $71_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 3 | 0) >> 0] = $71_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$0 + 4 | 0) >> 0] = i64toi32_i32$1;

                                    HEAP8[(i64toi32_i32$0 + 5 | 0) >> 0] = i64toi32_i32$1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 6 | 0) >> 0] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 7 | 0) >> 0] = i64toi32_i32$1 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 272 | 0) >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 276 | 0) >> 2] | 0;

                                    $1099 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $10_1;

                                    $72_1 = $1099;

                                    HEAP8[(i64toi32_i32$1 + 22 | 0) >> 0] = $72_1;

                                    HEAP8[(i64toi32_i32$1 + 23 | 0) >> 0] = $72_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 24 | 0) >> 0] = $72_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 25 | 0) >> 0] = $72_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$1 + 26 | 0) >> 0] = i64toi32_i32$0;

                                    HEAP8[(i64toi32_i32$1 + 27 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 28 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 29 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 272 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 276 | 0) >> 2] | 0;

                                    $1102 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1;

                                    $73_1 = $1102;

                                    HEAP8[(i64toi32_i32$0 + 44 | 0) >> 0] = $73_1;

                                    HEAP8[(i64toi32_i32$0 + 45 | 0) >> 0] = $73_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 46 | 0) >> 0] = $73_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 47 | 0) >> 0] = $73_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$0 + 48 | 0) >> 0] = i64toi32_i32$1;

                                    HEAP8[(i64toi32_i32$0 + 49 | 0) >> 0] = i64toi32_i32$1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 50 | 0) >> 0] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 51 | 0) >> 0] = i64toi32_i32$1 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 280 | 0) >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 284 | 0) >> 2] | 0;

                                    $1106 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $10_1 + 52 | 0;

                                    $74_1 = $1106;

                                    HEAP8[i64toi32_i32$1 >> 0] = $74_1;

                                    HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $74_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $74_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $74_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;

                                    HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAPU16[($12_1 + 286 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 288 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[($12_1 + 290 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 292 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $1110 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1 + 58 | 0;

                                    $75_1 = $1110;

                                    HEAP8[i64toi32_i32$0 >> 0] = $75_1;

                                    HEAP8[(i64toi32_i32$0 + 1 | 0) >> 0] = $75_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 2 | 0) >> 0] = $75_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 3 | 0) >> 0] = $75_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$0 + 4 | 0) >> 0] = i64toi32_i32$1;

                                    HEAP8[(i64toi32_i32$0 + 5 | 0) >> 0] = i64toi32_i32$1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 6 | 0) >> 0] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 7 | 0) >> 0] = i64toi32_i32$1 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 272 | 0) >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 276 | 0) >> 2] | 0;

                                    $1113 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $10_1;

                                    $76_1 = $1113;

                                    HEAP8[(i64toi32_i32$1 + 66 | 0) >> 0] = $76_1;

                                    HEAP8[(i64toi32_i32$1 + 67 | 0) >> 0] = $76_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 68 | 0) >> 0] = $76_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 69 | 0) >> 0] = $76_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$1 + 70 | 0) >> 0] = i64toi32_i32$0;

                                    HEAP8[(i64toi32_i32$1 + 71 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 72 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 73 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$0 = HEAP32[($12_1 + 280 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($12_1 + 284 | 0) >> 2] | 0;

                                    $1117 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1 + 74 | 0;

                                    $77_1 = $1117;

                                    HEAP8[i64toi32_i32$0 >> 0] = $77_1;

                                    HEAP8[(i64toi32_i32$0 + 1 | 0) >> 0] = $77_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 2 | 0) >> 0] = $77_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 3 | 0) >> 0] = $77_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$0 + 4 | 0) >> 0] = i64toi32_i32$1;

                                    HEAP8[(i64toi32_i32$0 + 5 | 0) >> 0] = i64toi32_i32$1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 6 | 0) >> 0] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 7 | 0) >> 0] = i64toi32_i32$1 >>> 24 | 0;

                                    i64toi32_i32$2 = $12_1;

                                    i64toi32_i32$1 = HEAPU16[($12_1 + 286 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 288 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[($12_1 + 290 | 0) >> 1] | 0 | ((HEAPU16[($12_1 + 292 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $1121 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $10_1 + 80 | 0;

                                    $78_1 = $1121;

                                    HEAP8[i64toi32_i32$1 >> 0] = $78_1;

                                    HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $78_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $78_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $78_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;

                                    HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;

                                    $11($12_1 + 272 | 0 | 2 | 0 | 0, $12_1 + 240 | 0 | 0, $11_1 | 0);

                                    label$62 : {

                                        label$63 : {

                                            $15_1 = HEAP16[($12_1 + 240 | 0) >> 1] | 0;

                                            $15_1 = Math_imul($15_1, $15_1);

                                            if ($15_1 >>> 0 > 1073741823 >>> 0) {

                                                break label$63

                                            }

                                            $15_1 = 32767 - ($15_1 >>> 15 | 0) | 0;

                                            break label$62;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $15_1 = 0;

                                    }

                                    label$64 : {

                                        label$65 : {

                                            $13_1 = HEAP16[($12_1 + 242 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$65

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$64;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, Math_imul($15_1, 65534) >>> 16 | 0);

                                    label$66 : {

                                        label$67 : {

                                            $13_1 = HEAP16[($12_1 + 244 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$67

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$66;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, $15_1 >>> 15 | 0);

                                    label$68 : {

                                        label$69 : {

                                            $13_1 = HEAP16[($12_1 + 246 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$69

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$68;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, $15_1 >>> 15 | 0);

                                    label$70 : {

                                        label$71 : {

                                            $13_1 = HEAP16[($12_1 + 248 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$71

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$70;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, $15_1 >>> 15 | 0);

                                    label$72 : {

                                        label$73 : {

                                            $13_1 = HEAP16[($12_1 + 250 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$73

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$72;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, $15_1 >>> 15 | 0);

                                    label$74 : {

                                        label$75 : {

                                            $13_1 = HEAP16[($12_1 + 252 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$75

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$74;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, $15_1 >>> 15 | 0);

                                    label$76 : {

                                        label$77 : {

                                            $13_1 = HEAP16[($12_1 + 254 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$77

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$76;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, $15_1 >>> 15 | 0);

                                    label$78 : {

                                        label$79 : {

                                            $13_1 = HEAP16[($12_1 + 256 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$79

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$78;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $15_1 = Math_imul($13_1, $15_1 >>> 15 | 0);

                                    label$80 : {

                                        label$81 : {

                                            $13_1 = HEAP16[($12_1 + 258 | 0) >> 1] | 0;

                                            $13_1 = Math_imul($13_1, $13_1);

                                            if ($13_1 >>> 0 < 1073741824 >>> 0) {

                                                break label$81

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $13_1 = 0;

                                            break label$80;

                                        }

                                        $13_1 = 32767 - ($13_1 >>> 15 | 0) | 0;

                                    }

                                    $197(Math_imul($13_1, $15_1 >>> 15 | 0) >>> 15 | 0 | 0, $12_1 + 158 | 0 | 0, $12_1 + 156 | 0 | 0, $11_1 | 0);

                                    $15_1 = (HEAPU16[($12_1 + 158 | 0) >> 1] | 0) + -15 | 0;

                                    $1285 = $15_1 << 12 | 0;

                                    $15_1 = $15_1 << 16 >> 16;

                                    $13_1 = $221($224(0 | 0, $183((($15_1 + 8 | 0) >>> 0 < 16 >>> 0 ? $1285 : ($15_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 | 0, $221(HEAP16[($12_1 + 156 | 0) >> 1] | 0 | 0, 3 | 0, $11_1 | 0) | 0 | 0, $11_1 | 0) | 0 | 0, $11_1 | 0) | 0 | 0, 1 | 0, $11_1 | 0) | 0;

                                    (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $183((Math_imul(HEAP16[($0_1 + 374 | 0) >> 1] | 0, 29491) >>> 15 | 0) << 16 >> 16 | 0, Math_imul($13_1, 3277) >> 15 | 0 | 0, $11_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 374 | 0) >> 1] = wasm2js_i32$1;

                                    $14_1 = $31_1 >> 10 | 0;

                                    $15_1 = $14_1 + 262144 | 0;

                                    label$82 : {

                                        if (($31_1 | 0) < (0 | 0)) {

                                            break label$82

                                        }

                                        if (($15_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                            break label$82

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $15_1 = 2147483647;

                                    }

                                    $14_1 = $13_1 << 4 | 0;

                                    $13_1 = $15_1 - $14_1 | 0;

                                    label$83 : {

                                        if (($15_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                            break label$83

                                        }

                                        if (($13_1 ^ $15_1 | 0 | 0) > (-1 | 0)) {

                                            break label$83

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $13_1 = ($15_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $14_1 = (HEAP16[($0_1 + 394 | 0) >> 1] | 0) << 5 | 0;

                                    $15_1 = $14_1 + $13_1 | 0;

                                    label$84 : {

                                        if (($14_1 ^ $13_1 | 0 | 0) < (0 | 0)) {

                                            break label$84

                                        }

                                        if (($15_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                            break label$84

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $15_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $15_1 = $211($15_1 >> 16 | 0 | 0, ($15_1 & 65534 | 0) >>> 1 | 0 | 0, $11_1 | 0) | 0;

                                    $13($30_1 | 0, $12_1 + 160 | 0 | 0, $11_1 | 0);

                                    $15_1 = $15_1 << 16 >> 16;

                                    $13_1 = 39;

                                    label$85 : while (1) {

                                        label$86 : {

                                            label$87 : {

                                                $14_1 = ($12_1 + 160 | 0) + ($13_1 << 1 | 0) | 0;

                                                $16_1 = Math_imul($15_1, HEAP16[$14_1 >> 1] | 0);

                                                if (($16_1 | 0) >= (1073741824 | 0)) {

                                                    break label$87

                                                }

                                                $16_1 = $16_1 >> 15 | 0;

                                                break label$86;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $16_1 = 32767;

                                        }

                                        HEAP16[$14_1 >> 1] = $16_1;

                                        label$88 : {

                                            label$89 : {

                                                $14_1 = $13_1 + -1 | 0;

                                                $16_1 = ($12_1 + 160 | 0) + ($14_1 << 1 | 0) | 0;

                                                $28_1 = Math_imul($15_1, HEAP16[$16_1 >> 1] | 0);

                                                if (($28_1 | 0) >= (1073741824 | 0)) {

                                                    break label$89

                                                }

                                                $28_1 = $28_1 >> 15 | 0;

                                                break label$88;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $28_1 = 32767;

                                        }

                                        HEAP16[$16_1 >> 1] = $28_1;

                                        $13_1 = $13_1 + -2 | 0;

                                        if ($14_1) {

                                            continue label$85

                                        }

                                        break label$85;

                                    }

                                    ;

                                    $225($12_1 + 32 | 0 | 0, $12_1 + 160 | 0 | 0, $9_1 | 0, 40 | 0, $1_1 | 0, 1 | 0);

                                    $13($30_1 | 0, $12_1 + 160 | 0 | 0, $11_1 | 0);

                                    $13_1 = 39;

                                    label$90 : while (1) {

                                        label$91 : {

                                            label$92 : {

                                                $14_1 = ($12_1 + 160 | 0) + ($13_1 << 1 | 0) | 0;

                                                $16_1 = Math_imul($15_1, HEAP16[$14_1 >> 1] | 0);

                                                if (($16_1 | 0) >= (1073741824 | 0)) {

                                                    break label$92

                                                }

                                                $16_1 = $16_1 >> 15 | 0;

                                                break label$91;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $16_1 = 32767;

                                        }

                                        HEAP16[$14_1 >> 1] = $16_1;

                                        label$93 : {

                                            label$94 : {

                                                $14_1 = $13_1 + -1 | 0;

                                                $16_1 = ($12_1 + 160 | 0) + ($14_1 << 1 | 0) | 0;

                                                $28_1 = Math_imul($15_1, HEAP16[$16_1 >> 1] | 0);

                                                if (($28_1 | 0) >= (1073741824 | 0)) {

                                                    break label$94

                                                }

                                                $28_1 = $28_1 >> 15 | 0;

                                                break label$93;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $28_1 = 32767;

                                        }

                                        HEAP16[$16_1 >> 1] = $28_1;

                                        $13_1 = $13_1 + -2 | 0;

                                        if ($14_1) {

                                            continue label$90

                                        }

                                        break label$90;

                                    }

                                    ;

                                    $225($12_1 + 32 | 0 | 0, $12_1 + 160 | 0 | 0, $9_1 + 80 | 0 | 0, 40 | 0, $1_1 | 0, 1 | 0);

                                    $13($30_1 | 0, $12_1 + 160 | 0 | 0, $11_1 | 0);

                                    $13_1 = 39;

                                    label$95 : while (1) {

                                        label$96 : {

                                            label$97 : {

                                                $14_1 = ($12_1 + 160 | 0) + ($13_1 << 1 | 0) | 0;

                                                $16_1 = Math_imul($15_1, HEAP16[$14_1 >> 1] | 0);

                                                if (($16_1 | 0) >= (1073741824 | 0)) {

                                                    break label$97

                                                }

                                                $16_1 = $16_1 >> 15 | 0;

                                                break label$96;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $16_1 = 32767;

                                        }

                                        HEAP16[$14_1 >> 1] = $16_1;

                                        label$98 : {

                                            label$99 : {

                                                $14_1 = $13_1 + -1 | 0;

                                                $16_1 = ($12_1 + 160 | 0) + ($14_1 << 1 | 0) | 0;

                                                $28_1 = Math_imul($15_1, HEAP16[$16_1 >> 1] | 0);

                                                if (($28_1 | 0) >= (1073741824 | 0)) {

                                                    break label$99

                                                }

                                                $28_1 = $28_1 >> 15 | 0;

                                                break label$98;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $28_1 = 32767;

                                        }

                                        HEAP16[$16_1 >> 1] = $28_1;

                                        $13_1 = $13_1 + -2 | 0;

                                        if ($14_1) {

                                            continue label$95

                                        }

                                        break label$95;

                                    }

                                    ;

                                    $225($12_1 + 32 | 0 | 0, $12_1 + 160 | 0 | 0, $9_1 + 160 | 0 | 0, 40 | 0, $1_1 | 0, 1 | 0);

                                    $13($30_1 | 0, $12_1 + 160 | 0 | 0, $11_1 | 0);

                                    $13_1 = 39;

                                    label$100 : while (1) {

                                        label$101 : {

                                            label$102 : {

                                                $14_1 = ($12_1 + 160 | 0) + ($13_1 << 1 | 0) | 0;

                                                $16_1 = Math_imul($15_1, HEAP16[$14_1 >> 1] | 0);

                                                if (($16_1 | 0) >= (1073741824 | 0)) {

                                                    break label$102

                                                }

                                                $16_1 = $16_1 >> 15 | 0;

                                                break label$101;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $16_1 = 32767;

                                        }

                                        HEAP16[$14_1 >> 1] = $16_1;

                                        label$103 : {

                                            label$104 : {

                                                $14_1 = $13_1 + -1 | 0;

                                                $16_1 = ($12_1 + 160 | 0) + ($14_1 << 1 | 0) | 0;

                                                $28_1 = Math_imul($15_1, HEAP16[$16_1 >> 1] | 0);

                                                if (($28_1 | 0) >= (1073741824 | 0)) {

                                                    break label$104

                                                }

                                                $28_1 = $28_1 >> 15 | 0;

                                                break label$103;

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $28_1 = 32767;

                                        }

                                        HEAP16[$16_1 >> 1] = $28_1;

                                        $13_1 = $13_1 + -2 | 0;

                                        if ($14_1) {

                                            continue label$100

                                        }

                                        break label$100;

                                    }

                                    ;

                                    $225($12_1 + 32 | 0 | 0, $12_1 + 160 | 0 | 0, $9_1 + 240 | 0 | 0, 40 | 0, $1_1 | 0, 1 | 0);

                                    $92_1 = $4_1;

                                    $93_1 = 20;

                                    HEAP16[($92_1 + 14 | 0) >> 1] = $93_1;

                                    HEAP16[($92_1 + 16 | 0) >> 1] = $93_1 >>> 16 | 0;

                                    label$105 : {

                                        if (($5_1 | 0) != (2 | 0)) {

                                            break label$105

                                        }

                                        label$106 : {

                                            $15_1 = HEAP16[$0_1 >> 1] | 0;

                                            $13_1 = ($15_1 | 0) > (32 | 0) ? 32 : ($15_1 | 0) < (1 | 0) ? 8 : $15_1;

                                            $15_1 = ($13_1 << 10 | 0) & 67107840 | 0;

                                            if (($15_1 | 0) == (($13_1 << 26 | 0) >> 16 | 0 | 0)) {

                                                break label$106

                                            }

                                            HEAP32[$11_1 >> 2] = 1;

                                            $15_1 = 32767;

                                        }

                                        $15_1 = $185(1024 | 0, $15_1 << 16 >> 16 | 0) | 0;

                                        HEAP16[$0_1 >> 1] = 0;

                                        HEAP16[($0_1 + 2 | 0) >> 1] = $15_1;

                                        i64toi32_i32$2 = $32_1;

                                        i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                        i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                        $1592 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $0_1;

                                        HEAP32[(i64toi32_i32$0 + 32 | 0) >> 2] = $1592;

                                        HEAP32[(i64toi32_i32$0 + 36 | 0) >> 2] = i64toi32_i32$1;

                                        i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;

                                        i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                        i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                        $1597 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $0_1 + 40 | 0;

                                        HEAP32[i64toi32_i32$1 >> 2] = $1597;

                                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        HEAP32[($0_1 + 48 | 0) >> 2] = HEAP32[($32_1 + 16 | 0) >> 2] | 0;

                                        $15_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($0_1 + 6 | 0) >> 1] = $15_1;

                                        $15_1 = ($15_1 + -256 | 0) << 16 >> 16;

                                        HEAP16[($0_1 + 4 | 0) >> 1] = ($15_1 | 0) > (0 | 0) ? $15_1 : 0;

                                    }

                                    label$107 : {

                                        if (!(HEAPU16[($0_1 + 400 | 0) >> 1] | 0)) {

                                            break label$107

                                        }

                                        label$108 : {

                                            if (HEAPU16[($0_1 + 402 | 0) >> 1] | 0) {

                                                break label$108

                                            }

                                            if (!(HEAPU16[($0_1 + 404 | 0) >> 1] | 0)) {

                                                break label$107

                                            }

                                        }

                                        HEAP16[($0_1 + 412 | 0) >> 1] = 1;

                                        HEAP16[$0_1 >> 1] = 0;

                                    }

                                    global$0 = $12_1 + 336 | 0;

                                }



                                function $39($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $5_1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $6_1 = 0, $4_1 = 0,

                                        i64toi32_i32$2 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0,

                                        $7_1 = 0, $8_1 = 0, $8$hi = 0, $9_1 = 0, $9$hi = 0;

                                    $4_1 = global$0 - 16 | 0;

                                    global$0 = $4_1;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = 0;

                                    $5_1 = (HEAPU16[($0_1 + 212 | 0) >> 1] | 0) + 10 | 0;

                                    $5_1 = ($5_1 & 65535 | 0 | 0) == (80 | 0) ? 0 : $5_1;

                                    HEAP16[($0_1 + 212 | 0) >> 1] = $5_1;

                                    i64toi32_i32$2 = $1_1 + 8 | 0;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $8_1 = i64toi32_i32$0;

                                    $8$hi = i64toi32_i32$1;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[$1_1 >> 1] | 0 | ((HEAPU16[($1_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($1_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $9_1 = i64toi32_i32$1;

                                    $9$hi = i64toi32_i32$0;

                                    $5_1 = $0_1 + ($5_1 << 16 >> 16 << 1 | 0) | 0;

                                    $15_1 = $1_1 + 16 | 0;

                                    $16_1 = $5_1 + 68 | 0;

                                    $17_1 = HEAPU16[$15_1 >> 1] | 0 | ((HEAPU16[($15_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$16_1 >> 1] = $17_1;

                                    HEAP16[($16_1 + 2 | 0) >> 1] = $17_1 >>> 16 | 0;

                                    i64toi32_i32$0 = $8$hi;

                                    i64toi32_i32$1 = $5_1 + 60 | 0;

                                    $18_1 = $8_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $18_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $18_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = $9$hi;

                                    i64toi32_i32$1 = $5_1 + 52 | 0;

                                    $19_1 = $9_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $19_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $19_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $5_1 = 159;

                                    $1_1 = 0;

                                    label$1 : while (1) {

                                        $6_1 = $5_1;

                                        $5_1 = HEAP16[($2_1 + ($5_1 << 1 | 0) | 0) >> 1] | 0;

                                        $5_1 = Math_imul($5_1, $5_1);

                                        $7_1 = ($5_1 | 0) == (1073741824 | 0) ? 2147483647 : $5_1 << 1 | 0;

                                        $5_1 = $1_1;

                                        $1_1 = $7_1 + $5_1 | 0;

                                        label$2 : {

                                            if (($7_1 ^ $5_1 | 0 | 0) < (0 | 0)) {

                                                break label$2

                                            }

                                            if (($1_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                break label$2

                                            }

                                            HEAP32[$3_1 >> 2] = 1;

                                            $1_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $5_1 = $6_1 + -1 | 0;

                                        if ($6_1) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $197($1_1 | 0, $4_1 + 14 | 0 | 0, $4_1 + 12 | 0 | 0, $3_1 | 0);

                                    label$3 : {

                                        $1_1 = HEAP16[($4_1 + 14 | 0) >> 1] | 0;

                                        $5_1 = $1_1 << 10 | 0;

                                        if (($5_1 | 0) == (($1_1 << 26 | 0) >> 16 | 0 | 0)) {

                                            break label$3

                                        }

                                        HEAP32[$3_1 >> 2] = 1;

                                        $5_1 = ($1_1 | 0) > (0 | 0) ? 32767 : -32768;

                                    }

                                    $1_1 = HEAP16[($4_1 + 12 | 0) >> 1] | 0;

                                    $6_1 = (HEAPU16[($0_1 + 392 | 0) >> 1] | 0) + 1 | 0;

                                    $6_1 = ($6_1 & 65535 | 0 | 0) == (8 | 0) ? 0 : $6_1;

                                    HEAP16[($0_1 + 392 | 0) >> 1] = $6_1;

                                    HEAP16[(($0_1 + ($6_1 << 16 >> 16 << 1 | 0) | 0) + 376 | 0) >> 1] = ($5_1 + ($1_1 >>> 5 | 0) | 0) + -8521 | 0;

                                    global$0 = $4_1 + 16 | 0;

                                }



                                function $40($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, $4_1 = 0, $5_1 = 0, $41_1 = 0;

                                    $3_1 = HEAP32[($0_1 + 408 | 0) >> 2] | 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    label$5 : {

                                                        if (($1_1 + -4 | 0) >>> 0 < 3 >>> 0) {

                                                            break label$5

                                                        }

                                                        if (($3_1 + -1 | 0) >>> 0 > 1 >>> 0) {

                                                            break label$4

                                                        }

                                                        if ($1_1 >>> 0 > 7 >>> 0) {

                                                            break label$4

                                                        }

                                                        if (!((1 << $1_1 | 0) & 140 | 0)) {

                                                            break label$4

                                                        }

                                                    }

                                                    $4_1 = 1;

                                                    label$6 : {

                                                        if (($3_1 | 0) != (2 | 0)) {

                                                            break label$6

                                                        }

                                                        $4_1 = 1;

                                                        $3_1 = $1_1 + -2 | 0;

                                                        if ($3_1 >>> 0 >= 6 >>> 0) {

                                                            break label$6

                                                        }

                                                        $4_1 = HEAP32[((global$4 + 65668 | 0) + ($3_1 << 2 | 0) | 0) >> 2] | 0;

                                                    }

                                                    $3_1 = (HEAPU16[$0_1 >> 1] | 0) + 1 | 0;

                                                    HEAP16[$0_1 >> 1] = $3_1;

                                                    $41_1 = ($3_1 << 16 >> 16 | 0) > (50 | 0) ? 2 : $4_1;

                                                    $3_1 = ($1_1 | 0) != (5 | 0);

                                                    $5_1 = $3_1 ? $41_1 : $4_1;

                                                    if ($3_1) {

                                                        break label$3

                                                    }

                                                    if ((HEAPU16[($0_1 + 412 | 0) >> 1] | 0) & 65535 | 0) {

                                                        break label$3

                                                    }

                                                    HEAP16[($0_1 + 398 | 0) >> 1] = 0;

                                                    $3_1 = $183(0 | 0, 1 | 0, $2_1 | 0) | 0;

                                                    HEAP16[($0_1 + 404 | 0) >> 1] = 0;

                                                    HEAP16[($0_1 + 398 | 0) >> 1] = $3_1;

                                                    $2_1 = $0_1 + 398 | 0;

                                                    break label$2;

                                                }

                                                $5_1 = 0;

                                                HEAP16[$0_1 >> 1] = 0;

                                            }

                                            $4_1 = 0;

                                            $3_1 = $183(HEAP16[($0_1 + 398 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0;

                                            HEAP16[($0_1 + 404 | 0) >> 1] = 0;

                                            HEAP16[($0_1 + 398 | 0) >> 1] = $3_1;

                                            label$7 : {

                                                label$8 : {

                                                    if (($1_1 + -4 | 0) >>> 0 < 4 >>> 0) {

                                                        break label$8

                                                    }

                                                    if (($1_1 | 0) == (2 | 0)) {

                                                        break label$8

                                                    }

                                                    $4_1 = $5_1;

                                                    break label$7;

                                                }

                                                $2_1 = $0_1 + 398 | 0;

                                                if (($1_1 | 0) != (7 | 0)) {

                                                    break label$2

                                                }

                                                if ($5_1) {

                                                    break label$2

                                                }

                                            }

                                            HEAP16[($0_1 + 396 | 0) >> 1] = 7;

                                            break label$1;

                                        }

                                        label$9 : {

                                            label$10 : {

                                                if (($3_1 | 0) < (31 | 0)) {

                                                    break label$10

                                                }

                                                HEAP16[($0_1 + 404 | 0) >> 1] = 1;

                                                HEAP32[($0_1 + 396 | 0) >> 2] = 0;

                                                break label$9;

                                            }

                                            label$11 : {

                                                $4_1 = HEAPU16[($0_1 + 396 | 0) >> 1] | 0;

                                                if ($4_1) {

                                                    break label$11

                                                }

                                                HEAP16[$2_1 >> 1] = 0;

                                                break label$9;

                                            }

                                            HEAP16[($0_1 + 396 | 0) >> 1] = $4_1 + -1 | 0;

                                        }

                                        $4_1 = $5_1;

                                    }

                                    label$12 : {

                                        if (!$4_1) {

                                            break label$12

                                        }

                                        HEAP32[($0_1 + 400 | 0) >> 2] = 0;

                                        label$13 : {

                                            if (($1_1 | 0) != (4 | 0)) {

                                                break label$13

                                            }

                                            HEAP16[($0_1 + 400 | 0) >> 1] = 1;

                                            return $4_1 | 0;

                                        }

                                        label$14 : {

                                            if (($1_1 | 0) != (5 | 0)) {

                                                break label$14

                                            }

                                            HEAP32[($0_1 + 400 | 0) >> 2] = 65537;

                                            return $4_1 | 0;

                                        }

                                        if (($1_1 | 0) != (6 | 0)) {

                                            break label$12

                                        }

                                        HEAP16[($0_1 + 404 | 0) >> 1] = 0;

                                        HEAP16[($0_1 + 400 | 0) >> 1] = 1;

                                    }

                                    return $4_1 | 0;

                                }



                                function $41($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0, $3_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[($0_1 + 12 | 0) >> 1] = 1;

                                    $1_1 = 1;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $1_1;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    $2_1 = 65537;

                                    HEAP16[$0_1 >> 1] = $2_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $2_1 >>> 16 | 0;

                                    $3_1 = 65537;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $3_1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $42($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $5_1 = 0, $6_1 = 0;

                                    $5_1 = global$0 - 16 | 0;

                                    global$0 = $5_1;

                                    label$1 : {

                                        $6_1 = $191($0_1 | 0, 5 | 0) | 0;

                                        if (($224($6_1 | 0, HEAP16[($0_1 + 10 | 0) >> 1] | 0 | 0, $4_1 | 0) | 0 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $6_1 = HEAPU16[($0_1 + 10 | 0) >> 1] | 0;

                                    }

                                    label$2 : {

                                        label$3 : {

                                            $0_1 = Math_imul(HEAP16[((global$4 + 65692 | 0) + ($2_1 << 1 | 0) | 0) >> 1] | 0, $6_1 << 16 >> 16);

                                            if (($0_1 | 0) >= (1073741824 | 0)) {

                                                break label$3

                                            }

                                            $0_1 = $0_1 >> 15 | 0;

                                            break label$2;

                                        }

                                        HEAP32[$4_1 >> 2] = 1;

                                        $0_1 = 32767;

                                    }

                                    HEAP16[$3_1 >> 1] = $0_1;

                                    $189($1_1 | 0, $5_1 + 14 | 0 | 0, $5_1 + 12 | 0 | 0, $4_1 | 0);

                                    $188($1_1 | 0, HEAP16[($5_1 + 14 | 0) >> 1] | 0 | 0, HEAP16[($5_1 + 12 | 0) >> 1] | 0 | 0);

                                    global$0 = $5_1 + 16 | 0;

                                }



                                function $43($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $7_1 = 0;

                                    label$1 : {

                                        if ($1_1) {

                                            break label$1

                                        }

                                        label$2 : {

                                            if (!$2_1) {

                                                break label$2

                                            }

                                            if (($224(HEAP16[$3_1 >> 1] | 0 | 0, HEAP16[($0_1 + 12 | 0) >> 1] | 0 | 0, $4_1 | 0) | 0 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            HEAP16[$3_1 >> 1] = HEAPU16[($0_1 + 12 | 0) >> 1] | 0;

                                        }

                                        HEAP16[($0_1 + 12 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                    }

                                    HEAP16[($0_1 + 10 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                    i64toi32_i32$2 = $0_1 + 2 | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $7_1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$0_1 >> 1] = $7_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $7_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                }



                                function $44($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0;

                                    label$1 : {

                                        $4_1 = $191($0_1 | 0, 5 | 0) | 0;

                                        if (($224($4_1 | 0, HEAP16[($0_1 + 10 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $4_1 = HEAPU16[($0_1 + 10 | 0) >> 1] | 0;

                                    }

                                    label$2 : {

                                        $0_1 = Math_imul(HEAP16[((global$4 + 65706 | 0) + ($1_1 << 1 | 0) | 0) >> 1] | 0, $4_1 << 16 >> 16);

                                        if (($0_1 | 0) >= (1073741824 | 0)) {

                                            break label$2

                                        }

                                        HEAP16[$2_1 >> 1] = $0_1 >> 15 | 0;

                                        return;

                                    }

                                    HEAP32[$3_1 >> 2] = 1;

                                    HEAP16[$2_1 >> 1] = 32767;

                                }



                                function $45($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0, $3_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[($0_1 + 12 | 0) >> 1] = 16384;

                                    $1_1 = 1640;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $1_1;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    $2_1 = 107480680;

                                    HEAP16[$0_1 >> 1] = $2_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $2_1 >>> 16 | 0;

                                    $3_1 = 107480680;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $3_1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $46($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $9_1 = 0, $39_1 = 0;

                                    label$1 : {

                                        if ($1_1) {

                                            break label$1

                                        }

                                        label$2 : {

                                            if (!$2_1) {

                                                break label$2

                                            }

                                            if (($224(HEAP16[$3_1 >> 1] | 0 | 0, HEAP16[($0_1 + 12 | 0) >> 1] | 0 | 0, $4_1 | 0) | 0 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            HEAP16[$3_1 >> 1] = HEAPU16[($0_1 + 12 | 0) >> 1] | 0;

                                        }

                                        HEAP16[($0_1 + 12 | 0) >> 1] = HEAPU16[$3_1 >> 1] | 0;

                                    }

                                    $1_1 = HEAP16[$3_1 >> 1] | 0;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $1_1;

                                    $3_1 = 16384;

                                    label$3 : {

                                        label$4 : {

                                            if (($224($1_1 | 0, 16384 | 0, $4_1 | 0) | 0 | 0) > (0 | 0)) {

                                                break label$4

                                            }

                                            $3_1 = HEAPU16[($0_1 + 10 | 0) >> 1] | 0;

                                            break label$3;

                                        }

                                        HEAP16[($0_1 + 10 | 0) >> 1] = 16384;

                                    }

                                    i64toi32_i32$2 = $0_1 + 2 | 0;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $3_1;

                                    $39_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1;

                                    $9_1 = $39_1;

                                    HEAP16[$0_1 >> 1] = $9_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $9_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                }



                                function $47($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0, $8_1 = 0;

                                    $7_1 = $191($2_1 | 0, 9 | 0) | 0;

                                    label$1 : {

                                        if (($1_1 | 0) < (6 | 0)) {

                                            break label$1

                                        }

                                        if (($7_1 | 0) <= ($1_1 | 0)) {

                                            break label$1

                                        }

                                        $8_1 = HEAP16[($2_1 + 16 | 0) >> 1] | 0;

                                        $2_1 = $8_1 + (HEAP16[($2_1 + 14 | 0) >> 1] | 0) | 0;

                                        $2_1 = (($2_1 >> 1 | 0 | 0) > ($8_1 | 0) ? $8_1 : $2_1 >>> 1 | 0) << 16 >> 16;

                                        $8_1 = ($2_1 + 8192 | 0) >>> 0 < 16384 >>> 0 ? $2_1 << 2 | 0 : ($2_1 >> 15 | 0) ^ 32767 | 0;

                                        label$2 : {

                                            label$3 : {

                                                if (($3_1 | 0) < (7 | 0)) {

                                                    break label$3

                                                }

                                                if (!$4_1) {

                                                    break label$2

                                                }

                                            }

                                            $8_1 = $224($8_1 << 16 >> 16 | 0, $2_1 | 0, $6_1 | 0) | 0;

                                        }

                                        $2_1 = $8_1 << 16 >> 16;

                                        $3_1 = ($7_1 | 0) < ($2_1 | 0) ? $7_1 : $2_1;

                                        label$4 : {

                                            label$5 : {

                                                $2_1 = $210($1_1 | 0) | 0;

                                                if (($2_1 | 0) > (-1 | 0)) {

                                                    break label$5

                                                }

                                                $7_1 = 0;

                                                $8_1 = (0 - $2_1 | 0) << 16 >> 16;

                                                if (($8_1 | 0) > (14 | 0)) {

                                                    break label$4

                                                }

                                                $7_1 = ($1_1 & 65535 | 0) >>> ($8_1 & 65535 | 0) | 0;

                                                break label$4;

                                            }

                                            $1_1 = $1_1 & 65535 | 0;

                                            $7_1 = $2_1 & 65535 | 0;

                                            $8_1 = $1_1 << $7_1 | 0;

                                            $7_1 = ($8_1 << 16 >> 16 >> $7_1 | 0 | 0) == ($1_1 | 0) ? $8_1 : 32767;

                                        }

                                        label$6 : {

                                            label$7 : {

                                                $1_1 = Math_imul($185(16383 | 0, $7_1 << 16 >> 16 | 0) | 0, $3_1);

                                                if (($1_1 | 0) == (1073741824 | 0)) {

                                                    break label$7

                                                }

                                                $7_1 = $1_1 << 1 | 0;

                                                break label$6;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                            $7_1 = 2147483647;

                                        }

                                        label$8 : {

                                            label$9 : {

                                                $2_1 = $224(20 | 0, $2_1 | 0, $6_1 | 0) | 0;

                                                if (($2_1 | 0) < (1 | 0)) {

                                                    break label$9

                                                }

                                                $1_1 = 0;

                                                if ($2_1 >>> 0 > 30 >>> 0) {

                                                    break label$8

                                                }

                                                $1_1 = $7_1 >> ($2_1 & 65535 | 0) | 0;

                                                break label$8;

                                            }

                                            $2_1 = (0 - $2_1 | 0) << 16 >> 16;

                                            $1_1 = $7_1 << $2_1 | 0;

                                            if (($1_1 >> $2_1 | 0 | 0) == ($7_1 | 0)) {

                                                break label$8

                                            }

                                            $1_1 = ($7_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $1_1 = ($1_1 | 0) < (32767 | 0) ? $1_1 : 32767;

                                        $2_1 = $1_1 << 16 >> 16;

                                        $2_1 = $5_1 ? (($1_1 << 16 | 0 | 0) > (201326592 | 0) ? 3072 : $2_1) : $2_1;

                                        $1_1 = 0;

                                        label$10 : while (1) {

                                            label$11 : {

                                                label$12 : {

                                                    $7_1 = $1_1 << 1 | 0;

                                                    $5_1 = $0_1 + $7_1 | 0;

                                                    $3_1 = Math_imul($2_1, HEAP16[$5_1 >> 1] | 0);

                                                    if (($3_1 | 0) == (1073741824 | 0)) {

                                                        break label$12

                                                    }

                                                    $3_1 = $3_1 << 1 | 0;

                                                    break label$11;

                                                }

                                                HEAP32[$6_1 >> 2] = 1;

                                                $3_1 = 2147483647;

                                            }

                                            HEAP16[$5_1 >> 1] = $3_1 >>> 11 | 0;

                                            label$13 : {

                                                label$14 : {

                                                    $7_1 = $0_1 + ($7_1 | 2 | 0) | 0;

                                                    $5_1 = Math_imul($2_1, HEAP16[$7_1 >> 1] | 0);

                                                    if (($5_1 | 0) == (1073741824 | 0)) {

                                                        break label$14

                                                    }

                                                    $5_1 = $5_1 << 1 | 0;

                                                    break label$13;

                                                }

                                                HEAP32[$6_1 >> 2] = 1;

                                                $5_1 = 2147483647;

                                            }

                                            HEAP16[$7_1 >> 1] = $5_1 >>> 11 | 0;

                                            $1_1 = $1_1 + 2 | 0;

                                            if (($1_1 | 0) != (40 | 0)) {

                                                continue label$10

                                            }

                                            break label$10;

                                        }

                                        ;

                                    }

                                    return 0 | 0;

                                }



                                function $48($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $9_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $8_1 = 0, $7_1 = 0;

                                    $4_1 = HEAP32[($3_1 + 104 | 0) >> 2] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if ($0_1 >>> 0 < 8 >>> 0) {

                                                break label$2

                                            }

                                            $3_1 = 4;

                                            $5_1 = 1;

                                            HEAP16[$2_1 >> 1] = ((HEAPU8[$1_1 >> 0] | 0) >>> 4 | 0) & 1 | 0;

                                            HEAP16[($2_1 + 2 | 0) >> 1] = ((HEAPU8[$1_1 >> 0] | 0) >>> 5 | 0) & 1 | 0;

                                            HEAP16[($2_1 + 4 | 0) >> 1] = ((HEAPU8[$1_1 >> 0] | 0) >>> 6 | 0) & 1 | 0;

                                            HEAP16[($2_1 + 6 | 0) >> 1] = (HEAPU8[$1_1 >> 0] | 0) >>> 7 | 0;

                                            $4_1 = $4_1 + ($0_1 << 1 | 0) | 0;

                                            if ((HEAP16[$4_1 >> 1] | 0 | 0) <= (1 | 0)) {

                                                break label$1

                                            }

                                            label$3 : while (1) {

                                                $0_1 = $1_1 + $5_1 | 0;

                                                HEAP16[($2_1 + ($3_1 << 16 >> 16 << 1 | 0) | 0) >> 1] = (HEAPU8[$0_1 >> 0] | 0) & 1 | 0;

                                                HEAP16[($2_1 + (($3_1 | 1 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = ((HEAPU8[$0_1 >> 0] | 0) >>> 1 | 0) & 1 | 0;

                                                HEAP16[($2_1 + (($3_1 | 2 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = ((HEAPU8[$0_1 >> 0] | 0) >>> 2 | 0) & 1 | 0;

                                                HEAP16[($2_1 + (($3_1 | 3 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = ((HEAPU8[$0_1 >> 0] | 0) >>> 3 | 0) & 1 | 0;

                                                HEAP16[($2_1 + (($3_1 + 4 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = ((HEAPU8[$0_1 >> 0] | 0) >>> 4 | 0) & 1 | 0;

                                                HEAP16[($2_1 + (($3_1 + 5 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = ((HEAPU8[$0_1 >> 0] | 0) >>> 5 | 0) & 1 | 0;

                                                HEAP16[($2_1 + (($3_1 + 6 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = ((HEAPU8[$0_1 >> 0] | 0) >>> 6 | 0) & 1 | 0;

                                                HEAP16[($2_1 + (($3_1 + 7 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] = (HEAPU8[$0_1 >> 0] | 0) >>> 7 | 0;

                                                $3_1 = $3_1 + 8 | 0;

                                                $5_1 = $5_1 + 1 | 0;

                                                if (($5_1 | 0) < (HEAP16[$4_1 >> 1] | 0 | 0)) {

                                                    continue label$3

                                                }

                                                break label$1;

                                            }

                                            ;

                                        }

                                        $5_1 = HEAP32[($3_1 + 96 | 0) >> 2] | 0;

                                        $6_1 = HEAP32[((HEAP32[($3_1 + 100 | 0) >> 2] | 0) + ($0_1 << 2 | 0) | 0) >> 2] | 0;

                                        HEAP16[($2_1 + ((HEAP16[$6_1 >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$1_1 >> 0] | 0) >>> 4 | 0) & 1 | 0;

                                        HEAP16[($2_1 + ((HEAP16[($6_1 + 2 | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$1_1 >> 0] | 0) >>> 5 | 0) & 1 | 0;

                                        HEAP16[($2_1 + ((HEAP16[($6_1 + 4 | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$1_1 >> 0] | 0) >>> 6 | 0) & 1 | 0;

                                        HEAP16[($2_1 + ((HEAP16[($6_1 + 6 | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = (HEAPU8[$1_1 >> 0] | 0) >>> 7 | 0;

                                        $3_1 = $0_1 << 1 | 0;

                                        $7_1 = $4_1 + $3_1 | 0;

                                        if ((HEAP16[$7_1 >> 1] | 0 | 0) < (2 | 0)) {

                                            break label$1

                                        }

                                        $5_1 = $5_1 + $3_1 | 0;

                                        $3_1 = 1;

                                        $4_1 = 4;

                                        label$4 : while (1) {

                                            label$5 : {

                                                $0_1 = $4_1 << 16 >> 16;

                                                if (($0_1 | 0) >= (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                    break label$5

                                                }

                                                $8_1 = $1_1 + $3_1 | 0;

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($0_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = (HEAPU8[$8_1 >> 0] | 0) & 1 | 0;

                                                label$6 : {

                                                    $9_1 = $0_1 + 1 | 0;

                                                    if (($9_1 | 0) < (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                        break label$6

                                                    }

                                                    $4_1 = $9_1;

                                                    break label$5;

                                                }

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$8_1 >> 0] | 0) >>> 1 | 0) & 1 | 0;

                                                label$7 : {

                                                    $9_1 = $0_1 + 2 | 0;

                                                    if (($9_1 | 0) < (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                        break label$7

                                                    }

                                                    $4_1 = $9_1;

                                                    break label$5;

                                                }

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$8_1 >> 0] | 0) >>> 2 | 0) & 1 | 0;

                                                label$8 : {

                                                    $9_1 = $0_1 + 3 | 0;

                                                    if (($9_1 | 0) < (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                        break label$8

                                                    }

                                                    $4_1 = $9_1;

                                                    break label$5;

                                                }

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$8_1 >> 0] | 0) >>> 3 | 0) & 1 | 0;

                                                label$9 : {

                                                    $9_1 = $0_1 + 4 | 0;

                                                    if (($9_1 | 0) < (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                        break label$9

                                                    }

                                                    $4_1 = $9_1;

                                                    break label$5;

                                                }

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$8_1 >> 0] | 0) >>> 4 | 0) & 1 | 0;

                                                label$10 : {

                                                    $9_1 = $0_1 + 5 | 0;

                                                    if (($9_1 | 0) < (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                        break label$10

                                                    }

                                                    $4_1 = $9_1;

                                                    break label$5;

                                                }

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$8_1 >> 0] | 0) >>> 5 | 0) & 1 | 0;

                                                label$11 : {

                                                    $9_1 = $0_1 + 6 | 0;

                                                    if (($9_1 | 0) < (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                        break label$11

                                                    }

                                                    $4_1 = $9_1;

                                                    break label$5;

                                                }

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($9_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[$8_1 >> 0] | 0) >>> 6 | 0) & 1 | 0;

                                                label$12 : {

                                                    $0_1 = $0_1 + 7 | 0;

                                                    if (($0_1 | 0) < (HEAP16[$5_1 >> 1] | 0 | 0)) {

                                                        break label$12

                                                    }

                                                    $4_1 = $0_1;

                                                    break label$5;

                                                }

                                                $4_1 = $4_1 + 8 | 0;

                                                HEAP16[($2_1 + ((HEAP16[($6_1 + ($0_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = (HEAPU8[$8_1 >> 0] | 0) >>> 7 | 0;

                                            }

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($3_1 | 0) < (HEAP16[$7_1 >> 1] | 0 | 0)) {

                                                continue label$4

                                            }

                                            break label$4;

                                        }

                                        ;

                                    }

                                }



                                function $49($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    if (($2_1 | 0) > (79 | 0)) {

                                                        break label$4

                                                    }

                                                    if (!$2_1) {

                                                        break label$3

                                                    }

                                                    if (($2_1 | 0) != (40 | 0)) {

                                                        break label$1

                                                    }

                                                    HEAP16[($3_1 + 18 | 0) >> 1] = ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 16 | 0) >> 1] = ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 14 | 0) >> 1] = ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 12 | 0) >> 1] = ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 10 | 0) >> 1] = ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 8 | 0) >> 1] = ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 6 | 0) >> 1] = ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 4 | 0) >> 1] = ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    HEAP16[($3_1 + 2 | 0) >> 1] = ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                                    $1_1 = ((HEAP16[$1_1 >> 1] | 0) >> 1 | 0) + ((HEAP16[$0_1 >> 1] | 0) >> 1 | 0) | 0;

                                                    break label$2;

                                                }

                                                label$5 : {

                                                    if (($2_1 | 0) == (80 | 0)) {

                                                        break label$5

                                                    }

                                                    if (($2_1 | 0) != (120 | 0)) {

                                                        break label$1

                                                    }

                                                    HEAP16[($3_1 + 18 | 0) >> 1] = HEAPU16[($1_1 + 18 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 16 | 0) >> 1] = HEAPU16[($1_1 + 16 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 14 | 0) >> 1] = HEAPU16[($1_1 + 14 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 12 | 0) >> 1] = HEAPU16[($1_1 + 12 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 10 | 0) >> 1] = HEAPU16[($1_1 + 10 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 8 | 0) >> 1] = HEAPU16[($1_1 + 8 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 6 | 0) >> 1] = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 4 | 0) >> 1] = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                                    HEAP16[($3_1 + 2 | 0) >> 1] = HEAPU16[($1_1 + 2 | 0) >> 1] | 0;

                                                    $1_1 = HEAPU16[$1_1 >> 1] | 0;

                                                    break label$2;

                                                }

                                                $2_1 = HEAP16[($1_1 + 18 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 18 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 16 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 16 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 14 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 14 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 12 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 12 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 10 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 10 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 8 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 8 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 6 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 4 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;

                                                $2_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                                (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >> 2 | 0 | 0, ($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 2 | 0) >> 1] = wasm2js_i32$1;

                                                $1_1 = HEAP16[$1_1 >> 1] | 0;

                                                $1_1 = $183((HEAP16[$0_1 >> 1] | 0) >> 2 | 0 | 0, ($1_1 - ($1_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, $4_1 | 0) | 0;

                                                break label$2;

                                            }

                                            $2_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 18 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 18 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 16 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 16 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 14 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 14 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 12 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 12 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 10 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 10 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 8 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 8 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 6 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 4 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;

                                            $2_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                            (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(($2_1 - ($2_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[($1_1 + 2 | 0) >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 2 | 0) >> 1] = wasm2js_i32$1;

                                            $0_1 = HEAP16[$0_1 >> 1] | 0;

                                            $1_1 = $183(($0_1 - ($0_1 >>> 2 | 0) | 0) << 16 >> 16 | 0, (HEAP16[$1_1 >> 1] | 0) >> 2 | 0 | 0, $4_1 | 0) | 0;

                                        }

                                        HEAP16[$3_1 >> 1] = $1_1;

                                    }

                                }



                                function $50($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0, $9_1 = 0, $10_1 = 0,

                                        $11_1 = 0, $12_1 = 0, $13_1 = 0, $2_1 = 0, $2$hi = 0, $3_1 = 0, $3$hi = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$2 = $1_1 + 8 | 0;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $2_1 = i64toi32_i32$0;

                                    $2$hi = i64toi32_i32$1;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $3_1 = i64toi32_i32$1;

                                    $3$hi = i64toi32_i32$0;

                                    $9_1 = i64toi32_i32$2 + 16 | 0;

                                    $10_1 = $0_1 + 16 | 0;

                                    $11_1 = HEAPU16[$9_1 >> 1] | 0 | ((HEAPU16[($9_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$10_1 >> 1] = $11_1;

                                    HEAP16[($10_1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                    i64toi32_i32$0 = $2$hi;

                                    i64toi32_i32$1 = $0_1 + 8 | 0;

                                    $12_1 = $2_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $12_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = $3$hi;

                                    i64toi32_i32$1 = $0_1;

                                    $13_1 = $3_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $13_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $13_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $51($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $6_1 = 0, $7_1 = 0, $4_1 = 0, $3_1 = 0, $5_1 = 0, $8_1 = 0, wasm2js_i32$0 = 0,

                                        wasm2js_i32$1 = 0;

                                    $3_1 = 0;

                                    label$1 : while (1) {

                                        $4_1 = $3_1 << 1 | 0;

                                        $5_1 = $0_1 + $4_1 | 0;

                                        $6_1 = HEAP16[$5_1 >> 1] | 0;

                                        $7_1 = $6_1 << 16 | 0;

                                        $8_1 = Math_imul($6_1, 10486);

                                        $6_1 = $7_1 - $8_1 | 0;

                                        label$2 : {

                                            if (($8_1 ^ $7_1 | 0 | 0) > (-1 | 0)) {

                                                break label$2

                                            }

                                            if (($6_1 ^ $7_1 | 0 | 0) > (-1 | 0)) {

                                                break label$2

                                            }

                                            HEAP32[$2_1 >> 2] = 1;

                                            $6_1 = ($7_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $4_1 = HEAP16[($1_1 + $4_1 | 0) >> 1] | 0;

                                        $7_1 = Math_imul($4_1, 10486) + $6_1 | 0;

                                        label$3 : {

                                            if ((Math_imul($4_1, 5243) ^ $6_1 | 0 | 0) < (1 | 0)) {

                                                break label$3

                                            }

                                            if (($7_1 ^ $6_1 | 0 | 0) > (-1 | 0)) {

                                                break label$3

                                            }

                                            HEAP32[$2_1 >> 2] = 1;

                                            $7_1 = ($6_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        (wasm2js_i32$0 = $5_1, wasm2js_i32$1 = $220($7_1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $3_1 = $3_1 + 1 | 0;

                                        if (($3_1 | 0) != (10 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                }



                                function $52($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $3_1 = 0;

                                    HEAP16[$0_1 >> 1] = $3_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP16[($0_1 + 16 | 0) >> 1] = 0;

                                    i64toi32_i32$1 = $0_1 + 8 | 0;

                                    i64toi32_i32$0 = 0;

                                    $4_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $53($0_1) {

                                    $0_1 = $0_1 | 0;

                                    HEAP16[($0_1 + 14 | 0) >> 1] = 1;

                                }



                                function $54($0_1) {

                                    $0_1 = $0_1 | 0;

                                    HEAP16[($0_1 + 14 | 0) >> 1] = 0;

                                }



                                function $55($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    var $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0,

                                        $13_1 = 0, $14_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $10_1 = global$0 - 160 | 0;

                                    global$0 = $10_1;

                                    $11_1 = HEAP32[($8_1 + 132 | 0) >> 2] | 0;

                                    $12_1 = HEAP32[($8_1 + 128 | 0) >> 2] | 0;

                                    $13_1 = HEAP32[($8_1 + 124 | 0) >> 2] | 0;

                                    $14_1 = HEAP32[($8_1 + 120 | 0) >> 2] | 0;

                                    $8_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($0_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = HEAPU16[($0_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = $8_1;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $8_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = HEAPU16[$0_1 >> 1] | 0;

                                    HEAP16[$0_1 >> 1] = $4_1;

                                    $8_1 = ($4_1 | 0) < (14746 | 0);

                                    $15_1 = ($4_1 | 0) > (9830 | 0);

                                    $4_1 = 2147483647;

                                    label$1 : {

                                        label$2 : {

                                            $16_1 = HEAPU16[($0_1 + 12 | 0) >> 1] | 0;

                                            $17_1 = $16_1 << 16 >> 16;

                                            if (($17_1 | 0) > (16383 | 0)) {

                                                break label$2

                                            }

                                            $4_1 = -2147483648;

                                            if (($17_1 | 0) <= (-16385 | 0)) {

                                                break label$2

                                            }

                                            $4_1 = $16_1 << 17 | 0;

                                            break label$1;

                                        }

                                        HEAP32[$9_1 >> 2] = 1;

                                    }

                                    $8_1 = $8_1 ? $15_1 : 2;

                                    label$3 : {

                                        label$4 : {

                                            if (($220($4_1 | 0, $9_1 | 0) | 0 | 0) >= ($3_1 | 0)) {

                                                break label$4

                                            }

                                            $4_1 = 2;

                                            HEAP16[($0_1 + 16 | 0) >> 1] = 2;

                                            $15_1 = 0;

                                            break label$3;

                                        }

                                        label$5 : {

                                            $4_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                            if (($4_1 | 0) < (1 | 0)) {

                                                break label$5

                                            }

                                            $4_1 = $4_1 + -1 | 0;

                                            HEAP16[($0_1 + 16 | 0) >> 1] = $4_1;

                                        }

                                        $15_1 = 0;

                                        if ($4_1 & 65535 | 0) {

                                            break label$3

                                        }

                                        $4_1 = 0;

                                        $8_1 = ((((((HEAP16[$0_1 >> 1] | 0 | 0) < (9830 | 0)) + ((HEAP16[($0_1 + 2 | 0) >> 1] | 0 | 0) < (9830 | 0)) | 0) + ((HEAP16[($0_1 + 4 | 0) >> 1] | 0 | 0) < (9830 | 0)) | 0) + ((HEAP16[($0_1 + 6 | 0) >> 1] | 0 | 0) < (9830 | 0)) | 0) + ((HEAP16[($0_1 + 8 | 0) >> 1] | 0 | 0) < (9830 | 0)) | 0) >>> 0 > 2 >>> 0 ? 0 : $8_1;

                                        $15_1 = 1;

                                    }

                                    HEAP16[($0_1 + 12 | 0) >> 1] = $3_1;

                                    $8_1 = $8_1 - ($15_1 & ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) + 1 | 0 | 0) < ($8_1 | 0) | 0) | 0;

                                    $8_1 = (HEAPU16[($0_1 + 14 | 0) >> 1] | 0 | 0) == (1 | 0) ? 0 : ($3_1 | 0) < (10 | 0) ? 2 : $8_1 + (($8_1 | 0) < (2 | 0) & ($4_1 << 16 >> 16 | 0) > (0 | 0) | 0) | 0;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $8_1;

                                    label$6 : {

                                        $18_1 = $8_1 << 16 >> 16;

                                        if (($18_1 | 0) > (1 | 0)) {

                                            break label$6

                                        }

                                        $8_1 = $10_1 + 80 | 0;

                                        $15_1 = 0;

                                        label$7 : {

                                            label$8 : {

                                                if ($1_1 >>> 0 <= 7 >>> 0) {

                                                    break label$8

                                                }

                                                $0_1 = $5_1;

                                                $4_1 = 0;

                                                break label$7;

                                            }

                                            $0_1 = $5_1;

                                            $4_1 = 0;

                                            if ((1 << $1_1 | 0) & 208 | 0) {

                                                break label$6

                                            }

                                        }

                                        label$9 : while (1) {

                                            label$10 : {

                                                $17_1 = HEAPU16[$0_1 >> 1] | 0;

                                                if (!$17_1) {

                                                    break label$10

                                                }

                                                HEAP16[($10_1 + ($4_1 << 16 >> 16 << 1 | 0) | 0) >> 1] = $15_1;

                                                $4_1 = $4_1 + 1 | 0;

                                            }

                                            HEAP16[$8_1 >> 1] = $17_1;

                                            HEAP16[$0_1 >> 1] = 0;

                                            $17_1 = $15_1 | 1 | 0;

                                            label$11 : {

                                                $16_1 = HEAPU16[($0_1 + 2 | 0) >> 1] | 0;

                                                if (!$16_1) {

                                                    break label$11

                                                }

                                                HEAP16[($10_1 + ($4_1 << 16 >> 16 << 1 | 0) | 0) >> 1] = $17_1;

                                                $4_1 = $4_1 + 1 | 0;

                                            }

                                            HEAP16[($8_1 + 2 | 0) >> 1] = $16_1;

                                            HEAP16[($0_1 + 2 | 0) >> 1] = 0;

                                            $15_1 = $15_1 + 2 | 0;

                                            $0_1 = $0_1 + 4 | 0;

                                            $8_1 = $8_1 + 4 | 0;

                                            if (($17_1 & 65535 | 0) >>> 0 < 39 >>> 0) {

                                                continue label$9

                                            }

                                            break label$9;

                                        }

                                        ;

                                        if (($4_1 << 16 >> 16 | 0) < (1 | 0)) {

                                            break label$6

                                        }

                                        $18_1 = ($1_1 | 0) == (5 | 0) ? ($18_1 ? $13_1 : $14_1) : $18_1 ? $11_1 : $12_1;

                                        $11_1 = $4_1 & 65535 | 0;

                                        $1_1 = 0;

                                        label$12 : while (1) {

                                            $16_1 = HEAP16[($10_1 + ($1_1 << 1 | 0) | 0) >> 1] | 0;

                                            $8_1 = $16_1 << 1 | 0;

                                            $15_1 = HEAP16[(($10_1 + 80 | 0) + $8_1 | 0) >> 1] | 0;

                                            $0_1 = $18_1;

                                            label$13 : {

                                                label$14 : {

                                                    if (($16_1 | 0) > (39 | 0)) {

                                                        break label$14

                                                    }

                                                    $8_1 = $5_1 + $8_1 | 0;

                                                    $4_1 = $16_1;

                                                    $0_1 = $18_1;

                                                    label$15 : while (1) {

                                                        (wasm2js_i32$0 = $8_1, wasm2js_i32$1 = $183(HEAP16[$8_1 >> 1] | 0 | 0, (Math_imul(HEAP16[$0_1 >> 1] | 0, $15_1) >>> 15 | 0) << 16 >> 16 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                        $8_1 = $8_1 + 2 | 0;

                                                        $0_1 = $0_1 + 2 | 0;

                                                        $17_1 = $4_1 << 16 >> 16;

                                                        $4_1 = $4_1 + 1 | 0;

                                                        if (($17_1 | 0) < (39 | 0)) {

                                                            continue label$15

                                                        }

                                                        break label$15;

                                                    }

                                                    ;

                                                    if (($16_1 | 0) < (1 | 0)) {

                                                        break label$13

                                                    }

                                                }

                                                $4_1 = 0;

                                                $8_1 = $5_1;

                                                label$16 : while (1) {

                                                    (wasm2js_i32$0 = $8_1, wasm2js_i32$1 = $183(HEAP16[$8_1 >> 1] | 0 | 0, (Math_imul(HEAP16[$0_1 >> 1] | 0, $15_1) >>> 15 | 0) << 16 >> 16 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $8_1 = $8_1 + 2 | 0;

                                                    $0_1 = $0_1 + 2 | 0;

                                                    $4_1 = ($4_1 + 1 | 0) << 16 >> 16;

                                                    if (($4_1 | 0) < ($16_1 | 0)) {

                                                        continue label$16

                                                    }

                                                    break label$16;

                                                }

                                                ;

                                            }

                                            $1_1 = $1_1 + 1 | 0;

                                            if (($1_1 | 0) != ($11_1 | 0)) {

                                                continue label$12

                                            }

                                            break label$12;

                                        }

                                        ;

                                    }

                                    $16_1 = $7_1 & 65535 | 0;

                                    $1_1 = $3_1 << 1 | 0;

                                    $0_1 = 0 - $7_1 | 0;

                                    $3_1 = $0_1 & 65535 | 0;

                                    $18_1 = ($0_1 << 16 >> 16 | 0) < (31 | 0);

                                    $4_1 = 0;

                                    $15_1 = $2_1;

                                    label$17 : while (1) {

                                        label$18 : {

                                            label$19 : {

                                                $0_1 = Math_imul(HEAP16[($2_1 + ($4_1 << 1 | 0) | 0) >> 1] | 0, $6_1);

                                                if (($0_1 | 0) == (1073741824 | 0)) {

                                                    break label$19

                                                }

                                                $0_1 = $0_1 << 1 | 0;

                                                break label$18;

                                            }

                                            HEAP32[$9_1 >> 2] = 1;

                                            $0_1 = 2147483647;

                                        }

                                        $17_1 = Math_imul($1_1, HEAP16[$5_1 >> 1] | 0);

                                        $8_1 = $17_1 + $0_1 | 0;

                                        label$20 : {

                                            if (($17_1 ^ $0_1 | 0 | 0) < (0 | 0)) {

                                                break label$20

                                            }

                                            if (($8_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                break label$20

                                            }

                                            HEAP32[$9_1 >> 2] = 1;

                                            $8_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$21 : {

                                            label$22 : {

                                                if (($7_1 | 0) < (1 | 0)) {

                                                    break label$22

                                                }

                                                $0_1 = $8_1 << $16_1 | 0;

                                                if (($0_1 >> $16_1 | 0 | 0) == ($8_1 | 0)) {

                                                    break label$21

                                                }

                                                $0_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                                break label$21;

                                            }

                                            $0_1 = $18_1 ? $8_1 >> $3_1 | 0 : 0;

                                        }

                                        $5_1 = $5_1 + 2 | 0;

                                        (wasm2js_i32$0 = $15_1, wasm2js_i32$1 = $220($0_1 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $15_1 = $15_1 + 2 | 0;

                                        $4_1 = $4_1 + 1 | 0;

                                        if (($4_1 | 0) != (40 | 0)) {

                                            continue label$17

                                        }

                                        break label$17;

                                    }

                                    ;

                                    global$0 = $10_1 + 160 | 0;

                                }



                                function $56($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0, $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $1_1 = 0;

                                    HEAP16[$0_1 >> 1] = $1_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    $2_1 = 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $2_1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = $2_1 >>> 16 | 0;

                                    $3_1 = $0_1 + 8 | 0;

                                    $4_1 = 0;

                                    HEAP16[$3_1 >> 1] = $4_1;

                                    HEAP16[($3_1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $57($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0, $8_1 = 0, $10_1 = 0, $11_1 = 0,

                                        $9_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    label$1 : {

                                        if (($2_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $4_1 = HEAPU16[($0_1 + 2 | 0) >> 1] | 0;

                                        $5_1 = HEAPU16[$0_1 >> 1] | 0;

                                        $6_1 = HEAPU16[($0_1 + 6 | 0) >> 1] | 0;

                                        $7_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                        $8_1 = 0;

                                        label$2 : while (1) {

                                            $9_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                            $10_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                            HEAP16[($0_1 + 10 | 0) >> 1] = $10_1;

                                            $11_1 = HEAP16[$1_1 >> 1] | 0;

                                            HEAP16[($0_1 + 8 | 0) >> 1] = $11_1;

                                            $7_1 = ((((Math_imul($11_1 + $9_1 | 0, 7699) + Math_imul($10_1, -15398) | 0) + Math_imul($7_1 << 16 >> 16, 15836) | 0) + (Math_imul($6_1 << 16 >> 16, 15836) >> 15 | 0) | 0) + Math_imul($5_1 << 16 >> 16, -7667) | 0) + (Math_imul($4_1 << 16 >> 16, -7667) >> 15 | 0) | 0;

                                            $7_1 = ($7_1 + 268435456 | 0) >>> 0 < 536870912 >>> 0 ? $7_1 << 3 | 0 : ($7_1 >> 31 | 0) ^ 2147483647 | 0;

                                            (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $220((($7_1 + 1073741824 | 0 | 0) < (0 | 0) ? ($7_1 >> 31 | 0) ^ 2147483647 | 0 : $7_1 << 1 | 0) | 0, $3_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $5_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                            HEAP16[$0_1 >> 1] = $5_1;

                                            $4_1 = HEAPU16[($0_1 + 6 | 0) >> 1] | 0;

                                            $6_1 = ($7_1 >>> 1 | 0) & 32767 | 0;

                                            HEAP16[($0_1 + 6 | 0) >> 1] = $6_1;

                                            $7_1 = $7_1 >>> 16 | 0;

                                            HEAP16[($0_1 + 4 | 0) >> 1] = $7_1;

                                            HEAP16[($0_1 + 2 | 0) >> 1] = $4_1;

                                            $1_1 = $1_1 + 2 | 0;

                                            $8_1 = ($8_1 + 1 | 0) << 16 >> 16;

                                            if (($8_1 | 0) < ($2_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $58($0_1) {

                                    $0_1 = $0_1 | 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[$0_1 >> 1] = 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $59($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $8_1 = 0, $7_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $1_1 = ($1_1 + ($3_1 << 1 | 0) | 0) + -2 | 0;

                                    $5_1 = HEAPU16[$1_1 >> 1] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (($3_1 | 0) >= (2 | 0)) {

                                                break label$2

                                            }

                                            $3_1 = $1_1;

                                            break label$1;

                                        }

                                        $6_1 = $3_1 + -2 | 0;

                                        $7_1 = 0;

                                        label$3 : while (1) {

                                            label$4 : {

                                                label$5 : {

                                                    $3_1 = $1_1 + -2 | 0;

                                                    $8_1 = Math_imul(HEAP16[$3_1 >> 1] | 0, $2_1);

                                                    if (($8_1 | 0) >= (1073741824 | 0)) {

                                                        break label$5

                                                    }

                                                    $8_1 = $8_1 >> 15 | 0;

                                                    break label$4;

                                                }

                                                HEAP32[$4_1 >> 2] = 1;

                                                $8_1 = 32767;

                                            }

                                            (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $224(HEAP16[$1_1 >> 1] | 0 | 0, $8_1 << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $1_1 = $3_1;

                                            $7_1 = $7_1 + 1 | 0;

                                            if (($6_1 | 0) >= ($7_1 << 16 >> 16 | 0)) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                    }

                                    label$6 : {

                                        label$7 : {

                                            $1_1 = Math_imul($2_1, HEAP16[$0_1 >> 1] | 0);

                                            if (($1_1 | 0) >= (1073741824 | 0)) {

                                                break label$7

                                            }

                                            $1_1 = $1_1 >> 15 | 0;

                                            break label$6;

                                        }

                                        HEAP32[$4_1 >> 2] = 1;

                                        $1_1 = 32767;

                                    }

                                    (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $224(HEAP16[$3_1 >> 1] | 0 | 0, $1_1 << 16 >> 16 | 0, $4_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                    HEAP16[$0_1 >> 1] = $5_1;

                                }



                                function $60($0_1) {

                                    $0_1 = $0_1 | 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $229($0_1 + 104 | 0 | 0, 0 | 0, 340 | 0) | 0;

                                    $0_1 = $229($0_1 | 0, 0 | 0, 100 | 0) | 0;

                                    $7($0_1 + 102 | 0 | 0) | 0;

                                    $58($0_1 + 100 | 0 | 0) | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $61($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var i64toi32_i32$0 = 0, $5_1 = 0, i64toi32_i32$1 = 0, $7_1 = 0, i64toi32_i32$2 = 0,

                                        $20_1 = 0, $19_1 = 0, $21_1 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0,

                                        $35_1 = 0, $13_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $36_1 = 0, $37_1 = 0,

                                        $38_1 = 0, $39_1 = 0, $6_1 = 0, $8_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0,

                                        $12_1 = 0, $14_1 = 0, $15_1 = 0, $77_1 = 0, $80_1 = 0, $83_1 = 0, $22_1 = 0,

                                        $205_1 = 0, $209_1 = 0;

                                    $5_1 = global$0 - 112 | 0;

                                    global$0 = $5_1;

                                    $6_1 = $228($0_1 + 124 | 0 | 0, $2_1 | 0, 320 | 0) | 0;

                                    $7_1 = global$4;

                                    $1_1 = ($1_1 & -2 | 0 | 0) == (6 | 0);

                                    $8_1 = $1_1 ? $7_1 + 65760 | 0 : $7_1 + 65824 | 0;

                                    $9_1 = $1_1 ? $7_1 + 65728 | 0 : $7_1 + 65792 | 0;

                                    $10_1 = $0_1 + 102 | 0;

                                    $11_1 = $0_1 + 80 | 0;

                                    $12_1 = $0_1 + 100 | 0;

                                    $13_1 = $5_1 + 22 | 0;

                                    $14_1 = $13_1 + 14 | 0;

                                    $15_1 = $13_1 + 8 | 0;

                                    $16_1 = 0;

                                    label$1 : while (1) {

                                        $226($3_1 | 0, $9_1 | 0, $5_1 + 80 | 0 | 0);

                                        $226($3_1 | 0, $8_1 | 0, $5_1 + 48 | 0 | 0);

                                        $17_1 = $16_1 << 1 | 0;

                                        $18_1 = $6_1 + $17_1 | 0;

                                        $219($5_1 + 80 | 0 | 0, $18_1 | 0, $0_1 | 0, 40 | 0);

                                        i64toi32_i32$2 = $5_1;

                                        i64toi32_i32$0 = HEAPU16[($5_1 + 94 | 0) >> 1] | 0 | ((HEAPU16[($5_1 + 96 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[($5_1 + 98 | 0) >> 1] | 0 | ((HEAPU16[($5_1 + 100 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $77_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $5_1;

                                        $36_1 = $77_1;

                                        HEAP16[($5_1 + 14 | 0) >> 1] = $36_1;

                                        HEAP16[($5_1 + 16 | 0) >> 1] = $36_1 >>> 16 | 0;

                                        HEAP16[($5_1 + 18 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[($5_1 + 20 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $5_1;

                                        i64toi32_i32$1 = HEAP32[($5_1 + 88 | 0) >> 2] | 0;

                                        i64toi32_i32$0 = HEAP32[($5_1 + 92 | 0) >> 2] | 0;

                                        $80_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $5_1;

                                        HEAP32[($5_1 + 8 | 0) >> 2] = $80_1;

                                        HEAP32[($5_1 + 12 | 0) >> 2] = i64toi32_i32$0;

                                        i64toi32_i32$2 = $5_1;

                                        i64toi32_i32$0 = HEAP32[($5_1 + 80 | 0) >> 2] | 0;

                                        i64toi32_i32$1 = HEAP32[($5_1 + 84 | 0) >> 2] | 0;

                                        $83_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $5_1;

                                        HEAP32[$5_1 >> 2] = $83_1;

                                        HEAP32[($5_1 + 4 | 0) >> 2] = i64toi32_i32$1;

                                        i64toi32_i32$0 = $14_1;

                                        i64toi32_i32$1 = 0;

                                        $37_1 = 0;

                                        HEAP16[i64toi32_i32$0 >> 1] = $37_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $37_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$0 = $15_1;

                                        i64toi32_i32$1 = 0;

                                        $38_1 = 0;

                                        HEAP16[i64toi32_i32$0 >> 1] = $38_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $38_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$0 = $13_1;

                                        i64toi32_i32$1 = 0;

                                        $39_1 = 0;

                                        HEAP16[i64toi32_i32$0 >> 1] = $39_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $39_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        $225($5_1 + 48 | 0 | 0, $5_1 | 0, $5_1 | 0, 22 | 0, i64toi32_i32$0 | 0, 0 | 0);

                                        $1_1 = 21;

                                        $7_1 = 0;

                                        label$2 : {

                                            label$3 : {

                                                label$4 : while (1) {

                                                    $19_1 = $1_1 & 65535 | 0;

                                                    $20_1 = HEAP16[($5_1 + ($19_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $20_1 = Math_imul($20_1, $20_1);

                                                    if (($20_1 | 0) == (1073741824 | 0)) {

                                                        break label$3

                                                    }

                                                    $20_1 = ($20_1 << 1 | 0) + $7_1 | 0;

                                                    label$5 : {

                                                        label$6 : {

                                                            if (($7_1 | 0) >= (0 | 0)) {

                                                                break label$6

                                                            }

                                                            $7_1 = $20_1;

                                                            break label$5;

                                                        }

                                                        $21_1 = $20_1 ^ $7_1 | 0;

                                                        $7_1 = $20_1;

                                                        if (($21_1 | 0) > (-1 | 0)) {

                                                            break label$5

                                                        }

                                                        HEAP32[$4_1 >> 2] = 1;

                                                        $7_1 = 2147483647;

                                                    }

                                                    $1_1 = $1_1 + -1 | 0;

                                                    if ($19_1) {

                                                        continue label$4

                                                    }

                                                    break label$2;

                                                }

                                                ;

                                            }

                                            HEAP32[$4_1 >> 2] = 1;

                                        }

                                        $22_1 = $7_1 >>> 16 | 0;

                                        $20_1 = 20;

                                        $1_1 = 0;

                                        label$7 : {

                                            label$8 : {

                                                label$9 : while (1) {

                                                    $7_1 = $1_1;

                                                    $19_1 = $20_1 & 65535 | 0;

                                                    $1_1 = $5_1 + ($19_1 << 1 | 0) | 0;

                                                    $1_1 = Math_imul(HEAP16[($1_1 + 2 | 0) >> 1] | 0, HEAP16[$1_1 >> 1] | 0);

                                                    if (($1_1 | 0) == (1073741824 | 0)) {

                                                        break label$8

                                                    }

                                                    $21_1 = $1_1 << 1 | 0;

                                                    $1_1 = $21_1 + $7_1 | 0;

                                                    label$10 : {

                                                        if (($21_1 ^ $7_1 | 0 | 0) < (0 | 0)) {

                                                            break label$10

                                                        }

                                                        if (($1_1 ^ $7_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$10

                                                        }

                                                        HEAP32[$4_1 >> 2] = 1;

                                                        $1_1 = ($7_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    }

                                                    $20_1 = $20_1 + -1 | 0;

                                                    if ($19_1) {

                                                        continue label$9

                                                    }

                                                    break label$7;

                                                }

                                                ;

                                            }

                                            HEAP32[$4_1 >> 2] = 1;

                                            $1_1 = $7_1;

                                        }

                                        $7_1 = 0;

                                        label$11 : {

                                            if (($1_1 | 0) < (65536 | 0)) {

                                                break label$11

                                            }

                                            $7_1 = $185((Math_imul($1_1 >>> 16 | 0, 26214) >>> 15 | 0) << 16 >> 16 | 0, $22_1 << 16 >> 16 | 0) | 0;

                                        }

                                        $59($12_1 | 0, $0_1 | 0, $7_1 | 0, 40 | 0, $4_1 | 0);

                                        $7_1 = $2_1 + $17_1 | 0;

                                        $225($5_1 + 48 | 0 | 0, $0_1 | 0, $7_1 | 0, 40 | 0, $11_1 | 0, 1 | 0);

                                        $8($10_1 | 0, $18_1 | 0, $7_1 | 0, 29491 | 0, 40 | 0, $4_1 | 0);

                                        $3_1 = $3_1 + 22 | 0;

                                        $7_1 = ($16_1 << 16 | 0) + 2621440 | 0;

                                        $16_1 = $7_1 >> 16 | 0;

                                        if (($7_1 | 0) < (10485760 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $31_1 = $0_1 + 440 | 0;

                                    $32_1 = $0_1 + 120 | 0;

                                    $33_1 = HEAPU8[$31_1 >> 0] | 0 | ((HEAPU8[($31_1 + 1 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[($31_1 + 2 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[($31_1 + 3 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;

                                    HEAP8[$32_1 >> 0] = $33_1;

                                    HEAP8[($32_1 + 1 | 0) >> 0] = $33_1 >>> 8 | 0;

                                    HEAP8[($32_1 + 2 | 0) >> 0] = $33_1 >>> 16 | 0;

                                    HEAP8[($32_1 + 3 | 0) >> 0] = $33_1 >>> 24 | 0;

                                    i64toi32_i32$2 = $0_1 + 432 | 0;

                                    i64toi32_i32$1 = HEAPU8[i64toi32_i32$2 >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 1 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 2 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 3 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;

                                    i64toi32_i32$0 = HEAPU8[(i64toi32_i32$2 + 4 | 0) >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 5 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 6 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 7 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;

                                    $205_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1 + 112 | 0;

                                    $34_1 = $205_1;

                                    HEAP8[i64toi32_i32$1 >> 0] = $34_1;

                                    HEAP8[(i64toi32_i32$1 + 1 | 0) >> 0] = $34_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 2 | 0) >> 0] = $34_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 3 | 0) >> 0] = $34_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$1 + 4 | 0) >> 0] = i64toi32_i32$0;

                                    HEAP8[(i64toi32_i32$1 + 5 | 0) >> 0] = i64toi32_i32$0 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$1 + 6 | 0) >> 0] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$1 + 7 | 0) >> 0] = i64toi32_i32$0 >>> 24 | 0;

                                    i64toi32_i32$2 = $0_1 + 424 | 0;

                                    i64toi32_i32$0 = HEAPU8[i64toi32_i32$2 >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 1 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 2 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 3 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;

                                    i64toi32_i32$1 = HEAPU8[(i64toi32_i32$2 + 4 | 0) >> 0] | 0 | ((HEAPU8[(i64toi32_i32$2 + 5 | 0) >> 0] | 0) << 8 | 0) | 0 | ((HEAPU8[(i64toi32_i32$2 + 6 | 0) >> 0] | 0) << 16 | 0 | ((HEAPU8[(i64toi32_i32$2 + 7 | 0) >> 0] | 0) << 24 | 0) | 0) | 0;

                                    $209_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1;

                                    $35_1 = $209_1;

                                    HEAP8[(i64toi32_i32$0 + 104 | 0) >> 0] = $35_1;

                                    HEAP8[(i64toi32_i32$0 + 105 | 0) >> 0] = $35_1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 106 | 0) >> 0] = $35_1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 107 | 0) >> 0] = $35_1 >>> 24 | 0;

                                    HEAP8[(i64toi32_i32$0 + 108 | 0) >> 0] = i64toi32_i32$1;

                                    HEAP8[(i64toi32_i32$0 + 109 | 0) >> 0] = i64toi32_i32$1 >>> 8 | 0;

                                    HEAP8[(i64toi32_i32$0 + 110 | 0) >> 0] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP8[(i64toi32_i32$0 + 111 | 0) >> 0] = i64toi32_i32$1 >>> 24 | 0;

                                    global$0 = $5_1 + 112 | 0;

                                }



                                function $62($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var $3_1 = 0, $2_1 = 0, $4_1 = 0;

                                    $2_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $3_1 = $231(1764 | 0) | 0;

                                        if (!$3_1) {

                                            break label$1

                                        }

                                        label$2 : {

                                            label$3 : {

                                                if ($25($3_1 | 0) | 0) {

                                                    break label$3

                                                }

                                                $4_1 = $3_1 + 1748 | 0;

                                                if (!($56($4_1 | 0) | 0)) {

                                                    break label$2

                                                }

                                            }

                                            $0_1 = HEAP32[$3_1 >> 2] | 0;

                                            if (!$0_1) {

                                                break label$1

                                            }

                                            $232($0_1 | 0);

                                            HEAP32[$3_1 >> 2] = 0;

                                            return 65535 << 16 >> 16 | 0;

                                        }

                                        $2_1 = 0;

                                        $26($3_1 | 0, 0 | 0) | 0;

                                        $60($3_1 + 1304 | 0 | 0) | 0;

                                        $56($4_1 | 0) | 0;

                                        HEAP32[($3_1 + 1760 | 0) >> 2] = 0;

                                        HEAP32[$0_1 >> 2] = $3_1;

                                    }

                                    return $2_1 << 16 >> 16 | 0;

                                }



                                function $63($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $64($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $16_1 = 0, $10_1 = 0, $13_1 = 0, $15_1 = 0, $9_1 = 0, $5_1 = 0, $7_1 = 0,

                                        $11_1 = 0, $12_1 = 0, $14_1 = 0, $8_1 = 0, $17_1 = 0, $6_1 = 0;

                                    $5_1 = global$0 - 224 | 0;

                                    global$0 = $5_1;

                                    $6_1 = $0_1 + 1164 | 0;

                                    $7_1 = HEAP32[($0_1 + 1256 | 0) >> 2] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (($3_1 + -5 | 0) >>> 0 > 1 >>> 0) {

                                                break label$2

                                            }

                                            if ((HEAP16[($7_1 + 16 | 0) >> 1] | 0 | 0) < (1 | 0)) {

                                                break label$1

                                            }

                                            $8_1 = HEAP32[((HEAP32[($0_1 + 1260 | 0) >> 2] | 0) + 32 | 0) >> 2] | 0;

                                            $9_1 = 0;

                                            label$3 : while (1) {

                                                $10_1 = 0;

                                                label$4 : {

                                                    $11_1 = $9_1 << 1 | 0;

                                                    $12_1 = $8_1 + $11_1 | 0;

                                                    $13_1 = HEAP16[$12_1 >> 1] | 0;

                                                    if (($13_1 | 0) < (1 | 0)) {

                                                        break label$4

                                                    }

                                                    $14_1 = $13_1 & 3 | 0;

                                                    $15_1 = 0;

                                                    $16_1 = $2_1;

                                                    $10_1 = 0;

                                                    label$5 : {

                                                        if ($13_1 >>> 0 < 4 >>> 0) {

                                                            break label$5

                                                        }

                                                        $17_1 = $13_1 & 65532 | 0;

                                                        $10_1 = 0;

                                                        $16_1 = $2_1;

                                                        $13_1 = 0;

                                                        label$6 : while (1) {

                                                            $10_1 = HEAPU16[($16_1 + 6 | 0) >> 1] | 0 | ((HEAPU16[($16_1 + 2 | 0) >> 1] | 0 | ($10_1 << 2 | 0 | ((HEAPU16[$16_1 >> 1] | 0) << 1 | 0) | 0) | 0) << 2 | 0 | ((HEAPU16[($16_1 + 4 | 0) >> 1] | 0) << 1 | 0) | 0) | 0;

                                                            $16_1 = $16_1 + 8 | 0;

                                                            $13_1 = $13_1 + 4 | 0;

                                                            if (($13_1 & 65535 | 0 | 0) != ($17_1 | 0)) {

                                                                continue label$6

                                                            }

                                                            break label$6;

                                                        }

                                                        ;

                                                    }

                                                    if (!$14_1) {

                                                        break label$4

                                                    }

                                                    label$7 : while (1) {

                                                        $10_1 = HEAPU16[$16_1 >> 1] | 0 | ($10_1 << 1 | 0) | 0;

                                                        $16_1 = $16_1 + 2 | 0;

                                                        $15_1 = $15_1 + 1 | 0;

                                                        if (($15_1 & 65535 | 0 | 0) != ($14_1 | 0)) {

                                                            continue label$7

                                                        }

                                                        break label$7;

                                                    }

                                                    ;

                                                }

                                                HEAP16[(($5_1 + 96 | 0) + $11_1 | 0) >> 1] = $10_1;

                                                $2_1 = $2_1 + ((HEAP16[$12_1 >> 1] | 0) << 1 | 0) | 0;

                                                $9_1 = $9_1 + 1 | 0;

                                                if (($9_1 | 0) < (HEAP16[($7_1 + 16 | 0) >> 1] | 0 | 0)) {

                                                    continue label$3

                                                }

                                                break label$1;

                                            }

                                            ;

                                        }

                                        $7_1 = $7_1 + ($1_1 << 1 | 0) | 0;

                                        if ((HEAP16[$7_1 >> 1] | 0 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $8_1 = HEAP32[((HEAP32[($0_1 + 1260 | 0) >> 2] | 0) + ($1_1 << 2 | 0) | 0) >> 2] | 0;

                                        $9_1 = 0;

                                        label$8 : while (1) {

                                            $10_1 = 0;

                                            label$9 : {

                                                $11_1 = $9_1 << 1 | 0;

                                                $12_1 = $8_1 + $11_1 | 0;

                                                $13_1 = HEAP16[$12_1 >> 1] | 0;

                                                if (($13_1 | 0) < (1 | 0)) {

                                                    break label$9

                                                }

                                                $14_1 = $13_1 & 3 | 0;

                                                $15_1 = 0;

                                                $16_1 = $2_1;

                                                $10_1 = 0;

                                                label$10 : {

                                                    if ($13_1 >>> 0 < 4 >>> 0) {

                                                        break label$10

                                                    }

                                                    $17_1 = $13_1 & 65532 | 0;

                                                    $10_1 = 0;

                                                    $16_1 = $2_1;

                                                    $13_1 = 0;

                                                    label$11 : while (1) {

                                                        $10_1 = HEAPU16[($16_1 + 6 | 0) >> 1] | 0 | ((HEAPU16[($16_1 + 2 | 0) >> 1] | 0 | ($10_1 << 2 | 0 | ((HEAPU16[$16_1 >> 1] | 0) << 1 | 0) | 0) | 0) << 2 | 0 | ((HEAPU16[($16_1 + 4 | 0) >> 1] | 0) << 1 | 0) | 0) | 0;

                                                        $16_1 = $16_1 + 8 | 0;

                                                        $13_1 = $13_1 + 4 | 0;

                                                        if (($13_1 & 65535 | 0 | 0) != ($17_1 | 0)) {

                                                            continue label$11

                                                        }

                                                        break label$11;

                                                    }

                                                    ;

                                                }

                                                if (!$14_1) {

                                                    break label$9

                                                }

                                                label$12 : while (1) {

                                                    $10_1 = HEAPU16[$16_1 >> 1] | 0 | ($10_1 << 1 | 0) | 0;

                                                    $16_1 = $16_1 + 2 | 0;

                                                    $15_1 = $15_1 + 1 | 0;

                                                    if (($15_1 & 65535 | 0 | 0) != ($14_1 | 0)) {

                                                        continue label$12

                                                    }

                                                    break label$12;

                                                }

                                                ;

                                            }

                                            HEAP16[(($5_1 + 96 | 0) + $11_1 | 0) >> 1] = $10_1;

                                            $2_1 = $2_1 + ((HEAP16[$12_1 >> 1] | 0) << 1 | 0) | 0;

                                            $9_1 = $9_1 + 1 | 0;

                                            if (($9_1 | 0) < (HEAP16[$7_1 >> 1] | 0 | 0)) {

                                                continue label$8

                                            }

                                            break label$8;

                                        }

                                        ;

                                    }

                                    $27($0_1 | 0, $1_1 | 0, $5_1 + 96 | 0 | 0, $3_1 | 0, $4_1 | 0, $5_1 | 0);

                                    $61($0_1 + 1304 | 0 | 0, $1_1 | 0, $4_1 | 0, $5_1 | 0, $6_1 | 0);

                                    $57($0_1 + 1748 | 0 | 0, $4_1 | 0, 160 | 0, $6_1 | 0);

                                    $10_1 = 0;

                                    label$13 : while (1) {

                                        $16_1 = $4_1 + ($10_1 << 1 | 0) | 0;

                                        HEAP16[$16_1 >> 1] = (HEAPU16[$16_1 >> 1] | 0) & 65528 | 0;

                                        $15_1 = $16_1 + 2 | 0;

                                        HEAP16[$15_1 >> 1] = (HEAPU16[$15_1 >> 1] | 0) & 65528 | 0;

                                        $15_1 = $16_1 + 4 | 0;

                                        HEAP16[$15_1 >> 1] = (HEAPU16[$15_1 >> 1] | 0) & 65528 | 0;

                                        $15_1 = $16_1 + 6 | 0;

                                        HEAP16[$15_1 >> 1] = (HEAPU16[$15_1 >> 1] | 0) & 65528 | 0;

                                        $16_1 = $16_1 + 8 | 0;

                                        HEAP16[$16_1 >> 1] = (HEAPU16[$16_1 >> 1] | 0) & 65528 | 0;

                                        $10_1 = $10_1 + 5 | 0;

                                        if (($10_1 | 0) != (160 | 0)) {

                                            continue label$13

                                        }

                                        break label$13;

                                    }

                                    ;

                                    global$0 = $5_1 + 224 | 0;

                                }



                                function $65($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $5_1 = 0, $4_1 = 0;

                                    $4_1 = HEAPU16[((HEAP32[($3_1 + 96 | 0) >> 2] | 0) + ($0_1 << 1 | 0) | 0) >> 1] | 0;

                                    $5_1 = ($4_1 + -1 | 0) << 16 >> 16;

                                    label$1 : {

                                        label$2 : {

                                            if ($0_1 >>> 0 > 7 >>> 0) {

                                                break label$2

                                            }

                                            if (($5_1 | 0) < (0 | 0)) {

                                                break label$1

                                            }

                                            $3_1 = HEAP32[((HEAP32[($3_1 + 100 | 0) >> 2] | 0) + ($0_1 << 2 | 0) | 0) >> 2] | 0;

                                            $0_1 = $5_1;

                                            label$3 : {

                                                if (!($4_1 & 1 | 0)) {

                                                    break label$3

                                                }

                                                $0_1 = $5_1 & 65535 | 0;

                                                HEAP16[($2_1 + ((HEAP16[($3_1 + ($0_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[($1_1 + ($0_1 >>> 3 | 0) | 0) >> 0] | 0) >>> (($5_1 ^ -1 | 0) & 7 | 0) | 0) & 1 | 0;

                                                $0_1 = $4_1 + -2 | 0;

                                            }

                                            if (!$5_1) {

                                                break label$1

                                            }

                                            label$4 : while (1) {

                                                $5_1 = $0_1 & 65535 | 0;

                                                HEAP16[($2_1 + ((HEAP16[($3_1 + ($5_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[($1_1 + ($5_1 >>> 3 | 0) | 0) >> 0] | 0) >>> (($0_1 ^ -1 | 0) & 7 | 0) | 0) & 1 | 0;

                                                $5_1 = ($0_1 + -1 | 0) & 65535 | 0;

                                                HEAP16[($2_1 + ((HEAP16[($3_1 + ($5_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] = ((HEAPU8[($1_1 + ($5_1 >>> 3 | 0) | 0) >> 0] | 0) >>> ((0 - $0_1 | 0) & 7 | 0) | 0) & 1 | 0;

                                                $5_1 = $0_1 << 16 >> 16;

                                                $0_1 = $0_1 + -2 | 0;

                                                if (($5_1 | 0) > (1 | 0)) {

                                                    continue label$4

                                                }

                                                break label$1;

                                            }

                                            ;

                                        }

                                        if (($5_1 | 0) < (0 | 0)) {

                                            break label$1

                                        }

                                        $0_1 = $5_1;

                                        label$5 : {

                                            if (!($4_1 & 1 | 0)) {

                                                break label$5

                                            }

                                            $0_1 = $5_1 & 65535 | 0;

                                            HEAP16[($2_1 + ($0_1 << 1 | 0) | 0) >> 1] = ((HEAPU8[($1_1 + ($0_1 >>> 3 | 0) | 0) >> 0] | 0) >>> (($5_1 ^ -1 | 0) & 7 | 0) | 0) & 1 | 0;

                                            $0_1 = $4_1 + -2 | 0;

                                        }

                                        if (!$5_1) {

                                            break label$1

                                        }

                                        label$6 : while (1) {

                                            $3_1 = $0_1 & 65535 | 0;

                                            HEAP16[($2_1 + ($3_1 << 1 | 0) | 0) >> 1] = ((HEAPU8[($1_1 + ($3_1 >>> 3 | 0) | 0) >> 0] | 0) >>> (($0_1 ^ -1 | 0) & 7 | 0) | 0) & 1 | 0;

                                            $3_1 = ($0_1 + -1 | 0) & 65535 | 0;

                                            HEAP16[($2_1 + ($3_1 << 1 | 0) | 0) >> 1] = ((HEAPU8[($1_1 + ($3_1 >>> 3 | 0) | 0) >> 0] | 0) >>> ((0 - $0_1 | 0) & 7 | 0) | 0) & 1 | 0;

                                            $3_1 = $0_1 << 16 >> 16;

                                            $0_1 = $0_1 + -2 | 0;

                                            if (($3_1 | 0) > (1 | 0)) {

                                                continue label$6

                                            }

                                            break label$6;

                                        }

                                        ;

                                    }

                                }



                                function $66($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    return ($162($0_1 | 0, $2_1 | 0, global$4 + 65536 | 0 | 0) | 0 | ($159($1_1 | 0) | 0) | 0 ? -1 : 0) | 0;

                                }



                                function $67($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $163($0_1 | 0);

                                    $160($1_1 | 0);

                                }



                                function $68($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0, $8_1 = 0;

                                    $7_1 = global$0 - 512 | 0;

                                    global$0 = $7_1;

                                    HEAP32[($7_1 + 8 | 0) >> 2] = 0;

                                    $8_1 = 65535;

                                    label$1 : {

                                        label$2 : {

                                            switch ($6_1 | 0) {

                                                case 0:

                                                case 1:

                                                case 3:

                                                    $164($0_1 | 0, $2_1 | 0, $3_1 | 0, $7_1 + 16 | 0 | 0, $7_1 + 8 | 0 | 0);

                                                    $161($1_1 | 0, HEAP32[($7_1 + 8 | 0) >> 2] | 0 | 0, $7_1 + 12 | 0 | 0);

                                                    label$4 : {

                                                        label$5 : {

                                                            $1_1 = HEAP32[($7_1 + 12 | 0) >> 2] | 0;

                                                            if (($1_1 | 0) == (3 | 0)) {

                                                                break label$5

                                                            }

                                                            $3_1 = HEAP32[($7_1 + 8 | 0) >> 2] | 0;

                                                            HEAP32[$5_1 >> 2] = $3_1;

                                                            if (($3_1 | 0) != (8 | 0)) {

                                                                break label$4

                                                            }

                                                            label$6 : {

                                                                label$7 : {

                                                                    switch ($1_1 + -1 | 0 | 0) {

                                                                        case 0:

                                                                            HEAP16[($7_1 + 86 | 0) >> 1] = 0;

                                                                            break label$6;

                                                                        case 1:

                                                                            break label$7;

                                                                        default:

                                                                            break label$6;

                                                                    }

                                                                    ;

                                                                }

                                                                HEAP16[($7_1 + 86 | 0) >> 1] = HEAPU16[($7_1 + 86 | 0) >> 1] | 0 | 1 | 0;

                                                            }

                                                            HEAP16[($7_1 + 88 | 0) >> 1] = $2_1 & 1 | 0;

                                                            HEAP16[($7_1 + 92 | 0) >> 1] = ($2_1 >>> 2 | 0) & 1 | 0;

                                                            HEAP16[($7_1 + 90 | 0) >> 1] = ($2_1 >>> 1 | 0) & 1 | 0;

                                                            $3_1 = 8;

                                                            break label$4;

                                                        }

                                                        $3_1 = 15;

                                                        HEAP32[$5_1 >> 2] = 15;

                                                    }

                                                    label$9 : {

                                                        switch ($6_1 | 0) {

                                                            case 3:

                                                                $106($3_1 | 0, $7_1 + 16 | 0 | 0, $4_1 | 0, (HEAP32[($0_1 + 4 | 0) >> 2] | 0) + 2392 | 0 | 0);

                                                                $8_1 = HEAP32[$5_1 >> 2] | 0;

                                                                $8_1 = HEAPU16[(global$8 + (($8_1 << 16 | 0) >> 15 | 0) | 0) >> 1] | 0;

                                                                break label$1;

                                                            case 0:

                                                                $105($3_1 | 0, $7_1 + 16 | 0 | 0, $4_1 | 0, (HEAP32[($0_1 + 4 | 0) >> 2] | 0) + 2392 | 0 | 0);

                                                                $8_1 = HEAP32[$5_1 >> 2] | 0;

                                                                $8_1 = HEAPU16[(global$8 + (($8_1 << 16 | 0) >> 15 | 0) | 0) >> 1] | 0;

                                                                break label$1;

                                                            case 1:

                                                                break label$9;

                                                            default:

                                                                break label$1;

                                                        }

                                                        ;

                                                    }

                                                    $104($3_1 | 0, $7_1 + 16 | 0 | 0, $4_1 | 0, (HEAP32[($0_1 + 4 | 0) >> 2] | 0) + 2392 | 0 | 0);

                                                    $8_1 = HEAP32[$5_1 >> 2] | 0;

                                                    $8_1 = HEAPU16[(global$9 + (($8_1 << 16 | 0) >> 15 | 0) | 0) >> 1] | 0;

                                                    break label$1;

                                                case 2:

                                                    break label$2;

                                                default:

                                                    break label$1;

                                            }

                                            ;

                                        }

                                        $164($0_1 | 0, $2_1 | 0, $3_1 | 0, $7_1 + 16 | 0 | 2 | 0 | 0, $7_1 + 8 | 0 | 0);

                                        $8_1 = HEAP32[($7_1 + 8 | 0) >> 2] | 0;

                                        HEAP32[$5_1 >> 2] = $8_1;

                                        $161($1_1 | 0, $8_1 | 0, $7_1 + 12 | 0 | 0);

                                        $8_1 = HEAP32[($7_1 + 12 | 0) >> 2] | 0;

                                        HEAP16[($7_1 + 16 | 0) >> 1] = $8_1;

                                        HEAP16[($7_1 + 506 | 0) >> 1] = ($8_1 | 0) == (3 | 0) ? -1 : $2_1;

                                        $8_1 = 492;

                                        $227($4_1 | 0, $7_1 + 16 | 0 | 0, 492 | 0) | 0;

                                    }

                                    global$0 = $7_1 + 512 | 0;

                                    return $8_1 << 16 >> 16 | 0;

                                }



                                function $69($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $7_1 = 0, $9_1 = 0, $10_1 = 0, $12_1 = 0, $11_1 = 0, $8_1 = 0, $6_1 = 0,

                                        $14_1 = 0, $13_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0;

                                    $6_1 = global$0 - 480 | 0;

                                    global$0 = $6_1;

                                    $7_1 = $6_1;

                                    $8_1 = 240;

                                    $9_1 = $4_1;

                                    $10_1 = $0_1;

                                    $11_1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : while (1) {

                                                    $12_1 = (Math_imul(HEAP16[$9_1 >> 1] | 0, HEAP16[$10_1 >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                                    HEAP16[$7_1 >> 1] = $12_1;

                                                    label$5 : {

                                                        $11_1 = Math_imul(($12_1 << 16 | 0) >> 15 | 0, $12_1 << 16 >> 16) + $11_1 | 0;

                                                        if (($11_1 | 0) >= (0 | 0)) {

                                                            break label$5

                                                        }

                                                        $13_1 = $11_1 >>> 31 | 0;

                                                        break label$2;

                                                    }

                                                    $12_1 = (Math_imul(HEAP16[($9_1 + 2 | 0) >> 1] | 0, HEAP16[($10_1 + 2 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                                    HEAP16[($7_1 + 2 | 0) >> 1] = $12_1;

                                                    $11_1 = Math_imul(($12_1 << 16 | 0) >> 15 | 0, $12_1 << 16 >> 16) + $11_1 | 0;

                                                    if (($11_1 | 0) < (0 | 0)) {

                                                        break label$3

                                                    }

                                                    $10_1 = $10_1 + 4 | 0;

                                                    $9_1 = $9_1 + 4 | 0;

                                                    $7_1 = $7_1 + 4 | 0;

                                                    $8_1 = $8_1 + -2 | 0;

                                                    if ($8_1 & 65535 | 0) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                                $14_1 = 0;

                                                break label$1;

                                            }

                                            $13_1 = $11_1 >>> 31 | 0;

                                            $8_1 = $8_1 + -1 | 0;

                                        }

                                        label$6 : {

                                            if (!($8_1 & 65535 | 0)) {

                                                break label$6

                                            }

                                            $10_1 = (240 - ($8_1 << 16 >> 16) | 0) << 1 | 0;

                                            $7_1 = $0_1 + $10_1 | 0;

                                            $9_1 = $4_1 + $10_1 | 0;

                                            $10_1 = $6_1 + $10_1 | 0;

                                            label$7 : {

                                                label$8 : {

                                                    $0_1 = $8_1 & 3 | 0;

                                                    if ($0_1) {

                                                        break label$8

                                                    }

                                                    $12_1 = $8_1;

                                                    break label$7;

                                                }

                                                $4_1 = 0;

                                                $12_1 = $8_1;

                                                label$9 : while (1) {

                                                    HEAP16[$10_1 >> 1] = (Math_imul(HEAP16[$9_1 >> 1] | 0, HEAP16[$7_1 >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                                    $12_1 = $12_1 + -1 | 0;

                                                    $10_1 = $10_1 + 2 | 0;

                                                    $9_1 = $9_1 + 2 | 0;

                                                    $7_1 = $7_1 + 2 | 0;

                                                    $4_1 = $4_1 + 1 | 0;

                                                    if (($4_1 & 65535 | 0 | 0) != ($0_1 | 0)) {

                                                        continue label$9

                                                    }

                                                    break label$9;

                                                }

                                                ;

                                            }

                                            label$10 : {

                                                if (($8_1 & 65535 | 0) >>> 0 < 4 >>> 0) {

                                                    break label$10

                                                }

                                                label$11 : while (1) {

                                                    HEAP16[$10_1 >> 1] = (Math_imul(HEAP16[$9_1 >> 1] | 0, HEAP16[$7_1 >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                                    HEAP16[($10_1 + 2 | 0) >> 1] = (Math_imul(HEAP16[($9_1 + 2 | 0) >> 1] | 0, HEAP16[($7_1 + 2 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                                    HEAP16[($10_1 + 4 | 0) >> 1] = (Math_imul(HEAP16[($9_1 + 4 | 0) >> 1] | 0, HEAP16[($7_1 + 4 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                                    HEAP16[($10_1 + 6 | 0) >> 1] = (Math_imul(HEAP16[($9_1 + 6 | 0) >> 1] | 0, HEAP16[($7_1 + 6 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                                    $10_1 = $10_1 + 8 | 0;

                                                    $9_1 = $9_1 + 8 | 0;

                                                    $7_1 = $7_1 + 8 | 0;

                                                    $12_1 = $12_1 + -4 | 0;

                                                    if ($12_1 & 65535 | 0) {

                                                        continue label$11

                                                    }

                                                    break label$11;

                                                }

                                                ;

                                            }

                                            $14_1 = 0;

                                            if (!$13_1) {

                                                break label$1

                                            }

                                        }

                                        $14_1 = 0;

                                        label$12 : while (1) {

                                            $7_1 = $6_1;

                                            $4_1 = 120;

                                            $11_1 = 0;

                                            label$13 : while (1) {

                                                $9_1 = (HEAP16[$7_1 >> 1] | 0) >> 2 | 0;

                                                HEAP16[$7_1 >> 1] = $9_1;

                                                $10_1 = (HEAP16[($7_1 + 2 | 0) >> 1] | 0) >> 2 | 0;

                                                HEAP16[($7_1 + 2 | 0) >> 1] = $10_1;

                                                $12_1 = (HEAP16[($7_1 + 4 | 0) >> 1] | 0) >> 2 | 0;

                                                HEAP16[($7_1 + 4 | 0) >> 1] = $12_1;

                                                $8_1 = (HEAP16[($7_1 + 6 | 0) >> 1] | 0) >> 2 | 0;

                                                HEAP16[($7_1 + 6 | 0) >> 1] = $8_1;

                                                $11_1 = ((Math_imul($8_1, $8_1) + Math_imul($12_1, $12_1) | 0) << 1 | 0) + (((Math_imul($10_1, $10_1) + Math_imul($9_1, $9_1) | 0) << 1 | 0) + $11_1 | 0) | 0;

                                                $7_1 = $7_1 + 8 | 0;

                                                $4_1 = $4_1 + -2 | 0;

                                                if ($4_1 & 65535 | 0) {

                                                    continue label$13

                                                }

                                                break label$13;

                                            }

                                            ;

                                            $14_1 = $14_1 + 4 | 0;

                                            if (($11_1 | 0) < (1 | 0)) {

                                                continue label$12

                                            }

                                            break label$12;

                                        }

                                        ;

                                    }

                                    $7_1 = $11_1 + 1 | 0;

                                    $15_1 = $209($7_1 | 0) | 0;

                                    $7_1 = $7_1 << $15_1 | 0;

                                    HEAP16[$2_1 >> 1] = $7_1 >>> 16 | 0;

                                    HEAP16[$3_1 >> 1] = ($7_1 & 65534 | 0) >>> 1 | 0;

                                    label$14 : {

                                        if (($1_1 | 0) < (1 | 0)) {

                                            break label$14

                                        }

                                        $16_1 = $6_1 + 478 | 0;

                                        $17_1 = $15_1 + 1 | 0;

                                        $11_1 = $1_1 & 65535 | 0;

                                        $18_1 = 239 - $11_1 | 0;

                                        $7_1 = $11_1 << 1 | 0;

                                        $4_1 = $2_1 + $7_1 | 0;

                                        $0_1 = $3_1 + $7_1 | 0;

                                        $2_1 = 0;

                                        label$15 : while (1) {

                                            $3_1 = 239 - $11_1 | 0;

                                            $7_1 = $6_1 + ($3_1 << 1 | 0) | 0;

                                            label$16 : {

                                                label$17 : {

                                                    if ($3_1 & 131070 | 0) {

                                                        break label$17

                                                    }

                                                    $10_1 = 0;

                                                    $9_1 = $16_1;

                                                    break label$16;

                                                }

                                                $9_1 = ($18_1 + $2_1 | 0) >>> 1 | 0;

                                                $13_1 = $9_1 & 1 | 0;

                                                $10_1 = 0;

                                                label$18 : {

                                                    label$19 : {

                                                        if (($9_1 & 65535 | 0 | 0) != (1 | 0)) {

                                                            break label$19

                                                        }

                                                        $9_1 = $16_1;

                                                        break label$18;

                                                    }

                                                    $8_1 = $9_1 & 65534 | 0;

                                                    $10_1 = 0;

                                                    $9_1 = $16_1;

                                                    $12_1 = 0;

                                                    label$20 : while (1) {

                                                        $10_1 = (Math_imul(HEAP16[($9_1 + -4 | 0) >> 1] | 0, HEAP16[($7_1 + -4 | 0) >> 1] | 0) + ((Math_imul(HEAP16[$9_1 >> 1] | 0, HEAP16[$7_1 >> 1] | 0) + $10_1 | 0) + Math_imul(HEAP16[($9_1 + -2 | 0) >> 1] | 0, HEAP16[($7_1 + -2 | 0) >> 1] | 0) | 0) | 0) + Math_imul(HEAP16[($9_1 + -6 | 0) >> 1] | 0, HEAP16[($7_1 + -6 | 0) >> 1] | 0) | 0;

                                                        $9_1 = $9_1 + -8 | 0;

                                                        $7_1 = $7_1 + -8 | 0;

                                                        $12_1 = $12_1 + 2 | 0;

                                                        if (($12_1 & 65535 | 0 | 0) != ($8_1 | 0)) {

                                                            continue label$20

                                                        }

                                                        break label$20;

                                                    }

                                                    ;

                                                }

                                                if (!$13_1) {

                                                    break label$16

                                                }

                                                $10_1 = (Math_imul(HEAP16[$9_1 >> 1] | 0, HEAP16[$7_1 >> 1] | 0) + $10_1 | 0) + Math_imul(HEAP16[($9_1 + -2 | 0) >> 1] | 0, HEAP16[($7_1 + -2 | 0) >> 1] | 0) | 0;

                                                $9_1 = $9_1 + -4 | 0;

                                                $7_1 = $7_1 + -4 | 0;

                                            }

                                            $10_1 = Math_imul(HEAP16[$9_1 >> 1] | 0, HEAP16[$7_1 >> 1] | 0) + $10_1 | 0;

                                            label$21 : {

                                                if (!($3_1 & 1 | 0)) {

                                                    break label$21

                                                }

                                                $10_1 = Math_imul(HEAP16[($9_1 + -2 | 0) >> 1] | 0, HEAP16[($7_1 + -2 | 0) >> 1] | 0) + $10_1 | 0;

                                            }

                                            $7_1 = $10_1 << $17_1 | 0;

                                            HEAP16[$4_1 >> 1] = $7_1 >>> 16 | 0;

                                            HEAP16[$0_1 >> 1] = ($7_1 & 65534 | 0) >>> 1 | 0;

                                            $2_1 = $2_1 + 1 | 0;

                                            $11_1 = $11_1 + -1 | 0;

                                            $0_1 = $0_1 + -2 | 0;

                                            $4_1 = $4_1 + -2 | 0;

                                            $7_1 = $1_1 << 16 >> 16;

                                            $1_1 = $1_1 + -1 | 0;

                                            if (($7_1 | 0) > (1 | 0)) {

                                                continue label$15

                                            }

                                            break label$15;

                                        }

                                        ;

                                    }

                                    global$0 = $6_1 + 480 | 0;

                                    return ($15_1 - $14_1 | 0) << 16 >> 16 | 0;

                                }



                                function $70($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $8_1 = 0, $11_1 = 0, $10_1 = 0, $12_1 = 0, $13_1 = 0, $9_1 = 0, $14_1 = 0,

                                        $25_1 = 0, $26_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0,

                                        $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0;

                                    $8_1 = global$0 - 3456 | 0;

                                    global$0 = $8_1;

                                    $94($2_1 | 0, $0_1 | 0, $8_1 + 3280 | 0 | 0, 2 | 0, $7_1 | 0);

                                    $158($8_1 + 3280 | 0 | 0, $1_1 | 0, $8_1 + 3200 | 0 | 0, $8_1 + 3382 | 0 | 0, 5 | 0, $8_1 + 3392 | 0 | 0, 5 | 0, $7_1 | 0);

                                    $92($2_1 | 0, $8_1 + 3200 | 0 | 0, $8_1 | 0, $7_1 | 0);

                                    $156(10 | 0, 5 | 0, 5 | 0, $8_1 + 3280 | 0 | 0, $8_1 | 0, $8_1 + 3392 | 0 | 0, $8_1 + 3382 | 0 | 0, $8_1 + 3360 | 0 | 0, $7_1 | 0);

                                    $9_1 = $229($3_1 | 0, 0 | 0, 80 | 0) | 0;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = -1;

                                    $25_1 = -1;

                                    HEAP16[$5_1 >> 1] = $25_1;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = $25_1 >>> 16 | 0;

                                    $26_1 = -1;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = $26_1;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = $26_1 >>> 16 | 0;

                                    $0_1 = $8_1 + 3360 | 0;

                                    $1_1 = $8_1 + 3424 | 0;

                                    $7_1 = 0;

                                    label$1 : while (1) {

                                        $3_1 = $7_1;

                                        $10_1 = HEAP16[$0_1 >> 1] | 0;

                                        $7_1 = $10_1 << 1 | 0;

                                        $11_1 = $9_1 + $7_1 | 0;

                                        $7_1 = (HEAP16[(($8_1 + 3200 | 0) + $7_1 | 0) >> 1] | 0 | 0) > (0 | 0);

                                        HEAP16[$11_1 >> 1] = (HEAPU16[$11_1 >> 1] | 0) + ($7_1 ? 4096 : -4096) | 0;

                                        HEAP16[$1_1 >> 1] = $7_1 ? 8192 : -8192;

                                        $11_1 = Math_imul($10_1, 6554) >>> 15 | 0;

                                        $7_1 = ($7_1 ? $11_1 : $11_1 + 8 | 0) << 16 >> 16;

                                        label$2 : {

                                            label$3 : {

                                                $11_1 = $5_1 + (($10_1 + Math_imul($11_1, -5) | 0) << 16 >> 16 << 1 | 0) | 0;

                                                $12_1 = HEAPU16[$11_1 >> 1] | 0;

                                                $13_1 = $12_1 << 16 >> 16;

                                                if (($13_1 | 0) < (0 | 0)) {

                                                    break label$3

                                                }

                                                label$4 : {

                                                    label$5 : {

                                                        if (($12_1 ^ $7_1 | 0) & 8 | 0) {

                                                            break label$5

                                                        }

                                                        $10_1 = $11_1 + 10 | 0;

                                                        if (($13_1 | 0) > ($7_1 | 0)) {

                                                            break label$4

                                                        }

                                                        break label$2;

                                                    }

                                                    $10_1 = $11_1 + 10 | 0;

                                                    if (($12_1 & 7 | 0) >>> 0 > (($7_1 & 65535 | 0) & 7 | 0) >>> 0) {

                                                        break label$2

                                                    }

                                                }

                                                HEAP16[$10_1 >> 1] = $13_1;

                                            }

                                            $10_1 = $11_1;

                                        }

                                        $1_1 = $1_1 + 2 | 0;

                                        $0_1 = $0_1 + 2 | 0;

                                        HEAP16[$10_1 >> 1] = $7_1;

                                        $7_1 = $3_1 + 1 | 0;

                                        if (($3_1 & 65535 | 0) >>> 0 < 9 >>> 0) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $7_1 = $2_1 - ((HEAP16[($8_1 + 3378 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $0_1 = $2_1 - ((HEAP16[($8_1 + 3376 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $1_1 = $2_1 - ((HEAP16[($8_1 + 3374 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $3_1 = $2_1 - ((HEAP16[($8_1 + 3372 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $10_1 = $2_1 - ((HEAP16[($8_1 + 3370 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $11_1 = $2_1 - ((HEAP16[($8_1 + 3368 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $12_1 = $2_1 - ((HEAP16[($8_1 + 3366 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $13_1 = $2_1 - ((HEAP16[($8_1 + 3364 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $9_1 = $2_1 - ((HEAP16[($8_1 + 3362 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $2_1 = $2_1 - ((HEAP16[($8_1 + 3360 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $14_1 = 40;

                                    $15_1 = HEAP16[($8_1 + 3442 | 0) >> 1] | 0;

                                    $16_1 = HEAP16[($8_1 + 3440 | 0) >> 1] | 0;

                                    $17_1 = HEAP16[($8_1 + 3438 | 0) >> 1] | 0;

                                    $18_1 = HEAP16[($8_1 + 3436 | 0) >> 1] | 0;

                                    $19_1 = HEAP16[($8_1 + 3434 | 0) >> 1] | 0;

                                    $20_1 = HEAP16[($8_1 + 3432 | 0) >> 1] | 0;

                                    $21_1 = HEAP16[($8_1 + 3430 | 0) >> 1] | 0;

                                    $22_1 = HEAP16[($8_1 + 3428 | 0) >> 1] | 0;

                                    $23_1 = HEAP16[($8_1 + 3426 | 0) >> 1] | 0;

                                    $24_1 = HEAP16[($8_1 + 3424 | 0) >> 1] | 0;

                                    label$6 : while (1) {

                                        HEAP16[$4_1 >> 1] = (((((((((((Math_imul(HEAP16[$2_1 >> 1] | 0, $24_1) >> 7 | 0) + (Math_imul(HEAP16[$9_1 >> 1] | 0, $23_1) >> 7 | 0) | 0) + (Math_imul(HEAP16[$13_1 >> 1] | 0, $22_1) >> 7 | 0) | 0) + (Math_imul(HEAP16[$12_1 >> 1] | 0, $21_1) >> 7 | 0) | 0) + (Math_imul(HEAP16[$11_1 >> 1] | 0, $20_1) >> 7 | 0) | 0) + (Math_imul(HEAP16[$10_1 >> 1] | 0, $19_1) >> 7 | 0) | 0) + (Math_imul(HEAP16[$3_1 >> 1] | 0, $18_1) >>> 7 | 0) | 0) + (Math_imul(HEAP16[$1_1 >> 1] | 0, $17_1) >>> 7 | 0) | 0) + (Math_imul(HEAP16[$0_1 >> 1] | 0, $16_1) >>> 7 | 0) | 0) + (Math_imul(HEAP16[$7_1 >> 1] | 0, $15_1) >>> 7 | 0) | 0) + 128 | 0) >>> 8 | 0;

                                        $4_1 = $4_1 + 2 | 0;

                                        $7_1 = $7_1 + 2 | 0;

                                        $0_1 = $0_1 + 2 | 0;

                                        $1_1 = $1_1 + 2 | 0;

                                        $3_1 = $3_1 + 2 | 0;

                                        $10_1 = $10_1 + 2 | 0;

                                        $11_1 = $11_1 + 2 | 0;

                                        $12_1 = $12_1 + 2 | 0;

                                        $13_1 = $13_1 + 2 | 0;

                                        $9_1 = $9_1 + 2 | 0;

                                        $2_1 = $2_1 + 2 | 0;

                                        $14_1 = $14_1 + -1 | 0;

                                        if ($14_1 & 65535 | 0) {

                                            continue label$6

                                        }

                                        break label$6;

                                    }

                                    ;

                                    $7_1 = HEAPU16[$5_1 >> 1] | 0;

                                    HEAP16[$5_1 >> 1] = HEAPU16[($6_1 + (($7_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0 | ($7_1 & 8 | 0) | 0;

                                    $7_1 = HEAPU16[($5_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = HEAPU16[($6_1 + (($7_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0 | ($7_1 & 8 | 0) | 0;

                                    $7_1 = HEAPU16[($5_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = HEAPU16[($6_1 + (($7_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0 | ($7_1 & 8 | 0) | 0;

                                    $7_1 = HEAPU16[($5_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = HEAPU16[($6_1 + (($7_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0 | ($7_1 & 8 | 0) | 0;

                                    $7_1 = HEAPU16[($5_1 + 8 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = HEAPU16[($6_1 + (($7_1 & 7 | 0) << 1 | 0) | 0) >> 1] | 0 | ($7_1 & 8 | 0) | 0;

                                    HEAP16[($5_1 + 10 | 0) >> 1] = HEAPU16[($6_1 + (((HEAPU16[($5_1 + 10 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 12 | 0) >> 1] = HEAPU16[($6_1 + (((HEAPU16[($5_1 + 12 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 14 | 0) >> 1] = HEAPU16[($6_1 + (((HEAPU16[($5_1 + 14 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 16 | 0) >> 1] = HEAPU16[($6_1 + (((HEAPU16[($5_1 + 16 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 18 | 0) >> 1] = HEAPU16[($6_1 + (((HEAPU16[($5_1 + 18 | 0) >> 1] | 0) & 7 | 0) << 1 | 0) | 0) >> 1] | 0;

                                    global$0 = $8_1 + 3456 | 0;

                                }



                                function $71($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $10_1 = 0, $11_1 = 0, $12_1 = 0, $8_1 = 0, $23_1 = 0, $19_1 = 0, $22_1 = 0,

                                        $20_1 = 0, $16_1 = 0, $21_1 = 0, $13_1 = 0, $14_1 = 0, $15_1 = 0, $17_1 = 0,

                                        $18_1 = 0, $9_1 = 0, $132_1 = 0, $243_1 = 0, wasm2js_i32$0 = 0,

                                        wasm2js_i32$1 = 0;

                                    $8_1 = global$0 - 3440 | 0;

                                    global$0 = $8_1;

                                    $9_1 = $3_1 << 1 | 0;

                                    label$1 : {

                                        if (($2_1 | 0) > (39 | 0)) {

                                            break label$1

                                        }

                                        $10_1 = $9_1 << 16 >> 16;

                                        $3_1 = $2_1;

                                        label$2 : while (1) {

                                            label$3 : {

                                                label$4 : {

                                                    $11_1 = Math_imul(HEAP16[($1_1 + (($3_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1);

                                                    if (($11_1 | 0) >= (1073741824 | 0)) {

                                                        break label$4

                                                    }

                                                    $12_1 = $11_1 >> 15 | 0;

                                                    break label$3;

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $12_1 = 32767;

                                            }

                                            $11_1 = $1_1 + ($3_1 << 1 | 0) | 0;

                                            (wasm2js_i32$0 = $11_1, wasm2js_i32$1 = $183(HEAP16[$11_1 >> 1] | 0 | 0, $12_1 << 16 >> 16 | 0, $7_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($3_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $94($1_1 | 0, $0_1 | 0, $8_1 + 3360 | 0 | 0, 1 | 0, $7_1 | 0);

                                    $157($8_1 + 3360 | 0 | 0, $8_1 + 3200 | 0 | 0, $8_1 + 3280 | 0 | 0, 8 | 0);

                                    $92($1_1 | 0, $8_1 + 3200 | 0 | 0, $8_1 | 0, $7_1 | 0);

                                    $13_1 = 65535;

                                    $14_1 = 1;

                                    $15_1 = 0;

                                    $16_1 = 0;

                                    $17_1 = 1;

                                    label$5 : while (1) {

                                        $18_1 = HEAP16[(global$10 + ($16_1 << 1 | 0) | 0) >> 1] | 0;

                                        $3_1 = 1;

                                        label$6 : while (1) {

                                            $19_1 = $3_1;

                                            $20_1 = $8_1 + Math_imul($3_1, 80) | 0;

                                            $3_1 = $3_1 << 1 | 0;

                                            $21_1 = HEAP16[($20_1 + $3_1 | 0) >> 1] | 0;

                                            $22_1 = HEAPU16[(($8_1 + 3360 | 0) + $3_1 | 0) >> 1] | 0;

                                            $11_1 = 65535;

                                            $3_1 = $18_1;

                                            $23_1 = $3_1;

                                            $12_1 = 1;

                                            label$7 : while (1) {

                                                $10_1 = $3_1 << 1 | 0;

                                                $0_1 = $183($22_1 << 16 >> 16 | 0, HEAP16[(($8_1 + 3360 | 0) + $10_1 | 0) >> 1] | 0 | 0, $7_1 | 0) | 0;

                                                $10_1 = (((HEAP16[($20_1 + $10_1 | 0) >> 1] | 0) << 15 | 0) + (((HEAP16[(($8_1 + Math_imul($3_1, 80) | 0) + $10_1 | 0) >> 1] | 0) + $21_1 | 0) << 14 | 0) | 0) + 32768 | 0;

                                                $132_1 = $10_1 >>> 16 | 0;

                                                $0_1 = Math_imul($0_1, $0_1) >>> 15 | 0;

                                                $10_1 = ((Math_imul($0_1 << 16 >> 16, $12_1 << 16 >> 16) - Math_imul($10_1 >> 16 | 0, $11_1 << 16 >> 16) | 0) << 1 | 0 | 0) > (0 | 0);

                                                $12_1 = $10_1 ? $132_1 : $12_1;

                                                $23_1 = $10_1 ? $3_1 : $23_1;

                                                $11_1 = $10_1 ? $0_1 : $11_1;

                                                $10_1 = ($3_1 | 0) < (35 | 0);

                                                $3_1 = $3_1 + 5 | 0;

                                                if ($10_1) {

                                                    continue label$7

                                                }

                                                break label$7;

                                            }

                                            ;

                                            label$8 : {

                                                if (((Math_imul($11_1 << 16 >> 16, $17_1 << 16 >> 16) - Math_imul($12_1 << 16 >> 16, $13_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                    break label$8

                                                }

                                                $14_1 = $23_1;

                                                $15_1 = $19_1;

                                                $13_1 = $11_1;

                                                $17_1 = $12_1;

                                            }

                                            $3_1 = $19_1 + 5 | 0;

                                            if ($19_1 >>> 0 < 35 >>> 0) {

                                                continue label$6

                                            }

                                            break label$6;

                                        }

                                        ;

                                        $16_1 = $16_1 + 1 | 0;

                                        if (($16_1 | 0) != (4 | 0)) {

                                            continue label$5

                                        }

                                        break label$5;

                                    }

                                    ;

                                    $16_1 = 0;

                                    label$9 : while (1) {

                                        $18_1 = HEAP16[(global$10 + ($16_1 << 1 | 0) | 0) >> 1] | 0;

                                        $3_1 = 3;

                                        label$10 : while (1) {

                                            $11_1 = 1;

                                            $19_1 = $3_1;

                                            $20_1 = $8_1 + Math_imul($3_1, 80) | 0;

                                            $3_1 = $3_1 << 1 | 0;

                                            $21_1 = HEAP16[($20_1 + $3_1 | 0) >> 1] | 0;

                                            $22_1 = HEAPU16[(($8_1 + 3360 | 0) + $3_1 | 0) >> 1] | 0;

                                            $12_1 = 65535;

                                            $3_1 = $18_1;

                                            $23_1 = $3_1;

                                            label$11 : while (1) {

                                                $10_1 = $3_1 << 1 | 0;

                                                $0_1 = $183($22_1 << 16 >> 16 | 0, HEAP16[(($8_1 + 3360 | 0) + $10_1 | 0) >> 1] | 0 | 0, $7_1 | 0) | 0;

                                                $10_1 = (((HEAP16[($20_1 + $10_1 | 0) >> 1] | 0) << 15 | 0) + (((HEAP16[(($8_1 + Math_imul($3_1, 80) | 0) + $10_1 | 0) >> 1] | 0) + $21_1 | 0) << 14 | 0) | 0) + 32768 | 0;

                                                $243_1 = $10_1 >>> 16 | 0;

                                                $0_1 = Math_imul($0_1, $0_1) >>> 15 | 0;

                                                $10_1 = ((Math_imul($0_1 << 16 >> 16, $11_1 << 16 >> 16) - Math_imul($10_1 >> 16 | 0, $12_1 << 16 >> 16) | 0) << 1 | 0 | 0) > (0 | 0);

                                                $11_1 = $10_1 ? $243_1 : $11_1;

                                                $23_1 = $10_1 ? $3_1 : $23_1;

                                                $12_1 = $10_1 ? $0_1 : $12_1;

                                                $10_1 = ($3_1 | 0) < (35 | 0);

                                                $3_1 = $3_1 + 5 | 0;

                                                if ($10_1) {

                                                    continue label$11

                                                }

                                                break label$11;

                                            }

                                            ;

                                            label$12 : {

                                                if (((Math_imul($12_1 << 16 >> 16, $17_1 << 16 >> 16) - Math_imul($11_1 << 16 >> 16, $13_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                    break label$12

                                                }

                                                $14_1 = $23_1;

                                                $15_1 = $19_1;

                                                $13_1 = $12_1;

                                                $17_1 = $11_1;

                                            }

                                            $3_1 = $19_1 + 5 | 0;

                                            if ($19_1 >>> 0 < 35 >>> 0) {

                                                continue label$10

                                            }

                                            break label$10;

                                        }

                                        ;

                                        $16_1 = $16_1 + 1 | 0;

                                        if (($16_1 | 0) != (4 | 0)) {

                                            continue label$9

                                        }

                                        break label$9;

                                    }

                                    ;

                                    $20_1 = $229($4_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $12_1 = $15_1 << 16 >> 16;

                                    $3_1 = Math_imul($12_1, 6554) >> 15 | 0;

                                    $23_1 = $3_1 << 1 | 0;

                                    $10_1 = $12_1 << 1 | 0;

                                    $0_1 = HEAP16[(($8_1 + 3200 | 0) + $10_1 | 0) >> 1] | 0;

                                    label$13 : {

                                        label$14 : {

                                            label$15 : {

                                                label$16 : {

                                                    label$17 : {

                                                        label$18 : {

                                                            label$19 : {

                                                                $11_1 = $15_1 - (Math_imul($3_1, 655360) >> 17 | 0) | 0;

                                                                switch ($11_1 & 65535 | 0 | 0) {

                                                                    case 4:

                                                                        break label$15;

                                                                    case 3:

                                                                        break label$16;

                                                                    case 2:

                                                                        break label$17;

                                                                    case 1:

                                                                        break label$18;

                                                                    case 0:

                                                                        break label$19;

                                                                    default:

                                                                        break label$13;

                                                                }

                                                                ;

                                                            }

                                                            $3_1 = $3_1 << 6 | 0;

                                                            break label$14;

                                                        }

                                                        $11_1 = 0;

                                                        $3_1 = $23_1;

                                                        break label$13;

                                                    }

                                                    $3_1 = ($3_1 << 22 | 0) >> 16 | 0 | 32 | 0;

                                                    break label$14;

                                                }

                                                $3_1 = $23_1 | 1 | 0;

                                                $11_1 = 0;

                                                break label$13;

                                            }

                                            $3_1 = ($3_1 << 22 | 0) >> 16 | 0 | 48 | 0;

                                        }

                                        $11_1 = 1;

                                    }

                                    $10_1 = $20_1 + $10_1 | 0;

                                    label$20 : {

                                        label$21 : {

                                            if (($0_1 | 0) < (1 | 0)) {

                                                break label$21

                                            }

                                            HEAP16[$10_1 >> 1] = 8191;

                                            $10_1 = 0;

                                            label$22 : {

                                                if (($11_1 << 16 >> 16 | 0) < (0 | 0)) {

                                                    break label$22

                                                }

                                                $11_1 = $11_1 & 65535 | 0;

                                                $10_1 = (((65536 << $11_1 | 0) >> 16 | 0) >> $11_1 | 0 | 0) == (1 | 0) ? 1 << $11_1 | 0 : 32767;

                                            }

                                            $21_1 = 32767;

                                            $11_1 = $183(0 | 0, $10_1 << 16 >> 16 | 0, $7_1 | 0) | 0;

                                            break label$20;

                                        }

                                        HEAP16[$10_1 >> 1] = 57344;

                                        $11_1 = 0;

                                        $21_1 = -32768;

                                    }

                                    $23_1 = $183(0 | 0, $3_1 << 16 >> 16 | 0, $7_1 | 0) | 0;

                                    $10_1 = $14_1 << 16 >> 16;

                                    $22_1 = $10_1 << 1 | 0;

                                    $19_1 = HEAP16[(($8_1 + 3200 | 0) + $22_1 | 0) >> 1] | 0;

                                    label$23 : {

                                        label$24 : {

                                            label$25 : {

                                                label$26 : {

                                                    label$27 : {

                                                        label$28 : {

                                                            label$29 : {

                                                                $3_1 = Math_imul($10_1, 6554) >> 15 | 0;

                                                                $0_1 = $14_1 - (Math_imul($3_1, 655360) >> 17 | 0) | 0;

                                                                switch ($0_1 & 65535 | 0 | 0) {

                                                                    case 0:

                                                                        break label$25;

                                                                    case 1:

                                                                        break label$26;

                                                                    case 2:

                                                                        break label$27;

                                                                    case 3:

                                                                        break label$28;

                                                                    case 4:

                                                                        break label$29;

                                                                    default:

                                                                        break label$23;

                                                                }

                                                                ;

                                                            }

                                                            $3_1 = ($3_1 << 22 | 0) >> 16 | 0 | 48 | 0;

                                                            break label$24;

                                                        }

                                                        $3_1 = $3_1 << 1 | 0 | 1 | 0;

                                                        $0_1 = 0;

                                                        break label$23;

                                                    }

                                                    $3_1 = ($3_1 << 22 | 0) >> 16 | 0 | 32 | 0;

                                                    break label$24;

                                                }

                                                $3_1 = ($3_1 << 22 | 0) >> 16 | 0 | 16 | 0;

                                                break label$24;

                                            }

                                            $3_1 = $3_1 << 6 | 0;

                                        }

                                        $0_1 = 1;

                                    }

                                    $22_1 = $20_1 + $22_1 | 0;

                                    label$30 : {

                                        label$31 : {

                                            if (($19_1 | 0) > (0 | 0)) {

                                                break label$31

                                            }

                                            HEAP16[$22_1 >> 1] = 57344;

                                            $22_1 = -32768;

                                            break label$30;

                                        }

                                        HEAP16[$22_1 >> 1] = 8191;

                                        $19_1 = 0;

                                        label$32 : {

                                            if (($0_1 << 16 >> 16 | 0) < (0 | 0)) {

                                                break label$32

                                            }

                                            $0_1 = $0_1 & 65535 | 0;

                                            $19_1 = (((65536 << $0_1 | 0) >> 16 | 0) >> $0_1 | 0 | 0) == (1 | 0) ? 1 << $0_1 | 0 : 32767;

                                        }

                                        $22_1 = 32767;

                                        $11_1 = $183($11_1 | 0, $19_1 << 16 >> 16 | 0, $7_1 | 0) | 0;

                                    }

                                    $19_1 = $183($23_1 | 0, $3_1 << 16 >> 16 | 0, $7_1 | 0) | 0;

                                    HEAP16[$6_1 >> 1] = $11_1;

                                    $11_1 = $1_1 - ($10_1 << 1 | 0) | 0;

                                    $12_1 = $1_1 - ($12_1 << 1 | 0) | 0;

                                    $10_1 = 0;

                                    label$33 : while (1) {

                                        label$34 : {

                                            label$35 : {

                                                $3_1 = Math_imul($21_1, HEAP16[$12_1 >> 1] | 0);

                                                if (($3_1 | 0) == (1073741824 | 0)) {

                                                    break label$35

                                                }

                                                $0_1 = $3_1 << 1 | 0;

                                                break label$34;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $0_1 = 2147483647;

                                        }

                                        $3_1 = 2147483647;

                                        label$36 : {

                                            label$37 : {

                                                $23_1 = Math_imul($22_1, HEAP16[$11_1 >> 1] | 0);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$37

                                                }

                                                $3_1 = ($23_1 << 1 | 0) + $0_1 | 0;

                                                if (($23_1 ^ $0_1 | 0 | 0) < (1 | 0)) {

                                                    break label$36

                                                }

                                                if (($3_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$36

                                                }

                                                $3_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                        }

                                        $12_1 = $12_1 + 2 | 0;

                                        $11_1 = $11_1 + 2 | 0;

                                        (wasm2js_i32$0 = $5_1 + ($10_1 << 1 | 0) | 0, wasm2js_i32$1 = $220($3_1 | 0, $7_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $10_1 = $10_1 + 1 | 0;

                                        if (($10_1 | 0) != (40 | 0)) {

                                            continue label$33

                                        }

                                        break label$33;

                                    }

                                    ;

                                    label$38 : {

                                        if (($2_1 | 0) > (39 | 0)) {

                                            break label$38

                                        }

                                        $10_1 = $9_1 << 16 >> 16;

                                        $3_1 = $2_1;

                                        label$39 : while (1) {

                                            label$40 : {

                                                label$41 : {

                                                    $11_1 = Math_imul(HEAP16[($20_1 + (($3_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1);

                                                    if (($11_1 | 0) >= (1073741824 | 0)) {

                                                        break label$41

                                                    }

                                                    $12_1 = $11_1 >> 15 | 0;

                                                    break label$40;

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $12_1 = 32767;

                                            }

                                            $11_1 = $20_1 + ($3_1 << 1 | 0) | 0;

                                            (wasm2js_i32$0 = $11_1, wasm2js_i32$1 = $183(HEAP16[$11_1 >> 1] | 0 | 0, $12_1 << 16 >> 16 | 0, $7_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($3_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                continue label$39

                                            }

                                            break label$39;

                                        }

                                        ;

                                    }

                                    global$0 = $8_1 + 3440 | 0;

                                    return $19_1 | 0;

                                }



                                function $72($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    var $10_1 = 0, $15_1 = 0, $16_1 = 0, $11_1 = 0, $13_1 = 0, $12_1 = 0, $14_1 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $10_1 = global$0 - 3456 | 0;

                                    global$0 = $10_1;

                                    label$1 : {

                                        $11_1 = $4_1 << 1 | 0;

                                        if (($11_1 | 0) == (($4_1 << 17 | 0) >> 16 | 0 | 0)) {

                                            break label$1

                                        }

                                        HEAP32[$9_1 >> 2] = 1;

                                        $11_1 = ($4_1 | 0) > (0 | 0) ? 32767 : -32768;

                                    }

                                    label$2 : {

                                        $12_1 = ($3_1 | 0) > (39 | 0);

                                        if ($12_1) {

                                            break label$2

                                        }

                                        $13_1 = $11_1 << 16 >> 16;

                                        $14_1 = (0 - $3_1 | 0) << 1 | 0;

                                        $4_1 = $3_1;

                                        label$3 : while (1) {

                                            label$4 : {

                                                label$5 : {

                                                    $15_1 = $2_1 + ($4_1 << 1 | 0) | 0;

                                                    $16_1 = Math_imul($13_1, HEAP16[($15_1 + $14_1 | 0) >> 1] | 0);

                                                    if (($16_1 | 0) >= (1073741824 | 0)) {

                                                        break label$5

                                                    }

                                                    $16_1 = $16_1 >> 15 | 0;

                                                    break label$4;

                                                }

                                                HEAP32[$9_1 >> 2] = 1;

                                                $16_1 = 32767;

                                            }

                                            (wasm2js_i32$0 = $15_1, wasm2js_i32$1 = $183(HEAP16[$15_1 >> 1] | 0 | 0, $16_1 << 16 >> 16 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $4_1 = $4_1 + 1 | 0;

                                            if (($4_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                    }

                                    $94($2_1 | 0, $1_1 | 0, $10_1 + 3360 | 0 | 0, 1 | 0, $9_1 | 0);

                                    $157($10_1 + 3360 | 0 | 0, $10_1 + 3200 | 0 | 0, $10_1 + 3280 | 0 | 0, 8 | 0);

                                    $92($2_1 | 0, $10_1 + 3200 | 0 | 0, $10_1 | 0, $9_1 | 0);

                                    $73($0_1 | 0, $10_1 + 3360 | 0 | 0, $10_1 | 0, $8_1 | 0, $10_1 + 3452 | 0 | 0);

                                    $13_1 = $74($0_1 | 0, $10_1 + 3452 | 0 | 0, $10_1 + 3200 | 0 | 0, $5_1 | 0, $2_1 | 0, $6_1 | 0, $7_1 | 0, $9_1 | 0) | 0;

                                    label$6 : {

                                        if ($12_1) {

                                            break label$6

                                        }

                                        $16_1 = $11_1 << 16 >> 16;

                                        $2_1 = (0 - $3_1 | 0) << 1 | 0;

                                        label$7 : while (1) {

                                            label$8 : {

                                                label$9 : {

                                                    $4_1 = $5_1 + ($3_1 << 1 | 0) | 0;

                                                    $15_1 = Math_imul($16_1, HEAP16[($4_1 + $2_1 | 0) >> 1] | 0);

                                                    if (($15_1 | 0) >= (1073741824 | 0)) {

                                                        break label$9

                                                    }

                                                    $15_1 = $15_1 >> 15 | 0;

                                                    break label$8;

                                                }

                                                HEAP32[$9_1 >> 2] = 1;

                                                $15_1 = 32767;

                                            }

                                            (wasm2js_i32$0 = $4_1, wasm2js_i32$1 = $183(HEAP16[$4_1 >> 1] | 0 | 0, $15_1 << 16 >> 16 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($3_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                continue label$7

                                            }

                                            break label$7;

                                        }

                                        ;

                                    }

                                    global$0 = $10_1 + 3456 | 0;

                                    return $13_1 | 0;

                                }



                                function $73($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $17_1 = 0, $8_1 = 0, $12_1 = 0, $11_1 = 0, $13_1 = 0, $9_1 = 0, $5_1 = 0,

                                        $6_1 = 0, $14_1 = 0, $18_1 = 0, $19_1 = 0, $10_1 = 0, $15_1 = 0, $16_1 = 0,

                                        $20_1 = 0, $7_1 = 0;

                                    $20_1 = 65536;

                                    HEAP16[$4_1 >> 1] = $20_1;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = $20_1 >>> 16 | 0;

                                    $5_1 = 65535;

                                    $6_1 = 1;

                                    label$1 : {

                                        $7_1 = $0_1 << 1 | 0;

                                        $0_1 = $3_1 + ($7_1 << 16 >> 16 << 1 | 0) | 0;

                                        $8_1 = HEAP16[$0_1 >> 1] | 0;

                                        if (($8_1 | 0) > (39 | 0)) {

                                            break label$1

                                        }

                                        $5_1 = 65535;

                                        $9_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                        $10_1 = ($9_1 | 0) > (39 | 0);

                                        $6_1 = 1;

                                        label$2 : while (1) {

                                            $11_1 = 65535;

                                            $12_1 = 1;

                                            $13_1 = $9_1;

                                            label$3 : {

                                                if ($10_1) {

                                                    break label$3

                                                }

                                                $14_1 = $2_1 + Math_imul($8_1, 80) | 0;

                                                $0_1 = $8_1 << 1 | 0;

                                                $15_1 = HEAP16[($14_1 + $0_1 | 0) >> 1] | 0;

                                                $16_1 = HEAPU16[($1_1 + $0_1 | 0) >> 1] | 0;

                                                $0_1 = $9_1;

                                                $13_1 = $0_1;

                                                $12_1 = 1;

                                                $11_1 = 65535;

                                                label$4 : while (1) {

                                                    $17_1 = $0_1 << 1 | 0;

                                                    $18_1 = (((HEAP16[($14_1 + $17_1 | 0) >> 1] | 0) << 15 | 0) + (((HEAP16[(($2_1 + Math_imul($0_1, 80) | 0) + $17_1 | 0) >> 1] | 0) + $15_1 | 0) << 14 | 0) | 0) + 32768 | 0;

                                                    $17_1 = ((HEAPU16[($1_1 + $17_1 | 0) >> 1] | 0) + $16_1 | 0) << 16 >> 16;

                                                    $19_1 = Math_imul($17_1, $17_1) >>> 15 | 0;

                                                    $17_1 = ((Math_imul($19_1 << 16 >> 16, $12_1 << 16 >> 16) - Math_imul($18_1 >> 16 | 0, $11_1 << 16 >> 16) | 0) << 1 | 0 | 0) > (0 | 0);

                                                    $12_1 = $17_1 ? $18_1 >>> 16 | 0 : $12_1;

                                                    $13_1 = $17_1 ? $0_1 : $13_1;

                                                    $11_1 = $17_1 ? $19_1 : $11_1;

                                                    $17_1 = ($0_1 | 0) < (35 | 0);

                                                    $0_1 = $0_1 + 5 | 0;

                                                    if ($17_1) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                            }

                                            label$5 : {

                                                if (((Math_imul($11_1 << 16 >> 16, $6_1 << 16 >> 16) - Math_imul($12_1 << 16 >> 16, $5_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                    break label$5

                                                }

                                                HEAP16[($4_1 + 2 | 0) >> 1] = $13_1;

                                                HEAP16[$4_1 >> 1] = $8_1;

                                                $5_1 = $11_1;

                                                $6_1 = $12_1;

                                            }

                                            $0_1 = ($8_1 | 0) < (35 | 0);

                                            $8_1 = $8_1 + 5 | 0;

                                            if ($0_1) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    label$6 : {

                                        $0_1 = $3_1 + (($7_1 + 8 | 0) << 16 >> 16 << 1 | 0) | 0;

                                        $8_1 = HEAP16[$0_1 >> 1] | 0;

                                        if (($8_1 | 0) > (39 | 0)) {

                                            break label$6

                                        }

                                        $9_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                        $10_1 = ($9_1 | 0) > (39 | 0);

                                        label$7 : while (1) {

                                            $11_1 = 65535;

                                            label$8 : {

                                                label$9 : {

                                                    if (!$10_1) {

                                                        break label$9

                                                    }

                                                    $12_1 = 1;

                                                    $13_1 = $9_1;

                                                    break label$8;

                                                }

                                                $14_1 = $2_1 + Math_imul($8_1, 80) | 0;

                                                $0_1 = $8_1 << 1 | 0;

                                                $15_1 = HEAP16[($14_1 + $0_1 | 0) >> 1] | 0;

                                                $16_1 = HEAPU16[($1_1 + $0_1 | 0) >> 1] | 0;

                                                $0_1 = $9_1;

                                                $13_1 = $0_1;

                                                $12_1 = 1;

                                                label$10 : while (1) {

                                                    $17_1 = $0_1 << 1 | 0;

                                                    $18_1 = (((HEAP16[($14_1 + $17_1 | 0) >> 1] | 0) << 15 | 0) + (((HEAP16[(($2_1 + Math_imul($0_1, 80) | 0) + $17_1 | 0) >> 1] | 0) + $15_1 | 0) << 14 | 0) | 0) + 32768 | 0;

                                                    $17_1 = ((HEAPU16[($1_1 + $17_1 | 0) >> 1] | 0) + $16_1 | 0) << 16 >> 16;

                                                    $19_1 = Math_imul($17_1, $17_1) >>> 15 | 0;

                                                    $17_1 = ((Math_imul($19_1 << 16 >> 16, $12_1 << 16 >> 16) - Math_imul($18_1 >> 16 | 0, $11_1 << 16 >> 16) | 0) << 1 | 0 | 0) > (0 | 0);

                                                    $12_1 = $17_1 ? $18_1 >>> 16 | 0 : $12_1;

                                                    $13_1 = $17_1 ? $0_1 : $13_1;

                                                    $11_1 = $17_1 ? $19_1 : $11_1;

                                                    $17_1 = ($0_1 | 0) < (35 | 0);

                                                    $0_1 = $0_1 + 5 | 0;

                                                    if ($17_1) {

                                                        continue label$10

                                                    }

                                                    break label$10;

                                                }

                                                ;

                                            }

                                            label$11 : {

                                                if (((Math_imul($11_1 << 16 >> 16, $6_1 << 16 >> 16) - Math_imul($12_1 << 16 >> 16, $5_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                    break label$11

                                                }

                                                HEAP16[($4_1 + 2 | 0) >> 1] = $13_1;

                                                HEAP16[$4_1 >> 1] = $8_1;

                                                $5_1 = $11_1;

                                                $6_1 = $12_1;

                                            }

                                            $0_1 = ($8_1 | 0) < (35 | 0);

                                            $8_1 = $8_1 + 5 | 0;

                                            if ($0_1) {

                                                continue label$7

                                            }

                                            break label$7;

                                        }

                                        ;

                                    }

                                }



                                function $74($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $9_1 = 0, $10_1 = 0, $8_1 = 0, $12_1 = 0, $11_1 = 0, $21_1 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $8_1 = 0;

                                    $9_1 = $229($3_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $10_1 = HEAP16[$1_1 >> 1] | 0;

                                    $3_1 = $10_1 << 1 | 0;

                                    $21_1 = $9_1 + $3_1 | 0;

                                    $3_1 = (HEAP16[($2_1 + $3_1 | 0) >> 1] | 0 | 0) > (0 | 0);

                                    HEAP16[$21_1 >> 1] = $3_1 ? 8191 : -8192;

                                    $11_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                    $12_1 = $11_1 << 1 | 0;

                                    $2_1 = (HEAP16[($2_1 + $12_1 | 0) >> 1] | 0 | 0) > (0 | 0);

                                    HEAP16[($9_1 + $12_1 | 0) >> 1] = $2_1 ? 8191 : -8192;

                                    HEAP16[$6_1 >> 1] = $2_1 ? $3_1 | 2 | 0 : $3_1;

                                    $9_1 = Math_imul($10_1, 6554) >> 15 | 0;

                                    $12_1 = HEAPU16[(((global$11 + ($0_1 << 1 | 0) | 0) + ($0_1 << 3 | 0) | 0) + (($10_1 + Math_imul($9_1, -5) | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                    $10_1 = $3_1 ? 32767 : -32768;

                                    $6_1 = $2_1 ? 32767 : -32768;

                                    $3_1 = $4_1 - ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $2_1 = $4_1 - ((HEAP16[$1_1 >> 1] | 0) << 1 | 0) | 0;

                                    label$1 : while (1) {

                                        label$2 : {

                                            label$3 : {

                                                $1_1 = Math_imul($10_1, HEAP16[$2_1 >> 1] | 0);

                                                if (($1_1 | 0) == (1073741824 | 0)) {

                                                    break label$3

                                                }

                                                $0_1 = $1_1 << 1 | 0;

                                                break label$2;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $0_1 = 2147483647;

                                        }

                                        $1_1 = 2147483647;

                                        label$4 : {

                                            label$5 : {

                                                $4_1 = Math_imul($6_1, HEAP16[$3_1 >> 1] | 0);

                                                if (($4_1 | 0) == (1073741824 | 0)) {

                                                    break label$5

                                                }

                                                $1_1 = ($4_1 << 1 | 0) + $0_1 | 0;

                                                if (($4_1 ^ $0_1 | 0 | 0) < (1 | 0)) {

                                                    break label$4

                                                }

                                                if (($1_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$4

                                                }

                                                $1_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                        }

                                        $2_1 = $2_1 + 2 | 0;

                                        $3_1 = $3_1 + 2 | 0;

                                        (wasm2js_i32$0 = $5_1 + ($8_1 << 1 | 0) | 0, wasm2js_i32$1 = $220($1_1 | 0, $7_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $8_1 = $8_1 + 1 | 0;

                                        if (($8_1 | 0) != (40 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    return (((Math_imul($11_1, 6554) >>> 12 | 0) & 65528 | 0) + ($12_1 & 65535 | 0 ? $9_1 + 64 | 0 : $9_1) | 0) << 16 >> 16 | 0;

                                }



                                function $75($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $11_1 = 0, $10_1 = 0, $27_1 = 0, $12_1 = 0, $30_1 = 0, $8_1 = 0, $21_1 = 0,

                                        $26_1 = 0, $29_1 = 0, $33_1 = 0, $23_1 = 0, $32_1 = 0, $31_1 = 0, $18_1 = 0,

                                        $19_1 = 0, $28_1 = 0, $13_1 = 0, $14_1 = 0, $15_1 = 0, $22_1 = 0, $9_1 = 0,

                                        $16_1 = 0, $17_1 = 0, $20_1 = 0, $24_1 = 0, $25_1 = 0, $373 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $8_1 = global$0 - 3440 | 0;

                                    global$0 = $8_1;

                                    $9_1 = $3_1 << 1 | 0;

                                    label$1 : {

                                        if (($2_1 | 0) > (39 | 0)) {

                                            break label$1

                                        }

                                        $10_1 = $9_1 << 16 >> 16;

                                        $3_1 = $2_1;

                                        label$2 : while (1) {

                                            label$3 : {

                                                label$4 : {

                                                    $11_1 = Math_imul(HEAP16[($1_1 + (($3_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1);

                                                    if (($11_1 | 0) >= (1073741824 | 0)) {

                                                        break label$4

                                                    }

                                                    $12_1 = $11_1 >> 15 | 0;

                                                    break label$3;

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $12_1 = 32767;

                                            }

                                            $11_1 = $1_1 + ($3_1 << 1 | 0) | 0;

                                            (wasm2js_i32$0 = $11_1, wasm2js_i32$1 = $183(HEAP16[$11_1 >> 1] | 0 | 0, $12_1 << 16 >> 16 | 0, $7_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($3_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $94($1_1 | 0, $0_1 | 0, $8_1 + 3360 | 0 | 0, 1 | 0, $7_1 | 0);

                                    $157($8_1 + 3360 | 0 | 0, $8_1 + 3200 | 0 | 0, $8_1 + 3280 | 0 | 0, 6 | 0);

                                    $92($1_1 | 0, $8_1 + 3200 | 0 | 0, $8_1 | 0, $7_1 | 0);

                                    $13_1 = 2;

                                    $14_1 = 1;

                                    $15_1 = 0;

                                    $16_1 = 1;

                                    $17_1 = 65535;

                                    $18_1 = 1;

                                    label$5 : while (1) {

                                        $19_1 = 2;

                                        label$6 : while (1) {

                                            $3_1 = 0;

                                            $20_1 = $18_1;

                                            $21_1 = $19_1;

                                            $22_1 = 0;

                                            label$7 : while (1) {

                                                $23_1 = $20_1;

                                                label$8 : {

                                                    $20_1 = $3_1;

                                                    $3_1 = $3_1 << 16 >> 16;

                                                    if (($3_1 | 0) > (39 | 0)) {

                                                        break label$8

                                                    }

                                                    $24_1 = $21_1 << 16 >> 16;

                                                    $25_1 = $23_1 << 16 >> 16;

                                                    label$9 : while (1) {

                                                        label$10 : {

                                                            $26_1 = $3_1;

                                                            if ((HEAP16[(($8_1 + 3280 | 0) + ($3_1 << 1 | 0) | 0) >> 1] | 0 | 0) < (0 | 0)) {

                                                                break label$10

                                                            }

                                                            $12_1 = 1;

                                                            $27_1 = $8_1 + Math_imul($26_1, 80) | 0;

                                                            $28_1 = 0;

                                                            label$11 : {

                                                                label$12 : {

                                                                    if (($23_1 << 16 >> 16 | 0) <= (39 | 0)) {

                                                                        break label$12

                                                                    }

                                                                    $29_1 = $23_1;

                                                                    $30_1 = 1;

                                                                    break label$11;

                                                                }

                                                                $3_1 = $26_1 << 1 | 0;

                                                                $31_1 = HEAP16[($27_1 + $3_1 | 0) >> 1] | 0;

                                                                $32_1 = HEAPU16[(($8_1 + 3360 | 0) + $3_1 | 0) >> 1] | 0;

                                                                $0_1 = 65535;

                                                                $3_1 = $25_1;

                                                                $30_1 = 1;

                                                                $29_1 = $23_1;

                                                                label$13 : while (1) {

                                                                    label$14 : {

                                                                        $11_1 = $3_1 << 1 | 0;

                                                                        $33_1 = (HEAPU16[(($8_1 + 3360 | 0) + $11_1 | 0) >> 1] | 0) + $32_1 | 0;

                                                                        $10_1 = $33_1 << 16 >> 16;

                                                                        $10_1 = Math_imul($10_1, $10_1) >>> 15 | 0;

                                                                        $11_1 = (((HEAP16[($27_1 + $11_1 | 0) >> 1] | 0) << 15 | 0) + (((HEAP16[(($8_1 + Math_imul($3_1, 80) | 0) + $11_1 | 0) >> 1] | 0) + $31_1 | 0) << 14 | 0) | 0) + 32768 | 0;

                                                                        if (((Math_imul($10_1 << 16 >> 16, $30_1 << 16 >> 16) - Math_imul($11_1 >> 16 | 0, $0_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                                            break label$14

                                                                        }

                                                                        $30_1 = $11_1 >>> 16 | 0;

                                                                        $29_1 = $3_1;

                                                                        $28_1 = $33_1;

                                                                        $0_1 = $10_1;

                                                                    }

                                                                    $11_1 = ($3_1 | 0) < (35 | 0);

                                                                    $3_1 = $3_1 + 5 | 0;

                                                                    if ($11_1) {

                                                                        continue label$13

                                                                    }

                                                                    break label$13;

                                                                }

                                                                ;

                                                            }

                                                            $10_1 = 65535;

                                                            $0_1 = $21_1;

                                                            label$15 : {

                                                                if (($0_1 << 16 >> 16 | 0) > (39 | 0)) {

                                                                    break label$15

                                                                }

                                                                $31_1 = ($30_1 << 16 >> 16 << 14 | 0) + 32768 | 0;

                                                                $32_1 = $29_1 << 16 >> 16;

                                                                $10_1 = 65535;

                                                                $12_1 = 1;

                                                                $3_1 = $24_1;

                                                                $0_1 = $21_1;

                                                                label$16 : while (1) {

                                                                    $11_1 = $3_1 << 1 | 0;

                                                                    $30_1 = ($31_1 + ((HEAP16[(($8_1 + Math_imul($3_1, 80) | 0) + $11_1 | 0) >> 1] | 0) << 12 | 0) | 0) + (((HEAP16[($27_1 + $11_1 | 0) >> 1] | 0) + (HEAP16[(($8_1 + Math_imul($32_1, 80) | 0) + $11_1 | 0) >> 1] | 0) | 0) << 13 | 0) | 0;

                                                                    $11_1 = ((HEAPU16[(($8_1 + 3360 | 0) + $11_1 | 0) >> 1] | 0) + $28_1 | 0) << 16 >> 16;

                                                                    $33_1 = Math_imul($11_1, $11_1) >>> 15 | 0;

                                                                    $11_1 = ((Math_imul($33_1 << 16 >> 16, $12_1 << 16 >> 16) - Math_imul($30_1 >> 16 | 0, $10_1 << 16 >> 16) | 0) << 1 | 0 | 0) > (0 | 0);

                                                                    $12_1 = $11_1 ? $30_1 >>> 16 | 0 : $12_1;

                                                                    $10_1 = $11_1 ? $33_1 : $10_1;

                                                                    $0_1 = $11_1 ? $3_1 : $0_1;

                                                                    $11_1 = ($3_1 | 0) < (35 | 0);

                                                                    $3_1 = $3_1 + 5 | 0;

                                                                    if ($11_1) {

                                                                        continue label$16

                                                                    }

                                                                    break label$16;

                                                                }

                                                                ;

                                                            }

                                                            $27_1 = Math_imul($12_1 << 16 >> 16, $17_1 << 16 >> 16);

                                                            $11_1 = ($27_1 | 0) == (1073741824 | 0) ? 2147483647 : $27_1 << 1 | 0;

                                                            $3_1 = Math_imul($10_1 << 16 >> 16, $16_1 << 16 >> 16);

                                                            $30_1 = ($3_1 | 0) == (1073741824 | 0);

                                                            $3_1 = $30_1 ? 2147483647 : $3_1 << 1 | 0;

                                                            label$17 : {

                                                                label$18 : {

                                                                    if ($30_1) {

                                                                        break label$18

                                                                    }

                                                                    if (($27_1 | 0) != (1073741824 | 0)) {

                                                                        break label$17

                                                                    }

                                                                }

                                                                HEAP32[$7_1 >> 2] = 1;

                                                            }

                                                            $27_1 = $3_1 - $11_1 | 0;

                                                            label$19 : {

                                                                label$20 : {

                                                                    if (($11_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                                        break label$20

                                                                    }

                                                                    if (($27_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                                        break label$20

                                                                    }

                                                                    HEAP32[$7_1 >> 2] = 1;

                                                                    if (($3_1 | 0) > (-1 | 0)) {

                                                                        break label$19

                                                                    }

                                                                    break label$10;

                                                                }

                                                                if (($27_1 | 0) < (1 | 0)) {

                                                                    break label$10

                                                                }

                                                            }

                                                            $13_1 = $0_1;

                                                            $14_1 = $29_1;

                                                            $15_1 = $26_1;

                                                            $17_1 = $10_1;

                                                            $16_1 = $12_1;

                                                        }

                                                        $3_1 = $26_1 + 5 | 0;

                                                        if (($26_1 | 0) < (35 | 0)) {

                                                            continue label$9

                                                        }

                                                        break label$9;

                                                    }

                                                    ;

                                                }

                                                $11_1 = $22_1 & 65535 | 0;

                                                $3_1 = $21_1;

                                                $21_1 = $23_1;

                                                $22_1 = $22_1 + 1 | 0;

                                                if ($11_1 >>> 0 < 2 >>> 0) {

                                                    continue label$7

                                                }

                                                break label$7;

                                            }

                                            ;

                                            $3_1 = $19_1 & 65535 | 0;

                                            $19_1 = $19_1 + 2 | 0;

                                            if ($3_1 >>> 0 < 3 >>> 0) {

                                                continue label$6

                                            }

                                            break label$6;

                                        }

                                        ;

                                        $3_1 = $18_1 & 65535 | 0;

                                        $18_1 = $18_1 + 2 | 0;

                                        if ($3_1 >>> 0 < 2 >>> 0) {

                                            continue label$5

                                        }

                                        break label$5;

                                    }

                                    ;

                                    $33_1 = $229($4_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $3_1 = $15_1 << 16 >> 16;

                                    $11_1 = $3_1 << 1 | 0;

                                    $10_1 = HEAP16[(($8_1 + 3200 | 0) + $11_1 | 0) >> 1] | 0;

                                    label$21 : {

                                        label$22 : {

                                            label$23 : {

                                                label$24 : {

                                                    label$25 : {

                                                        label$26 : {

                                                            $29_1 = Math_imul($3_1, 6554) >> 15 | 0;

                                                            $12_1 = $15_1 - (Math_imul($29_1, 327680) >>> 16 | 0) | 0;

                                                            switch (($12_1 & 65535 | 0) + -1 | 0 | 0) {

                                                                case 3:

                                                                    break label$23;

                                                                case 2:

                                                                    break label$24;

                                                                case 1:

                                                                    break label$25;

                                                                case 0:

                                                                    break label$26;

                                                                default:

                                                                    break label$21;

                                                            }

                                                            ;

                                                        }

                                                        $29_1 = $29_1 << 4 | 0;

                                                        $12_1 = 1;

                                                        break label$21;

                                                    }

                                                    $29_1 = $29_1 << 8 | 0;

                                                    break label$22;

                                                }

                                                $29_1 = ($29_1 << 20 | 0) >> 16 | 0 | 8 | 0;

                                                $12_1 = 1;

                                                break label$21;

                                            }

                                            $29_1 = ($29_1 << 24 | 0) >> 16 | 0 | 128 | 0;

                                        }

                                        $12_1 = 2;

                                    }

                                    $373 = $33_1 + $11_1 | 0;

                                    $11_1 = ($10_1 | 0) > (0 | 0);

                                    HEAP16[$373 >> 1] = $11_1 ? 8191 : -8192;

                                    $27_1 = $11_1 ? 1 << ($12_1 & 65535 | 0) | 0 : 0;

                                    $10_1 = $14_1 << 16 >> 16;

                                    $30_1 = HEAP16[(($8_1 + 3200 | 0) + ($10_1 << 1 | 0) | 0) >> 1] | 0;

                                    label$27 : {

                                        label$28 : {

                                            label$29 : {

                                                label$30 : {

                                                    label$31 : {

                                                        label$32 : {

                                                            $26_1 = Math_imul($10_1, 6554) >> 15 | 0;

                                                            $0_1 = $14_1 - (Math_imul($26_1, 327680) >>> 16 | 0) | 0;

                                                            switch (($0_1 & 65535 | 0) + -1 | 0 | 0) {

                                                                case 0:

                                                                    break label$29;

                                                                case 1:

                                                                    break label$30;

                                                                case 2:

                                                                    break label$31;

                                                                case 3:

                                                                    break label$32;

                                                                default:

                                                                    break label$27;

                                                            }

                                                            ;

                                                        }

                                                        $26_1 = ($26_1 << 24 | 0) >> 16 | 0 | 128 | 0;

                                                        $0_1 = 2;

                                                        break label$27;

                                                    }

                                                    $26_1 = ($26_1 << 20 | 0) >> 16 | 0 | 8 | 0;

                                                    break label$28;

                                                }

                                                $26_1 = $26_1 << 8 | 0;

                                                $0_1 = 2;

                                                break label$27;

                                            }

                                            $26_1 = $26_1 << 4 | 0;

                                        }

                                        $0_1 = 1;

                                    }

                                    $12_1 = 0;

                                    $23_1 = $10_1 << 1 | 0;

                                    $10_1 = ($30_1 | 0) > (0 | 0);

                                    HEAP16[($33_1 + $23_1 | 0) >> 1] = $10_1 ? 8191 : -8192;

                                    $30_1 = ($10_1 ? 1 << ($0_1 & 65535 | 0) | 0 : 0) + $27_1 | 0;

                                    $27_1 = $13_1 << 16 >> 16;

                                    $0_1 = $27_1 << 1 | 0;

                                    $32_1 = HEAP16[(($8_1 + 3200 | 0) + $0_1 | 0) >> 1] | 0;

                                    label$33 : {

                                        label$34 : {

                                            label$35 : {

                                                label$36 : {

                                                    label$37 : {

                                                        label$38 : {

                                                            $21_1 = Math_imul($27_1, 6554) >> 15 | 0;

                                                            $27_1 = $13_1 - (Math_imul($21_1, 327680) >>> 16 | 0) | 0;

                                                            switch (($27_1 & 65535 | 0) + -1 | 0 | 0) {

                                                                case 0:

                                                                    break label$35;

                                                                case 1:

                                                                    break label$36;

                                                                case 2:

                                                                    break label$37;

                                                                case 3:

                                                                    break label$38;

                                                                default:

                                                                    break label$33;

                                                            }

                                                            ;

                                                        }

                                                        $21_1 = ($21_1 << 24 | 0) >> 16 | 0 | 128 | 0;

                                                        $27_1 = 2;

                                                        break label$33;

                                                    }

                                                    $21_1 = ($21_1 << 20 | 0) >> 16 | 0 | 8 | 0;

                                                    break label$34;

                                                }

                                                $21_1 = $21_1 << 8 | 0;

                                                $27_1 = 2;

                                                break label$33;

                                            }

                                            $21_1 = $21_1 << 4 | 0;

                                        }

                                        $27_1 = 1;

                                    }

                                    $28_1 = $11_1 ? 32767 : -32768;

                                    $31_1 = $10_1 ? 32767 : -32768;

                                    $11_1 = ($32_1 | 0) > (0 | 0);

                                    HEAP16[($33_1 + $0_1 | 0) >> 1] = $11_1 ? 8191 : -8192;

                                    HEAP16[$6_1 >> 1] = $30_1 + ($11_1 ? 1 << ($27_1 & 65535 | 0) | 0 : 0) | 0;

                                    $32_1 = $11_1 ? 32767 : -32768;

                                    $10_1 = $1_1 - $0_1 | 0;

                                    $0_1 = $1_1 - $23_1 | 0;

                                    $27_1 = $1_1 - ($3_1 << 1 | 0) | 0;

                                    label$39 : while (1) {

                                        label$40 : {

                                            label$41 : {

                                                $3_1 = Math_imul($28_1, HEAP16[$27_1 >> 1] | 0);

                                                if (($3_1 | 0) == (1073741824 | 0)) {

                                                    break label$41

                                                }

                                                $11_1 = $3_1 << 1 | 0;

                                                break label$40;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $11_1 = 2147483647;

                                        }

                                        $3_1 = 2147483647;

                                        label$42 : {

                                            label$43 : {

                                                $30_1 = Math_imul($31_1, HEAP16[$0_1 >> 1] | 0);

                                                if (($30_1 | 0) == (1073741824 | 0)) {

                                                    break label$43

                                                }

                                                $3_1 = ($30_1 << 1 | 0) + $11_1 | 0;

                                                if (($30_1 ^ $11_1 | 0 | 0) < (1 | 0)) {

                                                    break label$42

                                                }

                                                if (($3_1 ^ $11_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$42

                                                }

                                                $3_1 = ($11_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                        }

                                        $11_1 = 2147483647;

                                        label$44 : {

                                            label$45 : {

                                                $30_1 = Math_imul($32_1, HEAP16[$10_1 >> 1] | 0);

                                                if (($30_1 | 0) == (1073741824 | 0)) {

                                                    break label$45

                                                }

                                                $11_1 = ($30_1 << 1 | 0) + $3_1 | 0;

                                                if (($30_1 ^ $3_1 | 0 | 0) < (1 | 0)) {

                                                    break label$44

                                                }

                                                if (($11_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$44

                                                }

                                                $11_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                        }

                                        $27_1 = $27_1 + 2 | 0;

                                        $0_1 = $0_1 + 2 | 0;

                                        $10_1 = $10_1 + 2 | 0;

                                        (wasm2js_i32$0 = $5_1 + ($12_1 << 1 | 0) | 0, wasm2js_i32$1 = $220($11_1 | 0, $7_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $12_1 = $12_1 + 1 | 0;

                                        if (($12_1 | 0) != (40 | 0)) {

                                            continue label$39

                                        }

                                        break label$39;

                                    }

                                    ;

                                    label$46 : {

                                        if (($2_1 | 0) > (39 | 0)) {

                                            break label$46

                                        }

                                        $10_1 = $9_1 << 16 >> 16;

                                        $3_1 = $2_1;

                                        label$47 : while (1) {

                                            label$48 : {

                                                label$49 : {

                                                    $11_1 = Math_imul(HEAP16[($33_1 + (($3_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1);

                                                    if (($11_1 | 0) >= (1073741824 | 0)) {

                                                        break label$49

                                                    }

                                                    $12_1 = $11_1 >> 15 | 0;

                                                    break label$48;

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $12_1 = 32767;

                                            }

                                            $11_1 = $33_1 + ($3_1 << 1 | 0) | 0;

                                            (wasm2js_i32$0 = $11_1, wasm2js_i32$1 = $183(HEAP16[$11_1 >> 1] | 0 | 0, $12_1 << 16 >> 16 | 0, $7_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($3_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                continue label$47

                                            }

                                            break label$47;

                                        }

                                        ;

                                    }

                                    global$0 = $8_1 + 3440 | 0;

                                    return (($26_1 + $29_1 | 0) + $21_1 | 0) << 16 >> 16 | 0;

                                }



                                function $76($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    var $12_1 = 0, $13_1 = 0, $36_1 = 0, $11_1 = 0, $33_1 = 0, $9_1 = 0, $32_1 = 0,

                                        $22_1 = 0, $25_1 = 0, $29_1 = 0, $38_1 = 0, $30_1 = 0, $37_1 = 0, $31_1 = 0,

                                        $23_1 = 0, $34_1 = 0, $35_1 = 0, $20_1 = 0, $14_1 = 0, $15_1 = 0, $16_1 = 0,

                                        $17_1 = 0, $24_1 = 0, $10_1 = 0, $18_1 = 0, $19_1 = 0, $21_1 = 0, $26_1 = 0,

                                        $27_1 = 0, $28_1 = 0, $432 = 0, $526 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $9_1 = global$0 - 3440 | 0;

                                    global$0 = $9_1;

                                    $10_1 = $3_1 << 1 | 0;

                                    label$1 : {

                                        if (($2_1 | 0) > (39 | 0)) {

                                            break label$1

                                        }

                                        $11_1 = $10_1 << 16 >> 16;

                                        $3_1 = $2_1;

                                        label$2 : while (1) {

                                            label$3 : {

                                                label$4 : {

                                                    $12_1 = Math_imul(HEAP16[($1_1 + (($3_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $11_1);

                                                    if (($12_1 | 0) >= (1073741824 | 0)) {

                                                        break label$4

                                                    }

                                                    $13_1 = $12_1 >> 15 | 0;

                                                    break label$3;

                                                }

                                                HEAP32[$8_1 >> 2] = 1;

                                                $13_1 = 32767;

                                            }

                                            $12_1 = $1_1 + ($3_1 << 1 | 0) | 0;

                                            (wasm2js_i32$0 = $12_1, wasm2js_i32$1 = $183(HEAP16[$12_1 >> 1] | 0 | 0, $13_1 << 16 >> 16 | 0, $8_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($3_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $94($1_1 | 0, $0_1 | 0, $9_1 + 3360 | 0 | 0, 1 | 0, $8_1 | 0);

                                    $157($9_1 + 3360 | 0 | 0, $9_1 + 3200 | 0 | 0, $9_1 + 3280 | 0 | 0, 4 | 0);

                                    $92($1_1 | 0, $9_1 + 3200 | 0 | 0, $9_1 | 0, $8_1 | 0);

                                    $14_1 = 2;

                                    $15_1 = 3;

                                    $16_1 = 1;

                                    $17_1 = 0;

                                    $18_1 = 1;

                                    $19_1 = 65535;

                                    $20_1 = 3;

                                    label$5 : while (1) {

                                        $21_1 = 1;

                                        $3_1 = 0;

                                        $22_1 = 2;

                                        $23_1 = $20_1;

                                        $24_1 = 0;

                                        label$6 : while (1) {

                                            $25_1 = $22_1;

                                            $22_1 = $21_1;

                                            label$7 : {

                                                $21_1 = $3_1;

                                                $3_1 = $3_1 << 16 >> 16;

                                                if (($3_1 | 0) > (39 | 0)) {

                                                    break label$7

                                                }

                                                $26_1 = $23_1 << 16 >> 16;

                                                $27_1 = $25_1 << 16 >> 16;

                                                $28_1 = $22_1 << 16 >> 16;

                                                label$8 : while (1) {

                                                    label$9 : {

                                                        $29_1 = $3_1;

                                                        if ((HEAP16[(($9_1 + 3280 | 0) + ($3_1 << 1 | 0) | 0) >> 1] | 0 | 0) < (0 | 0)) {

                                                            break label$9

                                                        }

                                                        $11_1 = 1;

                                                        $0_1 = $9_1 + Math_imul($29_1, 80) | 0;

                                                        $30_1 = 0;

                                                        $31_1 = $22_1;

                                                        $32_1 = 0;

                                                        $33_1 = 1;

                                                        label$10 : {

                                                            if (($22_1 << 16 >> 16 | 0) > (39 | 0)) {

                                                                break label$10

                                                            }

                                                            $3_1 = $29_1 << 1 | 0;

                                                            $34_1 = HEAP16[($0_1 + $3_1 | 0) >> 1] | 0;

                                                            $35_1 = HEAPU16[(($9_1 + 3360 | 0) + $3_1 | 0) >> 1] | 0;

                                                            $36_1 = 65535;

                                                            $3_1 = $28_1;

                                                            $33_1 = 1;

                                                            $32_1 = 0;

                                                            $31_1 = $22_1;

                                                            label$11 : while (1) {

                                                                label$12 : {

                                                                    $12_1 = $3_1 << 1 | 0;

                                                                    $37_1 = (HEAPU16[(($9_1 + 3360 | 0) + $12_1 | 0) >> 1] | 0) + $35_1 | 0;

                                                                    $13_1 = $37_1 << 16 >> 16;

                                                                    $13_1 = Math_imul($13_1, $13_1) >>> 15 | 0;

                                                                    $12_1 = (((HEAP16[($0_1 + $12_1 | 0) >> 1] | 0) << 15 | 0) + (((HEAP16[(($9_1 + Math_imul($3_1, 80) | 0) + $12_1 | 0) >> 1] | 0) + $34_1 | 0) << 14 | 0) | 0) + 32768 | 0;

                                                                    if (((Math_imul($13_1 << 16 >> 16, $33_1 << 16 >> 16) - Math_imul($12_1 >> 16 | 0, $36_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                                        break label$12

                                                                    }

                                                                    $33_1 = $12_1 >>> 16 | 0;

                                                                    $31_1 = $3_1;

                                                                    $32_1 = $37_1;

                                                                    $36_1 = $13_1;

                                                                }

                                                                $12_1 = ($3_1 | 0) < (35 | 0);

                                                                $3_1 = $3_1 + 5 | 0;

                                                                if ($12_1) {

                                                                    continue label$11

                                                                }

                                                                break label$11;

                                                            }

                                                            ;

                                                        }

                                                        $38_1 = $25_1;

                                                        label$13 : {

                                                            if (($25_1 << 16 >> 16 | 0) > (39 | 0)) {

                                                                break label$13

                                                            }

                                                            $37_1 = ($33_1 << 16 >> 16 << 14 | 0) + 32768 | 0;

                                                            $34_1 = $31_1 << 16 >> 16;

                                                            $30_1 = 0;

                                                            $33_1 = 65535;

                                                            $11_1 = 1;

                                                            $3_1 = $27_1;

                                                            $38_1 = $25_1;

                                                            label$14 : while (1) {

                                                                label$15 : {

                                                                    $12_1 = $3_1 << 1 | 0;

                                                                    $36_1 = (HEAPU16[(($9_1 + 3360 | 0) + $12_1 | 0) >> 1] | 0) + $32_1 | 0;

                                                                    $13_1 = $36_1 << 16 >> 16;

                                                                    $13_1 = Math_imul($13_1, $13_1) >>> 15 | 0;

                                                                    $12_1 = ($37_1 + ((HEAP16[(($9_1 + Math_imul($3_1, 80) | 0) + $12_1 | 0) >> 1] | 0) << 12 | 0) | 0) + (((HEAP16[($0_1 + $12_1 | 0) >> 1] | 0) + (HEAP16[(($9_1 + Math_imul($34_1, 80) | 0) + $12_1 | 0) >> 1] | 0) | 0) << 13 | 0) | 0;

                                                                    if (((Math_imul($13_1 << 16 >> 16, $11_1 << 16 >> 16) - Math_imul($12_1 >> 16 | 0, $33_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                                        break label$15

                                                                    }

                                                                    $11_1 = $12_1 >>> 16 | 0;

                                                                    $38_1 = $3_1;

                                                                    $30_1 = $36_1;

                                                                    $33_1 = $13_1;

                                                                }

                                                                $12_1 = ($3_1 | 0) < (35 | 0);

                                                                $3_1 = $3_1 + 5 | 0;

                                                                if ($12_1) {

                                                                    continue label$14

                                                                }

                                                                break label$14;

                                                            }

                                                            ;

                                                        }

                                                        label$16 : {

                                                            label$17 : {

                                                                if (($23_1 << 16 >> 16 | 0) <= (39 | 0)) {

                                                                    break label$17

                                                                }

                                                                $13_1 = 1;

                                                                $11_1 = 65535;

                                                                $33_1 = $23_1;

                                                                break label$16;

                                                            }

                                                            $37_1 = $11_1 << 16 | 0 | 32768 | 0;

                                                            $34_1 = $31_1 << 16 >> 16;

                                                            $35_1 = $38_1 << 16 >> 16;

                                                            $11_1 = 65535;

                                                            $13_1 = 1;

                                                            $3_1 = $26_1;

                                                            $33_1 = $23_1;

                                                            label$18 : while (1) {

                                                                $12_1 = $3_1 << 1 | 0;

                                                                $32_1 = ($37_1 + ((HEAP16[(($9_1 + Math_imul($3_1, 80) | 0) + $12_1 | 0) >> 1] | 0) << 12 | 0) | 0) + ((((HEAP16[(($9_1 + Math_imul($34_1, 80) | 0) + $12_1 | 0) >> 1] | 0) + (HEAP16[(($9_1 + Math_imul($35_1, 80) | 0) + $12_1 | 0) >> 1] | 0) | 0) + (HEAP16[($0_1 + $12_1 | 0) >> 1] | 0) | 0) << 13 | 0) | 0;

                                                                $12_1 = ((HEAPU16[(($9_1 + 3360 | 0) + $12_1 | 0) >> 1] | 0) + $30_1 | 0) << 16 >> 16;

                                                                $36_1 = Math_imul($12_1, $12_1) >>> 15 | 0;

                                                                $12_1 = ((Math_imul($36_1 << 16 >> 16, $13_1 << 16 >> 16) - Math_imul($32_1 >> 16 | 0, $11_1 << 16 >> 16) | 0) << 1 | 0 | 0) > (0 | 0);

                                                                $13_1 = $12_1 ? $32_1 >>> 16 | 0 : $13_1;

                                                                $11_1 = $12_1 ? $36_1 : $11_1;

                                                                $33_1 = $12_1 ? $3_1 : $33_1;

                                                                $12_1 = ($3_1 | 0) < (35 | 0);

                                                                $3_1 = $3_1 + 5 | 0;

                                                                if ($12_1) {

                                                                    continue label$18

                                                                }

                                                                break label$18;

                                                            }

                                                            ;

                                                        }

                                                        if (((Math_imul($11_1 << 16 >> 16, $18_1 << 16 >> 16) - Math_imul($13_1 << 16 >> 16, $19_1 << 16 >> 16) | 0) << 1 | 0 | 0) < (1 | 0)) {

                                                            break label$9

                                                        }

                                                        $15_1 = $33_1;

                                                        $14_1 = $38_1;

                                                        $16_1 = $31_1;

                                                        $17_1 = $29_1;

                                                        $19_1 = $11_1;

                                                        $18_1 = $13_1;

                                                    }

                                                    $3_1 = $29_1 + 5 | 0;

                                                    if (($29_1 | 0) < (35 | 0)) {

                                                        continue label$8

                                                    }

                                                    break label$8;

                                                }

                                                ;

                                            }

                                            $12_1 = $24_1 & 65535 | 0;

                                            $3_1 = $23_1;

                                            $23_1 = $25_1;

                                            $24_1 = $24_1 + 1 | 0;

                                            if ($12_1 >>> 0 < 3 >>> 0) {

                                                continue label$6

                                            }

                                            break label$6;

                                        }

                                        ;

                                        $3_1 = $20_1 & 65535 | 0;

                                        $20_1 = $20_1 + 1 | 0;

                                        if ($3_1 >>> 0 < 4 >>> 0) {

                                            continue label$5

                                        }

                                        break label$5;

                                    }

                                    ;

                                    $30_1 = $229($4_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $12_1 = $17_1 << 16 >> 16;

                                    $13_1 = $12_1 << 1 | 0;

                                    $11_1 = HEAP16[(($9_1 + 3200 | 0) + $13_1 | 0) >> 1] | 0;

                                    $3_1 = Math_imul($12_1, 6554) >> 15 | 0;

                                    $38_1 = HEAPU16[($7_1 + ($3_1 << 1 | 0) | 0) >> 1] | 0;

                                    label$19 : {

                                        label$20 : {

                                            label$21 : {

                                                label$22 : {

                                                    label$23 : {

                                                        label$24 : {

                                                            $3_1 = $17_1 - (Math_imul($3_1, 327680) >>> 16 | 0) | 0;

                                                            switch (($3_1 & 65535 | 0) + -1 | 0 | 0) {

                                                                case 3:

                                                                    break label$21;

                                                                case 2:

                                                                    break label$22;

                                                                case 1:

                                                                    break label$23;

                                                                case 0:

                                                                    break label$24;

                                                                default:

                                                                    break label$19;

                                                            }

                                                            ;

                                                        }

                                                        $38_1 = $38_1 << 3 | 0;

                                                        $3_1 = 1;

                                                        break label$19;

                                                    }

                                                    $38_1 = $38_1 << 6 | 0;

                                                    $3_1 = 2;

                                                    break label$19;

                                                }

                                                $38_1 = $38_1 << 10 | 0;

                                                break label$20;

                                            }

                                            $38_1 = $38_1 << 10 | 0 | 512 | 0;

                                        }

                                        $3_1 = 3;

                                    }

                                    $432 = $30_1 + $13_1 | 0;

                                    $13_1 = ($11_1 | 0) > (0 | 0);

                                    HEAP16[$432 >> 1] = $13_1 ? 8191 : -8192;

                                    $33_1 = $13_1 ? 1 << ($3_1 & 65535 | 0) | 0 : 0;

                                    $3_1 = $16_1 << 16 >> 16;

                                    $11_1 = HEAP16[(($9_1 + 3200 | 0) + ($3_1 << 1 | 0) | 0) >> 1] | 0;

                                    $0_1 = Math_imul($3_1, 6554) >> 15 | 0;

                                    $29_1 = HEAPU16[($7_1 + ($0_1 << 1 | 0) | 0) >> 1] | 0;

                                    label$25 : {

                                        label$26 : {

                                            label$27 : {

                                                label$28 : {

                                                    label$29 : {

                                                        $0_1 = $16_1 - (Math_imul($0_1, 327680) >>> 16 | 0) | 0;

                                                        switch (($0_1 & 65535 | 0) + -1 | 0 | 0) {

                                                            case 0:

                                                                break label$26;

                                                            case 1:

                                                                break label$27;

                                                            case 2:

                                                                break label$28;

                                                            case 3:

                                                                break label$29;

                                                            default:

                                                                break label$25;

                                                        }

                                                        ;

                                                    }

                                                    $29_1 = $29_1 << 10 | 0 | 512 | 0;

                                                    $0_1 = 3;

                                                    break label$25;

                                                }

                                                $29_1 = $29_1 << 10 | 0;

                                                $0_1 = 3;

                                                break label$25;

                                            }

                                            $29_1 = $29_1 << 6 | 0;

                                            $0_1 = 2;

                                            break label$25;

                                        }

                                        $29_1 = $29_1 << 3 | 0;

                                        $0_1 = 1;

                                    }

                                    $11_1 = ($11_1 | 0) > (0 | 0);

                                    HEAP16[($30_1 + ($3_1 << 1 | 0) | 0) >> 1] = $11_1 ? 8191 : -8192;

                                    $36_1 = ($11_1 ? 1 << ($0_1 & 65535 | 0) | 0 : 0) + $33_1 | 0;

                                    $0_1 = $14_1 << 16 >> 16;

                                    $33_1 = $0_1 << 1 | 0;

                                    $37_1 = HEAP16[(($9_1 + 3200 | 0) + $33_1 | 0) >> 1] | 0;

                                    $32_1 = Math_imul($0_1, 6554) >> 15 | 0;

                                    $22_1 = HEAPU16[($7_1 + ($32_1 << 1 | 0) | 0) >> 1] | 0;

                                    label$30 : {

                                        label$31 : {

                                            label$32 : {

                                                label$33 : {

                                                    label$34 : {

                                                        $32_1 = $14_1 - (Math_imul($32_1, 327680) >>> 16 | 0) | 0;

                                                        switch (($32_1 & 65535 | 0) + -1 | 0 | 0) {

                                                            case 0:

                                                                break label$31;

                                                            case 1:

                                                                break label$32;

                                                            case 2:

                                                                break label$33;

                                                            case 3:

                                                                break label$34;

                                                            default:

                                                                break label$30;

                                                        }

                                                        ;

                                                    }

                                                    $22_1 = $22_1 << 10 | 0 | 512 | 0;

                                                    $32_1 = 3;

                                                    break label$30;

                                                }

                                                $22_1 = $22_1 << 10 | 0;

                                                $32_1 = 3;

                                                break label$30;

                                            }

                                            $22_1 = $22_1 << 6 | 0;

                                            $32_1 = 2;

                                            break label$30;

                                        }

                                        $22_1 = $22_1 << 3 | 0;

                                        $32_1 = 1;

                                    }

                                    $526 = $30_1 + $33_1 | 0;

                                    $33_1 = ($37_1 | 0) > (0 | 0);

                                    HEAP16[$526 >> 1] = $33_1 ? 8191 : -8192;

                                    $31_1 = $36_1 + ($33_1 ? 1 << ($32_1 & 65535 | 0) | 0 : 0) | 0;

                                    $32_1 = $15_1 << 16 >> 16;

                                    $23_1 = HEAP16[(($9_1 + 3200 | 0) + ($32_1 << 1 | 0) | 0) >> 1] | 0;

                                    $36_1 = Math_imul($32_1, 6554) >> 15 | 0;

                                    $25_1 = HEAPU16[($7_1 + ($36_1 << 1 | 0) | 0) >> 1] | 0;

                                    label$35 : {

                                        label$36 : {

                                            label$37 : {

                                                label$38 : {

                                                    label$39 : {

                                                        $36_1 = $15_1 - (Math_imul($36_1, 327680) >>> 16 | 0) | 0;

                                                        switch (($36_1 & 65535 | 0) + -1 | 0 | 0) {

                                                            case 0:

                                                                break label$36;

                                                            case 1:

                                                                break label$37;

                                                            case 2:

                                                                break label$38;

                                                            case 3:

                                                                break label$39;

                                                            default:

                                                                break label$35;

                                                        }

                                                        ;

                                                    }

                                                    $25_1 = $25_1 << 10 | 0 | 512 | 0;

                                                    $36_1 = 3;

                                                    break label$35;

                                                }

                                                $25_1 = $25_1 << 10 | 0;

                                                $36_1 = 3;

                                                break label$35;

                                            }

                                            $25_1 = $25_1 << 6 | 0;

                                            $36_1 = 2;

                                            break label$35;

                                        }

                                        $25_1 = $25_1 << 3 | 0;

                                        $36_1 = 1;

                                    }

                                    $37_1 = $13_1 ? 32767 : -32768;

                                    $34_1 = $11_1 ? 32767 : -32768;

                                    $35_1 = $33_1 ? 32767 : -32768;

                                    $13_1 = 0;

                                    $33_1 = $32_1 << 1 | 0;

                                    $11_1 = ($23_1 | 0) > (0 | 0);

                                    HEAP16[($30_1 + $33_1 | 0) >> 1] = $11_1 ? 8191 : -8192;

                                    HEAP16[$6_1 >> 1] = $31_1 + ($11_1 ? 1 << ($36_1 & 65535 | 0) | 0 : 0) | 0;

                                    $31_1 = $11_1 ? 32767 : -32768;

                                    $11_1 = $1_1 - $33_1 | 0;

                                    $0_1 = $1_1 - ($0_1 << 1 | 0) | 0;

                                    $33_1 = $1_1 - ($3_1 << 1 | 0) | 0;

                                    $32_1 = $1_1 - ($12_1 << 1 | 0) | 0;

                                    label$40 : while (1) {

                                        label$41 : {

                                            label$42 : {

                                                $3_1 = Math_imul($37_1, HEAP16[$32_1 >> 1] | 0);

                                                if (($3_1 | 0) == (1073741824 | 0)) {

                                                    break label$42

                                                }

                                                $12_1 = $3_1 << 1 | 0;

                                                break label$41;

                                            }

                                            HEAP32[$8_1 >> 2] = 1;

                                            $12_1 = 2147483647;

                                        }

                                        $3_1 = 2147483647;

                                        label$43 : {

                                            label$44 : {

                                                $36_1 = Math_imul($34_1, HEAP16[$33_1 >> 1] | 0);

                                                if (($36_1 | 0) == (1073741824 | 0)) {

                                                    break label$44

                                                }

                                                $3_1 = ($36_1 << 1 | 0) + $12_1 | 0;

                                                if (($36_1 ^ $12_1 | 0 | 0) < (1 | 0)) {

                                                    break label$43

                                                }

                                                if (($3_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$43

                                                }

                                                $3_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$8_1 >> 2] = 1;

                                        }

                                        $12_1 = 2147483647;

                                        label$45 : {

                                            label$46 : {

                                                $36_1 = Math_imul($35_1, HEAP16[$0_1 >> 1] | 0);

                                                if (($36_1 | 0) == (1073741824 | 0)) {

                                                    break label$46

                                                }

                                                $12_1 = ($36_1 << 1 | 0) + $3_1 | 0;

                                                if (($36_1 ^ $3_1 | 0 | 0) < (1 | 0)) {

                                                    break label$45

                                                }

                                                if (($12_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$45

                                                }

                                                $12_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$8_1 >> 2] = 1;

                                        }

                                        $3_1 = 2147483647;

                                        label$47 : {

                                            label$48 : {

                                                $36_1 = Math_imul($31_1, HEAP16[$11_1 >> 1] | 0);

                                                if (($36_1 | 0) == (1073741824 | 0)) {

                                                    break label$48

                                                }

                                                $3_1 = ($36_1 << 1 | 0) + $12_1 | 0;

                                                if (($36_1 ^ $12_1 | 0 | 0) < (1 | 0)) {

                                                    break label$47

                                                }

                                                if (($3_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$47

                                                }

                                                $3_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$8_1 >> 2] = 1;

                                        }

                                        $32_1 = $32_1 + 2 | 0;

                                        $33_1 = $33_1 + 2 | 0;

                                        $0_1 = $0_1 + 2 | 0;

                                        $11_1 = $11_1 + 2 | 0;

                                        (wasm2js_i32$0 = $5_1 + ($13_1 << 1 | 0) | 0, wasm2js_i32$1 = $220($3_1 | 0, $8_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $13_1 = $13_1 + 1 | 0;

                                        if (($13_1 | 0) != (40 | 0)) {

                                            continue label$40

                                        }

                                        break label$40;

                                    }

                                    ;

                                    label$49 : {

                                        if ((($2_1 + 32728 | 0) << 16 >> 16 | 0) < (0 | 0)) {

                                            break label$49

                                        }

                                        $11_1 = $10_1 << 16 >> 16;

                                        $0_1 = ((($2_1 | 0) > (39 | 0) ? $2_1 : 39) + 1 | 0) & 65535 | 0;

                                        $3_1 = $2_1;

                                        label$50 : while (1) {

                                            label$51 : {

                                                label$52 : {

                                                    $12_1 = Math_imul(HEAP16[($30_1 + (($3_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $11_1);

                                                    if (($12_1 | 0) >= (1073741824 | 0)) {

                                                        break label$52

                                                    }

                                                    $13_1 = $12_1 >> 15 | 0;

                                                    break label$51;

                                                }

                                                HEAP32[$8_1 >> 2] = 1;

                                                $13_1 = 32767;

                                            }

                                            $12_1 = $30_1 + ($3_1 << 1 | 0) | 0;

                                            (wasm2js_i32$0 = $12_1, wasm2js_i32$1 = $183(HEAP16[$12_1 >> 1] | 0 | 0, $13_1 << 16 >> 16 | 0, $8_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            $3_1 = $3_1 + 1 | 0;

                                            if (($0_1 | 0) != ($3_1 & 65535 | 0 | 0)) {

                                                continue label$50

                                            }

                                            break label$50;

                                        }

                                        ;

                                    }

                                    global$0 = $9_1 + 3440 | 0;

                                    return ((($29_1 + $38_1 | 0) + $22_1 | 0) + $25_1 | 0) << 16 >> 16 | 0;

                                }



                                function $77($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0, $23_1 = 0, $10_1 = 0, $9_1 = 0, $11_1 = 0, $12_1 = 0, $8_1 = 0,

                                        i64toi32_i32$0 = 0, $14_1 = 0, $13_1 = 0, $26_1 = 0, $15_1 = 0, $16_1 = 0,

                                        $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $473 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $7_1 = global$0 - 3456 | 0;

                                    global$0 = $7_1;

                                    $93($2_1 | 0, $0_1 | 0, $7_1 + 3312 | 0 | 0, 2 | 0, 4 | 0, 4 | 0, $6_1 | 0);

                                    $158($7_1 + 3312 | 0 | 0, $1_1 | 0, $7_1 + 3232 | 0 | 0, $7_1 + 3416 | 0 | 0, 4 | 0, $7_1 + 3424 | 0 | 0, 4 | 0, $6_1 | 0);

                                    $92($2_1 | 0, $7_1 + 3232 | 0 | 0, $7_1 + 32 | 0 | 0, $6_1 | 0);

                                    $156(8 | 0, 4 | 0, 4 | 0, $7_1 + 3312 | 0 | 0, $7_1 + 32 | 0 | 0, $7_1 + 3424 | 0 | 0, $7_1 + 3416 | 0 | 0, $7_1 + 3392 | 0 | 0, $6_1 | 0);

                                    $1_1 = 0;

                                    $8_1 = $229($3_1 | 0, 0 | 0, 80 | 0) | 0;

                                    i64toi32_i32$0 = -1;

                                    HEAP32[$7_1 >> 2] = -1;

                                    HEAP32[($7_1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$0 = -1;

                                    $26_1 = -1;

                                    HEAP16[($7_1 + 24 | 0) >> 1] = $26_1;

                                    HEAP16[($7_1 + 26 | 0) >> 1] = $26_1 >>> 16 | 0;

                                    HEAP16[($7_1 + 28 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($7_1 + 30 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    label$1 : while (1) {

                                        $3_1 = $1_1 << 1 | 0;

                                        $9_1 = HEAPU16[(($7_1 + 3392 | 0) + $3_1 | 0) >> 1] | 0;

                                        $10_1 = $9_1 << 16 >> 16;

                                        $0_1 = $10_1 << 1 | 0;

                                        $11_1 = $8_1 + $0_1 | 0;

                                        $0_1 = (HEAP16[(($7_1 + 3232 | 0) + $0_1 | 0) >> 1] | 0 | 0) < (1 | 0);

                                        HEAP16[$11_1 >> 1] = ($0_1 ? -8191 : 8191) + (HEAPU16[$11_1 >> 1] | 0) | 0;

                                        HEAP16[(($7_1 + 3440 | 0) + $3_1 | 0) >> 1] = $0_1 ? -32768 : 32767;

                                        $10_1 = $10_1 >> 2 | 0;

                                        label$2 : {

                                            label$3 : {

                                                $3_1 = ($9_1 & 3 | 0) << 1 | 0;

                                                $11_1 = $7_1 | $3_1 | 0;

                                                $9_1 = HEAP16[$11_1 >> 1] | 0;

                                                if (($9_1 | 0) > (-1 | 0)) {

                                                    break label$3

                                                }

                                                HEAP16[$11_1 >> 1] = $10_1;

                                                HEAP16[(($7_1 + 24 | 0) + $3_1 | 0) >> 1] = $0_1;

                                                break label$2;

                                            }

                                            $12_1 = $3_1 | $7_1 | 0 | 8 | 0;

                                            label$4 : {

                                                label$5 : {

                                                    label$6 : {

                                                        $3_1 = ($7_1 + 24 | 0) + $3_1 | 0;

                                                        if (((HEAPU16[$3_1 >> 1] | 0) & 1 | 0 | 0) != ($0_1 | 0)) {

                                                            break label$6

                                                        }

                                                        if (($9_1 | 0) <= ($10_1 | 0)) {

                                                            break label$5

                                                        }

                                                        break label$4;

                                                    }

                                                    if (($9_1 | 0) <= ($10_1 | 0)) {

                                                        break label$4

                                                    }

                                                }

                                                HEAP16[$12_1 >> 1] = $10_1;

                                                break label$2;

                                            }

                                            HEAP16[$12_1 >> 1] = $9_1;

                                            HEAP16[$11_1 >> 1] = $10_1;

                                            HEAP16[$3_1 >> 1] = $0_1;

                                        }

                                        $1_1 = $1_1 + 1 | 0;

                                        if (($1_1 | 0) != (8 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $3_1 = $2_1 - ((HEAP16[($7_1 + 3406 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $10_1 = $2_1 - ((HEAP16[($7_1 + 3404 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $9_1 = $2_1 - ((HEAP16[($7_1 + 3402 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $11_1 = $2_1 - ((HEAP16[($7_1 + 3400 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $12_1 = $2_1 - ((HEAP16[($7_1 + 3398 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $8_1 = $2_1 - ((HEAP16[($7_1 + 3396 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $13_1 = $2_1 - ((HEAP16[($7_1 + 3394 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $2_1 = $2_1 - ((HEAP16[($7_1 + 3392 | 0) >> 1] | 0) << 1 | 0) | 0;

                                    $14_1 = 0;

                                    $15_1 = HEAP16[($7_1 + 3454 | 0) >> 1] | 0;

                                    $16_1 = HEAP16[($7_1 + 3452 | 0) >> 1] | 0;

                                    $17_1 = HEAP16[($7_1 + 3450 | 0) >> 1] | 0;

                                    $18_1 = HEAP16[($7_1 + 3448 | 0) >> 1] | 0;

                                    $19_1 = HEAP16[($7_1 + 3446 | 0) >> 1] | 0;

                                    $20_1 = HEAP16[($7_1 + 3444 | 0) >> 1] | 0;

                                    $21_1 = HEAP16[($7_1 + 3442 | 0) >> 1] | 0;

                                    $22_1 = HEAP16[($7_1 + 3440 | 0) >> 1] | 0;

                                    label$7 : while (1) {

                                        label$8 : {

                                            label$9 : {

                                                $0_1 = Math_imul(HEAP16[$2_1 >> 1] | 0, $22_1);

                                                if (($0_1 | 0) == (1073741824 | 0)) {

                                                    break label$9

                                                }

                                                $1_1 = $0_1 << 1 | 0;

                                                break label$8;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                            $1_1 = 2147483647;

                                        }

                                        $0_1 = 2147483647;

                                        label$10 : {

                                            label$11 : {

                                                $23_1 = Math_imul(HEAP16[$13_1 >> 1] | 0, $21_1);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$11

                                                }

                                                $0_1 = ($23_1 << 1 | 0) + $1_1 | 0;

                                                if (($23_1 ^ $1_1 | 0 | 0) < (1 | 0)) {

                                                    break label$10

                                                }

                                                if (($0_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$10

                                                }

                                                $0_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                        }

                                        $1_1 = 2147483647;

                                        label$12 : {

                                            label$13 : {

                                                $23_1 = Math_imul(HEAP16[$8_1 >> 1] | 0, $20_1);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$13

                                                }

                                                $1_1 = ($23_1 << 1 | 0) + $0_1 | 0;

                                                if (($23_1 ^ $0_1 | 0 | 0) < (1 | 0)) {

                                                    break label$12

                                                }

                                                if (($1_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$12

                                                }

                                                $1_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                        }

                                        $0_1 = 2147483647;

                                        label$14 : {

                                            label$15 : {

                                                $23_1 = Math_imul(HEAP16[$12_1 >> 1] | 0, $19_1);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$15

                                                }

                                                $0_1 = ($23_1 << 1 | 0) + $1_1 | 0;

                                                if (($23_1 ^ $1_1 | 0 | 0) < (1 | 0)) {

                                                    break label$14

                                                }

                                                if (($0_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$14

                                                }

                                                $0_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                        }

                                        $1_1 = 2147483647;

                                        label$16 : {

                                            label$17 : {

                                                $23_1 = Math_imul(HEAP16[$11_1 >> 1] | 0, $18_1);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$17

                                                }

                                                $1_1 = ($23_1 << 1 | 0) + $0_1 | 0;

                                                if (($23_1 ^ $0_1 | 0 | 0) < (1 | 0)) {

                                                    break label$16

                                                }

                                                if (($1_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$16

                                                }

                                                $1_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                        }

                                        $0_1 = 2147483647;

                                        label$18 : {

                                            label$19 : {

                                                $23_1 = Math_imul(HEAP16[$9_1 >> 1] | 0, $17_1);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$19

                                                }

                                                $0_1 = ($23_1 << 1 | 0) + $1_1 | 0;

                                                if (($23_1 ^ $1_1 | 0 | 0) < (1 | 0)) {

                                                    break label$18

                                                }

                                                if (($0_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$18

                                                }

                                                $0_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                        }

                                        $1_1 = 2147483647;

                                        label$20 : {

                                            label$21 : {

                                                $23_1 = Math_imul(HEAP16[$10_1 >> 1] | 0, $16_1);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$21

                                                }

                                                $1_1 = ($23_1 << 1 | 0) + $0_1 | 0;

                                                if (($23_1 ^ $0_1 | 0 | 0) < (1 | 0)) {

                                                    break label$20

                                                }

                                                if (($1_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$20

                                                }

                                                $1_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                        }

                                        $0_1 = 2147483647;

                                        label$22 : {

                                            label$23 : {

                                                $23_1 = Math_imul(HEAP16[$3_1 >> 1] | 0, $15_1);

                                                if (($23_1 | 0) == (1073741824 | 0)) {

                                                    break label$23

                                                }

                                                $0_1 = ($23_1 << 1 | 0) + $1_1 | 0;

                                                if (($23_1 ^ $1_1 | 0 | 0) < (1 | 0)) {

                                                    break label$22

                                                }

                                                if (($0_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$22

                                                }

                                                $0_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$6_1 >> 2] = 1;

                                        }

                                        $2_1 = $2_1 + 2 | 0;

                                        $13_1 = $13_1 + 2 | 0;

                                        $8_1 = $8_1 + 2 | 0;

                                        $12_1 = $12_1 + 2 | 0;

                                        $11_1 = $11_1 + 2 | 0;

                                        $9_1 = $9_1 + 2 | 0;

                                        $10_1 = $10_1 + 2 | 0;

                                        $3_1 = $3_1 + 2 | 0;

                                        (wasm2js_i32$0 = $4_1 + ($14_1 << 1 | 0) | 0, wasm2js_i32$1 = $220($0_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $14_1 = $14_1 + 1 | 0;

                                        if (($14_1 | 0) != (40 | 0)) {

                                            continue label$7

                                        }

                                        break label$7;

                                    }

                                    ;

                                    HEAP16[$5_1 >> 1] = HEAPU16[($7_1 + 24 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = HEAPU16[($7_1 + 26 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = HEAPU16[($7_1 + 28 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = HEAPU16[($7_1 + 30 | 0) >> 1] | 0;

                                    $6_1 = HEAP16[($7_1 + 8 | 0) >> 1] | 0;

                                    $0_1 = HEAPU16[$7_1 >> 1] | 0;

                                    $1_1 = HEAP16[($7_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = ($6_1 << 1 | 0) & 2 | 0 | ($0_1 & 1 | 0) | 0 | (($1_1 << 2 | 0) & 4 | 0) | 0 | ((($0_1 >>> 1 | 0) + ((Math_imul($1_1 >> 1 | 0, 1638400) + Math_imul($6_1 >> 1 | 0, 327680) | 0) >>> 16 | 0) | 0) << 3 | 0) | 0;

                                    $6_1 = HEAP16[($7_1 + 12 | 0) >> 1] | 0;

                                    $0_1 = HEAPU16[($7_1 + 4 | 0) >> 1] | 0;

                                    $1_1 = HEAP16[($7_1 + 10 | 0) >> 1] | 0;

                                    HEAP16[($5_1 + 10 | 0) >> 1] = ($6_1 << 1 | 0) & 2 | 0 | ($0_1 & 1 | 0) | 0 | (($1_1 << 2 | 0) & 4 | 0) | 0 | ((($0_1 >>> 1 | 0) + ((Math_imul($1_1 >> 1 | 0, 1638400) + Math_imul($6_1 >> 1 | 0, 327680) | 0) >>> 16 | 0) | 0) << 3 | 0) | 0;

                                    $0_1 = HEAPU16[($7_1 + 6 | 0) >> 1] | 0;

                                    $6_1 = HEAP16[($7_1 + 14 | 0) >> 1] | 0;

                                    $473 = $0_1 & 1 | 0 | (($6_1 << 1 | 0) & 2 | 0) | 0;

                                    $0_1 = $0_1 << 16 >> 16 >> 1 | 0;

                                    HEAP16[($5_1 + 12 | 0) >> 1] = $473 | ((Math_imul(((($6_1 & 2 | 0 ? 4 - $0_1 | 0 : $0_1) + (Math_imul($6_1 >> 1 | 0, 327680) >>> 16 | 0) | 0) << 5 | 0 | 12 | 0) << 16 >> 16, 1311) >>> 13 | 0) & 65532 | 0) | 0;

                                    global$0 = $7_1 + 3456 | 0;

                                }



                                function $78($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $7_1 = 0, $8_1 = 0, $13_1 = 0, $16_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0,

                                        $12_1 = 0, $17_1 = 0, $19_1 = 0, $6_1 = 0, $15_1 = 0, $14_1 = 0, $18_1 = 0,

                                        $5_1 = 0;

                                    label$1 : {

                                        $3_1 = ($2_1 - $3_1 | 0) >> 2 | 0;

                                        if (($3_1 | 0) < (0 | 0)) {

                                            break label$1

                                        }

                                        $5_1 = $1_1 >> 1 | 0;

                                        $6_1 = $3_1 + 1 | 0;

                                        $7_1 = $4_1 - ($2_1 << 2 | 0) | 0;

                                        $8_1 = $0_1 - ($2_1 << 1 | 0) | 0;

                                        label$2 : while (1) {

                                            $9_1 = 0;

                                            $10_1 = 0;

                                            $11_1 = 0;

                                            $12_1 = 0;

                                            label$3 : {

                                                if ($1_1 >>> 0 < 2 >>> 0) {

                                                    break label$3

                                                }

                                                $2_1 = $8_1 + 4 | 0;

                                                $13_1 = HEAPU16[($8_1 + 4 | 0) >> 1] | 0;

                                                $14_1 = HEAPU16[$8_1 >> 1] | 0;

                                                $12_1 = 0;

                                                $11_1 = 0;

                                                $10_1 = 0;

                                                $9_1 = 0;

                                                $3_1 = $8_1;

                                                $4_1 = $0_1;

                                                $15_1 = $5_1;

                                                label$4 : while (1) {

                                                    $16_1 = HEAP16[($2_1 + 2 | 0) >> 1] | 0;

                                                    $17_1 = HEAP16[$4_1 >> 1] | 0;

                                                    $18_1 = HEAP16[($2_1 + 4 | 0) >> 1] | 0;

                                                    $19_1 = HEAP16[($4_1 + 2 | 0) >> 1] | 0;

                                                    $12_1 = (Math_imul($16_1, $17_1) + $12_1 | 0) + Math_imul($18_1, $19_1) | 0;

                                                    $11_1 = (Math_imul($13_1 << 16 >> 16, $17_1) + $11_1 | 0) + Math_imul($19_1, $16_1) | 0;

                                                    $13_1 = HEAP16[($3_1 + 2 | 0) >> 1] | 0;

                                                    $16_1 = HEAP16[($3_1 + 4 | 0) >> 1] | 0;

                                                    $10_1 = (Math_imul($13_1, $17_1) + $10_1 | 0) + Math_imul($16_1, $19_1) | 0;

                                                    $9_1 = (Math_imul($14_1 << 16 >> 16, $17_1) + $9_1 | 0) + Math_imul($19_1, $13_1) | 0;

                                                    $4_1 = $4_1 + 4 | 0;

                                                    $2_1 = $2_1 + 4 | 0;

                                                    $3_1 = $3_1 + 4 | 0;

                                                    $13_1 = $18_1;

                                                    $14_1 = $16_1;

                                                    $15_1 = $15_1 + -1 | 0;

                                                    if ($15_1 & 65535 | 0) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                            }

                                            $8_1 = $8_1 + 8 | 0;

                                            HEAP32[($7_1 + 12 | 0) >> 2] = $12_1 << 1 | 0;

                                            HEAP32[($7_1 + 8 | 0) >> 2] = $11_1 << 1 | 0;

                                            HEAP32[($7_1 + 4 | 0) >> 2] = $10_1 << 1 | 0;

                                            HEAP32[$7_1 >> 2] = $9_1 << 1 | 0;

                                            $7_1 = $7_1 + 16 | 0;

                                            $2_1 = $6_1 << 16 >> 16;

                                            $6_1 = $6_1 + -1 | 0;

                                            if (($2_1 | 0) > (1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $79($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    var $11_1 = 0, $10_1 = 0, $12_1 = 0, $19_1 = 0, $18_1 = 0, $14_1 = 0, $9_1 = 0,

                                        $15_1 = 0, $16_1 = 0, $17_1 = 0, $13_1 = 0, $20_1 = 0;

                                    $9_1 = global$0 - 16 | 0;

                                    global$0 = $9_1;

                                    $10_1 = 0;

                                    $11_1 = 0;

                                    $12_1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                if (($4_1 | 0) < (1 | 0)) {

                                                    break label$3

                                                }

                                                $13_1 = $4_1 & 65535 | 0;

                                                $12_1 = 0;

                                                $14_1 = 0;

                                                $15_1 = 0;

                                                $16_1 = 0;

                                                $10_1 = 0;

                                                label$4 : while (1) {

                                                    $4_1 = $10_1;

                                                    $10_1 = $12_1 << 1 | 0;

                                                    $17_1 = HEAP16[($2_1 + $10_1 | 0) >> 1] | 0;

                                                    $11_1 = HEAP16[($0_1 + $10_1 | 0) >> 1] | 0;

                                                    label$5 : {

                                                        label$6 : {

                                                            label$7 : {

                                                                $10_1 = (HEAPU16[($1_1 + $10_1 | 0) >> 1] | 0) << 16 >> 16;

                                                                $18_1 = Math_imul($10_1, $3_1);

                                                                if (($18_1 | 0) != (1073741824 | 0)) {

                                                                    break label$7

                                                                }

                                                                HEAP32[$8_1 >> 2] = 1;

                                                                break label$6;

                                                            }

                                                            $19_1 = $18_1 << 2 | 0;

                                                            if (($19_1 >> 1 | 0 | 0) == ($18_1 << 1 | 0 | 0)) {

                                                                break label$5

                                                            }

                                                            if (($18_1 | 0) >= (0 | 0)) {

                                                                break label$6

                                                            }

                                                            $19_1 = -2147483648;

                                                            break label$5;

                                                        }

                                                        $19_1 = 2147483647;

                                                    }

                                                    $18_1 = Math_imul($17_1, $10_1);

                                                    $17_1 = Math_imul($11_1, $11_1);

                                                    $20_1 = Math_imul($10_1, $10_1);

                                                    $10_1 = 2147483647;

                                                    label$8 : {

                                                        label$9 : {

                                                            $11_1 = $224($11_1 | 0, $220($19_1 | 0, $8_1 | 0) | 0 | 0, $8_1 | 0) | 0;

                                                            $11_1 = Math_imul($11_1, $11_1);

                                                            if (($11_1 | 0) == (1073741824 | 0)) {

                                                                break label$9

                                                            }

                                                            $10_1 = ($11_1 << 1 | 0) + $4_1 | 0;

                                                            if (($11_1 ^ $4_1 | 0 | 0) < (1 | 0)) {

                                                                break label$8

                                                            }

                                                            if (($10_1 ^ $4_1 | 0 | 0) > (-1 | 0)) {

                                                                break label$8

                                                            }

                                                            $10_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                                        }

                                                        HEAP32[$8_1 >> 2] = 1;

                                                    }

                                                    $16_1 = $18_1 + $16_1 | 0;

                                                    $14_1 = $17_1 + $14_1 | 0;

                                                    $15_1 = $20_1 + $15_1 | 0;

                                                    $12_1 = $12_1 + 1 | 0;

                                                    if (($12_1 | 0) != ($13_1 | 0)) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                                $12_1 = $16_1 << 1 | 0;

                                                $11_1 = $15_1 << 1 | 0;

                                                label$10 : {

                                                    $4_1 = $14_1 << 1 | 0;

                                                    if (($4_1 | 0) > (-1 | 0)) {

                                                        break label$10

                                                    }

                                                    HEAP32[$8_1 >> 2] = 1;

                                                    $4_1 = 2147483647;

                                                    break label$2;

                                                }

                                                if ($14_1 >>> 0 > 199 >>> 0) {

                                                    break label$2

                                                }

                                            }

                                            HEAP16[$5_1 >> 1] = 0;

                                            $4_1 = 65521;

                                            break label$1;

                                        }

                                        label$11 : {

                                            label$12 : {

                                                $19_1 = $209($4_1 | 0) | 0;

                                                if (($19_1 | 0) < (1 | 0)) {

                                                    break label$12

                                                }

                                                $18_1 = $19_1 & 65535 | 0;

                                                $14_1 = $4_1 << $18_1 | 0;

                                                $18_1 = ($14_1 >> $18_1 | 0 | 0) == ($4_1 | 0) ? $14_1 : 2147483647;

                                                break label$11;

                                            }

                                            $18_1 = 0;

                                            $14_1 = (0 - $19_1 | 0) << 16 >> 16;

                                            if (($14_1 | 0) > (30 | 0)) {

                                                break label$11

                                            }

                                            $18_1 = $4_1 >>> ($14_1 & 65535 | 0) | 0;

                                        }

                                        HEAP16[$5_1 >> 1] = $18_1 >>> 16 | 0;

                                        $4_1 = 15 - $19_1 | 0;

                                    }

                                    HEAP16[$6_1 >> 1] = $4_1;

                                    label$13 : {

                                        if (($11_1 | 0) > (-1 | 0)) {

                                            break label$13

                                        }

                                        HEAP32[$8_1 >> 2] = 1;

                                        $11_1 = 2147483647;

                                    }

                                    label$14 : {

                                        label$15 : {

                                            $4_1 = $209($11_1 | 0) | 0;

                                            if (($4_1 | 0) < (1 | 0)) {

                                                break label$15

                                            }

                                            $19_1 = $4_1 & 65535 | 0;

                                            $18_1 = $11_1 << $19_1 | 0;

                                            $19_1 = ($18_1 >> $19_1 | 0 | 0) == ($11_1 | 0) ? $18_1 : 2147483647;

                                            break label$14;

                                        }

                                        $19_1 = 0;

                                        $18_1 = (0 - $4_1 | 0) << 16 >> 16;

                                        if (($18_1 | 0) > (30 | 0)) {

                                            break label$14

                                        }

                                        $19_1 = $11_1 >>> ($18_1 & 65535 | 0) | 0;

                                    }

                                    HEAP16[($5_1 + 2 | 0) >> 1] = $19_1 >>> 16 | 0;

                                    HEAP16[($6_1 + 2 | 0) >> 1] = 15 - $4_1 | 0;

                                    label$16 : {

                                        label$17 : {

                                            $11_1 = $209($12_1 | 0) | 0;

                                            if (($11_1 | 0) < (1 | 0)) {

                                                break label$17

                                            }

                                            $19_1 = $11_1 & 65535 | 0;

                                            $4_1 = $12_1 << $19_1 | 0;

                                            if (($4_1 >> $19_1 | 0 | 0) == ($12_1 | 0)) {

                                                break label$16

                                            }

                                            $4_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$16;

                                        }

                                        $4_1 = 0;

                                        $19_1 = (0 - $11_1 | 0) << 16 >> 16;

                                        if (($19_1 | 0) > (30 | 0)) {

                                            break label$16

                                        }

                                        $4_1 = $12_1 >> ($19_1 & 65535 | 0) | 0;

                                    }

                                    HEAP16[($5_1 + 4 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[($6_1 + 4 | 0) >> 1] = 2 - $11_1 | 0;

                                    label$18 : {

                                        label$19 : {

                                            label$20 : {

                                                label$21 : {

                                                    label$22 : {

                                                        label$23 : {

                                                            $11_1 = $209($10_1 | 0) | 0;

                                                            if (($11_1 | 0) < (1 | 0)) {

                                                                break label$23

                                                            }

                                                            $4_1 = $11_1 & 65535 | 0;

                                                            $12_1 = $10_1 << $4_1 | 0;

                                                            if (($12_1 >> $4_1 | 0 | 0) == ($10_1 | 0)) {

                                                                break label$22

                                                            }

                                                            if (($10_1 | 0) > (-1 | 0)) {

                                                                break label$21

                                                            }

                                                            $12_1 = 32768;

                                                            break label$19;

                                                        }

                                                        $12_1 = 0;

                                                        $4_1 = (0 - $11_1 | 0) << 16 >> 16;

                                                        if (($4_1 | 0) > (30 | 0)) {

                                                            break label$19

                                                        }

                                                        $12_1 = $10_1 >> ($4_1 & 65535 | 0) | 0;

                                                    }

                                                    $10_1 = $12_1 >>> 16 | 0;

                                                    HEAP16[($5_1 + 6 | 0) >> 1] = $10_1;

                                                    $4_1 = 15 - $11_1 | 0;

                                                    HEAP16[($6_1 + 6 | 0) >> 1] = $4_1;

                                                    $11_1 = 0;

                                                    if (($12_1 | 0) >= (65536 | 0)) {

                                                        break label$20

                                                    }

                                                    break label$18;

                                                }

                                                $10_1 = 32767;

                                                HEAP16[($5_1 + 6 | 0) >> 1] = 32767;

                                                $4_1 = 15 - $11_1 | 0;

                                                HEAP16[($6_1 + 6 | 0) >> 1] = $4_1;

                                            }

                                            label$24 : {

                                                $11_1 = HEAPU16[$5_1 >> 1] | 0;

                                                if ($11_1) {

                                                    break label$24

                                                }

                                                $11_1 = 0;

                                                break label$18;

                                            }

                                            $10_1 = ($185($221($11_1 << 16 >> 16 | 0, 1 | 0, $8_1 | 0) | 0 | 0, $10_1 << 16 >> 16 | 0) | 0) << 16 | 0;

                                            label$25 : {

                                                label$26 : {

                                                    $11_1 = $224($4_1 << 16 >> 16 | 0, HEAP16[$6_1 >> 1] | 0 | 0, $8_1 | 0) | 0;

                                                    $12_1 = $11_1 + 3 | 0;

                                                    if (($12_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                        break label$26

                                                    }

                                                    $11_1 = 0;

                                                    $12_1 = $12_1 & 65535 | 0;

                                                    if ($12_1 >>> 0 > 30 >>> 0) {

                                                        break label$25

                                                    }

                                                    $11_1 = $10_1 >> $12_1 | 0;

                                                    break label$25;

                                                }

                                                $12_1 = (-3 - $11_1 | 0) << 16 >> 16;

                                                $11_1 = $10_1 << $12_1 | 0;

                                                if (($11_1 >> $12_1 | 0 | 0) == ($10_1 | 0)) {

                                                    break label$25

                                                }

                                                $11_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $197($11_1 | 0, $9_1 + 14 | 0 | 0, $9_1 + 12 | 0 | 0, $8_1 | 0);

                                            $11_1 = $121(((HEAPU16[($9_1 + 14 | 0) >> 1] | 0) + -27 | 0) << 16 >> 16 | 0, HEAP16[($9_1 + 12 | 0) >> 1] | 0 | 0, $8_1 | 0) | 0;

                                            $11_1 = $220((($11_1 + 262144 | 0) >>> 0 < 524288 >>> 0 ? $11_1 << 13 | 0 : ($11_1 >> 31 | 0) ^ 2147483647 | 0) | 0, $8_1 | 0) | 0;

                                            break label$18;

                                        }

                                        HEAP16[($5_1 + 6 | 0) >> 1] = $12_1;

                                        HEAP16[($6_1 + 6 | 0) >> 1] = 15 - $11_1 | 0;

                                        $11_1 = 0;

                                    }

                                    HEAP16[$7_1 >> 1] = $11_1;

                                    global$0 = $9_1 + 16 | 0;

                                }



                                function $80($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    var $17_1 = 0, $16_1 = 0, $13_1 = 0, $15_1 = 0, $14_1 = 0, $11_1 = 0, $18_1 = 0,

                                        $12_1 = 0, $242_1 = 0, $253 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $11_1 = global$0 - 80 | 0;

                                    global$0 = $11_1;

                                    HEAP16[$6_1 >> 1] = HEAPU16[$5_1 >> 1] | 0;

                                    HEAP16[$7_1 >> 1] = HEAPU16[($5_1 + 2 | 0) >> 1] | 0;

                                    $12_1 = 0;

                                    $13_1 = HEAPU16[($5_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($6_1 + 2 | 0) >> 1] = ($13_1 | 0) == (32768 | 0) ? 32767 : 0 - $13_1 | 0;

                                    HEAP16[($7_1 + 2 | 0) >> 1] = (HEAPU16[($5_1 + 6 | 0) >> 1] | 0) + 1 | 0;

                                    $14_1 = ($0_1 | 0) != (5 | 0) & ($0_1 | 0) != (0 | 0) | 0;

                                    $15_1 = $14_1;

                                    $5_1 = $15_1;

                                    label$1 : while (1) {

                                        $13_1 = $5_1;

                                        $16_1 = $15_1;

                                        $17_1 = $12_1 << 1 | 0;

                                        $5_1 = (HEAP16[($4_1 + $17_1 | 0) >> 1] | 0) >> 3 | 0;

                                        HEAP16[($11_1 + $17_1 | 0) >> 1] = $5_1;

                                        $18_1 = Math_imul($5_1, $5_1);

                                        $15_1 = $14_1;

                                        $14_1 = ($18_1 << 1 | 0) + $15_1 | 0;

                                        label$2 : {

                                            if (($18_1 ^ $15_1 | 0 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            if (($14_1 ^ $15_1 | 0 | 0) > (-1 | 0)) {

                                                break label$2

                                            }

                                            HEAP32[$10_1 >> 2] = 1;

                                            $14_1 = ($15_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $18_1 = Math_imul(HEAP16[($1_1 + $17_1 | 0) >> 1] | 0, $5_1);

                                        $15_1 = ($18_1 << 1 | 0) + $16_1 | 0;

                                        label$3 : {

                                            if (($18_1 ^ $16_1 | 0 | 0) < (1 | 0)) {

                                                break label$3

                                            }

                                            if (($15_1 ^ $16_1 | 0 | 0) > (-1 | 0)) {

                                                break label$3

                                            }

                                            HEAP32[$10_1 >> 2] = 1;

                                            $15_1 = ($16_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $16_1 = Math_imul(HEAP16[($3_1 + $17_1 | 0) >> 1] | 0, $5_1);

                                        $5_1 = ($16_1 << 1 | 0) + $13_1 | 0;

                                        label$4 : {

                                            if (($16_1 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                break label$4

                                            }

                                            if (($5_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                break label$4

                                            }

                                            HEAP32[$10_1 >> 2] = 1;

                                            $5_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $12_1 = $12_1 + 1 | 0;

                                        if (($12_1 | 0) != (40 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    label$5 : {

                                        label$6 : {

                                            $13_1 = $209($14_1 | 0) | 0;

                                            if (($13_1 | 0) < (1 | 0)) {

                                                break label$6

                                            }

                                            $17_1 = $13_1 & 65535 | 0;

                                            $16_1 = $14_1 << $17_1 | 0;

                                            if (($16_1 >> $17_1 | 0 | 0) == ($14_1 | 0)) {

                                                break label$5

                                            }

                                            $16_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$5;

                                        }

                                        $16_1 = 0;

                                        $17_1 = (0 - $13_1 | 0) << 16 >> 16;

                                        if (($17_1 | 0) > (30 | 0)) {

                                            break label$5

                                        }

                                        $16_1 = $14_1 >> ($17_1 & 65535 | 0) | 0;

                                    }

                                    HEAP16[($6_1 + 4 | 0) >> 1] = $16_1 >>> 16 | 0;

                                    HEAP16[($7_1 + 4 | 0) >> 1] = -3 - $13_1 | 0;

                                    label$7 : {

                                        label$8 : {

                                            $16_1 = $209($15_1 | 0) | 0;

                                            if (($16_1 | 0) < (1 | 0)) {

                                                break label$8

                                            }

                                            $13_1 = $16_1 & 65535 | 0;

                                            $17_1 = $15_1 << $13_1 | 0;

                                            if (($17_1 >> $13_1 | 0 | 0) == ($15_1 | 0)) {

                                                break label$7

                                            }

                                            $17_1 = ($15_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$7;

                                        }

                                        $17_1 = 0;

                                        $13_1 = (0 - $16_1 | 0) << 16 >> 16;

                                        if (($13_1 | 0) > (30 | 0)) {

                                            break label$7

                                        }

                                        $17_1 = $15_1 >> ($13_1 & 65535 | 0) | 0;

                                    }

                                    $13_1 = 0;

                                    $17_1 = $17_1 >>> 16 | 0;

                                    HEAP16[($6_1 + 6 | 0) >> 1] = ($17_1 | 0) == (32768 | 0) ? 32767 : 0 - $17_1 | 0;

                                    HEAP16[($7_1 + 6 | 0) >> 1] = 7 - $16_1 | 0;

                                    label$9 : {

                                        label$10 : {

                                            $16_1 = $209($5_1 | 0) | 0;

                                            if (($16_1 | 0) < (1 | 0)) {

                                                break label$10

                                            }

                                            $17_1 = $16_1 & 65535 | 0;

                                            $13_1 = $5_1 << $17_1 | 0;

                                            if (($13_1 >> $17_1 | 0 | 0) == ($5_1 | 0)) {

                                                break label$9

                                            }

                                            $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$9;

                                        }

                                        $17_1 = (0 - $16_1 | 0) << 16 >> 16;

                                        if (($17_1 | 0) > (30 | 0)) {

                                            break label$9

                                        }

                                        $13_1 = $5_1 >> ($17_1 & 65535 | 0) | 0;

                                    }

                                    HEAP16[($6_1 + 8 | 0) >> 1] = $13_1 >>> 16 | 0;

                                    HEAP16[($7_1 + 8 | 0) >> 1] = 7 - $16_1 | 0;

                                    label$11 : {

                                        switch ($0_1 | 0) {

                                            case 0:

                                            case 5:

                                                $13_1 = 0;

                                                $16_1 = 0;

                                                label$13 : while (1) {

                                                    $5_1 = $13_1 << 1 | 0;

                                                    $17_1 = $5_1 | 6 | 0;

                                                    $242_1 = Math_imul(HEAP16[($11_1 + $17_1 | 0) >> 1] | 0, HEAP16[($2_1 + $17_1 | 0) >> 1] | 0);

                                                    $17_1 = $5_1 | 4 | 0;

                                                    $253 = Math_imul(HEAP16[($11_1 + $17_1 | 0) >> 1] | 0, HEAP16[($2_1 + $17_1 | 0) >> 1] | 0);

                                                    $17_1 = $5_1 | 2 | 0;

                                                    $16_1 = $242_1 + ($253 + (Math_imul(HEAP16[($11_1 + $17_1 | 0) >> 1] | 0, HEAP16[($2_1 + $17_1 | 0) >> 1] | 0) + (Math_imul(HEAP16[($11_1 + $5_1 | 0) >> 1] | 0, HEAP16[($2_1 + $5_1 | 0) >> 1] | 0) + $16_1 | 0) | 0) | 0) | 0;

                                                    $13_1 = $13_1 + 4 | 0;

                                                    if (($13_1 | 0) != (40 | 0)) {

                                                        continue label$13

                                                    }

                                                    break label$13;

                                                }

                                                ;

                                                label$14 : {

                                                    label$15 : {

                                                        label$16 : {

                                                            label$17 : {

                                                                label$18 : {

                                                                    $5_1 = $16_1 << 1 | 0;

                                                                    $13_1 = $209($5_1 | 0) | 0;

                                                                    if (($13_1 | 0) < (1 | 0)) {

                                                                        break label$18

                                                                    }

                                                                    $17_1 = $13_1 & 65535 | 0;

                                                                    $16_1 = $5_1 << $17_1 | 0;

                                                                    if (($16_1 >> $17_1 | 0 | 0) == ($5_1 | 0)) {

                                                                        break label$17

                                                                    }

                                                                    $16_1 = 2147483647;

                                                                    if (($5_1 | 0) <= (-1 | 0)) {

                                                                        break label$16

                                                                    }

                                                                    break label$15;

                                                                }

                                                                $16_1 = (0 - $13_1 | 0) << 16 >> 16;

                                                                if (($16_1 | 0) > (30 | 0)) {

                                                                    break label$16

                                                                }

                                                                $16_1 = $5_1 >> ($16_1 & 65535 | 0) | 0;

                                                            }

                                                            if (($16_1 | 0) > (65535 | 0)) {

                                                                break label$15

                                                            }

                                                        }

                                                        $5_1 = 0;

                                                        HEAP16[$8_1 >> 1] = 0;

                                                        break label$14;

                                                    }

                                                    (wasm2js_i32$0 = $8_1, wasm2js_i32$1 = $185($221($16_1 >> 16 | 0 | 0, 1 | 0, $10_1 | 0) | 0 | 0, HEAP16[($6_1 + 4 | 0) >> 1] | 0 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $5_1 = -8 - ($13_1 + (HEAPU16[($7_1 + 4 | 0) >> 1] | 0) | 0) | 0;

                                                }

                                                HEAP16[$9_1 >> 1] = $5_1;

                                                break;

                                            default:

                                                break label$11;

                                        }

                                        ;

                                    }

                                    global$0 = $11_1 + 80 | 0;

                                }



                                function $81($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $6_1 = 0, $4_1 = 0, $5_1 = 0, $17_1 = 0, $23_1 = 0, $29_1 = 0;

                                    $4_1 = 0;

                                    $5_1 = 0;

                                    label$1 : while (1) {

                                        $6_1 = $0_1 + ($4_1 << 1 | 0) | 0;

                                        $7_1 = HEAP16[($6_1 + 8 | 0) >> 1] | 0;

                                        $17_1 = Math_imul($7_1, $7_1);

                                        $7_1 = HEAP16[($6_1 + 6 | 0) >> 1] | 0;

                                        $23_1 = Math_imul($7_1, $7_1);

                                        $7_1 = HEAP16[($6_1 + 4 | 0) >> 1] | 0;

                                        $29_1 = Math_imul($7_1, $7_1);

                                        $7_1 = HEAP16[($6_1 + 2 | 0) >> 1] | 0;

                                        $6_1 = HEAP16[$6_1 >> 1] | 0;

                                        $5_1 = $17_1 + ($23_1 + ($29_1 + (Math_imul($7_1, $7_1) + (Math_imul($6_1, $6_1) + $5_1 | 0) | 0) | 0) | 0) | 0;

                                        $4_1 = $4_1 + 5 | 0;

                                        if (($4_1 | 0) != (40 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    label$2 : {

                                        label$3 : {

                                            $6_1 = $209($5_1 | 0) | 0;

                                            if (($6_1 | 0) < (1 | 0)) {

                                                break label$3

                                            }

                                            $4_1 = $6_1 & 65535 | 0;

                                            $7_1 = $5_1 << $4_1 | 0;

                                            $4_1 = ($7_1 >> $4_1 | 0 | 0) == ($5_1 | 0) ? $7_1 : 2147483647;

                                            break label$2;

                                        }

                                        $4_1 = 0;

                                        $7_1 = (0 - $6_1 | 0) << 16 >> 16;

                                        if (($7_1 | 0) > (30 | 0)) {

                                            break label$2

                                        }

                                        $4_1 = $5_1 >>> ($7_1 & 65535 | 0) | 0;

                                    }

                                    HEAP16[$2_1 >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[$1_1 >> 1] = 16 - $6_1 | 0;

                                }



                                function $82($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1, $12_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    $12_1 = $12_1 | 0;

                                    var $13_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $13_1 = global$0 - 16 | 0;

                                    global$0 = $13_1;

                                    label$1 : {

                                        label$2 : {

                                            if ($9_1 >>> 0 > 1 >>> 0) {

                                                break label$2

                                            }

                                            $12_1 = $72($10_1 | 0, $0_1 | 0, $1_1 | 0, $2_1 | 0, $3_1 | 0, $6_1 | 0, $7_1 | 0, $13_1 + 14 | 0 | 0, HEAP32[($11_1 + 76 | 0) >> 2] | 0 | 0, $12_1 | 0) | 0;

                                            $1_1 = HEAP32[$8_1 >> 2] | 0;

                                            HEAP16[$1_1 >> 1] = $12_1;

                                            $12_1 = HEAPU16[($13_1 + 14 | 0) >> 1] | 0;

                                            HEAP32[$8_1 >> 2] = $1_1 + 4 | 0;

                                            HEAP16[($1_1 + 2 | 0) >> 1] = $12_1;

                                            break label$1;

                                        }

                                        label$3 : {

                                            switch ($9_1 + -2 | 0 | 0) {

                                                case 0:

                                                    $12_1 = $71($0_1 | 0, $1_1 | 0, $2_1 | 0, $3_1 | 0, $6_1 | 0, $7_1 | 0, $13_1 + 14 | 0 | 0, $12_1 | 0) | 0;

                                                    $1_1 = HEAP32[$8_1 >> 2] | 0;

                                                    HEAP16[$1_1 >> 1] = $12_1;

                                                    $12_1 = HEAPU16[($13_1 + 14 | 0) >> 1] | 0;

                                                    HEAP32[$8_1 >> 2] = $1_1 + 4 | 0;

                                                    HEAP16[($1_1 + 2 | 0) >> 1] = $12_1;

                                                    break label$1;

                                                case 1:

                                                    $12_1 = $75($0_1 | 0, $1_1 | 0, $2_1 | 0, $3_1 | 0, $6_1 | 0, $7_1 | 0, $13_1 + 14 | 0 | 0, $12_1 | 0) | 0;

                                                    $1_1 = HEAP32[$8_1 >> 2] | 0;

                                                    HEAP16[$1_1 >> 1] = $12_1;

                                                    $12_1 = HEAPU16[($13_1 + 14 | 0) >> 1] | 0;

                                                    HEAP32[$8_1 >> 2] = $1_1 + 4 | 0;

                                                    HEAP16[($1_1 + 2 | 0) >> 1] = $12_1;

                                                    break label$1;

                                                default:

                                                    break label$3;

                                            }

                                            ;

                                        }

                                        label$6 : {

                                            if (($9_1 & -2 | 0 | 0) != (4 | 0)) {

                                                break label$6

                                            }

                                            $12_1 = $76($0_1 | 0, $1_1 | 0, $2_1 | 0, $3_1 | 0, $6_1 | 0, $7_1 | 0, $13_1 + 14 | 0 | 0, HEAP32[($11_1 + 36 | 0) >> 2] | 0 | 0, $12_1 | 0) | 0;

                                            $1_1 = HEAP32[$8_1 >> 2] | 0;

                                            HEAP16[$1_1 >> 1] = $12_1;

                                            $12_1 = HEAPU16[($13_1 + 14 | 0) >> 1] | 0;

                                            HEAP32[$8_1 >> 2] = $1_1 + 4 | 0;

                                            HEAP16[($1_1 + 2 | 0) >> 1] = $12_1;

                                            break label$1;

                                        }

                                        label$7 : {

                                            label$8 : {

                                                label$9 : {

                                                    if (($9_1 | 0) != (6 | 0)) {

                                                        break label$9

                                                    }

                                                    if (($2_1 | 0) > (39 | 0)) {

                                                        break label$8

                                                    }

                                                    $10_1 = ((($3_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? ($3_1 >> 15 | 0) ^ 32767 | 0 : $3_1 << 1 | 0) << 16 >> 16;

                                                    $9_1 = $2_1;

                                                    label$10 : while (1) {

                                                        label$11 : {

                                                            label$12 : {

                                                                $3_1 = Math_imul(HEAP16[($1_1 + (($9_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1);

                                                                if (($3_1 | 0) >= (1073741824 | 0)) {

                                                                    break label$12

                                                                }

                                                                $11_1 = $3_1 >> 15 | 0;

                                                                break label$11;

                                                            }

                                                            HEAP32[$12_1 >> 2] = 1;

                                                            $11_1 = 32767;

                                                        }

                                                        $3_1 = $1_1 + ($9_1 << 1 | 0) | 0;

                                                        (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(HEAP16[$3_1 >> 1] | 0 | 0, $11_1 << 16 >> 16 | 0, $12_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                        $9_1 = $9_1 + 1 | 0;

                                                        if (($9_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                            continue label$10

                                                        }

                                                        break label$10;

                                                    }

                                                    ;

                                                    $77($0_1 | 0, $5_1 | 0, $1_1 | 0, $6_1 | 0, $7_1 | 0, HEAP32[$8_1 >> 2] | 0 | 0, $12_1 | 0);

                                                    HEAP32[$8_1 >> 2] = (HEAP32[$8_1 >> 2] | 0) + 14 | 0;

                                                    if (($2_1 | 0) > (39 | 0)) {

                                                        break label$1

                                                    }

                                                    $1_1 = $2_1;

                                                    label$13 : while (1) {

                                                        label$14 : {

                                                            label$15 : {

                                                                $8_1 = Math_imul(HEAP16[($6_1 + (($1_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1);

                                                                if (($8_1 | 0) >= (1073741824 | 0)) {

                                                                    break label$15

                                                                }

                                                                $9_1 = $8_1 >> 15 | 0;

                                                                break label$14;

                                                            }

                                                            HEAP32[$12_1 >> 2] = 1;

                                                            $9_1 = 32767;

                                                        }

                                                        $8_1 = $6_1 + ($1_1 << 1 | 0) | 0;

                                                        (wasm2js_i32$0 = $8_1, wasm2js_i32$1 = $183(HEAP16[$8_1 >> 1] | 0 | 0, $9_1 << 16 >> 16 | 0, $12_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                        $1_1 = $1_1 + 1 | 0;

                                                        if (($1_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                            continue label$13

                                                        }

                                                        break label$1;

                                                    }

                                                    ;

                                                }

                                                if (($2_1 | 0) > (39 | 0)) {

                                                    break label$7

                                                }

                                                $10_1 = ((($4_1 + 16384 | 0) << 16 >> 16 | 0) < (0 | 0) ? ($4_1 >> 15 | 0) ^ 32767 | 0 : $4_1 << 1 | 0) << 16 >> 16;

                                                $9_1 = $2_1;

                                                label$16 : while (1) {

                                                    $3_1 = $1_1 + ($9_1 << 1 | 0) | 0;

                                                    (wasm2js_i32$0 = $3_1, wasm2js_i32$1 = $183(HEAP16[$3_1 >> 1] | 0 | 0, (Math_imul(HEAP16[($1_1 + (($9_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1) >>> 15 | 0) << 16 >> 16 | 0, $12_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $9_1 = $9_1 + 1 | 0;

                                                    if (($9_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                        continue label$16

                                                    }

                                                    break label$16;

                                                }

                                                ;

                                                $70($0_1 | 0, $5_1 | 0, $1_1 | 0, $6_1 | 0, $7_1 | 0, HEAP32[$8_1 >> 2] | 0 | 0, HEAP32[($11_1 + 36 | 0) >> 2] | 0 | 0, $12_1 | 0);

                                                HEAP32[$8_1 >> 2] = (HEAP32[$8_1 >> 2] | 0) + 20 | 0;

                                                if (($2_1 | 0) > (39 | 0)) {

                                                    break label$1

                                                }

                                                $1_1 = $2_1;

                                                label$17 : while (1) {

                                                    label$18 : {

                                                        label$19 : {

                                                            $8_1 = Math_imul(HEAP16[($6_1 + (($1_1 - $2_1 | 0) << 1 | 0) | 0) >> 1] | 0, $10_1);

                                                            if (($8_1 | 0) >= (1073741824 | 0)) {

                                                                break label$19

                                                            }

                                                            $9_1 = $8_1 >> 15 | 0;

                                                            break label$18;

                                                        }

                                                        HEAP32[$12_1 >> 2] = 1;

                                                        $9_1 = 32767;

                                                    }

                                                    $8_1 = $6_1 + ($1_1 << 1 | 0) | 0;

                                                    (wasm2js_i32$0 = $8_1, wasm2js_i32$1 = $183(HEAP16[$8_1 >> 1] | 0 | 0, $9_1 << 16 >> 16 | 0, $12_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                    $1_1 = $1_1 + 1 | 0;

                                                    if (($1_1 & 65535 | 0 | 0) != (40 | 0)) {

                                                        continue label$17

                                                    }

                                                    break label$1;

                                                }

                                                ;

                                            }

                                            $77($0_1 | 0, $5_1 | 0, $1_1 | 0, $6_1 | 0, $7_1 | 0, HEAP32[$8_1 >> 2] | 0 | 0, $12_1 | 0);

                                            HEAP32[$8_1 >> 2] = (HEAP32[$8_1 >> 2] | 0) + 14 | 0;

                                            break label$1;

                                        }

                                        $70($0_1 | 0, $5_1 | 0, $1_1 | 0, $6_1 | 0, $7_1 | 0, HEAP32[$8_1 >> 2] | 0 | 0, HEAP32[($11_1 + 36 | 0) >> 2] | 0 | 0, $12_1 | 0);

                                        HEAP32[$8_1 >> 2] = (HEAP32[$8_1 >> 2] | 0) + 20 | 0;

                                    }

                                    global$0 = $13_1 + 16 | 0;

                                }



                                function $83($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, $1_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(4 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        label$2 : {

                                            if (!($133($2_1 | 0) | 0)) {

                                                break label$2

                                            }

                                            $135($2_1 | 0);

                                            $232($2_1 | 0);

                                            return 65535 << 16 >> 16 | 0;

                                        }

                                        $134(HEAP32[$2_1 >> 2] | 0 | 0) | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $84($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $135($1_1 | 0);

                                        $232(HEAP32[$0_1 >> 2] | 0 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $85($0_1) {

                                    $0_1 = $0_1 | 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $134(HEAP32[$0_1 >> 2] | 0 | 0) | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $86($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1, $12_1, $13_1, $14_1, $15_1, $16_1, $17_1, $18_1, $19_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    $12_1 = $12_1 | 0;

                                    $13_1 = $13_1 | 0;

                                    $14_1 = $14_1 | 0;

                                    $15_1 = $15_1 | 0;

                                    $16_1 = $16_1 | 0;

                                    $17_1 = $17_1 | 0;

                                    $18_1 = $18_1 | 0;

                                    $19_1 = $19_1 | 0;

                                    var $20_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $20_1 = global$0 - 16 | 0;

                                    global$0 = $20_1;

                                    (wasm2js_i32$0 = $12_1, wasm2js_i32$1 = $136(HEAP32[$0_1 >> 2] | 0 | 0, $2_1 | 0, $4_1 | 0, $6_1 | 0, $8_1 | 0, $5_1 | 0, 40 | 0, $3_1 | 0, $13_1 | 0, $20_1 + 12 | 0 | 0, $20_1 + 14 | 0 | 0, $19_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                    $0_1 = HEAPU16[($20_1 + 14 | 0) >> 1] | 0;

                                    $3_1 = HEAP32[$16_1 >> 2] | 0;

                                    HEAP32[$16_1 >> 2] = $3_1 + 2 | 0;

                                    HEAP16[$3_1 >> 1] = $0_1;

                                    $212($6_1 | 0, HEAP16[$12_1 >> 1] | 0 | 0, HEAP16[$13_1 >> 1] | 0 | 0, 40 | 0, HEAP16[($20_1 + 12 | 0) >> 1] | 0 | 0, $19_1 | 0);

                                    $91($6_1 | 0, $5_1 | 0, $11_1 | 0, 40 | 0);

                                    (wasm2js_i32$0 = $14_1, wasm2js_i32$1 = $116($2_1 | 0, $8_1 | 0, $11_1 | 0, $15_1 | 0, 40 | 0, $19_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                    HEAP16[$17_1 >> 1] = 32767;

                                    $12_1 = 0;

                                    label$1 : {

                                        if (!$9_1) {

                                            break label$1

                                        }

                                        $13_1 = HEAP16[$14_1 >> 1] | 0;

                                        if (($13_1 | 0) < (15566 | 0)) {

                                            break label$1

                                        }

                                        $12_1 = $171($1_1 | 0, $13_1 | 0, $19_1 | 0) | 0;

                                    }

                                    label$2 : {

                                        label$3 : {

                                            if ($2_1 >>> 0 > 1 >>> 0) {

                                                break label$3

                                            }

                                            $19_1 = HEAP16[$14_1 >> 1] | 0;

                                            HEAP16[$14_1 >> 1] = ($19_1 | 0) < (13926 | 0) ? $19_1 : 13926;

                                            if (!$12_1) {

                                                break label$2

                                            }

                                            HEAP16[$17_1 >> 1] = 15565;

                                            break label$2;

                                        }

                                        label$4 : {

                                            if (!$12_1) {

                                                break label$4

                                            }

                                            HEAP16[$17_1 >> 1] = 15565;

                                            HEAP16[$14_1 >> 1] = 15565;

                                        }

                                        if (($2_1 | 0) != (7 | 0)) {

                                            break label$2

                                        }

                                        $19_1 = $154(7 | 0, HEAP16[$17_1 >> 1] | 0 | 0, $14_1 | 0, 0 | 0, 0 | 0, $18_1 | 0, $19_1 | 0) | 0;

                                        $2_1 = HEAP32[$16_1 >> 2] | 0;

                                        HEAP32[$16_1 >> 2] = $2_1 + 2 | 0;

                                        HEAP16[$2_1 >> 1] = $19_1;

                                    }

                                    $14_1 = HEAP16[$14_1 >> 1] | 0;

                                    $19_1 = 0;

                                    label$5 : while (1) {

                                        HEAP16[$10_1 >> 1] = (HEAPU16[$8_1 >> 1] | 0) - (Math_imul(HEAP16[$11_1 >> 1] | 0, $14_1) >>> 14 | 0) | 0;

                                        $2_1 = $19_1 << 1 | 0;

                                        $16_1 = $7_1 + $2_1 | 0;

                                        HEAP16[$16_1 >> 1] = (HEAPU16[$16_1 >> 1] | 0) - (Math_imul(HEAP16[$6_1 >> 1] | 0, $14_1) >>> 14 | 0) | 0;

                                        HEAP16[($10_1 + 2 | 0) >> 1] = (HEAPU16[($8_1 + 2 | 0) >> 1] | 0) - (Math_imul(HEAP16[($11_1 + 2 | 0) >> 1] | 0, $14_1) >>> 14 | 0) | 0;

                                        $2_1 = $7_1 + ($2_1 | 2 | 0) | 0;

                                        HEAP16[$2_1 >> 1] = (HEAPU16[$2_1 >> 1] | 0) - (Math_imul(HEAP16[($6_1 + 2 | 0) >> 1] | 0, $14_1) >>> 14 | 0) | 0;

                                        $6_1 = $6_1 + 4 | 0;

                                        $10_1 = $10_1 + 4 | 0;

                                        $8_1 = $8_1 + 4 | 0;

                                        $11_1 = $11_1 + 4 | 0;

                                        $19_1 = $19_1 + 2 | 0;

                                        if (($19_1 | 0) != (40 | 0)) {

                                            continue label$5

                                        }

                                        break label$5;

                                    }

                                    ;

                                    global$0 = $20_1 + 16 | 0;

                                }



                                function $87($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var $4_1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $2_1 = 0, $3_1 = 0, $5_1 = 0,

                                        $6_1 = 0, $7_1 = 0;

                                    $2_1 = global$0 - 16 | 0;

                                    global$0 = $2_1;

                                    $3_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $4_1 = $231(2532 | 0) | 0;

                                        HEAP32[($2_1 + 12 | 0) >> 2] = $4_1;

                                        if (!$4_1) {

                                            break label$1

                                        }

                                        $190($4_1 + 2392 | 0 | 0);

                                        i64toi32_i32$1 = $4_1;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[($4_1 + 2188 | 0) >> 2] = 0;

                                        HEAP32[($4_1 + 2192 | 0) >> 2] = i64toi32_i32$0;

                                        HEAP32[($4_1 + 2220 | 0) >> 2] = 0;

                                        $5_1 = $4_1 + 2196 | 0;

                                        i64toi32_i32$1 = $5_1;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[i64toi32_i32$1 >> 2] = 0;

                                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        $6_1 = $4_1 + 2204 | 0;

                                        i64toi32_i32$1 = $6_1;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[i64toi32_i32$1 >> 2] = 0;

                                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        $7_1 = $4_1 + 2212 | 0;

                                        HEAP32[$7_1 >> 2] = 0;

                                        HEAP32[($4_1 + 2528 | 0) >> 2] = 0;

                                        HEAP32[($4_1 + 2216 | 0) >> 2] = $1_1;

                                        label$2 : {

                                            label$3 : {

                                                if ($83($5_1 | 0) | 0) {

                                                    break label$3

                                                }

                                                if ($202($4_1 + 2192 | 0 | 0) | 0) {

                                                    break label$3

                                                }

                                                if ($111($4_1 + 2200 | 0 | 0) | 0) {

                                                    break label$3

                                                }

                                                if ($139($6_1 | 0) | 0) {

                                                    break label$3

                                                }

                                                if ($167($4_1 + 2208 | 0 | 0) | 0) {

                                                    break label$3

                                                }

                                                if ($173($7_1 | 0) | 0) {

                                                    break label$3

                                                }

                                                if ($96($4_1 + 2220 | 0 | 0, HEAP32[($4_1 + 2432 | 0) >> 2] | 0 | 0) | 0) {

                                                    break label$3

                                                }

                                                if (!($128($4_1 + 2188 | 0 | 0) | 0)) {

                                                    break label$2

                                                }

                                            }

                                            $88($2_1 + 12 | 0 | 0);

                                            break label$1;

                                        }

                                        $89($4_1 | 0) | 0;

                                        HEAP32[$0_1 >> 2] = $4_1;

                                        $3_1 = 0;

                                    }

                                    global$0 = $2_1 + 16 | 0;

                                    return $3_1 << 16 >> 16 | 0;

                                }



                                function $88($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $129($1_1 + 2188 | 0 | 0);

                                        $204((HEAP32[$0_1 >> 2] | 0) + 2192 | 0 | 0);

                                        $112((HEAP32[$0_1 >> 2] | 0) + 2200 | 0 | 0);

                                        $84((HEAP32[$0_1 >> 2] | 0) + 2196 | 0 | 0);

                                        $141((HEAP32[$0_1 >> 2] | 0) + 2204 | 0 | 0);

                                        $169((HEAP32[$0_1 >> 2] | 0) + 2208 | 0 | 0);

                                        $175((HEAP32[$0_1 >> 2] | 0) + 2212 | 0 | 0);

                                        $98((HEAP32[$0_1 >> 2] | 0) + 2220 | 0 | 0);

                                        $232(HEAP32[$0_1 >> 2] | 0 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $89($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0, $3_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP32[($0_1 + 2528 | 0) >> 2] = 0;

                                    HEAP32[($0_1 + 2384 | 0) >> 2] = $0_1 + 2304 | 0;

                                    $1_1 = $0_1 + 1938 | 0;

                                    HEAP32[($0_1 + 2020 | 0) >> 2] = $1_1;

                                    HEAP32[($0_1 + 1912 | 0) >> 2] = $0_1 + 1590 | 0;

                                    HEAP32[($0_1 + 1264 | 0) >> 2] = $0_1 + 942 | 0;

                                    HEAP32[($0_1 + 648 | 0) >> 2] = $0_1 + 80 | 0;

                                    HEAP32[($0_1 + 644 | 0) >> 2] = $0_1 + 160 | 0;

                                    HEAP32[($0_1 + 640 | 0) >> 2] = $0_1 + 240 | 0;

                                    HEAP32[($0_1 + 652 | 0) >> 2] = $0_1 + 320 | 0;

                                    HEAP32[($0_1 + 2024 | 0) >> 2] = $0_1 + 2108 | 0;

                                    $0_1 = $229($0_1 | 0, 0 | 0, 640 | 0) | 0;

                                    $229($0_1 + 1282 | 0 | 0, 0 | 0, 308 | 0) | 0;

                                    $229($0_1 + 656 | 0 | 0, 0 | 0, 286 | 0) | 0;

                                    $229($1_1 | 0, 0 | 0, 80 | 0) | 0;

                                    $229($0_1 + 2028 | 0 | 0, 0 | 0, 80 | 0) | 0;

                                    $229($0_1 + 2224 | 0 | 0, 0 | 0, 80 | 0) | 0;

                                    HEAP16[($0_1 + 1276 | 0) >> 1] = 40;

                                    $2_1 = 2621480;

                                    HEAP16[($0_1 + 1268 | 0) >> 1] = $2_1;

                                    HEAP16[($0_1 + 1270 | 0) >> 1] = $2_1 >>> 16 | 0;

                                    $3_1 = 2621480;

                                    HEAP16[($0_1 + 1272 | 0) >> 1] = $3_1;

                                    HEAP16[($0_1 + 1274 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    $130(HEAP32[($0_1 + 2188 | 0) >> 2] | 0 | 0) | 0;

                                    $203(HEAP32[($0_1 + 2192 | 0) >> 2] | 0 | 0) | 0;

                                    $85(HEAP32[($0_1 + 2196 | 0) >> 2] | 0 | 0) | 0;

                                    $113(HEAP32[($0_1 + 2200 | 0) >> 2] | 0 | 0) | 0;

                                    $140(HEAP32[($0_1 + 2204 | 0) >> 2] | 0 | 0) | 0;

                                    $168(HEAP32[($0_1 + 2208 | 0) >> 2] | 0 | 0) | 0;

                                    $174(HEAP32[($0_1 + 2212 | 0) >> 2] | 0 | 0) | 0;

                                    $97(HEAP32[($0_1 + 2220 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 2432 | 0) >> 2] | 0 | 0) | 0;

                                    HEAP16[($0_1 + 2388 | 0) >> 1] = 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $90($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $6_1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $9_1 = 0,

                                        $18_1 = 0, $24_1 = 0, $19_1 = 0, $16_1 = 0, $14_1 = 0, $25_1 = 0, $15_1 = 0,

                                        $10_1 = 0, $11_1 = 0, $13_1 = 0, $23_1 = 0, $26_1 = 0, $7_1 = 0, $12_1 = 0,

                                        $8_1 = 0, $17_1 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $129_1 = 0, $140_1 = 0,

                                        $145_1 = 0, $149_1 = 0, $167_1 = 0, $169_1 = 0, $171_1 = 0, $314 = 0, $318 = 0,

                                        $328 = 0, $331 = 0, $340 = 0, $343 = 0, $352 = 0, $354 = 0, $356 = 0, $384 = 0,

                                        $386 = 0, $388 = 0, $639 = 0, $642 = 0;

                                    $6_1 = global$0 - 1248 | 0;

                                    global$0 = $6_1;

                                    HEAP32[($6_1 + 1244 | 0) >> 2] = $3_1;

                                    $227(HEAP32[($0_1 + 652 | 0) >> 2] | 0 | 0, $2_1 | 0, 320 | 0) | 0;

                                    HEAP32[$4_1 >> 2] = $1_1;

                                    $3_1 = $0_1 + 2528 | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (HEAP32[($0_1 + 2216 | 0) >> 2] | 0) {

                                                break label$2

                                            }

                                            $2_1 = 0;

                                            break label$1;

                                        }

                                        $2_1 = $180(HEAP32[($0_1 + 2212 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 652 | 0) >> 2] | 0 | 0, $3_1 | 0) | 0;

                                        $2_1 = $101(HEAP32[($0_1 + 2220 | 0) >> 2] | 0 | 0, $2_1 | 0, $4_1 | 0, $3_1 | 0) | 0;

                                    }

                                    $7_1 = $0_1 + 2392 | 0;

                                    $131(HEAP32[($0_1 + 2188 | 0) >> 2] | 0 | 0, $1_1 | 0, HEAP32[($0_1 + 644 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 648 | 0) >> 2] | 0 | 0, $6_1 + 1152 | 0 | 0, $7_1 | 0, $3_1 | 0);

                                    $205(HEAP32[($0_1 + 2192 | 0) >> 2] | 0 | 0, $1_1 | 0, HEAP32[$4_1 >> 2] | 0 | 0, $6_1 + 1152 | 0 | 0, $6_1 + 1056 | 0 | 0, $6_1 + 1024 | 0 | 0, $6_1 + 1244 | 0 | 0, $3_1 | 0);

                                    $100(HEAP32[($0_1 + 2220 | 0) >> 2] | 0 | 0, $6_1 + 1024 | 0 | 0, HEAP32[($0_1 + 652 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                    label$3 : {

                                        label$4 : {

                                            if ((HEAP32[$4_1 >> 2] | 0 | 0) != (8 | 0)) {

                                                break label$4

                                            }

                                            $99(HEAP32[($0_1 + 2220 | 0) >> 2] | 0 | 0, $2_1 | 0, HEAP32[((HEAP32[($0_1 + 2192 | 0) >> 2] | 0) + 40 | 0) >> 2] | 0 | 0, (HEAP32[($0_1 + 2200 | 0) >> 2] | 0) + 32 | 0 | 0, $6_1 + 1244 | 0 | 0, $3_1 | 0);

                                            $8_1 = 0;

                                            $229($0_1 + 1282 | 0 | 0, 0 | 0, 308 | 0) | 0;

                                            HEAP32[($0_1 + 2260 | 0) >> 2] = 0;

                                            i64toi32_i32$1 = $0_1 + 2252 | 0;

                                            i64toi32_i32$0 = 0;

                                            HEAP32[i64toi32_i32$1 >> 2] = 0;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $0_1;

                                            i64toi32_i32$0 = 0;

                                            HEAP32[($0_1 + 2244 | 0) >> 2] = 0;

                                            HEAP32[($0_1 + 2248 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $0_1;

                                            i64toi32_i32$0 = 0;

                                            HEAP32[($0_1 + 2284 | 0) >> 2] = 0;

                                            HEAP32[($0_1 + 2288 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $0_1 + 2292 | 0;

                                            i64toi32_i32$0 = 0;

                                            HEAP32[i64toi32_i32$1 >> 2] = 0;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            HEAP32[($0_1 + 2300 | 0) >> 2] = 0;

                                            $229(HEAP32[($0_1 + 2020 | 0) >> 2] | 0 | 0, 0 | 0, 80 | 0) | 0;

                                            $229($0_1 + 2028 | 0 | 0, 0 | 0, 80 | 0) | 0;

                                            $203(HEAP32[($0_1 + 2192 | 0) >> 2] | 0 | 0) | 0;

                                            $2_1 = HEAP32[($0_1 + 2192 | 0) >> 2] | 0;

                                            i64toi32_i32$2 = $6_1;

                                            i64toi32_i32$0 = HEAP32[($6_1 + 1024 | 0) >> 2] | 0;

                                            i64toi32_i32$1 = HEAP32[($6_1 + 1028 | 0) >> 2] | 0;

                                            $129_1 = i64toi32_i32$0;

                                            i64toi32_i32$0 = $2_1;

                                            HEAP32[i64toi32_i32$0 >> 2] = $129_1;

                                            HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;

                                            $9_1 = ($6_1 + 1024 | 0) + 16 | 0;

                                            HEAP32[(i64toi32_i32$0 + 16 | 0) >> 2] = HEAP32[$9_1 >> 2] | 0;

                                            i64toi32_i32$2 = $6_1;

                                            i64toi32_i32$1 = HEAP32[($6_1 + 1032 | 0) >> 2] | 0;

                                            i64toi32_i32$0 = HEAP32[($6_1 + 1036 | 0) >> 2] | 0;

                                            $140_1 = i64toi32_i32$1;

                                            i64toi32_i32$1 = $2_1 + 8 | 0;

                                            HEAP32[i64toi32_i32$1 >> 2] = $140_1;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            $2_1 = HEAP32[($0_1 + 2192 | 0) >> 2] | 0;

                                            i64toi32_i32$2 = $6_1;

                                            i64toi32_i32$0 = HEAP32[($6_1 + 1024 | 0) >> 2] | 0;

                                            i64toi32_i32$1 = HEAP32[($6_1 + 1028 | 0) >> 2] | 0;

                                            $145_1 = i64toi32_i32$0;

                                            i64toi32_i32$0 = $2_1;

                                            HEAP32[(i64toi32_i32$0 + 20 | 0) >> 2] = $145_1;

                                            HEAP32[(i64toi32_i32$0 + 24 | 0) >> 2] = i64toi32_i32$1;

                                            i64toi32_i32$2 = $6_1;

                                            i64toi32_i32$1 = HEAP32[($6_1 + 1032 | 0) >> 2] | 0;

                                            i64toi32_i32$0 = HEAP32[($6_1 + 1036 | 0) >> 2] | 0;

                                            $149_1 = i64toi32_i32$1;

                                            i64toi32_i32$1 = $2_1 + 28 | 0;

                                            HEAP32[i64toi32_i32$1 >> 2] = $149_1;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            HEAP32[($2_1 + 36 | 0) >> 2] = HEAP32[$9_1 >> 2] | 0;

                                            $85(HEAP32[($0_1 + 2196 | 0) >> 2] | 0 | 0) | 0;

                                            HEAP16[($0_1 + 2388 | 0) >> 1] = 0;

                                            break label$3;

                                        }

                                        $8_1 = $170(HEAP32[($0_1 + 2208 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 2192 | 0) >> 2] | 0 | 0, $3_1 | 0) | 0;

                                    }

                                    $2_1 = global$4;

                                    $167_1 = $2_1 + 70016 | 0;

                                    $169_1 = $2_1 + 70048 | 0;

                                    $171_1 = $2_1 + 70080 | 0;

                                    $2_1 = $0_1 + 2264 | 0;

                                    $143($1_1 | 0, $167_1 | 0, $169_1 | 0, $171_1 | 0, $6_1 + 1152 | 0 | 0, 0 | 0, HEAP32[($0_1 + 640 | 0) >> 2] | 0 | 0, $2_1 | 0, HEAP32[($0_1 + 1264 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                    $10_1 = $0_1 + 1278 | 0;

                                    $11_1 = $0_1 + 1268 | 0;

                                    label$5 : {

                                        label$6 : {

                                            if ($1_1 >>> 0 < 2 >>> 0) {

                                                break label$6

                                            }

                                            $132(HEAP32[($0_1 + 2204 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 2212 | 0) >> 2] | 0 | 0, $1_1 | 0, HEAP32[($0_1 + 1264 | 0) >> 2] | 0 | 0, $6_1 + 22 | 0 | 0, $11_1 | 0, $10_1 | 0, 0 | 0, HEAP32[($0_1 + 2216 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                            $9_1 = global$4;

                                            $143($1_1 | 0, $9_1 + 70016 | 0 | 0, $9_1 + 70048 | 0 | 0, $9_1 + 70080 | 0 | 0, $6_1 + 1152 | 0 | 0, 80 | 0, HEAP32[($0_1 + 640 | 0) >> 2] | 0 | 0, $2_1 | 0, HEAP32[($0_1 + 1264 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                            $132(HEAP32[($0_1 + 2204 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 2212 | 0) >> 2] | 0 | 0, $1_1 | 0, (HEAP32[($0_1 + 1264 | 0) >> 2] | 0) + 160 | 0 | 0, ($6_1 + 22 | 0) + 2 | 0 | 0, $11_1 | 0, $10_1 | 0, 1 | 0, HEAP32[($0_1 + 2216 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                            break label$5;

                                        }

                                        $9_1 = global$4;

                                        $143($1_1 | 0, $9_1 + 70016 | 0 | 0, $9_1 + 70048 | 0 | 0, $9_1 + 70080 | 0 | 0, $6_1 + 1152 | 0 | 0, 80 | 0, HEAP32[($0_1 + 640 | 0) >> 2] | 0 | 0, $2_1 | 0, HEAP32[($0_1 + 1264 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                        $132(HEAP32[($0_1 + 2204 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 2212 | 0) >> 2] | 0 | 0, $1_1 | 0, HEAP32[($0_1 + 1264 | 0) >> 2] | 0 | 0, $6_1 + 22 | 0 | 0, $11_1 | 0, $10_1 | 0, 1 | 0, HEAP32[($0_1 + 2216 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                        HEAP16[($6_1 + 24 | 0) >> 1] = HEAPU16[($6_1 + 22 | 0) >> 1] | 0;

                                    }

                                    label$7 : {

                                        if (!(HEAP32[($0_1 + 2216 | 0) >> 2] | 0)) {

                                            break label$7

                                        }

                                        $179(HEAP32[($0_1 + 2212 | 0) >> 2] | 0 | 0, $6_1 + 22 | 0 | 0, $3_1 | 0);

                                    }

                                    label$8 : {

                                        if ((HEAP32[$4_1 >> 2] | 0 | 0) == (8 | 0)) {

                                            break label$8

                                        }

                                        $12_1 = $0_1 + 1916 | 0;

                                        $13_1 = $0_1 + 2388 | 0;

                                        $14_1 = $0_1 + 2244 | 0;

                                        $15_1 = $0_1 + 2224 | 0;

                                        $2_1 = $6_1 + 1056 | 0;

                                        $9_1 = $6_1 + 1152 | 0;

                                        $16_1 = $0_1 + 2284 | 0;

                                        $17_1 = $16_1 + 8 | 0;

                                        $18_1 = 0;

                                        $19_1 = 65535;

                                        $20_1 = 0;

                                        $21_1 = 0;

                                        $22_1 = 0;

                                        $23_1 = 0;

                                        label$9 : while (1) {

                                            $24_1 = $19_1;

                                            $1_1 = $18_1;

                                            $19_1 = HEAP32[$4_1 >> 2] | 0;

                                            label$10 : {

                                                label$11 : {

                                                    label$12 : {

                                                        label$13 : {

                                                            $23_1 = 1 - ($23_1 & 65535 | 0) | 0;

                                                            $25_1 = $23_1 & 65535 | 0;

                                                            if (!$25_1) {

                                                                break label$13

                                                            }

                                                            if ($19_1) {

                                                                break label$12

                                                            }

                                                            HEAP32[(($6_1 + 96 | 0) + 16 | 0) >> 2] = HEAP32[($15_1 + 16 | 0) >> 2] | 0;

                                                            i64toi32_i32$2 = $15_1;

                                                            i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                                            i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                                            $314 = i64toi32_i32$0;

                                                            i64toi32_i32$0 = $6_1;

                                                            HEAP32[($6_1 + 96 | 0) >> 2] = $314;

                                                            HEAP32[($6_1 + 100 | 0) >> 2] = i64toi32_i32$1;

                                                            i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;

                                                            i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                                            i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                                            $318 = i64toi32_i32$1;

                                                            i64toi32_i32$1 = $6_1;

                                                            HEAP32[($6_1 + 104 | 0) >> 2] = $318;

                                                            HEAP32[($6_1 + 108 | 0) >> 2] = i64toi32_i32$0;

                                                            HEAP32[(($6_1 + 64 | 0) + 16 | 0) >> 2] = HEAP32[($14_1 + 16 | 0) >> 2] | 0;

                                                            i64toi32_i32$2 = $14_1 + 8 | 0;

                                                            i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                                            i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                                            $328 = i64toi32_i32$0;

                                                            i64toi32_i32$0 = $6_1;

                                                            HEAP32[($6_1 + 72 | 0) >> 2] = $328;

                                                            HEAP32[($6_1 + 76 | 0) >> 2] = i64toi32_i32$1;

                                                            i64toi32_i32$2 = $14_1;

                                                            i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                                            i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                                            $331 = i64toi32_i32$1;

                                                            i64toi32_i32$1 = $6_1;

                                                            HEAP32[($6_1 + 64 | 0) >> 2] = $331;

                                                            HEAP32[($6_1 + 68 | 0) >> 2] = i64toi32_i32$0;

                                                            HEAP32[(($6_1 + 32 | 0) + 16 | 0) >> 2] = HEAP32[($16_1 + 16 | 0) >> 2] | 0;

                                                            i64toi32_i32$2 = $17_1;

                                                            i64toi32_i32$0 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                                            i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                                            $340 = i64toi32_i32$0;

                                                            i64toi32_i32$0 = $6_1;

                                                            HEAP32[($6_1 + 40 | 0) >> 2] = $340;

                                                            HEAP32[($6_1 + 44 | 0) >> 2] = i64toi32_i32$1;

                                                            i64toi32_i32$2 = $16_1;

                                                            i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                                            i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                                            $343 = i64toi32_i32$1;

                                                            i64toi32_i32$1 = $6_1;

                                                            HEAP32[($6_1 + 32 | 0) >> 2] = $343;

                                                            HEAP32[($6_1 + 36 | 0) >> 2] = i64toi32_i32$0;

                                                            HEAP16[($6_1 + 30 | 0) >> 1] = HEAPU16[$13_1 >> 1] | 0;

                                                            break label$11;

                                                        }

                                                        if (!$19_1) {

                                                            break label$11

                                                        }

                                                    }

                                                    $18_1 = global$4;

                                                    $352 = $18_1 + 70016 | 0;

                                                    $354 = $18_1 + 70048 | 0;

                                                    $356 = $18_1 + 70080 | 0;

                                                    $18_1 = $1_1 << 1 | 0;

                                                    $165($19_1 | 0, $352 | 0, $354 | 0, $356 | 0, $9_1 | 0, $2_1 | 0, (HEAP32[($0_1 + 640 | 0) >> 2] | 0) + $18_1 | 0 | 0, $16_1 | 0, $14_1 | 0, HEAP32[($0_1 + 2020 | 0) >> 2] | 0 | 0, $12_1 | 0, (HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $18_1 | 0 | 0, HEAP32[($0_1 + 2024 | 0) >> 2] | 0 | 0, $6_1 + 944 | 0 | 0, $6_1 + 528 | 0 | 0, HEAP32[($0_1 + 2384 | 0) >> 2] | 0 | 0);

                                                    break label$10;

                                                }

                                                $19_1 = global$4;

                                                $384 = $19_1 + 70016 | 0;

                                                $386 = $19_1 + 70048 | 0;

                                                $388 = $19_1 + 70080 | 0;

                                                $19_1 = $1_1 << 1 | 0;

                                                $165(0 | 0, $384 | 0, $386 | 0, $388 | 0, $9_1 | 0, $2_1 | 0, (HEAP32[($0_1 + 640 | 0) >> 2] | 0) + $19_1 | 0 | 0, $16_1 | 0, $6_1 + 64 | 0 | 0, HEAP32[($0_1 + 2020 | 0) >> 2] | 0 | 0, $12_1 | 0, (HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $19_1 | 0 | 0, HEAP32[($0_1 + 2024 | 0) >> 2] | 0 | 0, $6_1 + 944 | 0 | 0, $6_1 + 528 | 0 | 0, HEAP32[($0_1 + 2384 | 0) >> 2] | 0 | 0);

                                                if (!$25_1) {

                                                    break label$10

                                                }

                                                $227($6_1 + 128 | 0 | 0, HEAP32[($0_1 + 2024 | 0) >> 2] | 0 | 0, 80 | 0) | 0;

                                            }

                                            $19_1 = $24_1 + 1 | 0;

                                            $227($6_1 + 448 | 0 | 0, $6_1 + 528 | 0 | 0, 80 | 0) | 0;

                                            $26_1 = $1_1 << 16 >> 16;

                                            $18_1 = $1_1 << 1 | 0;

                                            $86(HEAP32[($0_1 + 2196 | 0) >> 2] | 0 | 0, HEAP32[($0_1 + 2208 | 0) >> 2] | 0 | 0, HEAP32[$4_1 >> 2] | 0 | 0, $26_1 | 0, $6_1 + 22 | 0 | 0, HEAP32[($0_1 + 2024 | 0) >> 2] | 0 | 0, (HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $18_1 | 0 | 0, $6_1 + 448 | 0 | 0, $6_1 + 944 | 0 | 0, $8_1 | 0, $6_1 + 864 | 0 | 0, $6_1 + 704 | 0 | 0, $6_1 + 20 | 0 | 0, $6_1 + 18 | 0 | 0, $6_1 + 16 | 0 | 0, $6_1 + 612 | 0 | 0, $6_1 + 1244 | 0 | 0, $6_1 + 12 | 0 | 0, HEAP32[($0_1 + 2464 | 0) >> 2] | 0 | 0, $3_1 | 0);

                                            label$14 : {

                                                label$15 : {

                                                    $24_1 = $24_1 & 65535 | 0;

                                                    if (($24_1 | 0) == (2 | 0)) {

                                                        break label$15

                                                    }

                                                    if (($24_1 | 0) != (65535 | 0)) {

                                                        break label$14

                                                    }

                                                    if ((HEAP16[$10_1 >> 1] | 0 | 0) < (1 | 0)) {

                                                        break label$14

                                                    }

                                                    HEAP16[($0_1 + 1270 | 0) >> 1] = HEAPU16[($6_1 + 20 | 0) >> 1] | 0;

                                                    break label$14;

                                                }

                                                if ((HEAP16[($0_1 + 1280 | 0) >> 1] | 0 | 0) < (1 | 0)) {

                                                    break label$14

                                                }

                                                HEAP16[$11_1 >> 1] = HEAPU16[($6_1 + 20 | 0) >> 1] | 0;

                                            }

                                            $82($6_1 + 864 | 0 | 0, HEAP32[($0_1 + 2024 | 0) >> 2] | 0 | 0, HEAP16[($6_1 + 20 | 0) >> 1] | 0 | 0, HEAP16[($0_1 + 2388 | 0) >> 1] | 0 | 0, HEAP16[($6_1 + 16 | 0) >> 1] | 0 | 0, $6_1 + 448 | 0 | 0, $6_1 + 784 | 0 | 0, $6_1 + 624 | 0 | 0, $6_1 + 1244 | 0 | 0, HEAP32[$4_1 >> 2] | 0 | 0, $19_1 << 16 >> 16 | 0, $7_1 | 0, $3_1 | 0);

                                            $114(HEAP32[($0_1 + 2200 | 0) >> 2] | 0 | 0, HEAP32[$4_1 >> 2] | 0 | 0, $6_1 + 528 | 0 | 0, (HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $18_1 | 0 | 0, $6_1 + 784 | 0 | 0, $6_1 + 944 | 0 | 0, $6_1 + 864 | 0 | 0, $6_1 + 704 | 0 | 0, $6_1 + 624 | 0 | 0, $6_1 + 612 | 0 | 0, $23_1 << 16 >> 16 | 0, HEAP16[($6_1 + 12 | 0) >> 1] | 0 | 0, $6_1 + 28 | 0 | 0, $6_1 + 26 | 0 | 0, $6_1 + 16 | 0 | 0, $6_1 + 14 | 0 | 0, $6_1 + 1244 | 0 | 0, $7_1 | 0, $3_1 | 0);

                                            $172(HEAP32[($0_1 + 2208 | 0) >> 2] | 0 | 0, HEAP16[($6_1 + 16 | 0) >> 1] | 0 | 0, $3_1 | 0);

                                            label$16 : {

                                                label$17 : {

                                                    $24_1 = HEAP32[$4_1 >> 2] | 0;

                                                    if (!$24_1) {

                                                        break label$17

                                                    }

                                                    $166(HEAP32[($0_1 + 640 | 0) >> 2] | 0 | 0, $24_1 | 0, $26_1 | 0, HEAP16[($6_1 + 16 | 0) >> 1] | 0 | 0, HEAP16[($6_1 + 14 | 0) >> 1] | 0 | 0, $2_1 | 0, $5_1 | 0, $6_1 + 944 | 0 | 0, $6_1 + 784 | 0 | 0, $6_1 + 704 | 0 | 0, $6_1 + 624 | 0 | 0, $15_1 | 0, $16_1 | 0, $14_1 | 0, HEAP32[($0_1 + 1912 | 0) >> 2] | 0 | 0, $13_1 | 0, $3_1 | 0);

                                                    break label$16;

                                                }

                                                label$18 : {

                                                    if (!$25_1) {

                                                        break label$18

                                                    }

                                                    $227($6_1 + 368 | 0 | 0, $6_1 + 944 | 0 | 0, 80 | 0) | 0;

                                                    $227($6_1 + 288 | 0 | 0, $6_1 + 624 | 0 | 0, 80 | 0) | 0;

                                                    $227($6_1 + 208 | 0 | 0, $6_1 + 784 | 0 | 0, 80 | 0) | 0;

                                                    $21_1 = HEAPU16[($6_1 + 18 | 0) >> 1] | 0;

                                                    $22_1 = HEAPU16[($6_1 + 20 | 0) >> 1] | 0;

                                                    $166(HEAP32[($0_1 + 640 | 0) >> 2] | 0 | 0, 0 | 0, $26_1 | 0, HEAP16[($6_1 + 16 | 0) >> 1] | 0 | 0, HEAP16[($6_1 + 14 | 0) >> 1] | 0 | 0, $2_1 | 0, $5_1 | 0, $6_1 + 944 | 0 | 0, $6_1 + 784 | 0 | 0, $6_1 + 704 | 0 | 0, $6_1 + 624 | 0 | 0, $6_1 + 96 | 0 | 0, $16_1 | 0, $6_1 + 64 | 0 | 0, HEAP32[($0_1 + 1912 | 0) >> 2] | 0 | 0, $13_1 | 0, $3_1 | 0);

                                                    HEAP16[($0_1 + 2388 | 0) >> 1] = HEAPU16[($6_1 + 30 | 0) >> 1] | 0;

                                                    $20_1 = $1_1;

                                                    break label$16;

                                                }

                                                i64toi32_i32$2 = $6_1;

                                                i64toi32_i32$0 = HEAP32[($6_1 + 32 | 0) >> 2] | 0;

                                                i64toi32_i32$1 = HEAP32[($6_1 + 36 | 0) >> 2] | 0;

                                                $639 = i64toi32_i32$0;

                                                i64toi32_i32$0 = $16_1;

                                                HEAP32[i64toi32_i32$0 >> 2] = $639;

                                                HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;

                                                i64toi32_i32$2 = $6_1;

                                                i64toi32_i32$1 = HEAP32[($6_1 + 40 | 0) >> 2] | 0;

                                                i64toi32_i32$0 = HEAP32[($6_1 + 44 | 0) >> 2] | 0;

                                                $642 = i64toi32_i32$1;

                                                i64toi32_i32$1 = $17_1;

                                                HEAP32[i64toi32_i32$1 >> 2] = $642;

                                                HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                                HEAP32[($16_1 + 16 | 0) >> 2] = HEAP32[(($6_1 + 32 | 0) + 16 | 0) >> 2] | 0;

                                                $24_1 = $20_1 << 16 >> 16;

                                                $25_1 = $24_1 << 1 | 0;

                                                $212((HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $25_1 | 0 | 0, $22_1 << 16 >> 16 | 0, $21_1 << 16 >> 16 | 0, 40 | 0, 1 | 0, $3_1 | 0);

                                                $91((HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $25_1 | 0 | 0, $6_1 + 128 | 0 | 0, $6_1 + 704 | 0 | 0, 40 | 0);

                                                $166(HEAP32[($0_1 + 640 | 0) >> 2] | 0 | 0, HEAP32[$4_1 >> 2] | 0 | 0, $24_1 | 0, HEAP16[($6_1 + 28 | 0) >> 1] | 0 | 0, HEAP16[($6_1 + 26 | 0) >> 1] | 0 | 0, $2_1 + -22 | 0 | 0, $5_1 | 0, $6_1 + 368 | 0 | 0, $6_1 + 208 | 0 | 0, $6_1 + 704 | 0 | 0, $6_1 + 288 | 0 | 0, $15_1 | 0, $16_1 | 0, $14_1 | 0, HEAP32[($0_1 + 1912 | 0) >> 2] | 0 | 0, $6_1 + 30 | 0 | 0, $3_1 | 0);

                                                $24_1 = global$4;

                                                $165(HEAP32[$4_1 >> 2] | 0 | 0, $24_1 + 70016 | 0 | 0, $24_1 + 70048 | 0 | 0, $24_1 + 70080 | 0 | 0, $9_1 | 0, $2_1 | 0, (HEAP32[($0_1 + 640 | 0) >> 2] | 0) + $18_1 | 0 | 0, $16_1 | 0, $14_1 | 0, HEAP32[($0_1 + 2020 | 0) >> 2] | 0 | 0, $12_1 | 0, (HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $18_1 | 0 | 0, HEAP32[($0_1 + 2024 | 0) >> 2] | 0 | 0, $6_1 + 944 | 0 | 0, $6_1 + 528 | 0 | 0, HEAP32[($0_1 + 2384 | 0) >> 2] | 0 | 0);

                                                $212((HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $18_1 | 0 | 0, HEAP16[($6_1 + 20 | 0) >> 1] | 0 | 0, HEAP16[($6_1 + 18 | 0) >> 1] | 0 | 0, 40 | 0, 1 | 0, $3_1 | 0);

                                                $91((HEAP32[($0_1 + 1912 | 0) >> 2] | 0) + $18_1 | 0 | 0, HEAP32[($0_1 + 2024 | 0) >> 2] | 0 | 0, $6_1 + 704 | 0 | 0, 40 | 0);

                                                $166(HEAP32[($0_1 + 640 | 0) >> 2] | 0 | 0, HEAP32[$4_1 >> 2] | 0 | 0, $26_1 | 0, HEAP16[($6_1 + 16 | 0) >> 1] | 0 | 0, HEAP16[($6_1 + 14 | 0) >> 1] | 0 | 0, $2_1 | 0, $5_1 | 0, $6_1 + 944 | 0 | 0, $6_1 + 784 | 0 | 0, $6_1 + 704 | 0 | 0, $6_1 + 624 | 0 | 0, $15_1 | 0, $16_1 | 0, $14_1 | 0, HEAP32[($0_1 + 1912 | 0) >> 2] | 0 | 0, $13_1 | 0, $3_1 | 0);

                                            }

                                            $18_1 = $1_1 + 40 | 0;

                                            $2_1 = $2_1 + 22 | 0;

                                            $9_1 = $9_1 + 22 | 0;

                                            if ($1_1 >>> 0 < 120 >>> 0) {

                                                continue label$9

                                            }

                                            break label$9;

                                        }

                                        ;

                                        $227($0_1 + 1282 | 0 | 0, $0_1 + 1602 | 0 | 0, 308 | 0) | 0;

                                    }

                                    $227($0_1 + 656 | 0 | 0, $0_1 + 976 | 0 | 0, 286 | 0) | 0;

                                    $227($0_1 | 0, $0_1 + 320 | 0 | 0, 320 | 0) | 0;

                                    global$0 = $6_1 + 1248 | 0;

                                    return 0 | 0;

                                }



                                function $91($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $9_1 = 0, $5_1 = 0, $7_1 = 0, $4_1 = 0, $10_1 = 0, $8_1 = 0, $6_1 = 0,

                                        $11_1 = 0, $47_1 = 0, $61_1 = 0;

                                    label$1 : {

                                        if (($3_1 | 0) < (2 | 0)) {

                                            break label$1

                                        }

                                        $4_1 = 1;

                                        label$2 : while (1) {

                                            $5_1 = $0_1 + 2 | 0;

                                            $6_1 = $4_1 << 1 | 0;

                                            $1_1 = $1_1 + $6_1 | 0;

                                            $7_1 = HEAP16[$0_1 >> 1] | 0;

                                            $8_1 = Math_imul(HEAP16[$1_1 >> 1] | 0, $7_1);

                                            $1_1 = $1_1 + -2 | 0;

                                            $9_1 = HEAP16[$1_1 >> 1] | 0;

                                            $7_1 = Math_imul($9_1, $7_1);

                                            label$3 : {

                                                $10_1 = ($4_1 + 131071 | 0) >>> 1 | 0;

                                                if (!($10_1 & 65535 | 0)) {

                                                    break label$3

                                                }

                                                label$4 : while (1) {

                                                    $5_1 = HEAP16[$5_1 >> 1] | 0;

                                                    $47_1 = Math_imul($9_1 << 16 >> 16, $5_1) + $8_1 | 0;

                                                    $11_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                                    $9_1 = HEAP16[($1_1 + -2 | 0) >> 1] | 0;

                                                    $8_1 = $47_1 + Math_imul($11_1, $9_1) | 0;

                                                    $61_1 = Math_imul($9_1, $5_1) + $7_1 | 0;

                                                    $1_1 = $1_1 + -4 | 0;

                                                    $9_1 = HEAP16[$1_1 >> 1] | 0;

                                                    $7_1 = $61_1 + Math_imul($9_1, $11_1) | 0;

                                                    $5_1 = $0_1 + 6 | 0;

                                                    $0_1 = $0_1 + 4 | 0;

                                                    $10_1 = $10_1 + -1 | 0;

                                                    if ($10_1 & 65535 | 0) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                            }

                                            $0_1 = HEAP16[$5_1 >> 1] | 0;

                                            HEAP16[$2_1 >> 1] = $7_1 >>> 12 | 0;

                                            HEAP16[($2_1 + 2 | 0) >> 1] = (Math_imul($9_1, $0_1) + $8_1 | 0) >>> 12 | 0;

                                            $2_1 = $2_1 + 4 | 0;

                                            $0_1 = $5_1 - $6_1 | 0;

                                            $4_1 = (($4_1 << 16 | 0) + 131072 | 0) >> 16 | 0;

                                            if (($4_1 | 0) < ($3_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $92($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $5_1 = 0, $9_1 = 0, $4_1 = 0, $6_1 = 0, $8_1 = 0, $7_1 = 0, $18_1 = 0,

                                        $12_1 = 0, $13_1 = 0, $17_1 = 0, $14_1 = 0, $15_1 = 0, $16_1 = 0, $10_1 = 0,

                                        $20_1 = 0, $28_1 = 0, $34_1 = 0, $40_1 = 0, $46_1 = 0, $52_1 = 0, $58_1 = 0,

                                        $64_1 = 0, $70_1 = 0, $76_1 = 0, $82_1 = 0, $88_1 = 0, $94_1 = 0, $100_1 = 0,

                                        $106_1 = 0, $112_1 = 0, $118_1 = 0, $124_1 = 0, $130_1 = 0, $136_1 = 0,

                                        $142_1 = 0, $148_1 = 0, $178_1 = 0, $184_1 = 0, $190_1 = 0, $196_1 = 0,

                                        $202_1 = 0, $208_1 = 0, $214_1 = 0, $220_1 = 0, $226_1 = 0, $232_1 = 0,

                                        $238_1 = 0, $244_1 = 0, $250_1 = 0, $256 = 0, $11_1 = 0, $19_1 = 0;

                                    $4_1 = global$0 - 80 | 0;

                                    global$0 = $4_1;

                                    label$1 : {

                                        label$2 : {

                                            $5_1 = HEAP16[$0_1 >> 1] | 0;

                                            $28_1 = Math_imul($5_1, $5_1);

                                            $5_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                            $34_1 = $28_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                            $40_1 = $34_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                            $46_1 = $40_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                            $52_1 = $46_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                            $58_1 = $52_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                            $64_1 = $58_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                            $70_1 = $64_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                            $76_1 = $70_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                            $82_1 = $76_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 20 | 0) >> 1] | 0;

                                            $88_1 = $82_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 22 | 0) >> 1] | 0;

                                            $94_1 = $88_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 24 | 0) >> 1] | 0;

                                            $100_1 = $94_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 26 | 0) >> 1] | 0;

                                            $106_1 = $100_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 28 | 0) >> 1] | 0;

                                            $112_1 = $106_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 30 | 0) >> 1] | 0;

                                            $118_1 = $112_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 32 | 0) >> 1] | 0;

                                            $124_1 = $118_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 34 | 0) >> 1] | 0;

                                            $130_1 = $124_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 36 | 0) >> 1] | 0;

                                            $136_1 = $130_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 38 | 0) >> 1] | 0;

                                            $142_1 = $136_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 40 | 0) >> 1] | 0;

                                            $148_1 = $142_1 + Math_imul($5_1, $5_1) | 0;

                                            $5_1 = HEAP16[($0_1 + 42 | 0) >> 1] | 0;

                                            $6_1 = HEAP16[($0_1 + 44 | 0) >> 1] | 0;

                                            $7_1 = HEAP16[($0_1 + 46 | 0) >> 1] | 0;

                                            $8_1 = HEAP16[($0_1 + 48 | 0) >> 1] | 0;

                                            $9_1 = HEAP16[($0_1 + 50 | 0) >> 1] | 0;

                                            $178_1 = (((($148_1 + Math_imul($5_1, $5_1) | 0) + Math_imul($6_1, $6_1) | 0) + Math_imul($7_1, $7_1) | 0) + Math_imul($8_1, $8_1) | 0) + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 52 | 0) >> 1] | 0;

                                            $184_1 = $178_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 54 | 0) >> 1] | 0;

                                            $190_1 = $184_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 56 | 0) >> 1] | 0;

                                            $196_1 = $190_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 58 | 0) >> 1] | 0;

                                            $202_1 = $196_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 60 | 0) >> 1] | 0;

                                            $208_1 = $202_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 62 | 0) >> 1] | 0;

                                            $214_1 = $208_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 64 | 0) >> 1] | 0;

                                            $220_1 = $214_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 66 | 0) >> 1] | 0;

                                            $226_1 = $220_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 68 | 0) >> 1] | 0;

                                            $232_1 = $226_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 70 | 0) >> 1] | 0;

                                            $238_1 = $232_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 72 | 0) >> 1] | 0;

                                            $244_1 = $238_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 74 | 0) >> 1] | 0;

                                            $250_1 = $244_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 76 | 0) >> 1] | 0;

                                            $256 = $250_1 + Math_imul($9_1, $9_1) | 0;

                                            $9_1 = HEAP16[($0_1 + 78 | 0) >> 1] | 0;

                                            $9_1 = ($256 + Math_imul($9_1, $9_1) | 0) + 1 | 0;

                                            if (!($9_1 & 1073741824 | 0)) {

                                                break label$2

                                            }

                                            HEAP16[$4_1 >> 1] = (HEAP16[$0_1 >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 2 | 0) >> 1] = (HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 4 | 0) >> 1] = (HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 6 | 0) >> 1] = (HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 8 | 0) >> 1] = (HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 10 | 0) >> 1] = (HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 12 | 0) >> 1] = (HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 14 | 0) >> 1] = (HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 16 | 0) >> 1] = (HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 18 | 0) >> 1] = (HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 20 | 0) >> 1] = (HEAP16[($0_1 + 20 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 22 | 0) >> 1] = (HEAP16[($0_1 + 22 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 24 | 0) >> 1] = (HEAP16[($0_1 + 24 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 26 | 0) >> 1] = (HEAP16[($0_1 + 26 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 28 | 0) >> 1] = (HEAP16[($0_1 + 28 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 30 | 0) >> 1] = (HEAP16[($0_1 + 30 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 32 | 0) >> 1] = (HEAP16[($0_1 + 32 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 34 | 0) >> 1] = (HEAP16[($0_1 + 34 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 36 | 0) >> 1] = (HEAP16[($0_1 + 36 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 38 | 0) >> 1] = (HEAP16[($0_1 + 38 | 0) >> 1] | 0) >>> 1 | 0;

                                            $9_1 = HEAP16[($0_1 + 40 | 0) >> 1] | 0;

                                            HEAP16[($4_1 + 48 | 0) >> 1] = $8_1 >>> 1 | 0;

                                            HEAP16[($4_1 + 46 | 0) >> 1] = $7_1 >>> 1 | 0;

                                            HEAP16[($4_1 + 44 | 0) >> 1] = $6_1 >>> 1 | 0;

                                            HEAP16[($4_1 + 42 | 0) >> 1] = $5_1 >>> 1 | 0;

                                            HEAP16[($4_1 + 40 | 0) >> 1] = $9_1 >>> 1 | 0;

                                            HEAP16[($4_1 + 50 | 0) >> 1] = (HEAP16[($0_1 + 50 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 52 | 0) >> 1] = (HEAP16[($0_1 + 52 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 54 | 0) >> 1] = (HEAP16[($0_1 + 54 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 56 | 0) >> 1] = (HEAP16[($0_1 + 56 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 58 | 0) >> 1] = (HEAP16[($0_1 + 58 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 60 | 0) >> 1] = (HEAP16[($0_1 + 60 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 62 | 0) >> 1] = (HEAP16[($0_1 + 62 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 64 | 0) >> 1] = (HEAP16[($0_1 + 64 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 66 | 0) >> 1] = (HEAP16[($0_1 + 66 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 68 | 0) >> 1] = (HEAP16[($0_1 + 68 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 70 | 0) >> 1] = (HEAP16[($0_1 + 70 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 72 | 0) >> 1] = (HEAP16[($0_1 + 72 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 74 | 0) >> 1] = (HEAP16[($0_1 + 74 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 76 | 0) >> 1] = (HEAP16[($0_1 + 76 | 0) >> 1] | 0) >>> 1 | 0;

                                            HEAP16[($4_1 + 78 | 0) >> 1] = (HEAP16[($0_1 + 78 | 0) >> 1] | 0) >>> 1 | 0;

                                            break label$1;

                                        }

                                        $5_1 = $196($9_1 & 2147483647 | 0 | 0, $3_1 | 0) | 0;

                                        $6_1 = ($5_1 | 0) < (16777215 | 0) ? Math_imul($5_1 >> 9 | 0, 64880) >> 16 | 0 : 32440;

                                        $5_1 = $4_1;

                                        $7_1 = 20;

                                        label$3 : while (1) {

                                            HEAP16[$5_1 >> 1] = (Math_imul($6_1, HEAP16[$0_1 >> 1] | 0) + 32 | 0) >>> 6 | 0;

                                            HEAP16[($5_1 + 2 | 0) >> 1] = (Math_imul($6_1, HEAP16[($0_1 + 2 | 0) >> 1] | 0) + 32 | 0) >>> 6 | 0;

                                            HEAP16[($5_1 + 4 | 0) >> 1] = (Math_imul($6_1, HEAP16[($0_1 + 4 | 0) >> 1] | 0) + 32 | 0) >>> 6 | 0;

                                            HEAP16[($5_1 + 6 | 0) >> 1] = (Math_imul($6_1, HEAP16[($0_1 + 6 | 0) >> 1] | 0) + 32 | 0) >>> 6 | 0;

                                            $5_1 = $5_1 + 8 | 0;

                                            $0_1 = $0_1 + 8 | 0;

                                            $7_1 = $7_1 + -2 | 0;

                                            if ($7_1 & 65535 | 0) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                    }

                                    $0_1 = $2_1 + 3198 | 0;

                                    $6_1 = 0;

                                    $5_1 = $4_1;

                                    $7_1 = 20;

                                    label$4 : while (1) {

                                        $8_1 = HEAP16[$5_1 >> 1] | 0;

                                        $6_1 = Math_imul($8_1, $8_1) + $6_1 | 0;

                                        HEAP16[$0_1 >> 1] = ($6_1 + 16384 | 0) >>> 15 | 0;

                                        $8_1 = HEAP16[($5_1 + 2 | 0) >> 1] | 0;

                                        $6_1 = Math_imul($8_1, $8_1) + $6_1 | 0;

                                        HEAP16[($0_1 + -82 | 0) >> 1] = ($6_1 + 16384 | 0) >>> 15 | 0;

                                        $0_1 = $0_1 + -164 | 0;

                                        $5_1 = $5_1 + 4 | 0;

                                        $7_1 = $7_1 + -1 | 0;

                                        if ($7_1 & 65535 | 0) {

                                            continue label$4

                                        }

                                        break label$4;

                                    }

                                    ;

                                    $10_1 = $1_1 + 78 | 0;

                                    $11_1 = $2_1 + 3120 | 0;

                                    $12_1 = 1;

                                    $8_1 = 1;

                                    label$5 : while (1) {

                                        $6_1 = 39 - $12_1 | 0;

                                        $0_1 = $6_1 << 1 | 0;

                                        $5_1 = $1_1 + $0_1 | 0;

                                        $0_1 = $11_1 + $0_1 | 0;

                                        $6_1 = ($2_1 + Math_imul($6_1, 80) | 0) + 78 | 0;

                                        $7_1 = $4_1 + ($12_1 << 1 | 0) | 0;

                                        label$6 : {

                                            label$7 : {

                                                if (($8_1 & 65535 | 0 | 0) != (39 | 0)) {

                                                    break label$7

                                                }

                                                $8_1 = HEAPU16[$7_1 >> 1] | 0;

                                                $9_1 = $4_1;

                                                $13_1 = 0;

                                                $3_1 = $10_1;

                                                break label$6;

                                            }

                                            $14_1 = 39 - $8_1 | 0;

                                            $15_1 = ($2_1 + Math_imul(38 - $12_1 | 0, 80) | 0) + 78 | 0;

                                            $8_1 = HEAPU16[$7_1 >> 1] | 0;

                                            $13_1 = 0;

                                            $9_1 = $4_1;

                                            $3_1 = $10_1;

                                            $16_1 = 0;

                                            label$8 : while (1) {

                                                $17_1 = HEAP16[$5_1 >> 1] | 0;

                                                $18_1 = $8_1 << 16 >> 16;

                                                $5_1 = $5_1 + -2 | 0;

                                                $19_1 = HEAP16[$5_1 >> 1] | 0;

                                                $8_1 = HEAP16[($7_1 + 2 | 0) >> 1] | 0;

                                                $20_1 = HEAP16[$9_1 >> 1] | 0;

                                                $13_1 = Math_imul($18_1, $20_1) + $13_1 | 0;

                                                $18_1 = (HEAP16[$3_1 >> 1] | 0) << 1 | 0;

                                                $17_1 = Math_imul((($13_1 << 1 | 0) + 32768 | 0) >> 16 | 0, Math_imul($17_1, $18_1) >> 16 | 0) >>> 15 | 0;

                                                HEAP16[$6_1 >> 1] = $17_1;

                                                $16_1 = Math_imul($8_1, $20_1) + $16_1 | 0;

                                                $18_1 = Math_imul((($16_1 << 1 | 0) + 32768 | 0) >> 16 | 0, Math_imul($18_1, $19_1) >> 16 | 0) >>> 15 | 0;

                                                HEAP16[($0_1 + -2 | 0) >> 1] = $18_1;

                                                HEAP16[$0_1 >> 1] = $17_1;

                                                HEAP16[$15_1 >> 1] = $18_1;

                                                $15_1 = $15_1 + -82 | 0;

                                                $6_1 = $6_1 + -82 | 0;

                                                $0_1 = $0_1 + -82 | 0;

                                                $3_1 = $3_1 + -2 | 0;

                                                $9_1 = $9_1 + 2 | 0;

                                                $7_1 = $7_1 + 2 | 0;

                                                $14_1 = $14_1 + -1 | 0;

                                                if ($14_1 & 65535 | 0) {

                                                    continue label$8

                                                }

                                                break label$8;

                                            }

                                            ;

                                        }

                                        $5_1 = Math_imul((((Math_imul($8_1 << 16 >> 16, HEAP16[$9_1 >> 1] | 0) + $13_1 | 0) << 1 | 0) + 32768 | 0) >> 16 | 0, (Math_imul(HEAP16[$3_1 >> 1] | 0, HEAP16[$5_1 >> 1] | 0) << 1 | 0) >> 16 | 0) >>> 15 | 0;

                                        HEAP16[$0_1 >> 1] = $5_1;

                                        HEAP16[$6_1 >> 1] = $5_1;

                                        $8_1 = $12_1 + 2 | 0;

                                        $12_1 = $8_1 << 16 >> 16;

                                        if (($8_1 << 16 | 0 | 0) < (2621440 | 0)) {

                                            continue label$5

                                        }

                                        break label$5;

                                    }

                                    ;

                                    global$0 = $4_1 + 80 | 0;

                                }



                                function $93($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $13_1 = 0, $14_1 = 0, $10_1 = 0, $12_1 = 0, $15_1 = 0, $9_1 = 0, $7_1 = 0,

                                        $11_1 = 0, $8_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $7_1 = global$0 - 160 | 0;

                                    global$0 = $7_1;

                                    $8_1 = 5;

                                    label$1 : {

                                        if (($4_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $9_1 = 0;

                                        label$2 : while (1) {

                                            $10_1 = 0;

                                            $11_1 = $9_1;

                                            label$3 : {

                                                if (($9_1 & 65535 | 0) >>> 0 > 39 >>> 0) {

                                                    break label$3

                                                }

                                                label$4 : while (1) {

                                                    $12_1 = $11_1 << 16 >> 16;

                                                    $13_1 = $12_1;

                                                    $14_1 = 0;

                                                    label$5 : while (1) {

                                                        $14_1 = Math_imul(HEAP16[($0_1 + (($13_1 - $12_1 | 0) << 1 | 0) | 0) >> 1] | 0, HEAP16[($1_1 + ($13_1 << 1 | 0) | 0) >> 1] | 0) + $14_1 | 0;

                                                        $15_1 = ($13_1 | 0) < (39 | 0);

                                                        $13_1 = $13_1 + 1 | 0;

                                                        if ($15_1) {

                                                            continue label$5

                                                        }

                                                        break label$5;

                                                    }

                                                    ;

                                                    $13_1 = $14_1 << 1 | 0;

                                                    HEAP32[($7_1 + ($12_1 << 2 | 0) | 0) >> 2] = $13_1;

                                                    $13_1 = $119($13_1 | 0) | 0;

                                                    $10_1 = ($13_1 | 0) > ($10_1 | 0) ? $13_1 : $10_1;

                                                    $11_1 = ($11_1 + $5_1 | 0) << 16 >> 16;

                                                    if (($11_1 | 0) < (40 | 0)) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                            }

                                            $8_1 = ($10_1 >>> 1 | 0) + $8_1 | 0;

                                            $9_1 = ($9_1 + 1 | 0) << 16 >> 16;

                                            if (($9_1 | 0) < ($4_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $13_1 = ($209($8_1 | 0) | 0) - $3_1 | 0;

                                    $12_1 = $13_1 & 65535 | 0;

                                    $14_1 = 0 - $13_1 | 0;

                                    $0_1 = $14_1 & 65535 | 0;

                                    $1_1 = ($13_1 << 16 >> 16 | 0) < (1 | 0);

                                    $10_1 = ($14_1 << 16 >> 16 | 0) < (31 | 0);

                                    $13_1 = 0;

                                    label$6 : while (1) {

                                        $14_1 = HEAP32[($7_1 + ($13_1 << 2 | 0) | 0) >> 2] | 0;

                                        label$7 : {

                                            label$8 : {

                                                if ($1_1) {

                                                    break label$8

                                                }

                                                $15_1 = $14_1 << $12_1 | 0;

                                                if (($15_1 >> $12_1 | 0 | 0) == ($14_1 | 0)) {

                                                    break label$7

                                                }

                                                $15_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                                break label$7;

                                            }

                                            $15_1 = $10_1 ? $14_1 >> $0_1 | 0 : 0;

                                        }

                                        (wasm2js_i32$0 = $2_1 + ($13_1 << 1 | 0) | 0, wasm2js_i32$1 = $220($15_1 | 0, $6_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $13_1 = $13_1 + 1 | 0;

                                        if (($13_1 | 0) != (40 | 0)) {

                                            continue label$6

                                        }

                                        break label$6;

                                    }

                                    ;

                                    global$0 = $7_1 + 160 | 0;

                                }



                                function $94($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $14_1 = 0, $12_1 = 0, $13_1 = 0, $17_1 = 0, $10_1 = 0, $11_1 = 0, $9_1 = 0,

                                        $6_1 = 0, $16_1 = 0, $5_1 = 0, $7_1 = 0, $8_1 = 0, $15_1 = 0;

                                    $5_1 = global$0 - 160 | 0;

                                    global$0 = $5_1;

                                    $6_1 = 0;

                                    $7_1 = 5;

                                    label$1 : while (1) {

                                        $8_1 = 39 - $6_1 | 0;

                                        $9_1 = 0;

                                        $10_1 = $6_1;

                                        $11_1 = 0;

                                        label$2 : while (1) {

                                            $12_1 = $1_1 + ($10_1 << 1 | 0) | 0;

                                            label$3 : {

                                                label$4 : {

                                                    if ((39 - $10_1 | 0) & 131070 | 0) {

                                                        break label$4

                                                    }

                                                    $13_1 = 0;

                                                    $14_1 = $0_1;

                                                    break label$3;

                                                }

                                                $14_1 = ($8_1 + Math_imul($9_1, 131067) | 0) >>> 1 | 0;

                                                $15_1 = $14_1 & 1 | 0;

                                                $13_1 = 0;

                                                label$5 : {

                                                    label$6 : {

                                                        if (($14_1 & 65535 | 0 | 0) != (1 | 0)) {

                                                            break label$6

                                                        }

                                                        $14_1 = $0_1;

                                                        break label$5;

                                                    }

                                                    $16_1 = $14_1 & 65534 | 0;

                                                    $13_1 = 0;

                                                    $14_1 = $0_1;

                                                    $17_1 = 0;

                                                    label$7 : while (1) {

                                                        $13_1 = ((Math_imul(HEAP16[($14_1 + 6 | 0) >> 1] | 0, HEAP16[($12_1 + 6 | 0) >> 1] | 0) + Math_imul(HEAP16[($14_1 + 4 | 0) >> 1] | 0, HEAP16[($12_1 + 4 | 0) >> 1] | 0) | 0) << 1 | 0) + (((Math_imul(HEAP16[($14_1 + 2 | 0) >> 1] | 0, HEAP16[($12_1 + 2 | 0) >> 1] | 0) + Math_imul(HEAP16[$14_1 >> 1] | 0, HEAP16[$12_1 >> 1] | 0) | 0) << 1 | 0) + $13_1 | 0) | 0;

                                                        $14_1 = $14_1 + 8 | 0;

                                                        $12_1 = $12_1 + 8 | 0;

                                                        $17_1 = $17_1 + 2 | 0;

                                                        if (($17_1 & 65535 | 0 | 0) != ($16_1 | 0)) {

                                                            continue label$7

                                                        }

                                                        break label$7;

                                                    }

                                                    ;

                                                }

                                                if (!$15_1) {

                                                    break label$3

                                                }

                                                $13_1 = ((Math_imul(HEAP16[($14_1 + 2 | 0) >> 1] | 0, HEAP16[($12_1 + 2 | 0) >> 1] | 0) + Math_imul(HEAP16[$14_1 >> 1] | 0, HEAP16[$12_1 >> 1] | 0) | 0) << 1 | 0) + $13_1 | 0;

                                                $14_1 = $14_1 + 4 | 0;

                                                $12_1 = $12_1 + 4 | 0;

                                            }

                                            $13_1 = (Math_imul(HEAP16[$12_1 >> 1] | 0, HEAP16[$14_1 >> 1] | 0) << 1 | 0) + $13_1 | 0;

                                            label$8 : {

                                                if ($10_1 & 1 | 0) {

                                                    break label$8

                                                }

                                                $13_1 = (Math_imul(HEAP16[($12_1 + 2 | 0) >> 1] | 0, HEAP16[($14_1 + 2 | 0) >> 1] | 0) << 1 | 0) + $13_1 | 0;

                                            }

                                            HEAP32[($5_1 + ($10_1 << 2 | 0) | 0) >> 2] = $13_1;

                                            $12_1 = $13_1 >> 31 | 0;

                                            $12_1 = ($13_1 ^ $12_1 | 0) - $12_1 | 0;

                                            $11_1 = ($12_1 | 0) > ($11_1 | 0) ? $12_1 : $11_1;

                                            $9_1 = $9_1 + 1 | 0;

                                            $12_1 = $10_1 >>> 0 < 35 >>> 0;

                                            $10_1 = $10_1 + 5 | 0;

                                            if ($12_1) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                        $7_1 = ($11_1 >>> 1 | 0) + $7_1 | 0;

                                        $6_1 = $6_1 + 1 | 0;

                                        if (($6_1 | 0) != (5 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $14_1 = ($209($7_1 | 0) | 0) - $3_1 | 0;

                                    $13_1 = $14_1 & 65535 | 0;

                                    $17_1 = 0 - $14_1 | 0;

                                    $9_1 = $17_1 & 65535 | 0;

                                    $16_1 = 20;

                                    $12_1 = $5_1;

                                    $10_1 = ($14_1 << 16 >> 16 | 0) < (1 | 0);

                                    $11_1 = ($17_1 << 16 >> 16 | 0) < (31 | 0);

                                    label$9 : while (1) {

                                        $14_1 = HEAP32[$12_1 >> 2] | 0;

                                        label$10 : {

                                            label$11 : {

                                                if ($10_1) {

                                                    break label$11

                                                }

                                                $17_1 = $14_1 << $13_1 | 0;

                                                HEAP16[$2_1 >> 1] = ((($17_1 >> $13_1 | 0 | 0) == ($14_1 | 0) ? $17_1 : ($14_1 | 0) > (-1 | 0) ? 2147450880 : -2147483648) + 32768 | 0) >>> 16 | 0;

                                                $14_1 = HEAP32[($12_1 + 4 | 0) >> 2] | 0;

                                                $17_1 = $14_1 << $13_1 | 0;

                                                if (($17_1 >> $13_1 | 0 | 0) == ($14_1 | 0)) {

                                                    break label$10

                                                }

                                                $17_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                                break label$10;

                                            }

                                            $17_1 = 0;

                                            HEAP16[$2_1 >> 1] = $11_1 ? (($14_1 >> $9_1 | 0) + 32768 | 0) >>> 16 | 0 : 0;

                                            if (!$11_1) {

                                                break label$10

                                            }

                                            $17_1 = (HEAP32[($12_1 + 4 | 0) >> 2] | 0) >> $9_1 | 0;

                                        }

                                        HEAP16[($2_1 + 2 | 0) >> 1] = ($17_1 + 32768 | 0) >>> 16 | 0;

                                        $2_1 = $2_1 + 4 | 0;

                                        $12_1 = $12_1 + 8 | 0;

                                        $16_1 = $16_1 + -1 | 0;

                                        if ($16_1 & 65535 | 0) {

                                            continue label$9

                                        }

                                        break label$9;

                                    }

                                    ;

                                    global$0 = $5_1 + 160 | 0;

                                }



                                function $95($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0, $5_1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            $4_1 = $185(16383 | 0, $1_1 | 0) | 0;

                                            $1_1 = Math_imul($4_1, $1_1);

                                            if (($1_1 | 0) == (1073741824 | 0)) {

                                                break label$2

                                            }

                                            $1_1 = $1_1 << 1 | 0;

                                            break label$1;

                                        }

                                        HEAP32[$3_1 >> 2] = 1;

                                        $1_1 = 2147483647;

                                    }

                                    $5_1 = Math_imul($4_1, $2_1) >> 15 | 0;

                                    $2_1 = $1_1 + ($5_1 << 1 | 0) | 0;

                                    label$3 : {

                                        if (($1_1 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                            break label$3

                                        }

                                        if (($2_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                            break label$3

                                        }

                                        HEAP32[$3_1 >> 2] = 1;

                                        $2_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $1_1 = $2_1 ^ 2147483647 | 0;

                                    $2_1 = Math_imul(($1_1 >>> 1 | 0) & 32767 | 0, $4_1) >> 15 | 0;

                                    $4_1 = Math_imul($1_1 >>> 16 | 0, $4_1);

                                    $1_1 = ($2_1 + $4_1 | 0) << 1 | 0;

                                    label$4 : {

                                        $5_1 = $4_1 << 1 | 0;

                                        if (($2_1 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                            break label$4

                                        }

                                        if (($1_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$4

                                        }

                                        HEAP32[$3_1 >> 2] = 1;

                                        $1_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $4_1 = $0_1 >> 16 | 0;

                                    $2_1 = Math_imul(($1_1 >>> 1 | 0) & 32767 | 0, $4_1) >> 15 | 0;

                                    $3_1 = $1_1 >> 16 | 0;

                                    $1_1 = Math_imul($3_1, $4_1);

                                    $1_1 = ($1_1 | 0) == (1073741824 | 0) ? 2147483647 : $1_1 << 1 | 0;

                                    $4_1 = ($2_1 << 1 | 0) + $1_1 | 0;

                                    $1_1 = ($1_1 ^ $2_1 | 0 | 0) < (1 | 0) ? $4_1 : ($4_1 ^ $1_1 | 0 | 0) > (-1 | 0) ? $4_1 : ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                    $2_1 = Math_imul($3_1, ($0_1 >>> 1 | 0) & 32767 | 0) >> 15 | 0;

                                    $4_1 = $1_1 + ($2_1 << 1 | 0) | 0;

                                    $1_1 = ($1_1 ^ $2_1 | 0 | 0) < (1 | 0) ? $4_1 : ($4_1 ^ $1_1 | 0 | 0) > (-1 | 0) ? $4_1 : ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                    return (($1_1 + 536870912 | 0) >>> 0 < 1073741824 >>> 0 ? $1_1 << 2 | 0 : ($1_1 >> 31 | 0) ^ 2147483647 | 0) | 0;

                                }



                                function $96($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $3_1 = 0, $2_1 = 0,

                                        $4_1 = 0, $24_1 = 0, $25_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = 0, $30_1 = 0,

                                        $31_1 = 0, $32_1 = 0, $33_1 = 0, $35_1 = 0, $36_1 = 0, $38_1 = 0, $39_1 = 0,

                                        $40_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = 0, $44_1 = 0, $46_1 = 0, $47_1 = 0,

                                        $49_1 = 0, $50_1 = 0, $52_1 = 0, $53_1 = 0, $54_1 = 0, $56_1 = 0, $57_1 = 0,

                                        $58_1 = 0, $59_1 = 0, $60_1 = 0, $61_1 = 0, $62_1 = 0, $64_1 = 0, $65_1 = 0,

                                        $66_1 = 0, $67_1 = 0, $68_1 = 0, $69_1 = 0, $23_1 = 0, $26_1 = 0, $34_1 = 0,

                                        $37_1 = 0, $45_1 = 0, $48_1 = 0, $51_1 = 0, $55_1 = 0, $63_1 = 0, $70_1 = 0,

                                        $73_1 = 0, $77_1 = 0, $84_1 = 0, $88_1 = 0, $95_1 = 0, $103_1 = 0;

                                    $2_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $3_1 = $231(192 | 0) | 0;

                                        if (!$3_1) {

                                            break label$1

                                        }

                                        i64toi32_i32$1 = $3_1;

                                        i64toi32_i32$0 = 0;

                                        $24_1 = 0;

                                        HEAP16[(i64toi32_i32$1 + 180 | 0) >> 1] = $24_1;

                                        HEAP16[(i64toi32_i32$1 + 182 | 0) >> 1] = $24_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 184 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 186 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $2_1 = $1_1 + 16 | 0;

                                        $25_1 = i64toi32_i32$1 + 16 | 0;

                                        $27_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$25_1 >> 1] = $27_1;

                                        HEAP16[($25_1 + 2 | 0) >> 1] = $27_1 >>> 16 | 0;

                                        $4_1 = $1_1 + 8 | 0;

                                        i64toi32_i32$2 = $4_1;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $23_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1 + 8 | 0;

                                        $28_1 = $23_1;

                                        HEAP16[i64toi32_i32$0 >> 1] = $28_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $28_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $1_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $26_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1;

                                        $29_1 = $26_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $29_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $29_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $30_1 = i64toi32_i32$1 + 36 | 0;

                                        $31_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$30_1 >> 1] = $31_1;

                                        HEAP16[($30_1 + 2 | 0) >> 1] = $31_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $4_1;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $34_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1 + 28 | 0;

                                        $32_1 = $34_1;

                                        HEAP16[i64toi32_i32$0 >> 1] = $32_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $32_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $1_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $37_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1;

                                        $33_1 = $37_1;

                                        HEAP16[(i64toi32_i32$1 + 20 | 0) >> 1] = $33_1;

                                        HEAP16[(i64toi32_i32$1 + 22 | 0) >> 1] = $33_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 24 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 26 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $35_1 = i64toi32_i32$1 + 56 | 0;

                                        $36_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$35_1 >> 1] = $36_1;

                                        HEAP16[($35_1 + 2 | 0) >> 1] = $36_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $4_1;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $45_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1 + 48 | 0;

                                        $38_1 = $45_1;

                                        HEAP16[i64toi32_i32$0 >> 1] = $38_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $38_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $1_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $48_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1;

                                        $39_1 = $48_1;

                                        HEAP16[(i64toi32_i32$1 + 40 | 0) >> 1] = $39_1;

                                        HEAP16[(i64toi32_i32$1 + 42 | 0) >> 1] = $39_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 44 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 46 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $51_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1;

                                        $40_1 = $51_1;

                                        HEAP16[(i64toi32_i32$0 + 60 | 0) >> 1] = $40_1;

                                        HEAP16[(i64toi32_i32$0 + 62 | 0) >> 1] = $40_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 64 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 66 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $4_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $55_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1 + 68 | 0;

                                        $41_1 = $55_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $41_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $41_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $42_1 = $3_1 + 76 | 0;

                                        $43_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$42_1 >> 1] = $43_1;

                                        HEAP16[($42_1 + 2 | 0) >> 1] = $43_1 >>> 16 | 0;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $63_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1 + 88 | 0;

                                        $44_1 = $63_1;

                                        HEAP16[i64toi32_i32$0 >> 1] = $44_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $44_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        $46_1 = $3_1 + 96 | 0;

                                        $47_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$46_1 >> 1] = $47_1;

                                        HEAP16[($46_1 + 2 | 0) >> 1] = $47_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $1_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $70_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1;

                                        $49_1 = $70_1;

                                        HEAP16[(i64toi32_i32$1 + 80 | 0) >> 1] = $49_1;

                                        HEAP16[(i64toi32_i32$1 + 82 | 0) >> 1] = $49_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 84 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 86 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $73_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1;

                                        $50_1 = $73_1;

                                        HEAP16[(i64toi32_i32$0 + 100 | 0) >> 1] = $50_1;

                                        HEAP16[(i64toi32_i32$0 + 102 | 0) >> 1] = $50_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 104 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 106 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $4_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $77_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1 + 108 | 0;

                                        $52_1 = $77_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $52_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $52_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $53_1 = $3_1 + 116 | 0;

                                        $54_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$53_1 >> 1] = $54_1;

                                        HEAP16[($53_1 + 2 | 0) >> 1] = $54_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $1_1;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $84_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1;

                                        $56_1 = $84_1;

                                        HEAP16[(i64toi32_i32$0 + 120 | 0) >> 1] = $56_1;

                                        HEAP16[(i64toi32_i32$0 + 122 | 0) >> 1] = $56_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 124 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 126 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        i64toi32_i32$2 = $4_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $88_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1 + 128 | 0;

                                        $57_1 = $88_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $57_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $57_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $58_1 = $3_1 + 136 | 0;

                                        $59_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$58_1 >> 1] = $59_1;

                                        HEAP16[($58_1 + 2 | 0) >> 1] = $59_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $1_1;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $95_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $3_1;

                                        $60_1 = $95_1;

                                        HEAP16[(i64toi32_i32$0 + 140 | 0) >> 1] = $60_1;

                                        HEAP16[(i64toi32_i32$0 + 142 | 0) >> 1] = $60_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 144 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 146 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        $61_1 = i64toi32_i32$0 + 156 | 0;

                                        $62_1 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$61_1 >> 1] = $62_1;

                                        HEAP16[($61_1 + 2 | 0) >> 1] = $62_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $4_1;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $103_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $3_1 + 148 | 0;

                                        $64_1 = $103_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $64_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $64_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $65_1 = $3_1 + 176 | 0;

                                        $66_1 = 0;

                                        HEAP16[$65_1 >> 1] = $66_1;

                                        HEAP16[($65_1 + 2 | 0) >> 1] = $66_1 >>> 16 | 0;

                                        i64toi32_i32$1 = $3_1 + 168 | 0;

                                        i64toi32_i32$0 = 0;

                                        $67_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $67_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $67_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $3_1;

                                        i64toi32_i32$0 = 0;

                                        $68_1 = 0;

                                        HEAP16[(i64toi32_i32$1 + 160 | 0) >> 1] = $68_1;

                                        HEAP16[(i64toi32_i32$1 + 162 | 0) >> 1] = $68_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 164 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 166 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $69_1 = 2147418119;

                                        HEAP16[(i64toi32_i32$1 + 188 | 0) >> 1] = $69_1;

                                        HEAP16[(i64toi32_i32$1 + 190 | 0) >> 1] = $69_1 >>> 16 | 0;

                                        HEAP32[$0_1 >> 2] = i64toi32_i32$1;

                                        $2_1 = 0;

                                    }

                                    return $2_1 << 16 >> 16 | 0;

                                }



                                function $97($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $3_1 = 0, $4_1 = 0,

                                        $2_1 = 0, $24_1 = 0, $25_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = 0, $30_1 = 0,

                                        $31_1 = 0, $32_1 = 0, $33_1 = 0, $35_1 = 0, $36_1 = 0, $38_1 = 0, $39_1 = 0,

                                        $40_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = 0, $44_1 = 0, $46_1 = 0, $47_1 = 0,

                                        $49_1 = 0, $50_1 = 0, $51_1 = 0, $52_1 = 0, $53_1 = 0, $54_1 = 0, $55_1 = 0,

                                        $57_1 = 0, $58_1 = 0, $60_1 = 0, $61_1 = 0, $62_1 = 0, $63_1 = 0, $64_1 = 0,

                                        $65_1 = 0, $66_1 = 0, $68_1 = 0, $69_1 = 0, $71_1 = 0, $23_1 = 0, $26_1 = 0,

                                        $34_1 = 0, $37_1 = 0, $45_1 = 0, $48_1 = 0, $56_1 = 0, $59_1 = 0, $67_1 = 0,

                                        $70_1 = 0, $78_1 = 0, $81_1 = 0, $89_1 = 0, $92_1 = 0, $100_1 = 0, $103_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $24_1 = $0_1 + 184 | 0;

                                    $25_1 = 0;

                                    HEAP16[$24_1 >> 1] = $25_1;

                                    HEAP16[($24_1 + 2 | 0) >> 1] = $25_1 >>> 16 | 0;

                                    $2_1 = $0_1 + 176 | 0;

                                    i64toi32_i32$1 = $2_1;

                                    i64toi32_i32$0 = 0;

                                    $27_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $27_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $27_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $3_1 = $1_1 + 16 | 0;

                                    $28_1 = $0_1 + 16 | 0;

                                    $29_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$28_1 >> 1] = $29_1;

                                    HEAP16[($28_1 + 2 | 0) >> 1] = $29_1 >>> 16 | 0;

                                    $4_1 = $1_1 + 8 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $23_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 8 | 0;

                                    $30_1 = $23_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $30_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $30_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $26_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $31_1 = $26_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $31_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $31_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $32_1 = i64toi32_i32$1 + 36 | 0;

                                    $33_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$32_1 >> 1] = $33_1;

                                    HEAP16[($32_1 + 2 | 0) >> 1] = $33_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $34_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 28 | 0;

                                    $35_1 = $34_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $35_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $35_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $37_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $36_1 = $37_1;

                                    HEAP16[(i64toi32_i32$1 + 20 | 0) >> 1] = $36_1;

                                    HEAP16[(i64toi32_i32$1 + 22 | 0) >> 1] = $36_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 24 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 26 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $38_1 = i64toi32_i32$1 + 56 | 0;

                                    $39_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$38_1 >> 1] = $39_1;

                                    HEAP16[($38_1 + 2 | 0) >> 1] = $39_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $45_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 48 | 0;

                                    $40_1 = $45_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $40_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $40_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $48_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $41_1 = $48_1;

                                    HEAP16[(i64toi32_i32$1 + 40 | 0) >> 1] = $41_1;

                                    HEAP16[(i64toi32_i32$1 + 42 | 0) >> 1] = $41_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 44 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 46 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $42_1 = i64toi32_i32$1 + 76 | 0;

                                    $43_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$42_1 >> 1] = $43_1;

                                    HEAP16[($42_1 + 2 | 0) >> 1] = $43_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $56_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 68 | 0;

                                    $44_1 = $56_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $44_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $44_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $59_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $46_1 = $59_1;

                                    HEAP16[(i64toi32_i32$1 + 60 | 0) >> 1] = $46_1;

                                    HEAP16[(i64toi32_i32$1 + 62 | 0) >> 1] = $46_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 64 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 66 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $47_1 = i64toi32_i32$1 + 96 | 0;

                                    $49_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$47_1 >> 1] = $49_1;

                                    HEAP16[($47_1 + 2 | 0) >> 1] = $49_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $67_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 88 | 0;

                                    $50_1 = $67_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $50_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $50_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $70_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $51_1 = $70_1;

                                    HEAP16[(i64toi32_i32$1 + 80 | 0) >> 1] = $51_1;

                                    HEAP16[(i64toi32_i32$1 + 82 | 0) >> 1] = $51_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 84 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 86 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $52_1 = i64toi32_i32$1 + 116 | 0;

                                    $53_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$52_1 >> 1] = $53_1;

                                    HEAP16[($52_1 + 2 | 0) >> 1] = $53_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $78_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 108 | 0;

                                    $54_1 = $78_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $54_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $54_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $81_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $55_1 = $81_1;

                                    HEAP16[(i64toi32_i32$1 + 100 | 0) >> 1] = $55_1;

                                    HEAP16[(i64toi32_i32$1 + 102 | 0) >> 1] = $55_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 104 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 106 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $57_1 = i64toi32_i32$1 + 136 | 0;

                                    $58_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$57_1 >> 1] = $58_1;

                                    HEAP16[($57_1 + 2 | 0) >> 1] = $58_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $89_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 128 | 0;

                                    $60_1 = $89_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $60_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $60_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $92_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $61_1 = $92_1;

                                    HEAP16[(i64toi32_i32$1 + 120 | 0) >> 1] = $61_1;

                                    HEAP16[(i64toi32_i32$1 + 122 | 0) >> 1] = $61_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 124 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 126 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $62_1 = i64toi32_i32$1 + 156 | 0;

                                    $63_1 = HEAPU16[$3_1 >> 1] | 0 | ((HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$62_1 >> 1] = $63_1;

                                    HEAP16[($62_1 + 2 | 0) >> 1] = $63_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $100_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 148 | 0;

                                    $64_1 = $100_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $64_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $64_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $103_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1;

                                    $65_1 = $103_1;

                                    HEAP16[(i64toi32_i32$1 + 140 | 0) >> 1] = $65_1;

                                    HEAP16[(i64toi32_i32$1 + 142 | 0) >> 1] = $65_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 144 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 146 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $66_1 = 0;

                                    HEAP16[$2_1 >> 1] = $66_1;

                                    HEAP16[($2_1 + 2 | 0) >> 1] = $66_1 >>> 16 | 0;

                                    i64toi32_i32$1 = i64toi32_i32$1 + 168 | 0;

                                    i64toi32_i32$0 = 0;

                                    $68_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $68_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $68_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $69_1 = 0;

                                    HEAP16[(i64toi32_i32$1 + 160 | 0) >> 1] = $69_1;

                                    HEAP16[(i64toi32_i32$1 + 162 | 0) >> 1] = $69_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 164 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 166 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $71_1 = 2147418119;

                                    HEAP16[(i64toi32_i32$1 + 188 | 0) >> 1] = $71_1;

                                    HEAP16[(i64toi32_i32$1 + 190 | 0) >> 1] = $71_1 >>> 16 | 0;

                                    return 1 << 16 >> 16 | 0;

                                }



                                function $98($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $99($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $18_1 = 0, $6_1 = 0, $8_1 = 0, $9_1 = 0, $7_1 = 0, $10_1 = 0, $11_1 = 0,

                                        $12_1 = 0, $13_1 = 0, $14_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $19_1 = 0,

                                        $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0, $26_1 = 0,

                                        $27_1 = 0;

                                    $6_1 = global$0 - 96 | 0;

                                    global$0 = $6_1;

                                    label$1 : {

                                        label$2 : {

                                            if ($1_1) {

                                                break label$2

                                            }

                                            if (HEAPU16[($0_1 + 178 | 0) >> 1] | 0) {

                                                break label$1

                                            }

                                        }

                                        $7_1 = 7;

                                        $1_1 = 0;

                                        $8_1 = 0;

                                        $9_1 = 0;

                                        $10_1 = 0;

                                        $11_1 = 0;

                                        $12_1 = 0;

                                        $13_1 = 0;

                                        $14_1 = 0;

                                        $15_1 = 0;

                                        $16_1 = 0;

                                        $17_1 = 0;

                                        label$3 : while (1) {

                                            $18_1 = $15_1;

                                            $19_1 = $14_1;

                                            $20_1 = $13_1;

                                            $21_1 = $12_1;

                                            $22_1 = $11_1;

                                            $23_1 = $10_1;

                                            $24_1 = $9_1;

                                            $25_1 = $8_1;

                                            $26_1 = $1_1;

                                            $27_1 = $7_1;

                                            $17_1 = $183($17_1 << 16 >> 16 | 0, (HEAP16[(($0_1 + ($27_1 << 1 | 0) | 0) + 160 | 0) >> 1] | 0) >> 2 | 0 | 0, $5_1 | 0) | 0;

                                            $8_1 = $16_1;

                                            $7_1 = Math_imul($27_1, 10) << 1 | 0;

                                            $1_1 = $7_1 + $0_1 | 0;

                                            $9_1 = HEAP16[($1_1 + 18 | 0) >> 1] | 0;

                                            $16_1 = $8_1 + $9_1 | 0;

                                            label$4 : {

                                                if (($8_1 ^ $9_1 | 0 | 0) < (0 | 0)) {

                                                    break label$4

                                                }

                                                if (($16_1 ^ $8_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$4

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $16_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $8_1 = HEAP16[($1_1 + 16 | 0) >> 1] | 0;

                                            $15_1 = $18_1 + $8_1 | 0;

                                            label$5 : {

                                                if (($18_1 ^ $8_1 | 0 | 0) < (0 | 0)) {

                                                    break label$5

                                                }

                                                if (($15_1 ^ $18_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$5

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $15_1 = ($18_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($1_1 + 14 | 0) >> 1] | 0;

                                            $14_1 = $19_1 + $18_1 | 0;

                                            label$6 : {

                                                if (($19_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$6

                                                }

                                                if (($14_1 ^ $19_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$6

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $14_1 = ($19_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($1_1 + 12 | 0) >> 1] | 0;

                                            $13_1 = $20_1 + $18_1 | 0;

                                            label$7 : {

                                                if (($20_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$7

                                                }

                                                if (($13_1 ^ $20_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$7

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $13_1 = ($20_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($1_1 + 10 | 0) >> 1] | 0;

                                            $12_1 = $21_1 + $18_1 | 0;

                                            label$8 : {

                                                if (($21_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$8

                                                }

                                                if (($12_1 ^ $21_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$8

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $12_1 = ($21_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($1_1 + 8 | 0) >> 1] | 0;

                                            $11_1 = $22_1 + $18_1 | 0;

                                            label$9 : {

                                                if (($22_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$9

                                                }

                                                if (($11_1 ^ $22_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$9

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $11_1 = ($22_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($1_1 + 6 | 0) >> 1] | 0;

                                            $10_1 = $23_1 + $18_1 | 0;

                                            label$10 : {

                                                if (($23_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$10

                                                }

                                                if (($10_1 ^ $23_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$10

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $10_1 = ($23_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($1_1 + 4 | 0) >> 1] | 0;

                                            $9_1 = $24_1 + $18_1 | 0;

                                            label$11 : {

                                                if (($24_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$11

                                                }

                                                if (($9_1 ^ $24_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$11

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $9_1 = ($24_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[($0_1 + ($7_1 | 2 | 0) | 0) >> 1] | 0;

                                            $8_1 = $25_1 + $18_1 | 0;

                                            label$12 : {

                                                if (($25_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$12

                                                }

                                                if (($8_1 ^ $25_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$12

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $8_1 = ($25_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $18_1 = HEAP16[$1_1 >> 1] | 0;

                                            $1_1 = $26_1 + $18_1 | 0;

                                            label$13 : {

                                                if (($26_1 ^ $18_1 | 0 | 0) < (0 | 0)) {

                                                    break label$13

                                                }

                                                if (($1_1 ^ $26_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$13

                                                }

                                                HEAP32[$5_1 >> 2] = 1;

                                                $1_1 = ($26_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $7_1 = $27_1 + -1 | 0;

                                            if (($27_1 | 0) > (0 | 0)) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                        HEAP16[($6_1 + 48 | 0) >> 1] = $15_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 50 | 0) >> 1] = $16_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 46 | 0) >> 1] = $14_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 44 | 0) >> 1] = $13_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 42 | 0) >> 1] = $12_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 40 | 0) >> 1] = $11_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 38 | 0) >> 1] = $10_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 36 | 0) >> 1] = $9_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 34 | 0) >> 1] = $8_1 >>> 3 | 0;

                                        HEAP16[($6_1 + 32 | 0) >> 1] = $1_1 >>> 3 | 0;

                                        $1_1 = $17_1 >> 1 | 0;

                                        $1_1 = ($17_1 | 0) < (-5376 | 0) ? ((-2689 - $1_1 | 0) >> 8 | 0) ^ -1 | 0 : ($1_1 + 2688 | 0) >> 8 | 0;

                                        HEAP16[($0_1 + 178 | 0) >> 1] = $1_1;

                                        $18_1 = 63;

                                        label$14 : {

                                            label$15 : {

                                                if (($1_1 | 0) > (63 | 0)) {

                                                    break label$15

                                                }

                                                if (($1_1 | 0) > (-1 | 0)) {

                                                    break label$14

                                                }

                                                $18_1 = 0;

                                            }

                                            HEAP16[($0_1 + 178 | 0) >> 1] = $18_1;

                                            $1_1 = $18_1;

                                        }

                                        $1_1 = $224($1_1 << 8 | 0 | 0, 11560 | 0, $5_1 | 0) | 0;

                                        $1_1 = ($1_1 | 0) > (-14436 | 0) ? $1_1 : -14436;

                                        $1_1 = ($1_1 >> 31 | 0) & $1_1 | 0;

                                        HEAP16[($3_1 + 6 | 0) >> 1] = $1_1;

                                        HEAP16[($3_1 + 4 | 0) >> 1] = $1_1;

                                        HEAP16[($3_1 + 2 | 0) >> 1] = $1_1;

                                        HEAP16[$3_1 >> 1] = $1_1;

                                        $1_1 = Math_imul($1_1, 5443) >>> 15 | 0;

                                        HEAP16[($3_1 + 14 | 0) >> 1] = $1_1;

                                        HEAP16[($3_1 + 12 | 0) >> 1] = $1_1;

                                        HEAP16[($3_1 + 10 | 0) >> 1] = $1_1;

                                        HEAP16[($3_1 + 8 | 0) >> 1] = $1_1;

                                        $207($6_1 + 32 | 0 | 0, $6_1 + 64 | 0 | 0, 10 | 0, $5_1 | 0);

                                        $218($6_1 + 64 | 0 | 0, 205 | 0, 10 | 0, $5_1 | 0);

                                        $206($6_1 + 64 | 0 | 0, $6_1 + 32 | 0 | 0, 10 | 0, $5_1 | 0);

                                        $213($2_1 | 0, 8 | 0, $6_1 + 32 | 0 | 0, $6_1 | 0, $0_1 + 182 | 0 | 0, $0_1 + 180 | 0 | 0, $5_1 | 0);

                                    }

                                    $1_1 = HEAP32[$4_1 >> 2] | 0;

                                    HEAP16[$1_1 >> 1] = HEAPU16[($0_1 + 180 | 0) >> 1] | 0;

                                    HEAP16[($1_1 + 2 | 0) >> 1] = HEAPU16[($0_1 + 182 | 0) >> 1] | 0;

                                    HEAP16[($1_1 + 4 | 0) >> 1] = HEAPU16[($0_1 + 184 | 0) >> 1] | 0;

                                    HEAP16[($1_1 + 6 | 0) >> 1] = HEAPU16[($0_1 + 186 | 0) >> 1] | 0;

                                    $5_1 = HEAPU16[($0_1 + 178 | 0) >> 1] | 0;

                                    HEAP32[$4_1 >> 2] = $1_1 + 10 | 0;

                                    HEAP16[($1_1 + 8 | 0) >> 1] = $5_1;

                                    global$0 = $6_1 + 96 | 0;

                                }



                                function $100($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $5_1 = 0, $7_1 = 0, i64toi32_i32$1 = 0, $4_1 = 0, i64toi32_i32$2 = 0,

                                        i64toi32_i32$0 = 0, $6_1 = 0, $13_1 = 0, $14_1 = 0, $15_1 = 0, $16_1 = 0,

                                        $17_1 = 0, $28_1 = 0, $38_1 = 0;

                                    $4_1 = global$0 - 16 | 0;

                                    global$0 = $4_1;

                                    $5_1 = (HEAPU16[($0_1 + 176 | 0) >> 1] | 0) + 1 | 0;

                                    $5_1 = ($5_1 & 65535 | 0 | 0) == (8 | 0) ? 0 : $5_1;

                                    HEAP16[($0_1 + 176 | 0) >> 1] = $5_1;

                                    $5_1 = $0_1 + Math_imul($5_1 << 16 >> 16, 20) | 0;

                                    i64toi32_i32$2 = $1_1;

                                    i64toi32_i32$0 = HEAPU16[$1_1 >> 1] | 0 | ((HEAPU16[($1_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($1_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $28_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $5_1;

                                    $13_1 = $28_1;

                                    HEAP16[$5_1 >> 1] = $13_1;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = $13_1 >>> 16 | 0;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    $14_1 = $1_1 + 16 | 0;

                                    $15_1 = $5_1 + 16 | 0;

                                    $16_1 = HEAPU16[$14_1 >> 1] | 0 | ((HEAPU16[($14_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$15_1 >> 1] = $16_1;

                                    HEAP16[($15_1 + 2 | 0) >> 1] = $16_1 >>> 16 | 0;

                                    i64toi32_i32$2 = $1_1 + 8 | 0;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $38_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $5_1 + 8 | 0;

                                    $17_1 = $38_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $17_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $17_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $6_1 = 160;

                                    $1_1 = 0;

                                    label$1 : {

                                        label$2 : while (1) {

                                            $5_1 = 2147483647;

                                            $7_1 = HEAP16[$2_1 >> 1] | 0;

                                            $1_1 = (Math_imul($7_1, $7_1) << 1 | 0) + $1_1 | 0;

                                            if (($1_1 | 0) < (0 | 0)) {

                                                break label$1

                                            }

                                            $7_1 = HEAP16[($2_1 + 2 | 0) >> 1] | 0;

                                            $1_1 = (Math_imul($7_1, $7_1) << 1 | 0) + $1_1 | 0;

                                            if (($1_1 | 0) < (0 | 0)) {

                                                break label$1

                                            }

                                            $7_1 = HEAP16[($2_1 + 4 | 0) >> 1] | 0;

                                            $1_1 = (Math_imul($7_1, $7_1) << 1 | 0) + $1_1 | 0;

                                            if (($1_1 | 0) < (0 | 0)) {

                                                break label$1

                                            }

                                            $7_1 = HEAP16[($2_1 + 6 | 0) >> 1] | 0;

                                            $1_1 = (Math_imul($7_1, $7_1) << 1 | 0) + $1_1 | 0;

                                            if (($1_1 | 0) < (0 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = $2_1 + 8 | 0;

                                            $5_1 = $1_1;

                                            $6_1 = $6_1 + -4 | 0;

                                            if ($6_1 & 65535 | 0) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $197($5_1 | 0, $4_1 + 14 | 0 | 0, $4_1 + 12 | 0 | 0, $3_1 | 0);

                                    label$3 : {

                                        $2_1 = HEAP16[($4_1 + 14 | 0) >> 1] | 0;

                                        $1_1 = $2_1 << 10 | 0;

                                        if (($1_1 | 0) == (($2_1 << 26 | 0) >> 16 | 0 | 0)) {

                                            break label$3

                                        }

                                        HEAP32[$3_1 >> 2] = 1;

                                        $1_1 = ($2_1 | 0) > (0 | 0) ? 32767 : -32768;

                                    }

                                    HEAP16[(($0_1 + ((HEAP16[($0_1 + 176 | 0) >> 1] | 0) << 1 | 0) | 0) + 160 | 0) >> 1] = (($1_1 + ((HEAP16[($4_1 + 12 | 0) >> 1] | 0) >>> 5 | 0) | 0) + -8521 | 0) << 16 >> 16 >>> 1 | 0;

                                    global$0 = $4_1 + 16 | 0;

                                }



                                function $101($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0;

                                    $4_1 = $183(HEAP16[($0_1 + 190 | 0) >> 1] | 0 | 0, 1 | 0, $3_1 | 0) | 0;

                                    HEAP16[($0_1 + 190 | 0) >> 1] = $4_1;

                                    label$1 : {

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        HEAP16[($0_1 + 188 | 0) >> 1] = 7;

                                        return 0 | 0;

                                    }

                                    label$2 : {

                                        $1_1 = HEAPU16[($0_1 + 188 | 0) >> 1] | 0;

                                        if ($1_1) {

                                            break label$2

                                        }

                                        HEAP16[($0_1 + 190 | 0) >> 1] = 0;

                                        HEAP32[$2_1 >> 2] = 8;

                                        return 1 | 0;

                                    }

                                    $1_1 = $1_1 + -1 | 0;

                                    HEAP16[($0_1 + 188 | 0) >> 1] = $1_1;

                                    label$3 : {

                                        if (($183($4_1 | 0, $1_1 << 16 >> 16 | 0, $3_1 | 0) | 0 | 0) > (29 | 0)) {

                                            break label$3

                                        }

                                        HEAP32[$2_1 >> 2] = 8;

                                    }

                                    return 0 | 0;

                                }



                                function $102($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    label$1 : {

                                        if ($5_1) {

                                            break label$1

                                        }

                                        label$2 : {

                                            if ((($0_1 + -85 | 0) << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$2

                                            }

                                            return ((Math_imul($0_1, 3) + $1_1 | 0) + -58 | 0) << 16 >> 16 | 0;

                                        }

                                        return ($0_1 + 112 | 0) << 16 >> 16 | 0;

                                    }

                                    label$3 : {

                                        if ($6_1) {

                                            break label$3

                                        }

                                        return (($1_1 + Math_imul($0_1 - $3_1 | 0, 3) | 0) + 2 | 0) << 16 >> 16 | 0;

                                    }

                                    label$4 : {

                                        $5_1 = $4_1 + -4 | 0;

                                        $3_1 = ((($2_1 - $3_1 | 0) + -5 | 0) << 16 >> 16 | 0) > (0 | 0) ? $3_1 + 5 | 0 : $2_1;

                                        $3_1 = (($5_1 - $3_1 | 0) << 16 >> 16 | 0) > (0 | 0) ? $5_1 : $3_1;

                                        $5_1 = Math_imul($3_1, 3);

                                        $2_1 = Math_imul($0_1, 3) + $1_1 | 0;

                                        if (((($5_1 - $2_1 | 0) + -6 | 0) << 16 >> 16 | 0) < (0 | 0)) {

                                            break label$4

                                        }

                                        return (($0_1 - $3_1 | 0) + 5 | 0) << 16 >> 16 | 0;

                                    }

                                    label$5 : {

                                        $2_1 = $2_1 << 16 >> 16;

                                        if ((($5_1 + 3 | 0) << 16 >> 16 | 0) <= ($2_1 | 0)) {

                                            break label$5

                                        }

                                        return (($2_1 - $5_1 | 0) + 9 | 0) << 16 >> 16 | 0;

                                    }

                                    return (($0_1 - $3_1 | 0) + 11 | 0) << 16 >> 16 | 0;

                                }



                                function $103($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    label$1 : {

                                        if ($3_1) {

                                            break label$1

                                        }

                                        label$2 : {

                                            if (($0_1 | 0) > (94 | 0)) {

                                                break label$2

                                            }

                                            return ((Math_imul($0_1, 6) + $1_1 | 0) + -105 | 0) << 16 >> 16 | 0;

                                        }

                                        return ($0_1 + 368 | 0) << 16 >> 16 | 0;

                                    }

                                    return (($1_1 + Math_imul($0_1 - $2_1 | 0, 6) | 0) + 3 | 0) << 16 >> 16 | 0;

                                }



                                function $104($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;

                                    $4_1 = HEAP32[($3_1 + 96 | 0) >> 2] | 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                if ($0_1 >>> 0 > 7 >>> 0) {

                                                    break label$3

                                                }

                                                $5_1 = 1;

                                                $6_1 = (HEAP32[($3_1 + 100 | 0) >> 2] | 0) + ($0_1 << 2 | 0) | 0;

                                                $3_1 = HEAP32[$6_1 >> 2] | 0;

                                                HEAP8[$2_1 >> 0] = (HEAPU16[($1_1 + ((HEAP16[$3_1 >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 4 | 0 | ((HEAPU16[($1_1 + ((HEAP16[($3_1 + 2 | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 5 | 0) | 0 | ((HEAPU16[($1_1 + ((HEAP16[($3_1 + 4 | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 6 | 0) | 0 | ((HEAPU16[($1_1 + ((HEAP16[($3_1 + 6 | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 7 | 0) | 0 | $0_1 | 0;

                                                label$4 : {

                                                    label$5 : {

                                                        $7_1 = $4_1 + ($0_1 << 1 | 0) | 0;

                                                        $0_1 = HEAP16[$7_1 >> 1] | 0;

                                                        if (($0_1 | 0) >= (12 | 0)) {

                                                            break label$5

                                                        }

                                                        $3_1 = 4;

                                                        break label$4;

                                                    }

                                                    $4_1 = 4;

                                                    $3_1 = 4;

                                                    label$6 : while (1) {

                                                        $0_1 = $2_1 + ($5_1 << 16 >> 16) | 0;

                                                        $4_1 = HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ($4_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0;

                                                        HEAP8[$0_1 >> 0] = $4_1;

                                                        $4_1 = $4_1 | ((HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ((($3_1 | 1 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0;

                                                        HEAP8[$0_1 >> 0] = $4_1;

                                                        $4_1 = (HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ((($3_1 | 2 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 2 | 0 | $4_1 | 0;

                                                        HEAP8[$0_1 >> 0] = $4_1;

                                                        $4_1 = (HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ((($3_1 | 3 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 3 | 0 | $4_1 | 0;

                                                        HEAP8[$0_1 >> 0] = $4_1;

                                                        $4_1 = (HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ((($3_1 + 4 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 4 | 0 | $4_1 | 0;

                                                        HEAP8[$0_1 >> 0] = $4_1;

                                                        $4_1 = (HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ((($3_1 + 5 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 5 | 0 | $4_1 | 0;

                                                        HEAP8[$0_1 >> 0] = $4_1;

                                                        $4_1 = (HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ((($3_1 + 6 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 6 | 0 | $4_1 | 0;

                                                        HEAP8[$0_1 >> 0] = $4_1;

                                                        HEAP8[$0_1 >> 0] = (HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ((($3_1 + 7 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0) << 7 | 0 | $4_1 | 0;

                                                        $5_1 = $5_1 + 1 | 0;

                                                        $0_1 = HEAP16[$7_1 >> 1] | 0;

                                                        $3_1 = $3_1 + 8 | 0;

                                                        $4_1 = $3_1 & 65535 | 0;

                                                        if (($0_1 + -7 | 0 | 0) > ($4_1 | 0)) {

                                                            continue label$6

                                                        }

                                                        break label$6;

                                                    }

                                                    ;

                                                    $5_1 = $5_1 << 16 >> 16;

                                                }

                                                $0_1 = ($0_1 + 4 | 0) & 7 | 0;

                                                if (!$0_1) {

                                                    break label$2

                                                }

                                                $5_1 = $2_1 + $5_1 | 0;

                                                HEAP8[$5_1 >> 0] = 0;

                                                $4_1 = HEAPU16[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + ($3_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0;

                                                HEAP8[$5_1 >> 0] = $4_1;

                                                if (($0_1 | 0) == (1 | 0)) {

                                                    break label$2

                                                }

                                                $4_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + (($3_1 + 1 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 1 | 0 | $4_1 | 0;

                                                HEAP8[$5_1 >> 0] = $4_1;

                                                if (($0_1 | 0) == (2 | 0)) {

                                                    break label$2

                                                }

                                                $4_1 = $4_1 | ((HEAPU8[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + (($3_1 + 2 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 2 | 0) | 0;

                                                HEAP8[$5_1 >> 0] = $4_1;

                                                if (($0_1 | 0) == (3 | 0)) {

                                                    break label$2

                                                }

                                                $4_1 = $4_1 | ((HEAPU8[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + (($3_1 + 3 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 3 | 0) | 0;

                                                HEAP8[$5_1 >> 0] = $4_1;

                                                if (($0_1 | 0) == (4 | 0)) {

                                                    break label$2

                                                }

                                                $4_1 = $4_1 | ((HEAPU8[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + (($3_1 + 4 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 4 | 0) | 0;

                                                HEAP8[$5_1 >> 0] = $4_1;

                                                if (($0_1 | 0) == (5 | 0)) {

                                                    break label$2

                                                }

                                                $4_1 = $4_1 | ((HEAPU8[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + (($3_1 + 5 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 5 | 0) | 0;

                                                HEAP8[$5_1 >> 0] = $4_1;

                                                if (($0_1 | 0) == (6 | 0)) {

                                                    break label$2

                                                }

                                                HEAP8[$5_1 >> 0] = $4_1 | ((HEAPU8[($1_1 + ((HEAP16[((HEAP32[$6_1 >> 2] | 0) + (($3_1 + 6 | 0) << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 6 | 0) | 0;

                                                return;

                                            }

                                            if (($0_1 | 0) == (15 | 0)) {

                                                break label$1

                                            }

                                            HEAP8[$2_1 >> 0] = (HEAPU16[$1_1 >> 1] | 0) << 4 | 0 | ((HEAPU16[($1_1 + 2 | 0) >> 1] | 0) << 5 | 0) | 0 | ((HEAPU16[($1_1 + 4 | 0) >> 1] | 0) << 6 | 0) | 0 | ((HEAPU16[($1_1 + 6 | 0) >> 1] | 0) << 7 | 0) | 0 | $0_1 | 0;

                                            $3_1 = $1_1 + 8 | 0;

                                            $6_1 = 1;

                                            label$7 : {

                                                $4_1 = $4_1 + ($0_1 << 1 | 0) | 0;

                                                $0_1 = (HEAPU16[$4_1 >> 1] | 0) + 4 | 0;

                                                $5_1 = $0_1 & -8 | 0;

                                                $1_1 = (($5_1 << 16 >> 16) + 524281 | 0) >>> 3 | 0;

                                                if (($1_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                    break label$7

                                                }

                                                $7_1 = $1_1 + 1 | 0;

                                                $6_1 = $7_1 & 65535 | 0;

                                                $1_1 = 1;

                                                label$8 : while (1) {

                                                    HEAP8[($2_1 + $1_1 | 0) >> 0] = (HEAPU16[($3_1 + 2 | 0) >> 1] | 0) << 1 | 0 | (HEAPU16[$3_1 >> 1] | 0) | 0 | ((HEAPU16[($3_1 + 4 | 0) >> 1] | 0) << 2 | 0) | 0 | ((HEAPU16[($3_1 + 6 | 0) >> 1] | 0) << 3 | 0) | 0 | ((HEAPU16[($3_1 + 8 | 0) >> 1] | 0) << 4 | 0) | 0 | ((HEAPU16[($3_1 + 10 | 0) >> 1] | 0) << 5 | 0) | 0 | ((HEAPU16[($3_1 + 12 | 0) >> 1] | 0) << 6 | 0) | 0 | ((HEAPU16[($3_1 + 14 | 0) >> 1] | 0) << 7 | 0) | 0;

                                                    $3_1 = $3_1 + 16 | 0;

                                                    $1_1 = $1_1 + 1 | 0;

                                                    if (($1_1 | 0) != ($6_1 | 0)) {

                                                        continue label$8

                                                    }

                                                    break label$8;

                                                }

                                                ;

                                                $0_1 = (HEAPU16[$4_1 >> 1] | 0) + 4 | 0;

                                                $6_1 = $7_1 << 16 >> 16;

                                            }

                                            if (($0_1 & 65535 | 0 | 0) == ($5_1 & 65535 | 0 | 0)) {

                                                break label$2

                                            }

                                            $1_1 = 0;

                                            $6_1 = $2_1 + $6_1 | 0;

                                            HEAP8[$6_1 >> 0] = 0;

                                            $5_1 = $0_1 - $5_1 | 0;

                                            if (($5_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            $2_1 = $5_1 & 3 | 0;

                                            $0_1 = 0;

                                            label$9 : {

                                                $5_1 = $5_1 & 65535 | 0;

                                                if ($5_1 >>> 0 < 4 >>> 0) {

                                                    break label$9

                                                }

                                                $7_1 = $5_1 & 65532 | 0;

                                                $1_1 = 0;

                                                $0_1 = 0;

                                                $5_1 = 0;

                                                label$10 : while (1) {

                                                    $0_1 = $0_1 | ((HEAPU16[($3_1 + ($1_1 << 1 | 0) | 0) >> 1] | 0) << $1_1 | 0) | 0;

                                                    HEAP8[$6_1 >> 0] = $0_1;

                                                    $4_1 = $1_1 | 1 | 0;

                                                    $0_1 = $0_1 | ((HEAPU16[($3_1 + ($4_1 << 1 | 0) | 0) >> 1] | 0) << $4_1 | 0) | 0;

                                                    HEAP8[$6_1 >> 0] = $0_1;

                                                    $4_1 = $1_1 | 2 | 0;

                                                    $0_1 = $0_1 | ((HEAPU16[($3_1 + ($4_1 << 1 | 0) | 0) >> 1] | 0) << $4_1 | 0) | 0;

                                                    HEAP8[$6_1 >> 0] = $0_1;

                                                    $4_1 = $1_1 | 3 | 0;

                                                    $0_1 = $0_1 | ((HEAPU16[($3_1 + ($4_1 << 1 | 0) | 0) >> 1] | 0) << $4_1 | 0) | 0;

                                                    HEAP8[$6_1 >> 0] = $0_1;

                                                    $1_1 = $1_1 + 4 | 0;

                                                    $5_1 = $5_1 + 4 | 0;

                                                    if (($5_1 | 0) != ($7_1 | 0)) {

                                                        continue label$10

                                                    }

                                                    break label$10;

                                                }

                                                ;

                                            }

                                            if (!$2_1) {

                                                break label$2

                                            }

                                            $5_1 = 0;

                                            label$11 : while (1) {

                                                $0_1 = $0_1 | ((HEAPU16[($3_1 + ($1_1 << 1 | 0) | 0) >> 1] | 0) << $1_1 | 0) | 0;

                                                HEAP8[$6_1 >> 0] = $0_1;

                                                $1_1 = $1_1 + 1 | 0;

                                                $5_1 = $5_1 + 1 | 0;

                                                if (($5_1 | 0) != ($2_1 | 0)) {

                                                    continue label$11

                                                }

                                                break label$11;

                                            }

                                            ;

                                        }

                                        return;

                                    }

                                    HEAP8[$2_1 >> 0] = 15;

                                }



                                function $105($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $8_1 = 0, $5_1 = 0, $9_1 = 0, $6_1 = 0, $4_1 = 0;

                                    $4_1 = HEAP32[($3_1 + 100 | 0) >> 2] | 0;

                                    $5_1 = HEAP32[($3_1 + 96 | 0) >> 2] | 0;

                                    HEAP8[$2_1 >> 0] = $0_1 & 15 | 0;

                                    $3_1 = 1;

                                    $6_1 = $5_1 + ($0_1 << 1 | 0) | 0;

                                    $7_1 = HEAP16[$6_1 >> 1] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if ($0_1 >>> 0 > 7 >>> 0) {

                                                break label$2

                                            }

                                            $3_1 = 1;

                                            $5_1 = 0;

                                            label$3 : {

                                                if (($7_1 | 0) < (8 | 0)) {

                                                    break label$3

                                                }

                                                $5_1 = $4_1 + ($0_1 << 2 | 0) | 0;

                                                $8_1 = 0;

                                                $3_1 = 0;

                                                $9_1 = 1;

                                                label$4 : while (1) {

                                                    $7_1 = $2_1 + ($9_1 << 16 >> 16) | 0;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ($8_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 7 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 1 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 6 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 2 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 5 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 3 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 4 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 4 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 3 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 5 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 2 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 6 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 1 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    HEAP8[$7_1 >> 0] = $8_1 | (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 7 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) | 0;

                                                    $9_1 = $9_1 + 1 | 0;

                                                    $7_1 = HEAP16[$6_1 >> 1] | 0;

                                                    $3_1 = $3_1 + 8 | 0;

                                                    $8_1 = $3_1 & 65535 | 0;

                                                    if (($7_1 + -7 | 0 | 0) > ($8_1 | 0)) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                                $5_1 = $3_1 & 65535 | 0;

                                                $3_1 = $9_1 << 16 >> 16;

                                            }

                                            $3_1 = $2_1 + $3_1 | 0;

                                            HEAP8[$3_1 >> 0] = 0;

                                            $7_1 = $7_1 & 7 | 0;

                                            if (!$7_1) {

                                                break label$1

                                            }

                                            $9_1 = $4_1 + ($0_1 << 2 | 0) | 0;

                                            $2_1 = $5_1 << 1 | 0;

                                            $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$9_1 >> 2] | 0) + $2_1 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 7 | 0;

                                            HEAP8[$3_1 >> 0] = $8_1;

                                            if (($7_1 | 0) == (1 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = $8_1 | ((HEAPU8[($1_1 + ((HEAP16[(($2_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 2 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 6 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (2 | 0)) {

                                                break label$1

                                            }

                                            $8_1 = $5_1 << 1 | 0;

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 4 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 5 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (3 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 6 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 4 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (4 | 0)) {

                                                break label$1

                                            }

                                            $8_1 = $5_1 << 1 | 0;

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 8 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 3 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (5 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 10 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 2 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (6 | 0)) {

                                                break label$1

                                            }

                                            HEAP8[$3_1 >> 0] = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[((($5_1 << 1 | 0) + (HEAP32[$9_1 >> 2] | 0) | 0) + 12 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 1 | 0) | 0;

                                            return;

                                        }

                                        label$5 : {

                                            $5_1 = ($7_1 + -7 | 0) << 16 >> 16;

                                            if (($5_1 | 0) < (1 | 0)) {

                                                break label$5

                                            }

                                            label$6 : while (1) {

                                                HEAP8[($2_1 + $3_1 | 0) >> 0] = (HEAPU8[($1_1 + 2 | 0) >> 0] | 0) << 6 | 0 | ((HEAPU8[$1_1 >> 0] | 0) << 7 | 0) | 0 | ((HEAPU8[($1_1 + 4 | 0) >> 0] | 0) << 5 | 0) | 0 | ((HEAPU8[($1_1 + 6 | 0) >> 0] | 0) << 4 | 0) | 0 | ((HEAPU8[($1_1 + 8 | 0) >> 0] | 0) << 3 | 0) | 0 | ((HEAPU8[($1_1 + 10 | 0) >> 0] | 0) << 2 | 0) | 0 | ((HEAPU8[($1_1 + 12 | 0) >> 0] | 0) << 1 | 0) | 0 | (HEAPU8[($1_1 + 14 | 0) >> 0] | 0) | 0;

                                                $3_1 = $3_1 + 1 | 0;

                                                $1_1 = $1_1 + 16 | 0;

                                                $7_1 = $5_1 & 65535 | 0;

                                                $5_1 = $5_1 + -8 | 0;

                                                if ($7_1 >>> 0 > 8 >>> 0) {

                                                    continue label$6

                                                }

                                                break label$6;

                                            }

                                            ;

                                            $3_1 = $3_1 << 16 >> 16;

                                            $7_1 = HEAPU16[$6_1 >> 1] | 0;

                                        }

                                        $3_1 = $2_1 + $3_1 | 0;

                                        HEAP8[$3_1 >> 0] = 0;

                                        $5_1 = $7_1 & 7 | 0;

                                        if (!$5_1) {

                                            break label$1

                                        }

                                        $7_1 = (HEAPU8[$1_1 >> 0] | 0) << 7 | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (1 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 2 | 0) >> 0] | 0) << 6 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (2 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 4 | 0) >> 0] | 0) << 5 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (3 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 6 | 0) >> 0] | 0) << 4 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (4 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 8 | 0) >> 0] | 0) << 3 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (5 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 10 | 0) >> 0] | 0) << 2 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (6 | 0)) {

                                            break label$1

                                        }

                                        HEAP8[$3_1 >> 0] = $7_1 | ((HEAPU8[($1_1 + 12 | 0) >> 0] | 0) << 1 | 0) | 0;

                                    }

                                }



                                function $106($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $8_1 = 0, $5_1 = 0, $9_1 = 0, $6_1 = 0, $4_1 = 0;

                                    $4_1 = HEAP32[($3_1 + 100 | 0) >> 2] | 0;

                                    $5_1 = HEAP32[($3_1 + 96 | 0) >> 2] | 0;

                                    HEAP8[$2_1 >> 0] = $0_1 << 3 | 0;

                                    $3_1 = 1;

                                    $6_1 = $5_1 + ($0_1 << 1 | 0) | 0;

                                    $7_1 = HEAP16[$6_1 >> 1] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if ($0_1 >>> 0 > 7 >>> 0) {

                                                break label$2

                                            }

                                            $3_1 = 1;

                                            $5_1 = 0;

                                            label$3 : {

                                                if (($7_1 | 0) < (8 | 0)) {

                                                    break label$3

                                                }

                                                $5_1 = $4_1 + ($0_1 << 2 | 0) | 0;

                                                $8_1 = 0;

                                                $3_1 = 0;

                                                $9_1 = 1;

                                                label$4 : while (1) {

                                                    $7_1 = $2_1 + ($9_1 << 16 >> 16) | 0;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ($8_1 << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 7 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 1 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 6 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 2 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 5 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 3 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 4 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 4 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 3 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 5 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 2 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 6 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 1 | 0 | $8_1 | 0;

                                                    HEAP8[$7_1 >> 0] = $8_1;

                                                    HEAP8[$7_1 >> 0] = $8_1 | (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$5_1 >> 2] | 0) + ((($3_1 | 7 | 0) & 65535 | 0) << 1 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) | 0;

                                                    $9_1 = $9_1 + 1 | 0;

                                                    $7_1 = HEAP16[$6_1 >> 1] | 0;

                                                    $3_1 = $3_1 + 8 | 0;

                                                    $8_1 = $3_1 & 65535 | 0;

                                                    if (($7_1 + -7 | 0 | 0) > ($8_1 | 0)) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                                $5_1 = $3_1 & 65535 | 0;

                                                $3_1 = $9_1 << 16 >> 16;

                                            }

                                            $3_1 = $2_1 + $3_1 | 0;

                                            HEAP8[$3_1 >> 0] = 0;

                                            $7_1 = $7_1 & 7 | 0;

                                            if (!$7_1) {

                                                break label$1

                                            }

                                            $9_1 = $4_1 + ($0_1 << 2 | 0) | 0;

                                            $2_1 = $5_1 << 1 | 0;

                                            $8_1 = (HEAPU8[($1_1 + ((HEAP16[((HEAP32[$9_1 >> 2] | 0) + $2_1 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 7 | 0;

                                            HEAP8[$3_1 >> 0] = $8_1;

                                            if (($7_1 | 0) == (1 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = $8_1 | ((HEAPU8[($1_1 + ((HEAP16[(($2_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 2 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 6 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (2 | 0)) {

                                                break label$1

                                            }

                                            $8_1 = $5_1 << 1 | 0;

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 4 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 5 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (3 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 6 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 4 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (4 | 0)) {

                                                break label$1

                                            }

                                            $8_1 = $5_1 << 1 | 0;

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 8 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 3 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (5 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[(($8_1 + (HEAP32[$9_1 >> 2] | 0) | 0) + 10 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 2 | 0) | 0;

                                            HEAP8[$3_1 >> 0] = $2_1;

                                            if (($7_1 | 0) == (6 | 0)) {

                                                break label$1

                                            }

                                            HEAP8[$3_1 >> 0] = $2_1 | ((HEAPU8[($1_1 + ((HEAP16[((($5_1 << 1 | 0) + (HEAP32[$9_1 >> 2] | 0) | 0) + 12 | 0) >> 1] | 0) << 1 | 0) | 0) >> 0] | 0) << 1 | 0) | 0;

                                            return;

                                        }

                                        label$5 : {

                                            $5_1 = ($7_1 + -7 | 0) << 16 >> 16;

                                            if (($5_1 | 0) < (1 | 0)) {

                                                break label$5

                                            }

                                            label$6 : while (1) {

                                                HEAP8[($2_1 + $3_1 | 0) >> 0] = (HEAPU8[($1_1 + 2 | 0) >> 0] | 0) << 6 | 0 | ((HEAPU8[$1_1 >> 0] | 0) << 7 | 0) | 0 | ((HEAPU8[($1_1 + 4 | 0) >> 0] | 0) << 5 | 0) | 0 | ((HEAPU8[($1_1 + 6 | 0) >> 0] | 0) << 4 | 0) | 0 | ((HEAPU8[($1_1 + 8 | 0) >> 0] | 0) << 3 | 0) | 0 | ((HEAPU8[($1_1 + 10 | 0) >> 0] | 0) << 2 | 0) | 0 | ((HEAPU8[($1_1 + 12 | 0) >> 0] | 0) << 1 | 0) | 0 | (HEAPU8[($1_1 + 14 | 0) >> 0] | 0) | 0;

                                                $3_1 = $3_1 + 1 | 0;

                                                $1_1 = $1_1 + 16 | 0;

                                                $7_1 = $5_1 & 65535 | 0;

                                                $5_1 = $5_1 + -8 | 0;

                                                if ($7_1 >>> 0 > 8 >>> 0) {

                                                    continue label$6

                                                }

                                                break label$6;

                                            }

                                            ;

                                            $3_1 = $3_1 << 16 >> 16;

                                            $7_1 = HEAPU16[$6_1 >> 1] | 0;

                                        }

                                        $3_1 = $2_1 + $3_1 | 0;

                                        HEAP8[$3_1 >> 0] = 0;

                                        $5_1 = $7_1 & 7 | 0;

                                        if (!$5_1) {

                                            break label$1

                                        }

                                        $7_1 = (HEAPU8[$1_1 >> 0] | 0) << 7 | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (1 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 2 | 0) >> 0] | 0) << 6 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (2 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 4 | 0) >> 0] | 0) << 5 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (3 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 6 | 0) >> 0] | 0) << 4 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (4 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 8 | 0) >> 0] | 0) << 3 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (5 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = $7_1 | ((HEAPU8[($1_1 + 10 | 0) >> 0] | 0) << 2 | 0) | 0;

                                        HEAP8[$3_1 >> 0] = $7_1;

                                        if (($5_1 | 0) == (6 | 0)) {

                                            break label$1

                                        }

                                        HEAP8[$3_1 >> 0] = $7_1 | ((HEAPU8[($1_1 + 12 | 0) >> 0] | 0) << 1 | 0) | 0;

                                    }

                                }



                                function $107($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $1_1 = 0, $5_1 = 0, $6_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(16 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        i64toi32_i32$1 = $2_1;

                                        i64toi32_i32$0 = 0;

                                        $5_1 = 0;

                                        HEAP16[$2_1 >> 1] = $5_1;

                                        HEAP16[($2_1 + 2 | 0) >> 1] = $5_1 >>> 16 | 0;

                                        HEAP16[($2_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[($2_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 8 | 0;

                                        i64toi32_i32$0 = 0;

                                        $6_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $6_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $108($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $3_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = i64toi32_i32$1 + 8 | 0;

                                    i64toi32_i32$0 = 0;

                                    $4_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $109($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $110($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $5_1 = 0, $7_1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, $6_1 = 0,

                                        i64toi32_i32$1 = 0, $12_1 = 0, $63_1 = 0;

                                    $5_1 = $222($2_1 | 0, 1 | 0, $4_1 | 0) | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (($2_1 | 0) < (201 | 0)) {

                                                break label$2

                                            }

                                            if (($5_1 | 0) <= (HEAP16[($0_1 + 4 | 0) >> 1] | 0 | 0)) {

                                                break label$2

                                            }

                                            HEAP16[$0_1 >> 1] = 8;

                                            $6_1 = 1;

                                            break label$1;

                                        }

                                        label$3 : {

                                            $5_1 = HEAPU16[$0_1 >> 1] | 0;

                                            if ($5_1) {

                                                break label$3

                                            }

                                            $6_1 = 0;

                                            break label$1;

                                        }

                                        $5_1 = $5_1 + -1 | 0;

                                        HEAP16[$0_1 >> 1] = $5_1;

                                        $6_1 = ($5_1 & 65535 | 0 | 0) != (0 | 0);

                                    }

                                    $7_1 = $0_1 + 6 | 0;

                                    HEAP16[$7_1 >> 1] = $1_1;

                                    $5_1 = 0;

                                    $7_1 = $191($7_1 | 0, 5 | 0) | 0;

                                    label$4 : {

                                        if (($1_1 | 0) > (2721 | 0)) {

                                            break label$4

                                        }

                                        if ($6_1) {

                                            break label$4

                                        }

                                        if (($7_1 | 0) > (5443 | 0)) {

                                            break label$4

                                        }

                                        label$5 : {

                                            if (($7_1 | 0) >= (0 | 0)) {

                                                break label$5

                                            }

                                            $5_1 = 16384;

                                            break label$4;

                                        }

                                        $5_1 = 16384 - (Math_imul(($7_1 << 2 | 0) & 65532 | 0, 24660) >>> 15 | 0) | 0;

                                    }

                                    label$6 : {

                                        if (HEAPU16[($0_1 + 2 | 0) >> 1] | 0) {

                                            break label$6

                                        }

                                        $5_1 = $221($5_1 << 16 >> 16 | 0, 1 | 0, $4_1 | 0) | 0;

                                    }

                                    HEAP16[$3_1 >> 1] = $5_1;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $2_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $5_1;

                                    i64toi32_i32$2 = $0_1 + 6 | 0;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $63_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 8 | 0;

                                    $12_1 = $63_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $12_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                }



                                function $111($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $1_1 = 0, $3_1 = 0, $4_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(68 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP32[($2_1 + 64 | 0) >> 2] = 0;

                                        HEAP32[($2_1 + 28 | 0) >> 2] = 0;

                                        $1_1 = $2_1 + 64 | 0;

                                        label$2 : {

                                            label$3 : {

                                                $3_1 = $2_1 + 32 | 0;

                                                if ($186($3_1 | 0) | 0) {

                                                    break label$3

                                                }

                                                $4_1 = $2_1 + 48 | 0;

                                                if ($186($4_1 | 0) | 0) {

                                                    break label$3

                                                }

                                                if (!($107($1_1 | 0) | 0)) {

                                                    break label$2

                                                }

                                            }

                                            $109($1_1 | 0);

                                            $232($2_1 | 0);

                                            return 65535 << 16 >> 16 | 0;

                                        }

                                        i64toi32_i32$1 = $2_1;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[$2_1 >> 2] = 0;

                                        HEAP32[($2_1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        i64toi32_i32$1 = $2_1 + 24 | 0;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[i64toi32_i32$1 >> 2] = 0;

                                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        i64toi32_i32$1 = $2_1 + 16 | 0;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[i64toi32_i32$1 >> 2] = 0;

                                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        i64toi32_i32$1 = $2_1 + 8 | 0;

                                        i64toi32_i32$0 = 0;

                                        HEAP32[i64toi32_i32$1 >> 2] = 0;

                                        HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                        $186($3_1 | 0) | 0;

                                        $186($4_1 | 0) | 0;

                                        $108(HEAP32[($2_1 + 64 | 0) >> 2] | 0 | 0) | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $112($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $109($1_1 + 64 | 0 | 0);

                                        $232(HEAP32[$0_1 >> 2] | 0 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $113($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    HEAP32[$0_1 >> 2] = 0;

                                    HEAP32[($0_1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$1 = $0_1 + 24 | 0;

                                    i64toi32_i32$0 = 0;

                                    HEAP32[i64toi32_i32$1 >> 2] = 0;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$1 = $0_1 + 16 | 0;

                                    i64toi32_i32$0 = 0;

                                    HEAP32[i64toi32_i32$1 >> 2] = 0;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    i64toi32_i32$1 = $0_1 + 8 | 0;

                                    i64toi32_i32$0 = 0;

                                    HEAP32[i64toi32_i32$1 >> 2] = 0;

                                    HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                    $186($0_1 + 32 | 0 | 0) | 0;

                                    $186($0_1 + 48 | 0 | 0) | 0;

                                    $108(HEAP32[($0_1 + 64 | 0) >> 2] | 0 | 0) | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $114($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1, $12_1, $13_1, $14_1, $15_1, $16_1, $17_1, $18_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    $12_1 = $12_1 | 0;

                                    $13_1 = $13_1 | 0;

                                    $14_1 = $14_1 | 0;

                                    $15_1 = $15_1 | 0;

                                    $16_1 = $16_1 | 0;

                                    $17_1 = $17_1 | 0;

                                    $18_1 = $18_1 | 0;

                                    var $19_1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, i64toi32_i32$2 = 0,

                                        $35_1 = 0, $40_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $19_1 = global$0 - 48 | 0;

                                    global$0 = $19_1;

                                    label$1 : {

                                        label$2 : {

                                            if ($1_1) {

                                                break label$2

                                            }

                                            label$3 : {

                                                if (!$10_1) {

                                                    break label$3

                                                }

                                                $1_1 = HEAP32[$16_1 >> 2] | 0;

                                                HEAP32[$16_1 >> 2] = $1_1 + 2 | 0;

                                                HEAP32[($0_1 + 28 | 0) >> 2] = $1_1;

                                                i64toi32_i32$2 = $0_1;

                                                i64toi32_i32$0 = HEAP32[($0_1 + 32 | 0) >> 2] | 0;

                                                i64toi32_i32$1 = HEAP32[($0_1 + 36 | 0) >> 2] | 0;

                                                $35_1 = i64toi32_i32$0;

                                                i64toi32_i32$0 = $0_1;

                                                HEAP32[($0_1 + 48 | 0) >> 2] = $35_1;

                                                HEAP32[($0_1 + 52 | 0) >> 2] = i64toi32_i32$1;

                                                i64toi32_i32$2 = $0_1 + 40 | 0;

                                                i64toi32_i32$1 = HEAP32[i64toi32_i32$2 >> 2] | 0;

                                                i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 4 | 0) >> 2] | 0;

                                                $40_1 = i64toi32_i32$1;

                                                i64toi32_i32$1 = $0_1 + 56 | 0;

                                                HEAP32[i64toi32_i32$1 >> 2] = $40_1;

                                                HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                                $1_1 = 0;

                                                $17_1 = $0_1 + 48 | 0;

                                                $187($17_1 | 0, 0 | 0, $4_1 | 0, $0_1 | 0, $0_1 + 2 | 0 | 0, $19_1 + 18 | 0 | 0, $19_1 + 16 | 0 | 0, $18_1 | 0);

                                                $80(0 | 0, $5_1 | 0, $6_1 | 0, $7_1 | 0, $8_1 | 0, $9_1 | 0, $0_1 + 18 | 0 | 0, $0_1 + 8 | 0 | 0, $19_1 + 12 | 0 | 0, $19_1 + 14 | 0 | 0, $18_1 | 0);

                                                $16_1 = HEAP16[($19_1 + 12 | 0) >> 1] | 0;

                                                label$4 : {

                                                    label$5 : {

                                                        $8_1 = HEAP16[($19_1 + 14 | 0) >> 1] | 0;

                                                        $4_1 = ($8_1 + 1 | 0) << 16 >> 16;

                                                        if (($4_1 | 0) > (-1 | 0)) {

                                                            break label$5

                                                        }

                                                        if (($8_1 | 0) < (-15 | 0)) {

                                                            break label$4

                                                        }

                                                        $1_1 = $16_1 >> (($8_1 ^ -1 | 0) & 65535 | 0) | 0;

                                                        break label$4;

                                                    }

                                                    $4_1 = $4_1 & 65535 | 0;

                                                    $1_1 = $16_1 << $4_1 | 0;

                                                    if (($1_1 << 16 >> 16 >> $4_1 | 0 | 0) == ($16_1 | 0)) {

                                                        break label$4

                                                    }

                                                    $1_1 = ($16_1 >> 15 | 0) ^ 32767 | 0;

                                                }

                                                HEAP16[$15_1 >> 1] = $1_1;

                                                $81($5_1 | 0, $0_1 + 4 | 0 | 0, $0_1 + 6 | 0 | 0, $18_1 | 0);

                                                $149($17_1 | 0, HEAP16[$0_1 >> 1] | 0 | 0, HEAP16[($0_1 + 2 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 14 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 12 | 0) >> 1] | 0 | 0, $18_1 | 0);

                                                break label$1;

                                            }

                                            $187($0_1 + 48 | 0 | 0, 0 | 0, $4_1 | 0, $19_1 + 46 | 0 | 0, $19_1 + 44 | 0 | 0, $19_1 + 18 | 0 | 0, $19_1 + 16 | 0 | 0, $18_1 | 0);

                                            $80(0 | 0, $5_1 | 0, $6_1 | 0, $7_1 | 0, $8_1 | 0, $9_1 | 0, $19_1 + 30 | 0 | 0, $19_1 + 20 | 0 | 0, $19_1 + 12 | 0 | 0, $19_1 + 14 | 0 | 0, $18_1 | 0);

                                            $81($5_1 | 0, $19_1 + 18 | 0 | 0, $19_1 + 16 | 0 | 0, $18_1 | 0);

                                            $18_1 = $150($0_1 + 32 | 0 | 0, HEAP16[$0_1 >> 1] | 0 | 0, HEAP16[($0_1 + 2 | 0) >> 1] | 0 | 0, $0_1 + 8 | 0 | 0, $0_1 + 18 | 0 | 0, HEAP16[($0_1 + 4 | 0) >> 1] | 0 | 0, HEAP16[($0_1 + 6 | 0) >> 1] | 0 | 0, $4_1 | 0, HEAP16[($19_1 + 46 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 44 | 0) >> 1] | 0 | 0, $19_1 + 20 | 0 | 0, $19_1 + 30 | 0 | 0, HEAP16[($19_1 + 18 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 16 | 0) >> 1] | 0 | 0, $11_1 | 0, $12_1 | 0, $13_1 | 0, $14_1 | 0, $15_1 | 0, $18_1 | 0) | 0;

                                            HEAP16[(HEAP32[($0_1 + 28 | 0) >> 2] | 0) >> 1] = $18_1;

                                            break label$1;

                                        }

                                        $10_1 = $0_1 + 32 | 0;

                                        $187($10_1 | 0, $1_1 | 0, $4_1 | 0, $19_1 + 46 | 0 | 0, $19_1 + 44 | 0 | 0, $19_1 + 18 | 0 | 0, $19_1 + 16 | 0 | 0, $18_1 | 0);

                                        label$6 : {

                                            label$7 : {

                                                if (($1_1 | 0) != (7 | 0)) {

                                                    break label$7

                                                }

                                                (wasm2js_i32$0 = $15_1, wasm2js_i32$1 = $115($6_1 | 0, $8_1 | 0, $18_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                $0_1 = $153(7 | 0, HEAP16[($19_1 + 46 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 44 | 0) >> 1] | 0 | 0, $15_1 | 0, $19_1 + 42 | 0 | 0, $19_1 + 40 | 0 | 0, HEAP32[($17_1 + 68 | 0) >> 2] | 0 | 0, $18_1 | 0) | 0;

                                                $18_1 = HEAP32[$16_1 >> 2] | 0;

                                                HEAP32[$16_1 >> 2] = $18_1 + 2 | 0;

                                                HEAP16[$18_1 >> 1] = $0_1;

                                                break label$6;

                                            }

                                            $80($1_1 | 0, $5_1 | 0, $6_1 | 0, $7_1 | 0, $8_1 | 0, $9_1 | 0, $19_1 + 30 | 0 | 0, $19_1 + 20 | 0 | 0, $19_1 + 12 | 0 | 0, $19_1 + 14 | 0 | 0, $18_1 | 0);

                                            label$8 : {

                                                if (($1_1 | 0) != (5 | 0)) {

                                                    break label$8

                                                }

                                                $152(HEAP32[($0_1 + 64 | 0) >> 2] | 0 | 0, $2_1 | 0, $3_1 | 0, $4_1 | 0, $19_1 + 30 | 0 | 0, $19_1 + 20 | 0 | 0, HEAP16[($19_1 + 18 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 16 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 46 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 44 | 0) >> 1] | 0 | 0, 40 | 0, HEAP16[($19_1 + 12 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 14 | 0) >> 1] | 0 | 0, $11_1 | 0, $14_1 | 0, $15_1 | 0, $19_1 + 42 | 0 | 0, $19_1 + 40 | 0 | 0, $16_1 | 0, $17_1 | 0, $18_1 | 0);

                                                break label$6;

                                            }

                                            $0_1 = $155($1_1 | 0, HEAP16[($19_1 + 46 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 44 | 0) >> 1] | 0 | 0, $19_1 + 30 | 0 | 0, $19_1 + 20 | 0 | 0, $11_1 | 0, $14_1 | 0, $15_1 | 0, $19_1 + 42 | 0 | 0, $19_1 + 40 | 0 | 0, $17_1 | 0, $18_1 | 0) | 0;

                                            $18_1 = HEAP32[$16_1 >> 2] | 0;

                                            HEAP32[$16_1 >> 2] = $18_1 + 2 | 0;

                                            HEAP16[$18_1 >> 1] = $0_1;

                                        }

                                        $188($10_1 | 0, HEAP16[($19_1 + 42 | 0) >> 1] | 0 | 0, HEAP16[($19_1 + 40 | 0) >> 1] | 0 | 0);

                                    }

                                    global$0 = $19_1 + 48 | 0;

                                }



                                function $115($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $5_1 = 0, $3_1 = 0, $4_1 = 0, $6_1 = 0, $70_1 = 0, $79_1 = 0, $88_1 = 0;

                                    $3_1 = 0;

                                    $4_1 = 10;

                                    $5_1 = $1_1;

                                    label$1 : while (1) {

                                        $3_1 = (((Math_imul((HEAP16[$5_1 >> 1] | 0) >> 1 | 0, HEAP16[$0_1 >> 1] | 0) + $3_1 | 0) + Math_imul((HEAP16[($5_1 + 2 | 0) >> 1] | 0) >> 1 | 0, HEAP16[($0_1 + 2 | 0) >> 1] | 0) | 0) + Math_imul((HEAP16[($5_1 + 4 | 0) >> 1] | 0) >> 1 | 0, HEAP16[($0_1 + 4 | 0) >> 1] | 0) | 0) + Math_imul((HEAP16[($5_1 + 6 | 0) >> 1] | 0) >> 1 | 0, HEAP16[($0_1 + 6 | 0) >> 1] | 0) | 0;

                                        $0_1 = $0_1 + 8 | 0;

                                        $5_1 = $5_1 + 8 | 0;

                                        $4_1 = $4_1 + -1 | 0;

                                        if ($4_1 & 65535 | 0) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $5_1 = $3_1 << 1 | 0;

                                    $0_1 = 0;

                                    label$2 : {

                                        $4_1 = $209($5_1 | 1 | 0 | 0) | 0;

                                        $6_1 = ($4_1 | 0) < (17 | 0) ? $5_1 >> (17 - $4_1 | 0) | 0 : $5_1 << ($4_1 + -17 | 0) | 0;

                                        if (($6_1 << 16 | 0 | 0) < (65536 | 0)) {

                                            break label$2

                                        }

                                        $5_1 = 20;

                                        label$3 : while (1) {

                                            $3_1 = (HEAP16[($1_1 + 4 | 0) >> 1] | 0) >> 1 | 0;

                                            $70_1 = Math_imul($3_1, $3_1) >>> 2 | 0;

                                            $3_1 = (HEAP16[$1_1 >> 1] | 0) >> 1 | 0;

                                            $79_1 = (Math_imul($3_1, $3_1) >>> 2 | 0) + $0_1 | 0;

                                            $0_1 = (HEAP16[($1_1 + 2 | 0) >> 1] | 0) >> 1 | 0;

                                            $88_1 = $70_1 + ($79_1 + (Math_imul($0_1, $0_1) >>> 2 | 0) | 0) | 0;

                                            $0_1 = (HEAP16[($1_1 + 6 | 0) >> 1] | 0) >> 1 | 0;

                                            $0_1 = $88_1 + (Math_imul($0_1, $0_1) >>> 2 | 0) | 0;

                                            $1_1 = $1_1 + 8 | 0;

                                            $5_1 = $5_1 + -2 | 0;

                                            if ($5_1 & 65535 | 0) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                        $0_1 = $0_1 << 3 | 0;

                                        $5_1 = $209($0_1 | 0) | 0;

                                        $0_1 = $185($6_1 << 16 >> 16 | 0, (($5_1 | 0) < (16 | 0) ? $0_1 >> (16 - $5_1 | 0) | 0 : $0_1 << ($5_1 + -16 | 0) | 0) << 16 >> 16 | 0) | 0;

                                        label$4 : {

                                            $5_1 = (($4_1 - $5_1 | 0) + 5 | 0) << 16 >> 16;

                                            if (($5_1 | 0) < (2 | 0)) {

                                                break label$4

                                            }

                                            return ($0_1 >> ($5_1 + -1 | 0) | 0) << 16 >> 16 | 0;

                                        }

                                        $0_1 = ($0_1 & 65535 | 0) << (1 - $5_1 | 0) | 0;

                                    }

                                    return $0_1 << 16 >> 16 | 0;

                                }



                                function $116($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $10_1 = 0, $6_1 = 0, $8_1 = 0, $11_1 = 0, $9_1 = 0, $7_1 = 0, $12_1 = 0,

                                        $13_1 = 0, $14_1 = 0, $30_1 = 0, $37_1 = 0, $43_1 = 0, $49_1 = 0, $56_1 = 0,

                                        $62_1 = 0, $68_1 = 0, $93_1 = 0, $99_1 = 0, $105_1 = 0, $140_1 = 0, $148_1 = 0,

                                        $156_1 = 0;

                                    $6_1 = 0;

                                    HEAP32[$5_1 >> 2] = 0;

                                    $7_1 = $4_1 >> 2 | 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                if ($4_1 >>> 0 < 4 >>> 0) {

                                                    break label$3

                                                }

                                                label$4 : {

                                                    label$5 : {

                                                        if (($7_1 | 0) != (1 | 0)) {

                                                            break label$5

                                                        }

                                                        $6_1 = 0;

                                                        $8_1 = $2_1;

                                                        break label$4;

                                                    }

                                                    $9_1 = $7_1 & 65534 | 0;

                                                    $6_1 = 0;

                                                    $10_1 = $2_1;

                                                    $11_1 = 0;

                                                    label$6 : while (1) {

                                                        $8_1 = HEAP16[($10_1 + 8 | 0) >> 1] | 0;

                                                        $30_1 = Math_imul($8_1, $8_1);

                                                        $8_1 = HEAP16[$10_1 >> 1] | 0;

                                                        $37_1 = Math_imul($8_1, $8_1) + $6_1 | 0;

                                                        $6_1 = HEAP16[($10_1 + 2 | 0) >> 1] | 0;

                                                        $43_1 = $37_1 + Math_imul($6_1, $6_1) | 0;

                                                        $6_1 = HEAP16[($10_1 + 4 | 0) >> 1] | 0;

                                                        $49_1 = $43_1 + Math_imul($6_1, $6_1) | 0;

                                                        $6_1 = HEAP16[($10_1 + 6 | 0) >> 1] | 0;

                                                        $56_1 = $30_1 + ($49_1 + Math_imul($6_1, $6_1) | 0) | 0;

                                                        $6_1 = HEAP16[($10_1 + 10 | 0) >> 1] | 0;

                                                        $62_1 = $56_1 + Math_imul($6_1, $6_1) | 0;

                                                        $6_1 = HEAP16[($10_1 + 12 | 0) >> 1] | 0;

                                                        $68_1 = $62_1 + Math_imul($6_1, $6_1) | 0;

                                                        $6_1 = HEAP16[($10_1 + 14 | 0) >> 1] | 0;

                                                        $6_1 = $68_1 + Math_imul($6_1, $6_1) | 0;

                                                        $8_1 = $10_1 + 16 | 0;

                                                        $10_1 = $8_1;

                                                        $11_1 = $11_1 + 2 | 0;

                                                        if (($11_1 & 65535 | 0 | 0) != ($9_1 | 0)) {

                                                            continue label$6

                                                        }

                                                        break label$6;

                                                    }

                                                    ;

                                                }

                                                label$7 : {

                                                    if (!($4_1 & 4 | 0)) {

                                                        break label$7

                                                    }

                                                    $10_1 = HEAP16[$8_1 >> 1] | 0;

                                                    $93_1 = Math_imul($10_1, $10_1) + $6_1 | 0;

                                                    $10_1 = HEAP16[($8_1 + 2 | 0) >> 1] | 0;

                                                    $99_1 = $93_1 + Math_imul($10_1, $10_1) | 0;

                                                    $10_1 = HEAP16[($8_1 + 4 | 0) >> 1] | 0;

                                                    $105_1 = $99_1 + Math_imul($10_1, $10_1) | 0;

                                                    $10_1 = HEAP16[($8_1 + 6 | 0) >> 1] | 0;

                                                    $6_1 = $105_1 + Math_imul($10_1, $10_1) | 0;

                                                }

                                                if ($6_1 >>> 0 > 1073741823 >>> 0) {

                                                    break label$2

                                                }

                                            }

                                            $10_1 = $6_1 << 1 | 0 | 1 | 0;

                                            $12_1 = $209($10_1 | 0) | 0;

                                            $13_1 = $220($10_1 << ($12_1 & 65535 | 0) | 0 | 0, $5_1 | 0) | 0;

                                            break label$1;

                                        }

                                        $10_1 = 1;

                                        label$8 : {

                                            if ($4_1 >>> 0 < 2 >>> 0) {

                                                break label$8

                                            }

                                            label$9 : {

                                                label$10 : {

                                                    $10_1 = $4_1 >> 1 | 0;

                                                    if (($10_1 | 0) != (1 | 0)) {

                                                        break label$10

                                                    }

                                                    $6_1 = 0;

                                                    $10_1 = $2_1;

                                                    break label$9;

                                                }

                                                $9_1 = $10_1 & 65534 | 0;

                                                $6_1 = 0;

                                                $10_1 = $2_1;

                                                $11_1 = 0;

                                                label$11 : while (1) {

                                                    $8_1 = (HEAP16[($10_1 + 4 | 0) >> 1] | 0) >> 2 | 0;

                                                    $140_1 = Math_imul($8_1, $8_1);

                                                    $8_1 = (HEAP16[$10_1 >> 1] | 0) >> 2 | 0;

                                                    $148_1 = Math_imul($8_1, $8_1) + $6_1 | 0;

                                                    $6_1 = (HEAP16[($10_1 + 2 | 0) >> 1] | 0) >> 2 | 0;

                                                    $156_1 = $140_1 + ($148_1 + Math_imul($6_1, $6_1) | 0) | 0;

                                                    $6_1 = (HEAP16[($10_1 + 6 | 0) >> 1] | 0) >> 2 | 0;

                                                    $6_1 = $156_1 + Math_imul($6_1, $6_1) | 0;

                                                    $10_1 = $10_1 + 8 | 0;

                                                    $11_1 = $11_1 + 2 | 0;

                                                    if (($11_1 & 65535 | 0 | 0) != ($9_1 | 0)) {

                                                        continue label$11

                                                    }

                                                    break label$11;

                                                }

                                                ;

                                            }

                                            label$12 : {

                                                if (!($4_1 & 2 | 0)) {

                                                    break label$12

                                                }

                                                $11_1 = (HEAP16[$10_1 >> 1] | 0) >> 2 | 0;

                                                $10_1 = (HEAP16[($10_1 + 2 | 0) >> 1] | 0) >> 2 | 0;

                                                $6_1 = (Math_imul($11_1, $11_1) + $6_1 | 0) + Math_imul($10_1, $10_1) | 0;

                                            }

                                            $10_1 = $6_1 << 1 | 0 | 1 | 0;

                                        }

                                        $6_1 = $209($10_1 | 0) | 0;

                                        $12_1 = $6_1 + -4 | 0;

                                        $13_1 = $220($10_1 << ($6_1 & 65535 | 0) | 0 | 0, $5_1 | 0) | 0;

                                    }

                                    $10_1 = 0;

                                    HEAP32[$5_1 >> 2] = 0;

                                    label$13 : {

                                        label$14 : {

                                            label$15 : {

                                                label$16 : {

                                                    if ($4_1) {

                                                        break label$16

                                                    }

                                                    $10_1 = 1;

                                                    break label$15;

                                                }

                                                $6_1 = $2_1;

                                                $11_1 = $1_1;

                                                $14_1 = $4_1;

                                                label$17 : while (1) {

                                                    $9_1 = Math_imul(HEAP16[$6_1 >> 1] | 0, HEAP16[$11_1 >> 1] | 0);

                                                    $8_1 = $9_1 + $10_1 | 0;

                                                    label$18 : {

                                                        if (($9_1 ^ $10_1 | 0 | 0) < (1 | 0)) {

                                                            break label$18

                                                        }

                                                        if (($8_1 ^ $10_1 | 0 | 0) < (0 | 0)) {

                                                            break label$14

                                                        }

                                                    }

                                                    $11_1 = $11_1 + 2 | 0;

                                                    $6_1 = $6_1 + 2 | 0;

                                                    $10_1 = $8_1;

                                                    $14_1 = $14_1 + -1 | 0;

                                                    if ($14_1 & 65535 | 0) {

                                                        continue label$17

                                                    }

                                                    break label$17;

                                                }

                                                ;

                                                $10_1 = $8_1 << 1 | 0 | 1 | 0;

                                            }

                                            $1_1 = $209($10_1 | 0) | 0;

                                            $10_1 = $220($10_1 << ($1_1 & 65535 | 0) | 0 | 0, $5_1 | 0) | 0;

                                            break label$13;

                                        }

                                        $10_1 = 1;

                                        HEAP32[$5_1 >> 2] = 1;

                                        label$19 : {

                                            if ($4_1 >>> 0 < 4 >>> 0) {

                                                break label$19

                                            }

                                            $10_1 = 0;

                                            label$20 : while (1) {

                                                $10_1 = (((Math_imul((HEAP16[$2_1 >> 1] | 0) >> 2 | 0, HEAP16[$1_1 >> 1] | 0) + $10_1 | 0) + Math_imul((HEAP16[($2_1 + 2 | 0) >> 1] | 0) >> 2 | 0, HEAP16[($1_1 + 2 | 0) >> 1] | 0) | 0) + Math_imul((HEAP16[($2_1 + 4 | 0) >> 1] | 0) >> 2 | 0, HEAP16[($1_1 + 4 | 0) >> 1] | 0) | 0) + Math_imul((HEAP16[($2_1 + 6 | 0) >> 1] | 0) >> 2 | 0, HEAP16[($1_1 + 6 | 0) >> 1] | 0) | 0;

                                                $1_1 = $1_1 + 8 | 0;

                                                $2_1 = $2_1 + 8 | 0;

                                                $7_1 = $7_1 + -1 | 0;

                                                if ($7_1 & 65535 | 0) {

                                                    continue label$20

                                                }

                                                break label$20;

                                            }

                                            ;

                                            $10_1 = $10_1 << 1 | 0 | 1 | 0;

                                        }

                                        $2_1 = $209($10_1 | 0) | 0;

                                        $1_1 = $2_1 + -4 | 0;

                                        $10_1 = $220($10_1 << ($2_1 & 65535 | 0) | 0 | 0, $5_1 | 0) | 0;

                                    }

                                    HEAP16[($3_1 + 4 | 0) >> 1] = $10_1;

                                    HEAP16[$3_1 >> 1] = $13_1;

                                    HEAP16[($3_1 + 6 | 0) >> 1] = 15 - $1_1 | 0;

                                    HEAP16[($3_1 + 2 | 0) >> 1] = 15 - $12_1 | 0;

                                    $2_1 = 0;

                                    label$21 : {

                                        if (($10_1 | 0) < (4 | 0)) {

                                            break label$21

                                        }

                                        $10_1 = $221($185(($10_1 & 65534 | 0) >>> 1 | 0 | 0, $13_1 | 0) | 0 | 0, ($1_1 - $12_1 | 0) << 16 >> 16 | 0, $5_1 | 0) | 0;

                                        $10_1 = ($10_1 | 0) < (19661 | 0) ? $10_1 : 19661;

                                        $2_1 = ($0_1 | 0) == (7 | 0) ? $10_1 & -4 | 0 : $10_1;

                                    }

                                    return $2_1 | 0;

                                }



                                function $117($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $8_1 = 0, $10_1 = 0, $9_1 = 0, $7_1 = 0, $11_1 = 0;

                                    $7_1 = -2147483648;

                                    label$1 : {

                                        $8_1 = ($3_1 + -1 | 0) << 16 >> 16;

                                        if (($8_1 | 0) <= ($4_1 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = -2147483648;

                                        $9_1 = $8_1;

                                        label$2 : while (1) {

                                            $3_1 = HEAP32[($0_1 - ($8_1 << 2 | 0) | 0) >> 2] | 0;

                                            $10_1 = ($3_1 + 1073741824 | 0 | 0) < (0 | 0) ? ($3_1 >> 31 | 0) ^ 2147483647 | 0 : $3_1 << 1 | 0;

                                            $11_1 = HEAP32[($0_1 + (($8_1 ^ -1 | 0) << 2 | 0) | 0) >> 2] | 0;

                                            $3_1 = $10_1 - $11_1 | 0;

                                            label$3 : {

                                                if (($10_1 ^ $11_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$3

                                                }

                                                if (($3_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$3

                                                }

                                                HEAP32[$6_1 >> 2] = 1;

                                                $3_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $11_1 = HEAP32[($0_1 + ((1 - $8_1 | 0) << 2 | 0) | 0) >> 2] | 0;

                                            $10_1 = $3_1 - $11_1 | 0;

                                            label$4 : {

                                                if (($11_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$4

                                                }

                                                if (($10_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$4

                                                }

                                                HEAP32[$6_1 >> 2] = 1;

                                                $10_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $3_1 = $119($10_1 | 0) | 0;

                                            $7_1 = ($3_1 | 0) > ($7_1 | 0) ? $3_1 : $7_1;

                                            $8_1 = $8_1 + -1 | 0;

                                            $9_1 = ($9_1 + -1 | 0) << 16 >> 16;

                                            if (($9_1 | 0) > ($4_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $0_1 = 0;

                                    label$5 : {

                                        label$6 : {

                                            label$7 : {

                                                if (($2_1 | 0) > (0 | 0)) {

                                                    break label$7

                                                }

                                                $10_1 = 1073741824;

                                                $8_1 = 0;

                                                break label$6;

                                            }

                                            $8_1 = $1_1;

                                            $3_1 = 0;

                                            label$8 : while (1) {

                                                $10_1 = $3_1;

                                                $3_1 = 2147483647;

                                                label$9 : {

                                                    label$10 : {

                                                        $9_1 = HEAP16[$8_1 >> 1] | 0;

                                                        $9_1 = Math_imul($9_1, $9_1);

                                                        if (($9_1 | 0) == (1073741824 | 0)) {

                                                            break label$10

                                                        }

                                                        $3_1 = ($9_1 << 1 | 0) + $10_1 | 0;

                                                        if (($9_1 ^ $10_1 | 0 | 0) < (1 | 0)) {

                                                            break label$9

                                                        }

                                                        if (($3_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$9

                                                        }

                                                        $3_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    }

                                                    HEAP32[$6_1 >> 2] = 1;

                                                }

                                                $8_1 = $8_1 + 2 | 0;

                                                $0_1 = ($0_1 + 1 | 0) << 16 >> 16;

                                                if (($0_1 | 0) < ($2_1 | 0)) {

                                                    continue label$8

                                                }

                                                break label$8;

                                            }

                                            ;

                                            $8_1 = 0;

                                            label$11 : {

                                                if (($2_1 | 0) < (1 | 0)) {

                                                    break label$11

                                                }

                                                $10_1 = $1_1 + -2 | 0;

                                                $9_1 = 0;

                                                $8_1 = 0;

                                                label$12 : while (1) {

                                                    $0_1 = $8_1;

                                                    $8_1 = 2147483647;

                                                    label$13 : {

                                                        label$14 : {

                                                            $11_1 = Math_imul(HEAP16[$10_1 >> 1] | 0, HEAP16[$1_1 >> 1] | 0);

                                                            if (($11_1 | 0) == (1073741824 | 0)) {

                                                                break label$14

                                                            }

                                                            $8_1 = ($11_1 << 1 | 0) + $0_1 | 0;

                                                            if (($11_1 ^ $0_1 | 0 | 0) < (1 | 0)) {

                                                                break label$13

                                                            }

                                                            if (($8_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                                break label$13

                                                            }

                                                            $8_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                                        }

                                                        HEAP32[$6_1 >> 2] = 1;

                                                    }

                                                    $10_1 = $10_1 + 2 | 0;

                                                    $1_1 = $1_1 + 2 | 0;

                                                    $9_1 = ($9_1 + 1 | 0) << 16 >> 16;

                                                    if (($9_1 | 0) < ($2_1 | 0)) {

                                                        continue label$12

                                                    }

                                                    break label$12;

                                                }

                                                ;

                                            }

                                            $10_1 = $3_1 + 1073741824 | 0;

                                            $0_1 = $3_1 << 1 | 0;

                                            if (($3_1 | 0) >= (0 | 0)) {

                                                break label$6

                                            }

                                            $3_1 = -2147483648;

                                            break label$5;

                                        }

                                        $3_1 = 2147483647;

                                    }

                                    $3_1 = ($10_1 | 0) < (0 | 0) ? $3_1 : $0_1;

                                    $10_1 = ($8_1 + 1073741824 | 0 | 0) < (0 | 0) ? ($8_1 >> 31 | 0) ^ 2147483647 | 0 : $8_1 << 1 | 0;

                                    $8_1 = $3_1 - $10_1 | 0;

                                    label$15 : {

                                        if (($10_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                            break label$15

                                        }

                                        if (($8_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                            break label$15

                                        }

                                        HEAP32[$6_1 >> 2] = 1;

                                        $8_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $3_1 = $119($8_1 | 0) | 0;

                                    label$16 : {

                                        label$17 : {

                                            $8_1 = $209($7_1 | 0) | 0;

                                            $0_1 = ($8_1 + -1 | 0) << 16 >> 16;

                                            if (($0_1 | 0) < (1 | 0)) {

                                                break label$17

                                            }

                                            $8_1 = $0_1 & 65535 | 0;

                                            $9_1 = $7_1 << $8_1 | 0;

                                            if (($9_1 >> $8_1 | 0 | 0) == ($7_1 | 0)) {

                                                break label$16

                                            }

                                            $9_1 = ($7_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$16;

                                        }

                                        $9_1 = 0;

                                        $8_1 = (1 - $8_1 | 0) << 16 >> 16;

                                        if (($8_1 | 0) > (30 | 0)) {

                                            break label$16

                                        }

                                        $9_1 = $7_1 >> ($8_1 & 65535 | 0) | 0;

                                    }

                                    label$18 : {

                                        label$19 : {

                                            label$20 : {

                                                label$21 : {

                                                    $8_1 = $209($3_1 | 0) | 0;

                                                    if (($8_1 | 0) < (1 | 0)) {

                                                        break label$21

                                                    }

                                                    $10_1 = $8_1 & 65535 | 0;

                                                    $7_1 = $3_1 << $10_1 | 0;

                                                    if (($7_1 >> $10_1 | 0 | 0) == ($3_1 | 0)) {

                                                        break label$20

                                                    }

                                                    $7_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    break label$19;

                                                }

                                                $10_1 = 0;

                                                $7_1 = (0 - $8_1 | 0) << 16 >> 16;

                                                if (($7_1 | 0) > (30 | 0)) {

                                                    break label$18

                                                }

                                                $7_1 = $3_1 >> ($7_1 & 65535 | 0) | 0;

                                            }

                                            $10_1 = 0;

                                            if ($7_1 >>> 0 < 65536 >>> 0) {

                                                break label$18

                                            }

                                        }

                                        $10_1 = $185($9_1 >> 16 | 0 | 0, $7_1 >> 16 | 0 | 0) | 0;

                                    }

                                    label$22 : {

                                        label$23 : {

                                            $3_1 = ($0_1 - $8_1 | 0) << 16 >> 16;

                                            if (($3_1 | 0) < (0 | 0)) {

                                                break label$23

                                            }

                                            $3_1 = $221($10_1 | 0, $3_1 | 0, $6_1 | 0) | 0;

                                            break label$22;

                                        }

                                        label$24 : {

                                            $3_1 = (($3_1 | 0) == (-32768 | 0) ? 32767 : 0 - $3_1 | 0) << 16 >> 16;

                                            if (($3_1 | 0) > (-1 | 0)) {

                                                break label$24

                                            }

                                            $3_1 = $10_1 >> ((0 - $3_1 | 0) & 65535 | 0) | 0;

                                            break label$22;

                                        }

                                        $8_1 = $3_1 & 65535 | 0;

                                        $3_1 = $10_1 << $8_1 | 0;

                                        if (($3_1 << 16 >> 16 >> $8_1 | 0 | 0) == ($10_1 | 0)) {

                                            break label$22

                                        }

                                        $3_1 = ($10_1 >> 15 | 0) ^ 32767 | 0;

                                    }

                                    HEAP16[$5_1 >> 1] = $3_1;

                                    return 0 | 0;

                                }



                                function $118($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0, $5_1 = 0, $6_1 = 0;

                                    $4_1 = global$12;

                                    $2_1 = $1_1 << (($2_1 | 0) != (0 | 0)) | 0;

                                    $5_1 = $2_1 << 16 >> 16;

                                    $6_1 = ($5_1 | 0) < (0 | 0) ? $2_1 + 6 | 0 : $2_1;

                                    $1_1 = $4_1 + ($6_1 << 16 >> 16 << 1 | 0) | 0;

                                    $2_1 = $0_1 + (($5_1 >> 15 | 0) << 1 | 0) | 0;

                                    $0_1 = $4_1 + ((6 - $6_1 | 0) << 16 >> 16 << 1 | 0) | 0;

                                    return (((((((((Math_imul(HEAP16[$1_1 >> 1] | 0, HEAP16[$2_1 >> 1] | 0) + Math_imul(HEAP16[$0_1 >> 1] | 0, HEAP16[($2_1 + 2 | 0) >> 1] | 0) | 0) + Math_imul(HEAP16[($1_1 + 12 | 0) >> 1] | 0, HEAP16[($2_1 + -2 | 0) >> 1] | 0) | 0) + Math_imul(HEAP16[($0_1 + 12 | 0) >> 1] | 0, HEAP16[($2_1 + 4 | 0) >> 1] | 0) | 0) + Math_imul(HEAP16[($1_1 + 24 | 0) >> 1] | 0, HEAP16[($2_1 + -4 | 0) >> 1] | 0) | 0) + Math_imul(HEAP16[($0_1 + 24 | 0) >> 1] | 0, HEAP16[($2_1 + 6 | 0) >> 1] | 0) | 0) + Math_imul(HEAP16[($1_1 + 36 | 0) >> 1] | 0, HEAP16[($2_1 + -6 | 0) >> 1] | 0) | 0) + Math_imul(HEAP16[($0_1 + 36 | 0) >> 1] | 0, HEAP16[($2_1 + 8 | 0) >> 1] | 0) | 0) + 16384 | 0) >>> 15 | 0) << 16 >> 16 | 0;

                                }



                                function $119($0_1) {

                                    $0_1 = $0_1 | 0;

                                    $0_1 = ($0_1 >> 31 | 0) + $0_1 | 0;

                                    return ($0_1 >> 31 | 0) ^ $0_1 | 0 | 0;

                                }



                                function $120($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $6_1 = 0, $9_1 = 0, $7_1 = 0, $4_1 = 0, $5_1 = 0, $8_1 = 0;

                                    $4_1 = global$13;

                                    $5_1 = global$14;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        label$2 : while (1) {

                                            $6_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                            $7_1 = Math_imul(HEAP16[$5_1 >> 1] | 0, $6_1) >> 15 | 0;

                                            $8_1 = HEAP16[$4_1 >> 1] | 0;

                                            $6_1 = Math_imul($8_1, $6_1);

                                            $6_1 = ($6_1 | 0) == (1073741824 | 0) ? 2147483647 : $6_1 << 1 | 0;

                                            $9_1 = ($7_1 << 1 | 0) + $6_1 | 0;

                                            $6_1 = ($6_1 ^ $7_1 | 0 | 0) < (1 | 0) ? $9_1 : ($9_1 ^ $6_1 | 0 | 0) > (-1 | 0) ? $9_1 : ($6_1 >> 31 | 0) ^ 2147483647 | 0;

                                            $7_1 = Math_imul($8_1, HEAP16[($2_1 + 2 | 0) >> 1] | 0) >> 15 | 0;

                                            $9_1 = $6_1 + ($7_1 << 1 | 0) | 0;

                                            $6_1 = ($6_1 ^ $7_1 | 0 | 0) < (1 | 0) ? $9_1 : ($9_1 ^ $6_1 | 0 | 0) > (-1 | 0) ? $9_1 : ($6_1 >> 31 | 0) ^ 2147483647 | 0;

                                            HEAP16[($1_1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                            HEAP16[($2_1 + 2 | 0) >> 1] = ($6_1 & 65534 | 0) >>> 1 | 0;

                                            $5_1 = $5_1 + 2 | 0;

                                            $4_1 = $4_1 + 2 | 0;

                                            $1_1 = $1_1 + 2 | 0;

                                            $2_1 = $2_1 + 2 | 0;

                                            $0_1 = $0_1 + -1 | 0;

                                            if ($0_1 & 65535 | 0) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $121($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0;

                                    $0_1 = $0_1 << 16 | 0;

                                    $3_1 = ($1_1 << 1 | 0) + $0_1 | 0;

                                    label$1 : {

                                        if (($0_1 ^ $1_1 | 0 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        if (($3_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                            break label$1

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $3_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    return $3_1 | 0;

                                }



                                function $122($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, $2_1 = 0, i64toi32_i32$0 = 0, $1_1 = 0, $5_1 = 0, $6_1 = 0,

                                        $7_1 = 0, $8_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(22 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP16[$2_1 >> 1] = 4096;

                                        i64toi32_i32$1 = $2_1 + 2 | 0;

                                        i64toi32_i32$0 = 0;

                                        $5_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $5_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $5_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 10 | 0;

                                        i64toi32_i32$0 = 0;

                                        $6_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $6_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $7_1 = $2_1 + 18 | 0;

                                        $8_1 = 0;

                                        HEAP16[$7_1 >> 1] = $8_1;

                                        HEAP16[($7_1 + 2 | 0) >> 1] = $8_1 >>> 16 | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $123($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[$0_1 >> 1] = 4096;

                                    i64toi32_i32$1 = $0_1 + 2 | 0;

                                    i64toi32_i32$0 = 0;

                                    $3_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 10 | 0;

                                    i64toi32_i32$0 = 0;

                                    $4_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $5_1 = $0_1 + 18 | 0;

                                    $6_1 = 0;

                                    HEAP16[$5_1 >> 1] = $6_1;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $124($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $125($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $8_1 = 0, $7_1 = 0, $6_1 = 0, $12_1 = 0, i64toi32_i32$0 = 0, $11_1 = 0,

                                        i64toi32_i32$1 = 0, $22_1 = 0, $24_1 = 0, i64toi32_i32$2 = 0, $21_1 = 0,

                                        $25_1 = 0, $13_1 = 0, $23_1 = 0, $28_1 = 0, $14_1 = 0, $27_1 = 0, $26_1 = 0,

                                        $15_1 = 0, $17_1 = 0, $18_1 = 0, $38_1 = 0, $39_1 = 0, $40_1 = 0, $41_1 = 0,

                                        $9_1 = 0, $10_1 = 0, $71_1 = 0, $146_1 = 0, $16_1 = 0, $19_1 = 0, $20_1 = 0,

                                        $230_1 = 0, $334 = 0, $339 = 0, $344 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $6_1 = global$0 - 128 | 0;

                                    global$0 = $6_1;

                                    $7_1 = ((HEAP16[($2_1 + 2 | 0) >> 1] | 0) << 1 | 0) + ((HEAPU16[($1_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $8_1 = $95($119($7_1 | 0) | 0 | 0, HEAP16[$1_1 >> 1] | 0 | 0, HEAP16[$2_1 >> 1] | 0 | 0, $5_1 | 0) | 0;

                                    label$1 : {

                                        if (($7_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $8_1 = $127($8_1 | 0) | 0;

                                    }

                                    $9_1 = $2_1 + 2 | 0;

                                    $10_1 = $1_1 + 2 | 0;

                                    (wasm2js_i32$0 = $4_1, wasm2js_i32$1 = $220($8_1 | 0, $5_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                    $7_1 = $8_1 >> 20 | 0;

                                    HEAP16[($6_1 + 98 | 0) >> 1] = $7_1;

                                    HEAP16[($6_1 + 66 | 0) >> 1] = ($8_1 >>> 5 | 0) - ($7_1 << 15 | 0) | 0;

                                    $71_1 = ($8_1 >>> 1 | 0) & 32767 | 0;

                                    $8_1 = $8_1 >> 16 | 0;

                                    $7_1 = Math_imul($71_1, $8_1) >> 15 | 0;

                                    $11_1 = $7_1 << 1 | 0;

                                    $8_1 = Math_imul($8_1, $8_1);

                                    $8_1 = ($8_1 | 0) == (1073741824 | 0) ? 2147483647 : $8_1 << 1 | 0;

                                    $12_1 = $11_1 + $8_1 | 0;

                                    $8_1 = ($8_1 ^ $7_1 | 0 | 0) < (1 | 0) ? $12_1 : ($12_1 ^ $8_1 | 0 | 0) > (-1 | 0) ? $12_1 : ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                    $12_1 = $8_1 + $11_1 | 0;

                                    $8_1 = ($119((($8_1 ^ $7_1 | 0 | 0) < (1 | 0) ? $12_1 : ($12_1 ^ $8_1 | 0 | 0) > (-1 | 0) ? $12_1 : ($8_1 >> 31 | 0) ^ 2147483647 | 0) | 0) | 0) ^ 2147483647 | 0;

                                    $7_1 = HEAP16[$1_1 >> 1] | 0;

                                    $12_1 = Math_imul(($8_1 >>> 1 | 0) & 32767 | 0, $7_1) >> 15 | 0;

                                    $11_1 = $8_1 >>> 16 | 0;

                                    $8_1 = Math_imul($11_1, $7_1);

                                    $7_1 = ($12_1 + $8_1 | 0) << 1 | 0;

                                    $146_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                    $8_1 = $8_1 << 1 | 0;

                                    $8_1 = ($12_1 ^ $8_1 | 0 | 0) < (1 | 0) ? $7_1 : ($7_1 ^ $8_1 | 0 | 0) > (-1 | 0) ? $7_1 : $146_1;

                                    $12_1 = Math_imul($11_1, HEAP16[$2_1 >> 1] | 0) >> 15 | 0;

                                    $7_1 = $8_1 + ($12_1 << 1 | 0) | 0;

                                    $8_1 = ($8_1 ^ $12_1 | 0 | 0) < (1 | 0) ? $7_1 : ($7_1 ^ $8_1 | 0 | 0) > (-1 | 0) ? $7_1 : ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                    $13_1 = $209($8_1 | 0) | 0;

                                    $14_1 = $8_1 << ($13_1 & 65535 | 0) | 0;

                                    $15_1 = ($14_1 >>> 1 | 0) & 2147450879 | 0;

                                    $16_1 = $4_1 + -2 | 0;

                                    $17_1 = $6_1 | 2 | 0;

                                    $18_1 = $6_1 + 32 | 0 | 2 | 0;

                                    $19_1 = $6_1 + 64 | 0 | 2 | 0;

                                    $20_1 = $6_1 + 96 | 0 | 2 | 0;

                                    $21_1 = 2;

                                    label$2 : {

                                        label$3 : while (1) {

                                            $22_1 = $14_1 >>> 16 | 0;

                                            $23_1 = 1;

                                            $24_1 = 0;

                                            $7_1 = ($21_1 << 1 | 0) + -2 | 0;

                                            $25_1 = ($6_1 + 64 | 0) + $7_1 | 0;

                                            $8_1 = $25_1;

                                            $26_1 = ($6_1 + 96 | 0) + $7_1 | 0;

                                            $7_1 = $26_1;

                                            $12_1 = $9_1;

                                            $11_1 = $10_1;

                                            label$4 : while (1) {

                                                $27_1 = HEAP16[$11_1 >> 1] | 0;

                                                $230_1 = (Math_imul(HEAP16[$8_1 >> 1] | 0, $27_1) >> 15 | 0) + $24_1 | 0;

                                                $24_1 = HEAP16[$7_1 >> 1] | 0;

                                                $24_1 = ($230_1 + Math_imul($24_1, $27_1) | 0) + (Math_imul($24_1, HEAP16[$12_1 >> 1] | 0) >> 15 | 0) | 0;

                                                $7_1 = $7_1 + -2 | 0;

                                                $11_1 = $11_1 + 2 | 0;

                                                $12_1 = $12_1 + 2 | 0;

                                                $8_1 = $8_1 + -2 | 0;

                                                $23_1 = $23_1 + 1 | 0;

                                                if ($21_1 >>> 0 > ($23_1 & 65535 | 0) >>> 0) {

                                                    continue label$4

                                                }

                                                break label$4;

                                            }

                                            ;

                                            $28_1 = $21_1 << 1 | 0;

                                            $7_1 = (((HEAPU16[($1_1 + $28_1 | 0) >> 1] | 0) << 16 | 0) + ($24_1 << 5 | 0) | 0) + ((HEAP16[($2_1 + $28_1 | 0) >> 1] | 0) << 1 | 0) | 0;

                                            $8_1 = $95($119($7_1 | 0) | 0 | 0, $22_1 << 16 >> 16 | 0, $15_1 << 16 >> 16 | 0, $5_1 | 0) | 0;

                                            label$5 : {

                                                if (($7_1 | 0) < (1 | 0)) {

                                                    break label$5

                                                }

                                                $8_1 = $127($8_1 | 0) | 0;

                                            }

                                            label$6 : {

                                                label$7 : {

                                                    if (($13_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                        break label$7

                                                    }

                                                    $7_1 = $13_1 & 65535 | 0;

                                                    $22_1 = $8_1 << $7_1 | 0;

                                                    if (($22_1 >> $7_1 | 0 | 0) == ($8_1 | 0)) {

                                                        break label$6

                                                    }

                                                    $22_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    break label$6;

                                                }

                                                $22_1 = 0;

                                                $7_1 = (0 - $13_1 | 0) << 16 >> 16;

                                                if (($7_1 | 0) > (30 | 0)) {

                                                    break label$6

                                                }

                                                $22_1 = $8_1 >> ($7_1 & 65535 | 0) | 0;

                                            }

                                            $8_1 = $22_1 >>> 16 | 0;

                                            label$8 : {

                                                if ($21_1 >>> 0 > 4 >>> 0) {

                                                    break label$8

                                                }

                                                HEAP16[($16_1 + $28_1 | 0) >> 1] = ($22_1 + 32768 | 0) >>> 16 | 0;

                                            }

                                            label$9 : {

                                                $8_1 = ($8_1 << 16 >> 16 >> 15 | 0) + $8_1 | 0;

                                                if (((($8_1 << 16 >> 16 >>> 15 | 0) ^ $8_1 | 0) << 16 >> 16 | 0) < (32751 | 0)) {

                                                    break label$9

                                                }

                                                i64toi32_i32$2 = $0_1;

                                                i64toi32_i32$0 = HEAPU16[$0_1 >> 1] | 0 | ((HEAPU16[($0_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($0_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $334 = i64toi32_i32$0;

                                                i64toi32_i32$0 = $3_1;

                                                $38_1 = $334;

                                                HEAP16[$3_1 >> 1] = $38_1;

                                                HEAP16[($3_1 + 2 | 0) >> 1] = $38_1 >>> 16 | 0;

                                                HEAP16[($3_1 + 4 | 0) >> 1] = i64toi32_i32$1;

                                                HEAP16[($3_1 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                                i64toi32_i32$2 = $0_1 + 14 | 0;

                                                i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $339 = i64toi32_i32$1;

                                                i64toi32_i32$1 = $3_1 + 14 | 0;

                                                $39_1 = $339;

                                                HEAP16[i64toi32_i32$1 >> 1] = $39_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $39_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                i64toi32_i32$2 = $0_1 + 8 | 0;

                                                i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $344 = i64toi32_i32$0;

                                                i64toi32_i32$0 = $3_1 + 8 | 0;

                                                $40_1 = $344;

                                                HEAP16[i64toi32_i32$0 >> 1] = $40_1;

                                                HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $40_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                                HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                                i64toi32_i32$0 = $4_1;

                                                i64toi32_i32$1 = 0;

                                                $41_1 = 0;

                                                HEAP16[i64toi32_i32$0 >> 1] = $41_1;

                                                HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $41_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                                HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                                break label$2;

                                            }

                                            $11_1 = $22_1 >> 16 | 0;

                                            $27_1 = (($22_1 >>> 1 | 0) - ($11_1 << 15 | 0) | 0) << 16 >> 16;

                                            $12_1 = 1;

                                            $8_1 = $17_1;

                                            $7_1 = $18_1;

                                            label$10 : while (1) {

                                                $24_1 = HEAP16[$26_1 >> 1] | 0;

                                                $23_1 = $12_1 << 1 | 0;

                                                $24_1 = (((Math_imul($11_1, $24_1) + (Math_imul($11_1, HEAP16[$25_1 >> 1] | 0) >> 15 | 0) | 0) + (HEAP16[(($6_1 + 64 | 0) + $23_1 | 0) >> 1] | 0) | 0) + ((HEAP16[(($6_1 + 96 | 0) + $23_1 | 0) >> 1] | 0) << 15 | 0) | 0) + (Math_imul($27_1, $24_1) >> 15 | 0) | 0;

                                                HEAP16[$7_1 >> 1] = $24_1 >>> 15 | 0;

                                                HEAP16[$8_1 >> 1] = $24_1 & 32767 | 0;

                                                $8_1 = $8_1 + 2 | 0;

                                                $7_1 = $7_1 + 2 | 0;

                                                $26_1 = $26_1 + -2 | 0;

                                                $25_1 = $25_1 + -2 | 0;

                                                $12_1 = $12_1 + 1 | 0;

                                                if (($12_1 | 0) != ($21_1 | 0)) {

                                                    continue label$10

                                                }

                                                break label$10;

                                            }

                                            ;

                                            HEAP16[$7_1 >> 1] = $22_1 >> 20 | 0;

                                            HEAP16[$8_1 >> 1] = ($22_1 >>> 5 | 0) - ((HEAPU16[(($6_1 + 32 | 0) + $28_1 | 0) >> 1] | 0) << 15 | 0) | 0;

                                            $7_1 = Math_imul($27_1, $11_1) >> 15 | 0;

                                            $25_1 = $7_1 << 1 | 0;

                                            $8_1 = Math_imul($11_1, $11_1);

                                            $8_1 = ($8_1 | 0) == (1073741824 | 0) ? 2147483647 : $8_1 << 1 | 0;

                                            $12_1 = $25_1 + $8_1 | 0;

                                            $8_1 = ($7_1 ^ $8_1 | 0 | 0) < (1 | 0) ? $12_1 : ($12_1 ^ $8_1 | 0 | 0) > (-1 | 0) ? $12_1 : ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                            $12_1 = $8_1 + $25_1 | 0;

                                            $7_1 = ($119((($8_1 ^ $7_1 | 0 | 0) < (1 | 0) ? $12_1 : ($12_1 ^ $8_1 | 0 | 0) > (-1 | 0) ? $12_1 : ($8_1 >> 31 | 0) ^ 2147483647 | 0) | 0) | 0) ^ 2147483647 | 0;

                                            $8_1 = $7_1 >>> 16 | 0;

                                            $12_1 = $14_1 >> 16 | 0;

                                            $7_1 = (((Math_imul($8_1, $15_1 & 32767 | 0) >>> 15 | 0) + Math_imul($8_1, $12_1) | 0) + (Math_imul((($7_1 >>> 1 | 0) - ($8_1 << 15 | 0) | 0) << 16 >> 16, $12_1) >> 15 | 0) | 0) << 1 | 0;

                                            $8_1 = $209($7_1 | 0) | 0;

                                            $227($20_1 | 0, $18_1 | 0, $28_1 | 0) | 0;

                                            $227($19_1 | 0, $17_1 | 0, $28_1 | 0) | 0;

                                            $14_1 = $7_1 << ($8_1 & 65535 | 0) | 0;

                                            $15_1 = ($14_1 >>> 1 | 0) & 32767 | 0;

                                            $13_1 = $8_1 + $13_1 | 0;

                                            $21_1 = $21_1 + 1 | 0;

                                            if (($21_1 | 0) != (11 | 0)) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                        HEAP16[$3_1 >> 1] = 4096;

                                        $8_1 = (((HEAP16[($6_1 + 66 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 98 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 2 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 2 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 68 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 100 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 4 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 4 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 70 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 102 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 6 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 6 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 72 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 104 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 8 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 8 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 74 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 106 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 10 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 10 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 76 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 108 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 12 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 12 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 78 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 110 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 14 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 14 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 80 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 112 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 16 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 16 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 82 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 114 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 18 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 18 | 0) >> 1] = $8_1;

                                        $8_1 = (((HEAP16[($6_1 + 84 | 0) >> 1] | 0) + ((HEAPU16[($6_1 + 116 | 0) >> 1] | 0) << 15 | 0) | 0) + 8192 | 0) >>> 14 | 0;

                                        HEAP16[($3_1 + 20 | 0) >> 1] = $8_1;

                                        HEAP16[($0_1 + 20 | 0) >> 1] = $8_1;

                                    }

                                    global$0 = $6_1 + 128 | 0;

                                    return 0 | 0;

                                }



                                function $126($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0;

                                    $4_1 = $0_1 >> 16 | 0;

                                    HEAP16[$1_1 >> 1] = $4_1;

                                    HEAP16[$2_1 >> 1] = ($0_1 >>> 1 | 0) - ($4_1 << 15 | 0) | 0;

                                }



                                function $127($0_1) {

                                    $0_1 = $0_1 | 0;

                                    return (($0_1 | 0) == (-2147483648 | 0) ? 2147483647 : 0 - $0_1 | 0) | 0;

                                }



                                function $128($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, $1_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(4 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP32[$2_1 >> 2] = 0;

                                        label$2 : {

                                            if (!($122($2_1 | 0) | 0)) {

                                                break label$2

                                            }

                                            $124($2_1 | 0);

                                            $232($2_1 | 0);

                                            return 65535 << 16 >> 16 | 0;

                                        }

                                        $123(HEAP32[$2_1 >> 2] | 0 | 0) | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $129($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $124($1_1 | 0);

                                        $232(HEAP32[$0_1 >> 2] | 0 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $130($0_1) {

                                    $0_1 = $0_1 | 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $123(HEAP32[$0_1 >> 2] | 0 | 0) | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $131($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0;

                                    $7_1 = global$0 - 64 | 0;

                                    global$0 = $7_1;

                                    label$1 : {

                                        label$2 : {

                                            if (($1_1 | 0) != (7 | 0)) {

                                                break label$2

                                            }

                                            $1_1 = HEAP32[($5_1 + 116 | 0) >> 2] | 0;

                                            $69($3_1 | 0, 10 | 0, $7_1 | 0, $7_1 + 32 | 0 | 0, HEAP32[($5_1 + 112 | 0) >> 2] | 0 | 0, $6_1 | 0) | 0;

                                            $120(10 | 0, $7_1 | 0, $7_1 + 32 | 0 | 0, $6_1 | 0);

                                            $125(HEAP32[$0_1 >> 2] | 0 | 0, $7_1 | 0, $7_1 + 32 | 0 | 0, $4_1 + 22 | 0 | 0, $7_1 + 56 | 0 | 0, $6_1 | 0) | 0;

                                            $69($3_1 | 0, 10 | 0, $7_1 | 0, $7_1 + 32 | 0 | 0, $1_1 | 0, $6_1 | 0) | 0;

                                            break label$1;

                                        }

                                        $69($2_1 | 0, 10 | 0, $7_1 | 0, $7_1 + 32 | 0 | 0, HEAP32[($5_1 + 108 | 0) >> 2] | 0 | 0, $6_1 | 0) | 0;

                                    }

                                    $120(10 | 0, $7_1 | 0, $7_1 + 32 | 0 | 0, $6_1 | 0);

                                    $125(HEAP32[$0_1 >> 2] | 0 | 0, $7_1 | 0, $7_1 + 32 | 0 | 0, $4_1 + 66 | 0 | 0, $7_1 + 56 | 0 | 0, $6_1 | 0) | 0;

                                    global$0 = $7_1 + 64 | 0;

                                }



                                function $132($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    var $10_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            if (($2_1 | 0) == (6 | 0)) {

                                                break label$2

                                            }

                                            $10_1 = 0;

                                            HEAP16[$6_1 >> 1] = $10_1;

                                            HEAP16[($6_1 + 2 | 0) >> 1] = $10_1 >>> 16 | 0;

                                            label$3 : {

                                                if ($2_1 >>> 0 > 1 >>> 0) {

                                                    break label$3

                                                }

                                                (wasm2js_i32$0 = $4_1, wasm2js_i32$1 = $138($1_1 | 0, $2_1 | 0, $3_1 | 0, 20 | 0, 143 | 0, 160 | 0, $7_1 | 0, $8_1 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                return;

                                            }

                                            if ($2_1 >>> 0 > 5 >>> 0) {

                                                break label$1

                                            }

                                            (wasm2js_i32$0 = $4_1, wasm2js_i32$1 = $138($1_1 | 0, $2_1 | 0, $3_1 | 0, 20 | 0, 143 | 0, 80 | 0, $7_1 | 0, $8_1 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                            return;

                                        }

                                        (wasm2js_i32$0 = $4_1, wasm2js_i32$1 = $142($0_1 | 0, $1_1 | 0, $3_1 | 0, 20 | 0, 143 | 0, 80 | 0, $5_1 | 0, $6_1 | 0, $7_1 | 0, $8_1 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        return;

                                    }

                                    (wasm2js_i32$0 = $4_1, wasm2js_i32$1 = $138($1_1 | 0, $2_1 | 0, $3_1 | 0, 18 | 0, 143 | 0, 80 | 0, $7_1 | 0, $8_1 | 0, $9_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                }



                                function $133($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, $1_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(2 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP16[$2_1 >> 1] = 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $134($0_1) {

                                    $0_1 = $0_1 | 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[$0_1 >> 1] = 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $135($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $136($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    var $13_1 = 0, $17_1 = 0, $15_1 = 0, $14_1 = 0, $16_1 = 0, $22_1 = 0, $18_1 = 0,

                                        $32_1 = 0, $35_1 = 0, $12_1 = 0, $27_1 = 0, $25_1 = 0, $30_1 = 0, $28_1 = 0,

                                        $26_1 = 0, $37_1 = 0, $21_1 = 0, $23_1 = 0, $31_1 = 0, $29_1 = 0, $34_1 = 0,

                                        $19_1 = 0, $20_1 = 0, $33_1 = 0, $24_1 = 0, $36_1 = 0, $38_1 = 0, $39_1 = 0,

                                        $40_1 = 0, $41_1 = 0, $716 = 0, $763 = 0, $827 = 0, $887 = 0;

                                    $12_1 = global$0 - 240 | 0;

                                    global$0 = $12_1;

                                    $13_1 = (global$4 + 70816 | 0) + Math_imul($1_1, 18) | 0;

                                    $14_1 = HEAPU16[($13_1 + 16 | 0) >> 1] | 0;

                                    $15_1 = HEAPU16[($13_1 + 14 | 0) >> 1] | 0;

                                    $16_1 = HEAPU16[($13_1 + 12 | 0) >> 1] | 0;

                                    $17_1 = HEAPU16[($13_1 + 10 | 0) >> 1] | 0;

                                    $18_1 = HEAPU16[($13_1 + 8 | 0) >> 1] | 0;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    if (($7_1 | 0) == (80 | 0)) {

                                                        break label$4

                                                    }

                                                    if ($7_1) {

                                                        break label$3

                                                    }

                                                }

                                                $19_1 = 1;

                                                label$5 : {

                                                    label$6 : {

                                                        if ($1_1 >>> 0 > 1 >>> 0) {

                                                            break label$6

                                                        }

                                                        if (($7_1 | 0) == (80 | 0)) {

                                                            break label$5

                                                        }

                                                    }

                                                    $20_1 = 0;

                                                    $7_1 = ((HEAPU16[($2_1 + ((($7_1 | 0) != (0 | 0)) << 1 | 0) | 0) >> 1] | 0) - $18_1 | 0) << 16 >> 16;

                                                    $15_1 = $14_1 << 16 >> 16;

                                                    $7_1 = ($7_1 | 0) > ($15_1 | 0) ? $7_1 : $15_1;

                                                    $14_1 = $7_1 + $17_1 | 0;

                                                    break label$1;

                                                }

                                                $7_1 = ((HEAPU16[$0_1 >> 1] | 0) - $16_1 | 0) << 16 >> 16;

                                                $17_1 = $14_1 << 16 >> 16;

                                                $7_1 = ($7_1 | 0) > ($17_1 | 0) ? $7_1 : $17_1;

                                                break label$2;

                                            }

                                            $7_1 = ((HEAPU16[$0_1 >> 1] | 0) - $16_1 | 0) << 16 >> 16;

                                            $17_1 = $14_1 << 16 >> 16;

                                            $7_1 = ($7_1 | 0) > ($17_1 | 0) ? $7_1 : $17_1;

                                        }

                                        $14_1 = $7_1 + $15_1 | 0;

                                        $20_1 = 1;

                                        $19_1 = 0;

                                        $17_1 = $15_1;

                                    }

                                    $21_1 = HEAP16[($13_1 + 6 | 0) >> 1] | 0;

                                    $22_1 = HEAPU16[($13_1 + 4 | 0) >> 1] | 0;

                                    $23_1 = HEAPU16[($13_1 + 2 | 0) >> 1] | 0;

                                    $24_1 = HEAP16[$13_1 >> 1] | 0;

                                    $13_1 = $14_1 << 16 >> 16;

                                    $25_1 = ($13_1 | 0) > (143 | 0) ? 143 - $17_1 | 0 : $7_1;

                                    $26_1 = 4 - $25_1 | 0;

                                    $91($3_1 + ($26_1 << 16 >> 16 << 1 | 0) | 0 | 0, $5_1 | 0, $12_1 + 160 | 0 | 0, $6_1 | 0);

                                    $27_1 = ($25_1 + -4 | 0) << 16 >> 16;

                                    $28_1 = $27_1 << 1 | 0;

                                    $29_1 = $6_1 >> 1 | 0;

                                    $30_1 = ($13_1 | 0) < (143 | 0) ? $13_1 : 143;

                                    $31_1 = ($30_1 + 4 | 0) << 16 >> 16;

                                    label$7 : {

                                        label$8 : {

                                            if ($6_1 >>> 0 < 2 >>> 0) {

                                                break label$8

                                            }

                                            label$9 : {

                                                label$10 : {

                                                    if (($29_1 | 0) != (1 | 0)) {

                                                        break label$10

                                                    }

                                                    $2_1 = 0;

                                                    $13_1 = $12_1 + 80 | 0;

                                                    $7_1 = $12_1 + 160 | 0;

                                                    break label$9;

                                                }

                                                $32_1 = $29_1 & 65534 | 0;

                                                $2_1 = 0;

                                                $13_1 = $12_1 + 80 | 0;

                                                $7_1 = $12_1 + 160 | 0;

                                                $18_1 = 0;

                                                label$11 : while (1) {

                                                    $17_1 = HEAP16[$7_1 >> 1] | 0;

                                                    HEAP16[$13_1 >> 1] = $17_1 >>> 2 | 0;

                                                    $15_1 = HEAP16[($7_1 + 2 | 0) >> 1] | 0;

                                                    HEAP16[($13_1 + 2 | 0) >> 1] = $15_1 >>> 2 | 0;

                                                    $14_1 = HEAP16[($7_1 + 4 | 0) >> 1] | 0;

                                                    HEAP16[($13_1 + 4 | 0) >> 1] = $14_1 >>> 2 | 0;

                                                    $16_1 = HEAP16[($7_1 + 6 | 0) >> 1] | 0;

                                                    HEAP16[($13_1 + 6 | 0) >> 1] = $16_1 >>> 2 | 0;

                                                    $13_1 = $13_1 + 8 | 0;

                                                    $7_1 = $7_1 + 8 | 0;

                                                    $2_1 = (Math_imul($14_1, $14_1) + ((Math_imul($17_1, $17_1) + $2_1 | 0) + Math_imul($15_1, $15_1) | 0) | 0) + Math_imul($16_1, $16_1) | 0;

                                                    $18_1 = $18_1 + 2 | 0;

                                                    if (($18_1 & 65535 | 0 | 0) != ($32_1 | 0)) {

                                                        continue label$11

                                                    }

                                                    break label$11;

                                                }

                                                ;

                                            }

                                            $33_1 = 2;

                                            label$12 : {

                                                if (!($6_1 & 2 | 0)) {

                                                    break label$12

                                                }

                                                $17_1 = HEAP16[$7_1 >> 1] | 0;

                                                HEAP16[$13_1 >> 1] = $17_1 >>> 2 | 0;

                                                $7_1 = HEAP16[($7_1 + 2 | 0) >> 1] | 0;

                                                HEAP16[($13_1 + 2 | 0) >> 1] = $7_1 >>> 2 | 0;

                                                $2_1 = (Math_imul($17_1, $17_1) + $2_1 | 0) + Math_imul($7_1, $7_1) | 0;

                                            }

                                            if (($2_1 | 0) <= (33554432 | 0)) {

                                                break label$8

                                            }

                                            $34_1 = $12_1 + 80 | 0;

                                            $2_1 = 14;

                                            break label$7;

                                        }

                                        $34_1 = $12_1 + 160 | 0;

                                        $33_1 = 0;

                                        $2_1 = 12;

                                    }

                                    $35_1 = $12_1 - $28_1 | 0;

                                    label$13 : {

                                        if (($27_1 | 0) > ($31_1 | 0)) {

                                            break label$13

                                        }

                                        $36_1 = $6_1 & 2 | 0;

                                        $28_1 = $29_1 & 65534 | 0;

                                        $13_1 = $6_1 + -1 | 0;

                                        $37_1 = $13_1 >>> 1 | 0;

                                        $38_1 = (($6_1 << 1 | 0) + $34_1 | 0) + -4 | 0;

                                        $13_1 = $13_1 << 1 | 0;

                                        $39_1 = $5_1 + $13_1 | 0;

                                        $40_1 = $34_1 + $13_1 | 0;

                                        $41_1 = ($30_1 + 5 | 0) & 65535 | 0;

                                        label$14 : while (1) {

                                            $18_1 = 0;

                                            $32_1 = 0;

                                            label$15 : {

                                                if ($6_1 >>> 0 < 2 >>> 0) {

                                                    break label$15

                                                }

                                                $32_1 = 0;

                                                $13_1 = $4_1;

                                                $7_1 = $34_1;

                                                $18_1 = 0;

                                                $5_1 = 0;

                                                label$16 : {

                                                    if (($29_1 | 0) == (1 | 0)) {

                                                        break label$16

                                                    }

                                                    label$17 : while (1) {

                                                        $17_1 = HEAP16[($7_1 + 4 | 0) >> 1] | 0;

                                                        $15_1 = HEAP16[$7_1 >> 1] | 0;

                                                        $14_1 = HEAP16[($7_1 + 2 | 0) >> 1] | 0;

                                                        $16_1 = HEAP16[($7_1 + 6 | 0) >> 1] | 0;

                                                        $18_1 = (Math_imul($17_1, HEAP16[($13_1 + 4 | 0) >> 1] | 0) + ((Math_imul($15_1, HEAP16[$13_1 >> 1] | 0) + $18_1 | 0) + Math_imul($14_1, HEAP16[($13_1 + 2 | 0) >> 1] | 0) | 0) | 0) + Math_imul($16_1, HEAP16[($13_1 + 6 | 0) >> 1] | 0) | 0;

                                                        $7_1 = $7_1 + 8 | 0;

                                                        $13_1 = $13_1 + 8 | 0;

                                                        $32_1 = (Math_imul($17_1, $17_1) + ((Math_imul($15_1, $15_1) + $32_1 | 0) + Math_imul($14_1, $14_1) | 0) | 0) + Math_imul($16_1, $16_1) | 0;

                                                        $5_1 = $5_1 + 2 | 0;

                                                        if (($5_1 & 65535 | 0 | 0) != ($28_1 | 0)) {

                                                            continue label$17

                                                        }

                                                        break label$17;

                                                    }

                                                    ;

                                                }

                                                if (!$36_1) {

                                                    break label$15

                                                }

                                                $17_1 = HEAP16[$7_1 >> 1] | 0;

                                                $7_1 = HEAP16[($7_1 + 2 | 0) >> 1] | 0;

                                                $18_1 = (Math_imul($17_1, HEAP16[$13_1 >> 1] | 0) + $18_1 | 0) + Math_imul($7_1, HEAP16[($13_1 + 2 | 0) >> 1] | 0) | 0;

                                                $32_1 = (Math_imul($17_1, $17_1) + $32_1 | 0) + Math_imul($7_1, $7_1) | 0;

                                            }

                                            $13_1 = $196($32_1 << 1 | 0 | 0, $11_1 | 0) | 0;

                                            $7_1 = ($18_1 << 1 | 0) >> 16 | 0;

                                            $17_1 = Math_imul(($13_1 >>> 1 | 0) & 32767 | 0, $7_1) >> 15 | 0;

                                            $15_1 = $13_1 >> 16 | 0;

                                            $13_1 = Math_imul($15_1, $7_1);

                                            $13_1 = ($13_1 | 0) == (1073741824 | 0) ? 2147483647 : $13_1 << 1 | 0;

                                            $7_1 = ($17_1 << 1 | 0) + $13_1 | 0;

                                            $13_1 = ($13_1 ^ $17_1 | 0 | 0) < (1 | 0) ? $7_1 : ($7_1 ^ $13_1 | 0 | 0) > (-1 | 0) ? $7_1 : ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            $17_1 = Math_imul($15_1, $18_1 & 32767 | 0) >> 15 | 0;

                                            $7_1 = $13_1 + ($17_1 << 1 | 0) | 0;

                                            HEAP16[($35_1 + ($27_1 << 1 | 0) | 0) >> 1] = ($13_1 ^ $17_1 | 0 | 0) < (1 | 0) ? $7_1 : ($7_1 ^ $13_1 | 0 | 0) > (-1 | 0) ? $7_1 : ($13_1 >> 31 | 0) ^ -1 | 0;

                                            label$18 : {

                                                if (($27_1 | 0) == ($31_1 | 0)) {

                                                    break label$18

                                                }

                                                $26_1 = $26_1 + -1 | 0;

                                                $15_1 = HEAP16[($3_1 + ($26_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                                $7_1 = $39_1;

                                                $17_1 = $38_1;

                                                $13_1 = $40_1;

                                                $14_1 = $37_1;

                                                label$19 : {

                                                    if (!($14_1 & 65535 | 0)) {

                                                        break label$19

                                                    }

                                                    label$20 : while (1) {

                                                        HEAP16[$13_1 >> 1] = (HEAPU16[$17_1 >> 1] | 0) + (Math_imul(HEAP16[$7_1 >> 1] | 0, $15_1) >> $2_1 | 0) | 0;

                                                        HEAP16[($13_1 + -2 | 0) >> 1] = (HEAPU16[($17_1 + -2 | 0) >> 1] | 0) + (Math_imul(HEAP16[($7_1 + -2 | 0) >> 1] | 0, $15_1) >> $2_1 | 0) | 0;

                                                        $13_1 = $13_1 + -4 | 0;

                                                        $17_1 = $17_1 + -4 | 0;

                                                        $7_1 = $7_1 + -4 | 0;

                                                        $14_1 = $14_1 + -1 | 0;

                                                        if ($14_1 & 65535 | 0) {

                                                            continue label$20

                                                        }

                                                        break label$20;

                                                    }

                                                    ;

                                                }

                                                $17_1 = HEAPU16[$17_1 >> 1] | 0;

                                                $7_1 = HEAP16[$7_1 >> 1] | 0;

                                                HEAP16[($13_1 + -2 | 0) >> 1] = $15_1 >> $33_1 | 0;

                                                HEAP16[$13_1 >> 1] = $17_1 + (Math_imul($7_1, $15_1) >> $2_1 | 0) | 0;

                                            }

                                            $27_1 = $27_1 + 1 | 0;

                                            if (($41_1 | 0) != ($27_1 & 65535 | 0 | 0)) {

                                                continue label$14

                                            }

                                            break label$14;

                                        }

                                        ;

                                    }

                                    $37_1 = $25_1 << 16 >> 16;

                                    $7_1 = $25_1;

                                    label$21 : {

                                        $13_1 = ($7_1 + 1 | 0) << 16 >> 16;

                                        if (($13_1 | 0) > ($30_1 | 0)) {

                                            break label$21

                                        }

                                        $18_1 = $30_1 + ($25_1 ^ -1 | 0) | 0;

                                        $17_1 = HEAPU16[($35_1 + ($37_1 << 1 | 0) | 0) >> 1] | 0;

                                        label$22 : {

                                            label$23 : {

                                                $2_1 = ($30_1 - $25_1 | 0) & 3 | 0;

                                                if ($2_1) {

                                                    break label$23

                                                }

                                                $7_1 = $25_1;

                                                break label$22;

                                            }

                                            $16_1 = 0;

                                            $7_1 = $25_1;

                                            label$24 : while (1) {

                                                $15_1 = HEAP16[($35_1 + ($13_1 << 1 | 0) | 0) >> 1] | 0;

                                                $14_1 = $17_1 << 16 >> 16;

                                                $17_1 = ($15_1 | 0) > ($14_1 | 0) ? $15_1 : $14_1;

                                                $7_1 = ($15_1 | 0) < ($14_1 | 0) ? $7_1 : $13_1;

                                                $13_1 = $13_1 + 1 | 0;

                                                $16_1 = $16_1 + 1 | 0;

                                                if (($16_1 & 65535 | 0 | 0) != ($2_1 | 0)) {

                                                    continue label$24

                                                }

                                                break label$24;

                                            }

                                            ;

                                        }

                                        if (($18_1 & 65535 | 0) >>> 0 < 3 >>> 0) {

                                            break label$21

                                        }

                                        $26_1 = ($30_1 + 1 | 0) & 65535 | 0;

                                        label$25 : while (1) {

                                            $27_1 = $13_1 + 3 | 0;

                                            $15_1 = HEAP16[($35_1 + ($27_1 << 1 | 0) | 0) >> 1] | 0;

                                            $6_1 = $13_1 + 2 | 0;

                                            $14_1 = HEAP16[($35_1 + ($6_1 << 1 | 0) | 0) >> 1] | 0;

                                            $31_1 = $13_1 + 1 | 0;

                                            $16_1 = HEAP16[($35_1 + ($31_1 << 1 | 0) | 0) >> 1] | 0;

                                            $2_1 = HEAP16[($35_1 + ($13_1 << 1 | 0) | 0) >> 1] | 0;

                                            $18_1 = $17_1 << 16 >> 16;

                                            $32_1 = ($2_1 | 0) > ($18_1 | 0) ? $2_1 : $18_1;

                                            $5_1 = ($16_1 | 0) > ($32_1 | 0) ? $16_1 : $32_1;

                                            $28_1 = ($14_1 | 0) > ($5_1 | 0) ? $14_1 : $5_1;

                                            $17_1 = ($15_1 | 0) > ($28_1 | 0) ? $15_1 : $28_1;

                                            $7_1 = ($15_1 | 0) < ($28_1 | 0) ? (($14_1 | 0) < ($5_1 | 0) ? (($16_1 | 0) < ($32_1 | 0) ? (($2_1 | 0) < ($18_1 | 0) ? $7_1 : $13_1) : $31_1) : $6_1) : $27_1;

                                            $13_1 = $13_1 + 4 | 0;

                                            if (($26_1 | 0) != ($13_1 & 65535 | 0 | 0)) {

                                                continue label$25

                                            }

                                            break label$25;

                                        }

                                        ;

                                    }

                                    label$26 : {

                                        label$27 : {

                                            label$28 : {

                                                label$29 : {

                                                    label$30 : {

                                                        label$31 : {

                                                            $15_1 = $7_1 << 16 >> 16;

                                                            if (($19_1 & ($15_1 | 0) > ($24_1 | 0) | 0 | 0) != (1 | 0)) {

                                                                break label$31

                                                            }

                                                            $15_1 = $1_1 + -7 | 0;

                                                            $13_1 = 0;

                                                            break label$30;

                                                        }

                                                        label$32 : {

                                                            label$33 : {

                                                                label$34 : {

                                                                    label$35 : {

                                                                        if ($1_1 >>> 0 > 3 >>> 0 | $19_1 | 0) {

                                                                            break label$35

                                                                        }

                                                                        label$36 : {

                                                                            label$37 : {

                                                                                $13_1 = HEAP16[$0_1 >> 1] | 0;

                                                                                $13_1 = ($13_1 - $37_1 | 0 | 0) > (5 | 0) ? $25_1 + 5 | 0 : $13_1;

                                                                                $13_1 = ($30_1 - ($13_1 << 16 >> 16) | 0 | 0) > (4 | 0) ? $30_1 + -4 | 0 : $13_1;

                                                                                if (($7_1 & 65535 | 0 | 0) == ($13_1 & 65535 | 0 | 0)) {

                                                                                    break label$37

                                                                                }

                                                                                $17_1 = $13_1 << 16 >> 16;

                                                                                if (($17_1 + -1 | 0 | 0) != ($15_1 | 0)) {

                                                                                    break label$36

                                                                                }

                                                                            }

                                                                            $14_1 = $35_1 + ($15_1 << 1 | 0) | 0;

                                                                            $16_1 = $23_1 << 16 >> 16;

                                                                            $17_1 = $118($14_1 | 0, $22_1 << 16 >> 16 | 0, $16_1 | 0, $11_1 | 0) | 0;

                                                                            label$38 : {

                                                                                $13_1 = ($22_1 + 1 | 0) << 16 >> 16;

                                                                                if (($13_1 | 0) <= ($21_1 | 0)) {

                                                                                    break label$38

                                                                                }

                                                                                $15_1 = $1_1 + -7 | 0;

                                                                                break label$34;

                                                                            }

                                                                            label$39 : while (1) {

                                                                                $15_1 = $118($14_1 | 0, $13_1 << 16 >> 16 | 0, $16_1 | 0, $11_1 | 0) | 0;

                                                                                $716 = $15_1;

                                                                                $17_1 = $17_1 << 16 >> 16;

                                                                                $15_1 = ($15_1 | 0) > ($17_1 | 0);

                                                                                $17_1 = $15_1 ? $716 : $17_1;

                                                                                $22_1 = $15_1 ? $13_1 : $22_1;

                                                                                $13_1 = ($13_1 + 1 | 0) << 16 >> 16;

                                                                                if (($13_1 | 0) <= ($21_1 | 0)) {

                                                                                    continue label$39

                                                                                }

                                                                                break label$39;

                                                                            }

                                                                            ;

                                                                            $15_1 = $1_1 + -7 | 0;

                                                                            if ($15_1 >>> 0 > 1 >>> 0) {

                                                                                break label$34

                                                                            }

                                                                            $17_1 = 65535;

                                                                            $13_1 = 3;

                                                                            if (($22_1 & 65535 | 0 | 0) == (65533 | 0)) {

                                                                                break label$33

                                                                            }

                                                                            $13_1 = $22_1;

                                                                            break label$29;

                                                                        }

                                                                        label$40 : {

                                                                            if (($17_1 + -2 | 0 | 0) != ($15_1 | 0)) {

                                                                                break label$40

                                                                            }

                                                                            $17_1 = 0;

                                                                            $16_1 = $35_1 + ($15_1 << 1 | 0) | 0;

                                                                            $2_1 = $23_1 << 16 >> 16;

                                                                            $15_1 = $118($16_1 | 0, 0 | 0, $2_1 | 0, $11_1 | 0) | 0;

                                                                            $13_1 = 1;

                                                                            label$41 : while (1) {

                                                                                $14_1 = $118($16_1 | 0, $13_1 << 16 >> 16 | 0, $2_1 | 0, $11_1 | 0) | 0;

                                                                                $763 = $14_1;

                                                                                $15_1 = $15_1 << 16 >> 16;

                                                                                $14_1 = ($14_1 | 0) > ($15_1 | 0);

                                                                                $15_1 = $14_1 ? $763 : $15_1;

                                                                                $17_1 = $14_1 ? $13_1 : $17_1;

                                                                                $13_1 = ($13_1 + 1 | 0) << 16 >> 16;

                                                                                if (($13_1 | 0) <= ($21_1 | 0)) {

                                                                                    continue label$41

                                                                                }

                                                                                break label$41;

                                                                            }

                                                                            ;

                                                                            $14_1 = 1;

                                                                            label$42 : {

                                                                                label$43 : {

                                                                                    $15_1 = $1_1 + -7 | 0;

                                                                                    if ($15_1 >>> 0 > 1 >>> 0) {

                                                                                        break label$43

                                                                                    }

                                                                                    $14_1 = 65535;

                                                                                    $13_1 = 3;

                                                                                    if (($17_1 & 65535 | 0 | 0) == (65533 | 0)) {

                                                                                        break label$42

                                                                                    }

                                                                                    $13_1 = $17_1;

                                                                                    break label$29;

                                                                                }

                                                                                $13_1 = 65535;

                                                                                $16_1 = $17_1 & 65535 | 0;

                                                                                if (($16_1 | 0) == (2 | 0)) {

                                                                                    break label$42

                                                                                }

                                                                                label$44 : {

                                                                                    if (($16_1 | 0) == (65534 | 0)) {

                                                                                        break label$44

                                                                                    }

                                                                                    $13_1 = $17_1;

                                                                                    break label$27;

                                                                                }

                                                                                $7_1 = $7_1 + -1 | 0;

                                                                                break label$28;

                                                                            }

                                                                            $7_1 = $14_1 + $7_1 | 0;

                                                                            break label$30;

                                                                        }

                                                                        $13_1 = 0;

                                                                        if (($17_1 + 1 | 0 | 0) != ($15_1 | 0)) {

                                                                            break label$27

                                                                        }

                                                                        $14_1 = $35_1 + ($15_1 << 1 | 0) | 0;

                                                                        $16_1 = $23_1 << 16 >> 16;

                                                                        $17_1 = $118($14_1 | 0, $22_1 << 16 >> 16 | 0, $16_1 | 0, $11_1 | 0) | 0;

                                                                        $13_1 = $22_1;

                                                                        label$45 : while (1) {

                                                                            $13_1 = $13_1 + 1 | 0;

                                                                            $15_1 = $118($14_1 | 0, $13_1 << 16 >> 16 | 0, $16_1 | 0, $11_1 | 0) | 0;

                                                                            $827 = $15_1;

                                                                            $17_1 = $17_1 << 16 >> 16;

                                                                            $15_1 = ($15_1 | 0) > ($17_1 | 0);

                                                                            $17_1 = $15_1 ? $827 : $17_1;

                                                                            $22_1 = $15_1 ? $13_1 : $22_1;

                                                                            if (($13_1 & 65535 | 0) >>> 0 > 32766 >>> 0) {

                                                                                continue label$45

                                                                            }

                                                                            break label$45;

                                                                        }

                                                                        ;

                                                                        $17_1 = 1;

                                                                        label$46 : {

                                                                            label$47 : {

                                                                                $15_1 = $1_1 + -7 | 0;

                                                                                if ($15_1 >>> 0 > 1 >>> 0) {

                                                                                    break label$47

                                                                                }

                                                                                $17_1 = 65535;

                                                                                $13_1 = 3;

                                                                                if (($22_1 & 65535 | 0 | 0) == (65533 | 0)) {

                                                                                    break label$46

                                                                                }

                                                                                $13_1 = $22_1;

                                                                                break label$29;

                                                                            }

                                                                            $13_1 = 65535;

                                                                            $14_1 = $22_1 & 65535 | 0;

                                                                            if (($14_1 | 0) == (2 | 0)) {

                                                                                break label$46

                                                                            }

                                                                            label$48 : {

                                                                                if (($14_1 | 0) == (65534 | 0)) {

                                                                                    break label$48

                                                                                }

                                                                                $13_1 = $22_1;

                                                                                break label$27;

                                                                            }

                                                                            $7_1 = $7_1 + -1 | 0;

                                                                            break label$28;

                                                                        }

                                                                        $7_1 = $17_1 + $7_1 | 0;

                                                                        break label$30;

                                                                    }

                                                                    $14_1 = $35_1 + ($15_1 << 1 | 0) | 0;

                                                                    $16_1 = $23_1 << 16 >> 16;

                                                                    $17_1 = $118($14_1 | 0, $22_1 << 16 >> 16 | 0, $16_1 | 0, $11_1 | 0) | 0;

                                                                    label$49 : {

                                                                        $13_1 = ($22_1 + 1 | 0) << 16 >> 16;

                                                                        if (($13_1 | 0) > ($21_1 | 0)) {

                                                                            break label$49

                                                                        }

                                                                        label$50 : while (1) {

                                                                            $15_1 = $118($14_1 | 0, $13_1 << 16 >> 16 | 0, $16_1 | 0, $11_1 | 0) | 0;

                                                                            $887 = $15_1;

                                                                            $17_1 = $17_1 << 16 >> 16;

                                                                            $15_1 = ($15_1 | 0) > ($17_1 | 0);

                                                                            $17_1 = $15_1 ? $887 : $17_1;

                                                                            $22_1 = $15_1 ? $13_1 : $22_1;

                                                                            $13_1 = ($13_1 + 1 | 0) << 16 >> 16;

                                                                            if (($13_1 | 0) <= ($21_1 | 0)) {

                                                                                continue label$50

                                                                            }

                                                                            break label$50;

                                                                        }

                                                                        ;

                                                                    }

                                                                    label$51 : {

                                                                        label$52 : {

                                                                            label$53 : {

                                                                                $15_1 = $1_1 + -7 | 0;

                                                                                if ($15_1 >>> 0 > 1 >>> 0) {

                                                                                    break label$53

                                                                                }

                                                                                $17_1 = 65535;

                                                                                $13_1 = 3;

                                                                                if (($22_1 & 65535 | 0 | 0) == (65533 | 0)) {

                                                                                    break label$52

                                                                                }

                                                                                $13_1 = $22_1;

                                                                                break label$29;

                                                                            }

                                                                            $13_1 = 65535;

                                                                            $17_1 = $22_1 & 65535 | 0;

                                                                            if (($17_1 | 0) != (2 | 0)) {

                                                                                break label$51

                                                                            }

                                                                            $17_1 = 1;

                                                                        }

                                                                        $7_1 = $17_1 + $7_1 | 0;

                                                                        break label$30;

                                                                    }

                                                                    label$54 : {

                                                                        if (($17_1 | 0) == (65534 | 0)) {

                                                                            break label$54

                                                                        }

                                                                        $13_1 = $22_1;

                                                                        break label$27;

                                                                    }

                                                                    $7_1 = $7_1 + -1 | 0;

                                                                    break label$28;

                                                                }

                                                                $13_1 = 65535;

                                                                $17_1 = $22_1 & 65535 | 0;

                                                                if (($17_1 | 0) != (2 | 0)) {

                                                                    break label$32

                                                                }

                                                                $17_1 = 1;

                                                            }

                                                            $7_1 = $17_1 + $7_1 | 0;

                                                            break label$30;

                                                        }

                                                        label$55 : {

                                                            if (($17_1 | 0) == (65534 | 0)) {

                                                                break label$55

                                                            }

                                                            $13_1 = $22_1;

                                                            break label$27;

                                                        }

                                                        $7_1 = $7_1 + -1 | 0;

                                                        break label$28;

                                                    }

                                                    if ($15_1 >>> 0 >= 2 >>> 0) {

                                                        break label$27

                                                    }

                                                }

                                                $17_1 = $103($7_1 << 16 >> 16 | 0, $13_1 << 16 >> 16 | 0, $37_1 | 0, $20_1 | 0, $11_1 | 0) | 0;

                                                break label$26;

                                            }

                                            $13_1 = 1;

                                        }

                                        $17_1 = $102($7_1 << 16 >> 16 | 0, $13_1 << 16 >> 16 | 0, HEAP16[$0_1 >> 1] | 0 | 0, $37_1 | 0, $30_1 | 0, $20_1 | 0, $1_1 >>> 0 < 4 >>> 0 | 0, $11_1 | 0) | 0;

                                    }

                                    HEAP16[$10_1 >> 1] = $17_1;

                                    HEAP16[$0_1 >> 1] = $7_1;

                                    HEAP16[$9_1 >> 1] = $23_1;

                                    HEAP16[$8_1 >> 1] = $13_1;

                                    global$0 = $12_1 + 240 | 0;

                                    return $7_1 << 16 >> 16 | 0;

                                }



                                function $137($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    var $12_1 = 0, $13_1 = 0, $11_1 = 0, $14_1 = 0, $69_1 = 0, $76_1 = 0, $82_1 = 0,

                                        $88_1 = 0, $95_1 = 0, $101_1 = 0, $107_1 = 0, $132_1 = 0, $138_1 = 0,

                                        $144_1 = 0;

                                    $11_1 = 0;

                                    $12_1 = 0 - $6_1 | 0;

                                    $13_1 = -2147483648;

                                    label$1 : {

                                        label$2 : {

                                            if (($6_1 | 0) >= ($7_1 | 0)) {

                                                break label$2

                                            }

                                            $14_1 = $6_1;

                                            break label$1;

                                        }

                                        $1_1 = $1_1 + ($12_1 << 2 | 0) | 0;

                                        $12_1 = -2147483648;

                                        $14_1 = $6_1;

                                        label$3 : while (1) {

                                            $13_1 = HEAP32[$1_1 >> 2] | 0;

                                            $14_1 = ($13_1 | 0) < ($12_1 | 0) ? $14_1 : $6_1;

                                            $1_1 = $1_1 + 4 | 0;

                                            $13_1 = ($13_1 | 0) > ($12_1 | 0) ? $13_1 : $12_1;

                                            $12_1 = $13_1;

                                            $6_1 = ($6_1 + -1 | 0) << 16 >> 16;

                                            if (($6_1 | 0) >= ($7_1 | 0)) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                        $12_1 = 0 - ($14_1 << 16 >> 16) | 0;

                                    }

                                    label$4 : {

                                        if ($5_1 >>> 0 < 4 >>> 0) {

                                            break label$4

                                        }

                                        $7_1 = $2_1 + ($12_1 << 1 | 0) | 0;

                                        label$5 : {

                                            label$6 : {

                                                $12_1 = $5_1 >> 2 | 0;

                                                if (($12_1 | 0) != (1 | 0)) {

                                                    break label$6

                                                }

                                                $6_1 = 0;

                                                break label$5;

                                            }

                                            $11_1 = $12_1 & 65534 | 0;

                                            $6_1 = 0;

                                            $12_1 = $7_1;

                                            $1_1 = 0;

                                            label$7 : while (1) {

                                                $7_1 = HEAP16[($12_1 + 8 | 0) >> 1] | 0;

                                                $69_1 = Math_imul($7_1, $7_1);

                                                $7_1 = HEAP16[$12_1 >> 1] | 0;

                                                $76_1 = Math_imul($7_1, $7_1) + $6_1 | 0;

                                                $6_1 = HEAP16[($12_1 + 2 | 0) >> 1] | 0;

                                                $82_1 = $76_1 + Math_imul($6_1, $6_1) | 0;

                                                $6_1 = HEAP16[($12_1 + 4 | 0) >> 1] | 0;

                                                $88_1 = $82_1 + Math_imul($6_1, $6_1) | 0;

                                                $6_1 = HEAP16[($12_1 + 6 | 0) >> 1] | 0;

                                                $95_1 = $69_1 + ($88_1 + Math_imul($6_1, $6_1) | 0) | 0;

                                                $6_1 = HEAP16[($12_1 + 10 | 0) >> 1] | 0;

                                                $101_1 = $95_1 + Math_imul($6_1, $6_1) | 0;

                                                $6_1 = HEAP16[($12_1 + 12 | 0) >> 1] | 0;

                                                $107_1 = $101_1 + Math_imul($6_1, $6_1) | 0;

                                                $6_1 = HEAP16[($12_1 + 14 | 0) >> 1] | 0;

                                                $6_1 = $107_1 + Math_imul($6_1, $6_1) | 0;

                                                $7_1 = $12_1 + 16 | 0;

                                                $12_1 = $7_1;

                                                $1_1 = $1_1 + 2 | 0;

                                                if (($1_1 & 65535 | 0 | 0) != ($11_1 | 0)) {

                                                    continue label$7

                                                }

                                                break label$7;

                                            }

                                            ;

                                        }

                                        label$8 : {

                                            if (!($5_1 & 4 | 0)) {

                                                break label$8

                                            }

                                            $12_1 = HEAP16[$7_1 >> 1] | 0;

                                            $132_1 = Math_imul($12_1, $12_1) + $6_1 | 0;

                                            $12_1 = HEAP16[($7_1 + 2 | 0) >> 1] | 0;

                                            $138_1 = $132_1 + Math_imul($12_1, $12_1) | 0;

                                            $12_1 = HEAP16[($7_1 + 4 | 0) >> 1] | 0;

                                            $144_1 = $138_1 + Math_imul($12_1, $12_1) | 0;

                                            $12_1 = HEAP16[($7_1 + 6 | 0) >> 1] | 0;

                                            $6_1 = $144_1 + Math_imul($12_1, $12_1) | 0;

                                        }

                                        $11_1 = $6_1 << 1 | 0;

                                    }

                                    label$9 : {

                                        if (!$9_1) {

                                            break label$9

                                        }

                                        $177($0_1 | 0, $13_1 | 0, $11_1 | 0, $10_1 | 0);

                                    }

                                    $12_1 = $196($11_1 | 0, $10_1 | 0) | 0;

                                    $12_1 = $4_1 ? (($12_1 | 0) > (1073741823 | 0) ? 2147483647 : $12_1 << 1 | 0) : $12_1;

                                    $6_1 = $13_1 >> 16 | 0;

                                    $1_1 = Math_imul(($12_1 >>> 1 | 0) & 32767 | 0, $6_1) >> 15 | 0;

                                    $7_1 = $12_1 >> 16 | 0;

                                    $12_1 = Math_imul($7_1, $6_1);

                                    $12_1 = ($12_1 | 0) == (1073741824 | 0) ? 2147483647 : $12_1 << 1 | 0;

                                    $6_1 = ($1_1 << 1 | 0) + $12_1 | 0;

                                    $12_1 = ($12_1 ^ $1_1 | 0 | 0) < (1 | 0) ? $6_1 : ($6_1 ^ $12_1 | 0 | 0) > (-1 | 0) ? $6_1 : ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                    $1_1 = Math_imul($7_1, ($13_1 >>> 1 | 0) & 32767 | 0) >> 15 | 0;

                                    $6_1 = $12_1 + ($1_1 << 1 | 0) | 0;

                                    $12_1 = ($12_1 ^ $1_1 | 0 | 0) < (1 | 0) ? $6_1 : ($6_1 ^ $12_1 | 0 | 0) > (-1 | 0) ? $6_1 : ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                    label$10 : {

                                        if (!$4_1) {

                                            break label$10

                                        }

                                        label$11 : {

                                            label$12 : {

                                                label$13 : {

                                                    label$14 : {

                                                        if (($3_1 | 0) < (1 | 0)) {

                                                            break label$14

                                                        }

                                                        $6_1 = 0;

                                                        if ($3_1 >>> 0 > 30 >>> 0) {

                                                            break label$12

                                                        }

                                                        $6_1 = $12_1 >> ($3_1 & 65535 | 0) | 0;

                                                        break label$13;

                                                    }

                                                    $1_1 = (0 - $3_1 | 0) << 16 >> 16;

                                                    $6_1 = $12_1 << $1_1 | 0;

                                                    if (($6_1 >> $1_1 | 0 | 0) == ($12_1 | 0)) {

                                                        break label$13

                                                    }

                                                    $6_1 = ($12_1 | 0) > (-1 | 0);

                                                    $12_1 = 32767;

                                                    if ($6_1) {

                                                        break label$10

                                                    }

                                                    break label$11;

                                                }

                                                $12_1 = 32767;

                                                if (($6_1 | 0) > (65535 | 0)) {

                                                    break label$10

                                                }

                                                if (($6_1 | 0) <= (-65537 | 0)) {

                                                    break label$11

                                                }

                                            }

                                            $12_1 = $6_1 >>> 1 | 0;

                                            break label$10;

                                        }

                                        $12_1 = 32768;

                                    }

                                    HEAP16[$8_1 >> 1] = $12_1;

                                    return $14_1 << 16 >> 16 | 0;

                                }



                                function $138($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    var $12_1 = 0, $10_1 = 0, $11_1 = 0, $13_1 = 0, $9_1 = 0, $15_1 = 0, $14_1 = 0,

                                        $282 = 0;

                                    $9_1 = global$0 - 1200 | 0;

                                    global$0 = $9_1;

                                    label$1 : {

                                        if (!$7_1) {

                                            break label$1

                                        }

                                        $178($0_1 | 0, $1_1 >>> 0 < 2 >>> 0 | 0, $8_1 | 0);

                                    }

                                    $2_1 = $2_1 - ($4_1 << 1 | 0) | 0;

                                    $10_1 = 0;

                                    label$2 : {

                                        label$3 : {

                                            label$4 : {

                                                label$5 : {

                                                    label$6 : {

                                                        label$7 : {

                                                            $11_1 = (0 - $4_1 | 0) << 16 >> 16;

                                                            if (($11_1 | 0) >= ($5_1 | 0)) {

                                                                break label$7

                                                            }

                                                            $12_1 = $2_1;

                                                            label$8 : while (1) {

                                                                $13_1 = HEAP16[$12_1 >> 1] | 0;

                                                                $10_1 = (Math_imul($13_1, $13_1) << 1 | 0) + $10_1 | 0;

                                                                if (($10_1 | 0) < (0 | 0)) {

                                                                    break label$6

                                                                }

                                                                $12_1 = $12_1 + 2 | 0;

                                                                $11_1 = ($11_1 + 1 | 0) << 16 >> 16;

                                                                if (($11_1 | 0) < ($5_1 | 0)) {

                                                                    continue label$8

                                                                }

                                                                break label$8;

                                                            }

                                                            ;

                                                            if ($10_1 >>> 0 > 1048575 >>> 0) {

                                                                break label$3

                                                            }

                                                        }

                                                        $14_1 = $5_1 + $4_1 | 0;

                                                        $15_1 = $14_1 >>> 1 | 0;

                                                        if ($15_1 & 65535 | 0) {

                                                            break label$5

                                                        }

                                                        $12_1 = $9_1;

                                                        break label$4;

                                                    }

                                                    label$9 : {

                                                        label$10 : {

                                                            $14_1 = $5_1 + $4_1 | 0;

                                                            $15_1 = $14_1 >>> 1 | 0;

                                                            if ($15_1 & 65535 | 0) {

                                                                break label$10

                                                            }

                                                            $12_1 = $9_1;

                                                            break label$9;

                                                        }

                                                        $12_1 = $9_1;

                                                        label$11 : {

                                                            label$12 : {

                                                                $13_1 = $15_1 & 3 | 0;

                                                                if ($13_1) {

                                                                    break label$12

                                                                }

                                                                $10_1 = $15_1;

                                                                break label$11;

                                                            }

                                                            $11_1 = 0;

                                                            $10_1 = $15_1;

                                                            label$13 : while (1) {

                                                                HEAP16[$12_1 >> 1] = (HEAP16[$2_1 >> 1] | 0) >>> 3 | 0;

                                                                HEAP16[($12_1 + 2 | 0) >> 1] = (HEAP16[($2_1 + 2 | 0) >> 1] | 0) >>> 3 | 0;

                                                                $10_1 = $10_1 + -1 | 0;

                                                                $12_1 = $12_1 + 4 | 0;

                                                                $2_1 = $2_1 + 4 | 0;

                                                                $11_1 = $11_1 + 1 | 0;

                                                                if (($11_1 & 65535 | 0 | 0) != ($13_1 | 0)) {

                                                                    continue label$13

                                                                }

                                                                break label$13;

                                                            }

                                                            ;

                                                        }

                                                        if (($15_1 & 65535 | 0) >>> 0 < 4 >>> 0) {

                                                            break label$9

                                                        }

                                                        label$14 : while (1) {

                                                            HEAP16[$12_1 >> 1] = (HEAP16[$2_1 >> 1] | 0) >>> 3 | 0;

                                                            HEAP16[($12_1 + 2 | 0) >> 1] = (HEAP16[($2_1 + 2 | 0) >> 1] | 0) >>> 3 | 0;

                                                            HEAP16[($12_1 + 4 | 0) >> 1] = (HEAP16[($2_1 + 4 | 0) >> 1] | 0) >>> 3 | 0;

                                                            HEAP16[($12_1 + 6 | 0) >> 1] = (HEAP16[($2_1 + 6 | 0) >> 1] | 0) >>> 3 | 0;

                                                            HEAP16[($12_1 + 8 | 0) >> 1] = (HEAP16[($2_1 + 8 | 0) >> 1] | 0) >>> 3 | 0;

                                                            HEAP16[($12_1 + 10 | 0) >> 1] = (HEAP16[($2_1 + 10 | 0) >> 1] | 0) >>> 3 | 0;

                                                            HEAP16[($12_1 + 12 | 0) >> 1] = (HEAP16[($2_1 + 12 | 0) >> 1] | 0) >>> 3 | 0;

                                                            HEAP16[($12_1 + 14 | 0) >> 1] = (HEAP16[($2_1 + 14 | 0) >> 1] | 0) >>> 3 | 0;

                                                            $12_1 = $12_1 + 16 | 0;

                                                            $2_1 = $2_1 + 16 | 0;

                                                            $10_1 = $10_1 + -4 | 0;

                                                            if ($10_1 & 65535 | 0) {

                                                                continue label$14

                                                            }

                                                            break label$14;

                                                        }

                                                        ;

                                                    }

                                                    $13_1 = 3;

                                                    if (!($14_1 & 1 | 0)) {

                                                        break label$2

                                                    }

                                                    $13_1 = 3;

                                                    HEAP16[$12_1 >> 1] = (HEAP16[$2_1 >> 1] | 0) >>> 3 | 0;

                                                    break label$2;

                                                }

                                                $12_1 = $9_1;

                                                label$15 : {

                                                    label$16 : {

                                                        $13_1 = $15_1 & 3 | 0;

                                                        if ($13_1) {

                                                            break label$16

                                                        }

                                                        $10_1 = $15_1;

                                                        break label$15;

                                                    }

                                                    $11_1 = 0;

                                                    $10_1 = $15_1;

                                                    label$17 : while (1) {

                                                        HEAP16[$12_1 >> 1] = (HEAPU16[$2_1 >> 1] | 0) << 3 | 0;

                                                        HEAP16[($12_1 + 2 | 0) >> 1] = (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 3 | 0;

                                                        $10_1 = $10_1 + -1 | 0;

                                                        $12_1 = $12_1 + 4 | 0;

                                                        $2_1 = $2_1 + 4 | 0;

                                                        $11_1 = $11_1 + 1 | 0;

                                                        if (($11_1 & 65535 | 0 | 0) != ($13_1 | 0)) {

                                                            continue label$17

                                                        }

                                                        break label$17;

                                                    }

                                                    ;

                                                }

                                                if (($15_1 & 65535 | 0) >>> 0 < 4 >>> 0) {

                                                    break label$4

                                                }

                                                label$18 : while (1) {

                                                    HEAP16[$12_1 >> 1] = (HEAPU16[$2_1 >> 1] | 0) << 3 | 0;

                                                    HEAP16[($12_1 + 2 | 0) >> 1] = (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 3 | 0;

                                                    HEAP16[($12_1 + 4 | 0) >> 1] = (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) << 3 | 0;

                                                    HEAP16[($12_1 + 6 | 0) >> 1] = (HEAPU16[($2_1 + 6 | 0) >> 1] | 0) << 3 | 0;

                                                    HEAP16[($12_1 + 8 | 0) >> 1] = (HEAPU16[($2_1 + 8 | 0) >> 1] | 0) << 3 | 0;

                                                    HEAP16[($12_1 + 10 | 0) >> 1] = (HEAPU16[($2_1 + 10 | 0) >> 1] | 0) << 3 | 0;

                                                    HEAP16[($12_1 + 12 | 0) >> 1] = (HEAPU16[($2_1 + 12 | 0) >> 1] | 0) << 3 | 0;

                                                    HEAP16[($12_1 + 14 | 0) >> 1] = (HEAPU16[($2_1 + 14 | 0) >> 1] | 0) << 3 | 0;

                                                    $12_1 = $12_1 + 16 | 0;

                                                    $2_1 = $2_1 + 16 | 0;

                                                    $10_1 = $10_1 + -4 | 0;

                                                    if ($10_1 & 65535 | 0) {

                                                        continue label$18

                                                    }

                                                    break label$18;

                                                }

                                                ;

                                            }

                                            $13_1 = 65533;

                                            if (!($14_1 & 1 | 0)) {

                                                break label$2

                                            }

                                            HEAP16[$12_1 >> 1] = (HEAPU16[$2_1 >> 1] | 0) << 3 | 0;

                                            break label$2;

                                        }

                                        $227($9_1 | 0, $2_1 | 0, ($5_1 + $4_1 | 0) << 1 | 0 | 0) | 0;

                                        $13_1 = 0;

                                    }

                                    $2_1 = $9_1 + ($4_1 << 1 | 0) | 0;

                                    $12_1 = ($9_1 + 608 | 0) + ($4_1 << 2 | 0) | 0;

                                    $78($2_1 | 0, $5_1 | 0, $4_1 | 0, $3_1 | 0, $12_1 | 0);

                                    $10_1 = ($1_1 | 0) == (7 | 0);

                                    label$19 : {

                                        $11_1 = $3_1 << 2 | 0;

                                        if (($11_1 | 0) == (($3_1 << 18 | 0) >> 16 | 0 | 0)) {

                                            break label$19

                                        }

                                        HEAP32[$8_1 >> 2] = 1;

                                        $11_1 = ($3_1 | 0) > (0 | 0) ? 32767 : -32768;

                                    }

                                    $13_1 = $13_1 << 16 >> 16;

                                    $1_1 = $137($0_1 | 0, $12_1 | 0, $2_1 | 0, $13_1 | 0, $10_1 | 0, $5_1 | 0, $4_1 | 0, $11_1 << 16 >> 16 | 0, $9_1 + 1198 | 0 | 0, $7_1 | 0, $8_1 | 0) | 0;

                                    $282 = ($11_1 + -1 | 0) << 16 >> 16;

                                    $11_1 = $3_1 << 1 | 0;

                                    $15_1 = $137($0_1 | 0, $12_1 | 0, $2_1 | 0, $13_1 | 0, $10_1 | 0, $5_1 | 0, $282 | 0, $11_1 << 16 >> 16 | 0, $9_1 + 1196 | 0 | 0, $7_1 | 0, $8_1 | 0) | 0;

                                    $10_1 = $137($0_1 | 0, $12_1 | 0, $2_1 | 0, $13_1 | 0, $10_1 | 0, $5_1 | 0, ($11_1 + -1 | 0) << 16 >> 16 | 0, $3_1 | 0, $9_1 + 1194 | 0 | 0, $7_1 | 0, $8_1 | 0) | 0;

                                    label$20 : {

                                        if (($6_1 | 0) != (1 | 0)) {

                                            break label$20

                                        }

                                        if (!$7_1) {

                                            break label$20

                                        }

                                        $117($12_1 | 0, $2_1 | 0, $5_1 | 0, $4_1 | 0, $3_1 | 0, $9_1 + 1192 | 0 | 0, $8_1 | 0) | 0;

                                        $176($0_1 | 0, HEAP16[($9_1 + 1192 | 0) >> 1] | 0 | 0);

                                    }

                                    $2_1 = HEAP16[($9_1 + 1198 | 0) >> 1] | 0;

                                    $12_1 = HEAP16[($9_1 + 1196 | 0) >> 1] | 0;

                                    $11_1 = HEAP16[($9_1 + 1194 | 0) >> 1] | 0;

                                    global$0 = $9_1 + 1200 | 0;

                                    $13_1 = (Math_imul($2_1, 55706) >> 16 | 0 | 0) < ($12_1 | 0);

                                    return ((Math_imul($13_1 ? $12_1 : $2_1, 55706) >> 16 | 0 | 0) < ($11_1 | 0) ? $10_1 : $13_1 ? $15_1 : $1_1) | 0;

                                }



                                function $139($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, $1_1 = 0, $3_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(6 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP16[($2_1 + 4 | 0) >> 1] = 0;

                                        $3_1 = 40;

                                        HEAP16[$2_1 >> 1] = $3_1;

                                        HEAP16[($2_1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $140($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[($0_1 + 4 | 0) >> 1] = 0;

                                    $1_1 = 40;

                                    HEAP16[$0_1 >> 1] = $1_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $141($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $142($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    var $12_1 = 0, $16_1 = 0, $14_1 = 0, $17_1 = 0, $18_1 = 0, $11_1 = 0, $15_1 = 0,

                                        $13_1 = 0, $20_1 = 0, i64toi32_i32$0 = 0, $21_1 = 0, $19_1 = 0,

                                        i64toi32_i32$1 = 0, $27_1 = 0, $138_1 = 0, $182_1 = 0, $450 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $11_1 = global$0 - 1200 | 0;

                                    global$0 = $11_1;

                                    $12_1 = 0;

                                    $13_1 = $11_1 + ($4_1 << 1 | 0) | 0;

                                    label$1 : {

                                        $14_1 = (0 - $4_1 | 0) << 16 >> 16;

                                        $15_1 = ($14_1 | 0) >= ($5_1 | 0);

                                        if ($15_1) {

                                            break label$1

                                        }

                                        $16_1 = $14_1;

                                        label$2 : while (1) {

                                            $17_1 = $12_1;

                                            $12_1 = 2147483647;

                                            label$3 : {

                                                label$4 : {

                                                    $18_1 = HEAP16[($2_1 + ($16_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $18_1 = Math_imul($18_1, $18_1);

                                                    if (($18_1 | 0) == (1073741824 | 0)) {

                                                        break label$4

                                                    }

                                                    $12_1 = ($18_1 << 1 | 0) + $17_1 | 0;

                                                    if (($18_1 ^ $17_1 | 0 | 0) < (1 | 0)) {

                                                        break label$3

                                                    }

                                                    if (($12_1 ^ $17_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$3

                                                    }

                                                    $12_1 = ($17_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                HEAP32[$10_1 >> 2] = 1;

                                            }

                                            $16_1 = $16_1 + 1 | 0;

                                            if (($16_1 | 0) != ($5_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                        $16_1 = $12_1 + -2147483647 | 0;

                                        label$5 : {

                                            label$6 : {

                                                if (($12_1 | 0) > (-1 | 0)) {

                                                    break label$6

                                                }

                                                if (($16_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$6

                                                }

                                                HEAP32[$10_1 >> 2] = 1;

                                                break label$5;

                                            }

                                            if ($16_1) {

                                                break label$5

                                            }

                                            if ($15_1) {

                                                break label$1

                                            }

                                            label$7 : while (1) {

                                                $12_1 = $14_1 << 1 | 0;

                                                (wasm2js_i32$0 = $13_1 + $12_1 | 0, wasm2js_i32$1 = $221(HEAP16[($2_1 + $12_1 | 0) >> 1] | 0 | 0, 3 | 0, $10_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                                $14_1 = $14_1 + 1 | 0;

                                                if (($14_1 | 0) != ($5_1 | 0)) {

                                                    continue label$7

                                                }

                                                break label$1;

                                            }

                                            ;

                                        }

                                        label$8 : {

                                            label$9 : {

                                                if (($12_1 | 0) > (-1 | 0)) {

                                                    break label$9

                                                }

                                                if ((($12_1 + -1048576 | 0) ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$9

                                                }

                                                HEAP32[$10_1 >> 2] = 1;

                                                break label$8;

                                            }

                                            if (($12_1 | 0) < (1048576 | 0)) {

                                                break label$8

                                            }

                                            if ($15_1) {

                                                break label$1

                                            }

                                            $227($11_1 + (($4_1 + $14_1 | 0) << 1 | 0) | 0 | 0, $2_1 + ($14_1 << 1 | 0) | 0 | 0, (((($5_1 + $4_1 | 0) + -1 | 0) & 65535 | 0) << 1 | 0) + 2 | 0 | 0) | 0;

                                            break label$1;

                                        }

                                        if ($15_1) {

                                            break label$1

                                        }

                                        $12_1 = $14_1 ^ -1 | 0;

                                        label$10 : {

                                            if (!(($5_1 - $14_1 | 0) & 1 | 0)) {

                                                break label$10

                                            }

                                            $16_1 = $14_1 << 1 | 0;

                                            $138_1 = $13_1 + $16_1 | 0;

                                            $16_1 = HEAP16[($2_1 + $16_1 | 0) >> 1] | 0;

                                            HEAP16[$138_1 >> 1] = (($16_1 + 4096 | 0) & 65535 | 0) >>> 0 < 8192 >>> 0 ? $16_1 << 3 | 0 : ($16_1 >>> 15 | 0) ^ 32767 | 0;

                                            $14_1 = $14_1 + 1 | 0;

                                        }

                                        if (($12_1 | 0) == (0 - $5_1 | 0 | 0)) {

                                            break label$1

                                        }

                                        label$11 : while (1) {

                                            $12_1 = $14_1 << 1 | 0;

                                            $16_1 = HEAP16[($2_1 + $12_1 | 0) >> 1] | 0;

                                            HEAP16[($13_1 + $12_1 | 0) >> 1] = (($16_1 + 4096 | 0) & 65535 | 0) >>> 0 < 8192 >>> 0 ? $16_1 << 3 | 0 : ($16_1 >>> 15 | 0) ^ 32767 | 0;

                                            $12_1 = $12_1 + 2 | 0;

                                            $182_1 = $13_1 + $12_1 | 0;

                                            $12_1 = HEAP16[($2_1 + $12_1 | 0) >> 1] | 0;

                                            HEAP16[$182_1 >> 1] = (($12_1 + 4096 | 0) & 65535 | 0) >>> 0 < 8192 >>> 0 ? $12_1 << 3 | 0 : ($12_1 >>> 15 | 0) ^ 32767 | 0;

                                            $14_1 = $14_1 + 2 | 0;

                                            if (($14_1 | 0) != ($5_1 | 0)) {

                                                continue label$11

                                            }

                                            break label$11;

                                        }

                                        ;

                                    }

                                    $19_1 = ($11_1 + 608 | 0) + ($4_1 << 2 | 0) | 0;

                                    $78($13_1 | 0, $5_1 | 0, $4_1 | 0, $3_1 | 0, $19_1 | 0);

                                    $20_1 = $4_1;

                                    label$12 : {

                                        if (($4_1 | 0) < ($3_1 | 0)) {

                                            break label$12

                                        }

                                        $12_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                        $16_1 = HEAP16[$0_1 >> 1] | 0;

                                        $17_1 = global$15;

                                        $2_1 = $17_1 + 500 | 0;

                                        $15_1 = ((($4_1 - $16_1 | 0) << 1 | 0) + $17_1 | 0) + 246 | 0;

                                        $17_1 = -2147483648;

                                        $21_1 = ($12_1 | 0) < (1 | 0);

                                        $18_1 = $4_1;

                                        $20_1 = $18_1;

                                        label$13 : while (1) {

                                            $126(HEAP32[($19_1 - ($18_1 << 16 >> 16 << 2 | 0) | 0) >> 2] | 0 | 0, $11_1 + 1198 | 0 | 0, $11_1 + 1196 | 0 | 0, $10_1 | 0);

                                            $12_1 = HEAP16[($11_1 + 1196 | 0) >> 1] | 0;

                                            label$14 : {

                                                label$15 : {

                                                    $14_1 = HEAP16[$2_1 >> 1] | 0;

                                                    $16_1 = Math_imul($14_1, HEAP16[($11_1 + 1198 | 0) >> 1] | 0);

                                                    if (($16_1 | 0) == (1073741824 | 0)) {

                                                        break label$15

                                                    }

                                                    $16_1 = $16_1 << 1 | 0;

                                                    break label$14;

                                                }

                                                HEAP32[$10_1 >> 2] = 1;

                                                $16_1 = 2147483647;

                                            }

                                            $14_1 = Math_imul($14_1, $12_1) >> 15 | 0;

                                            $12_1 = $16_1 + ($14_1 << 1 | 0) | 0;

                                            label$16 : {

                                                if (($16_1 ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                    break label$16

                                                }

                                                if (($12_1 ^ $16_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$16

                                                }

                                                HEAP32[$10_1 >> 2] = 1;

                                                $12_1 = ($16_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$17 : {

                                                if ($21_1) {

                                                    break label$17

                                                }

                                                $126($12_1 | 0, $11_1 + 1198 | 0 | 0, $11_1 + 1196 | 0 | 0, $10_1 | 0);

                                                $12_1 = HEAP16[($11_1 + 1196 | 0) >> 1] | 0;

                                                label$18 : {

                                                    label$19 : {

                                                        $14_1 = HEAP16[$15_1 >> 1] | 0;

                                                        $16_1 = Math_imul($14_1, HEAP16[($11_1 + 1198 | 0) >> 1] | 0);

                                                        if (($16_1 | 0) == (1073741824 | 0)) {

                                                            break label$19

                                                        }

                                                        $16_1 = $16_1 << 1 | 0;

                                                        break label$18;

                                                    }

                                                    HEAP32[$10_1 >> 2] = 1;

                                                    $16_1 = 2147483647;

                                                }

                                                $14_1 = Math_imul($14_1, $12_1) >> 15 | 0;

                                                $12_1 = $16_1 + ($14_1 << 1 | 0) | 0;

                                                label$20 : {

                                                    if (($16_1 ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                        break label$20

                                                    }

                                                    if (($12_1 ^ $16_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$20

                                                    }

                                                    HEAP32[$10_1 >> 2] = 1;

                                                    $12_1 = ($16_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                $15_1 = $15_1 + -2 | 0;

                                            }

                                            $2_1 = $2_1 + -2 | 0;

                                            $20_1 = ($12_1 | 0) < ($17_1 | 0) ? $20_1 : $18_1;

                                            $17_1 = ($12_1 | 0) > ($17_1 | 0) ? $12_1 : $17_1;

                                            $18_1 = ($18_1 + -1 | 0) << 16 >> 16;

                                            if (($18_1 | 0) >= ($3_1 | 0)) {

                                                continue label$13

                                            }

                                            break label$13;

                                        }

                                        ;

                                    }

                                    label$21 : {

                                        label$22 : {

                                            if (($5_1 | 0) >= (1 | 0)) {

                                                break label$22

                                            }

                                            $12_1 = 0;

                                            $16_1 = 0;

                                            break label$21;

                                        }

                                        $17_1 = $13_1 - ($20_1 << 16 >> 16 << 1 | 0) | 0;

                                        $16_1 = 0;

                                        $12_1 = 0;

                                        $18_1 = $13_1;

                                        $21_1 = 0;

                                        label$23 : while (1) {

                                            $14_1 = $12_1;

                                            $15_1 = $16_1;

                                            $12_1 = 2147483647;

                                            label$24 : {

                                                label$25 : {

                                                    $2_1 = HEAP16[$17_1 >> 1] | 0;

                                                    $16_1 = Math_imul($2_1, HEAP16[$18_1 >> 1] | 0);

                                                    if (($16_1 | 0) == (1073741824 | 0)) {

                                                        break label$25

                                                    }

                                                    $12_1 = ($16_1 << 1 | 0) + $14_1 | 0;

                                                    if (($16_1 ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                        break label$24

                                                    }

                                                    if (($12_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$24

                                                    }

                                                    $12_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                HEAP32[$10_1 >> 2] = 1;

                                            }

                                            $16_1 = 2147483647;

                                            label$26 : {

                                                label$27 : {

                                                    $2_1 = Math_imul($2_1, $2_1);

                                                    if (($2_1 | 0) == (1073741824 | 0)) {

                                                        break label$27

                                                    }

                                                    $16_1 = ($2_1 << 1 | 0) + $15_1 | 0;

                                                    if (($2_1 ^ $15_1 | 0 | 0) < (1 | 0)) {

                                                        break label$26

                                                    }

                                                    if (($16_1 ^ $15_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$26

                                                    }

                                                    $16_1 = ($15_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                HEAP32[$10_1 >> 2] = 1;

                                            }

                                            $17_1 = $17_1 + 2 | 0;

                                            $18_1 = $18_1 + 2 | 0;

                                            $21_1 = ($21_1 + 1 | 0) << 16 >> 16;

                                            if (($21_1 | 0) < ($5_1 | 0)) {

                                                continue label$23

                                            }

                                            break label$23;

                                        }

                                        ;

                                    }

                                    $17_1 = $8_1 << 1 | 0;

                                    label$28 : {

                                        if (!$9_1) {

                                            break label$28

                                        }

                                        $178($1_1 | 0, 0 | 0, $10_1 | 0);

                                        $177($1_1 | 0, $12_1 | 0, $16_1 | 0, $10_1 | 0);

                                    }

                                    $17_1 = $7_1 + $17_1 | 0;

                                    $18_1 = Math_imul($220($16_1 | 0, $10_1 | 0) | 0, 26214);

                                    $16_1 = $12_1 - $18_1 | 0;

                                    label$29 : {

                                        if (($18_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                            break label$29

                                        }

                                        if (($16_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                            break label$29

                                        }

                                        HEAP32[$10_1 >> 2] = 1;

                                        $16_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $12_1 = $220($16_1 | 0, $10_1 | 0) | 0;

                                    HEAP16[$17_1 >> 1] = $12_1;

                                    label$30 : {

                                        label$31 : {

                                            if (($12_1 | 0) < (1 | 0)) {

                                                break label$31

                                            }

                                            i64toi32_i32$0 = HEAPU16[$6_1 >> 1] | 0 | ((HEAPU16[($6_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                            i64toi32_i32$1 = HEAPU16[($6_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($6_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                            HEAP16[$6_1 >> 1] = $20_1;

                                            $450 = i64toi32_i32$0;

                                            i64toi32_i32$0 = $6_1 + 2 | 0;

                                            $27_1 = $450;

                                            HEAP16[i64toi32_i32$0 >> 1] = $27_1;

                                            HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $27_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                            HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                            $12_1 = 32767;

                                            $16_1 = $191($6_1 | 0, 5 | 0) | 0;

                                            HEAP16[($0_1 + 2 | 0) >> 1] = 32767;

                                            HEAP16[$0_1 >> 1] = $16_1;

                                            break label$30;

                                        }

                                        HEAP16[$0_1 >> 1] = $20_1;

                                        $12_1 = Math_imul(HEAP16[($0_1 + 2 | 0) >> 1] | 0, 29491) >>> 15 | 0;

                                        HEAP16[($0_1 + 2 | 0) >> 1] = $12_1;

                                    }

                                    (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = ((($224($12_1 << 16 >> 16 | 0, 9830 | 0, $10_1 | 0) | 0) ^ -1 | 0) & 32768 | 0) >>> 15 | 0), HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;

                                    label$32 : {

                                        if (!$9_1) {

                                            break label$32

                                        }

                                        if ($224($8_1 | 0, 1 | 0, $10_1 | 0) | 0) {

                                            break label$32

                                        }

                                        $117($19_1 | 0, $13_1 | 0, $5_1 | 0, $4_1 | 0, $3_1 | 0, $11_1 + 1198 | 0 | 0, $10_1 | 0) | 0;

                                        $176($1_1 | 0, HEAP16[($11_1 + 1198 | 0) >> 1] | 0 | 0);

                                    }

                                    global$0 = $11_1 + 1200 | 0;

                                    return $20_1 << 16 >> 16 | 0;

                                }



                                function $143($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    var $10_1 = 0, $37_1 = 0, $63_1 = 0;

                                    $10_1 = global$0 - 64 | 0;

                                    global$0 = $10_1;

                                    $4_1 = $4_1 + (($5_1 | 0) > (0 | 0) ? 44 : 0) | 0;

                                    $2_1 = $0_1 >>> 0 < 6 >>> 0 ? $1_1 : $2_1;

                                    $226($4_1 | 0, $2_1 | 0, $10_1 + 32 | 0 | 0);

                                    $226($4_1 | 0, $3_1 | 0, $10_1 | 0);

                                    $0_1 = $5_1 << 1 | 0;

                                    $37_1 = $6_1 + $0_1 | 0;

                                    $0_1 = $8_1 + $0_1 | 0;

                                    $219($10_1 + 32 | 0 | 0, $37_1 | 0, $0_1 | 0, 40 | 0);

                                    $225($10_1 | 0, $0_1 | 0, $0_1 | 0, 40 | 0, $7_1 | 0, 1 | 0);

                                    $4_1 = $4_1 + 22 | 0;

                                    $226($4_1 | 0, $2_1 | 0, $10_1 + 32 | 0 | 0);

                                    $226($4_1 | 0, $3_1 | 0, $10_1 | 0);

                                    $5_1 = ($5_1 + 40 | 0) << 16 >> 16 << 1 | 0;

                                    $63_1 = $6_1 + $5_1 | 0;

                                    $5_1 = $8_1 + $5_1 | 0;

                                    $219($10_1 + 32 | 0 | 0, $63_1 | 0, $5_1 | 0, 40 | 0);

                                    $225($10_1 | 0, $5_1 | 0, $5_1 | 0, 40 | 0, $7_1 | 0, 1 | 0);

                                    global$0 = $10_1 + 64 | 0;

                                }



                                function $144($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, $1_1 = 0, $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(12 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        $3_1 = 0;

                                        HEAP16[$2_1 >> 1] = $3_1;

                                        HEAP16[($2_1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                        $4_1 = 0;

                                        HEAP16[($2_1 + 4 | 0) >> 1] = $4_1;

                                        HEAP16[($2_1 + 6 | 0) >> 1] = $4_1 >>> 16 | 0;

                                        $5_1 = $2_1 + 8 | 0;

                                        $6_1 = 0;

                                        HEAP16[$5_1 >> 1] = $6_1;

                                        HEAP16[($5_1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $145($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0, $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    $1_1 = 0;

                                    HEAP16[$0_1 >> 1] = $1_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $1_1 >>> 16 | 0;

                                    $2_1 = 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $2_1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = $2_1 >>> 16 | 0;

                                    $3_1 = $0_1 + 8 | 0;

                                    $4_1 = 0;

                                    HEAP16[$3_1 >> 1] = $4_1;

                                    HEAP16[($3_1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $146($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $147($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $7_1 = 0, $3_1 = 0, $5_1 = 0, $6_1 = 0, $4_1 = 0, $8_1 = 0, $9_1 = 0, $62_1 = 0;

                                    $3_1 = HEAPU16[($0_1 + 8 | 0) >> 1] | 0;

                                    $4_1 = HEAPU16[($0_1 + 10 | 0) >> 1] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if ($2_1) {

                                                break label$2

                                            }

                                            $5_1 = $4_1;

                                            break label$1;

                                        }

                                        $6_1 = HEAPU16[($0_1 + 6 | 0) >> 1] | 0;

                                        $7_1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                        label$3 : while (1) {

                                            $8_1 = HEAP16[$0_1 >> 1] | 0;

                                            HEAP16[$0_1 >> 1] = $7_1;

                                            $9_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                            HEAP16[($0_1 + 2 | 0) >> 1] = $6_1;

                                            $5_1 = $3_1;

                                            $3_1 = HEAP16[$1_1 >> 1] | 0;

                                            $7_1 = ((((Math_imul($7_1 << 16 >> 16, 7807) + Math_imul($5_1 << 16 >> 16, -3798) | 0) + (Math_imul($6_1 << 16 >> 16, 7807) >> 15 | 0) | 0) + Math_imul($8_1, -3733) | 0) + (Math_imul($9_1, -3733) >> 15 | 0) | 0) + Math_imul($3_1 + ($4_1 << 16 >> 16) | 0, 1899) | 0;

                                            HEAP16[$1_1 >> 1] = ($7_1 + 2048 | 0) >>> 12 | 0;

                                            $62_1 = $7_1 << 3 | 0;

                                            $7_1 = $7_1 >>> 12 | 0;

                                            $6_1 = $62_1 - ($7_1 << 15 | 0) | 0;

                                            HEAP16[($0_1 + 6 | 0) >> 1] = $6_1;

                                            HEAP16[($0_1 + 4 | 0) >> 1] = $7_1;

                                            $1_1 = $1_1 + 2 | 0;

                                            $4_1 = $5_1;

                                            $2_1 = $2_1 + -1 | 0;

                                            if ($2_1 & 65535 | 0) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                    }

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $3_1;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $5_1;

                                }



                                function $148($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $6_1 = 0, $8_1 = 0, $4_1 = 0, $5_1 = 0, $7_1 = 0, $9_1 = 0;

                                    label$1 : {

                                        $4_1 = HEAPU16[((HEAP32[($3_1 + 88 | 0) >> 2] | 0) + ($0_1 << 1 | 0) | 0) >> 1] | 0;

                                        if (!$4_1) {

                                            break label$1

                                        }

                                        $5_1 = HEAP32[((HEAP32[($3_1 + 92 | 0) >> 2] | 0) + ($0_1 << 2 | 0) | 0) >> 2] | 0;

                                        label$2 : while (1) {

                                            label$3 : {

                                                label$4 : {

                                                    $6_1 = HEAPU16[$5_1 >> 1] | 0;

                                                    if ($6_1) {

                                                        break label$4

                                                    }

                                                    $0_1 = 0;

                                                    break label$3;

                                                }

                                                $0_1 = (($6_1 << 16 >> 16 << 1 | 0) + $2_1 | 0) + -2 | 0;

                                                $3_1 = HEAPU16[$1_1 >> 1] | 0;

                                                $7_1 = 0;

                                                $8_1 = $6_1;

                                                label$5 : {

                                                    $9_1 = $6_1 & 3 | 0;

                                                    if (!$9_1) {

                                                        break label$5

                                                    }

                                                    label$6 : while (1) {

                                                        HEAP16[$0_1 >> 1] = $3_1 & 1 | 0;

                                                        $8_1 = $8_1 + -1 | 0;

                                                        $0_1 = $0_1 + -2 | 0;

                                                        $3_1 = $3_1 << 16 >> 16 >> 1 | 0;

                                                        $7_1 = $7_1 + 1 | 0;

                                                        if (($7_1 & 65535 | 0 | 0) != ($9_1 | 0)) {

                                                            continue label$6

                                                        }

                                                        break label$6;

                                                    }

                                                    ;

                                                }

                                                label$7 : {

                                                    if ($6_1 >>> 0 < 4 >>> 0) {

                                                        break label$7

                                                    }

                                                    label$8 : while (1) {

                                                        HEAP16[$0_1 >> 1] = $3_1 & 1 | 0;

                                                        HEAP16[($0_1 + -2 | 0) >> 1] = ($3_1 >>> 1 | 0) & 1 | 0;

                                                        HEAP16[($0_1 + -4 | 0) >> 1] = ($3_1 >>> 2 | 0) & 1 | 0;

                                                        HEAP16[($0_1 + -6 | 0) >> 1] = ($3_1 >>> 3 | 0) & 1 | 0;

                                                        $0_1 = $0_1 + -8 | 0;

                                                        $3_1 = $3_1 << 16 >> 16 >> 4 | 0;

                                                        $8_1 = $8_1 + -4 | 0;

                                                        if ($8_1 & 65535 | 0) {

                                                            continue label$8

                                                        }

                                                        break label$8;

                                                    }

                                                    ;

                                                }

                                                $0_1 = HEAPU16[$5_1 >> 1] | 0;

                                            }

                                            $1_1 = $1_1 + 2 | 0;

                                            $5_1 = $5_1 + 2 | 0;

                                            $2_1 = $2_1 + ($0_1 << 16 >> 16 << 1 | 0) | 0;

                                            $4_1 = $4_1 + -1 | 0;

                                            if ($4_1 & 65535 | 0) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $149($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $6_1 = 0, $7_1 = 0, $16_1 = 0, $49_1 = 0;

                                    $6_1 = global$0 - 16 | 0;

                                    global$0 = $6_1;

                                    label$1 : {

                                        label$2 : {

                                            if (($4_1 | 0) >= (1 | 0)) {

                                                break label$2

                                            }

                                            $4_1 = 32768;

                                            $3_1 = 60093;

                                            break label$1;

                                        }

                                        $4_1 = $4_1 & 65535 | 0;

                                        $16_1 = $4_1;

                                        $2_1 = ($211(14 | 0, $2_1 | 0, $5_1 | 0) | 0) << 16 >> 16;

                                        $4_1 = ($2_1 | 0) <= ($4_1 | 0);

                                        $2_1 = $185(($16_1 >>> $4_1 | 0) << 16 >> 16 | 0, $2_1 | 0) | 0;

                                        HEAP16[($6_1 + 12 | 0) >> 1] = $2_1;

                                        $197($2_1 | 0, $6_1 + 14 | 0 | 0, $6_1 + 12 | 0 | 0, $5_1 | 0);

                                        HEAP16[($6_1 + 14 | 0) >> 1] = ((($1_1 ^ -1 | 0) + $3_1 | 0) + $4_1 | 0) + (HEAPU16[($6_1 + 14 | 0) >> 1] | 0) | 0;

                                        $4_1 = 18284;

                                        $3_1 = 3037;

                                        $49_1 = $222(HEAP16[($6_1 + 12 | 0) >> 1] | 0 | 0, 5 | 0, $5_1 | 0) | 0;

                                        $2_1 = HEAP16[($6_1 + 14 | 0) >> 1] | 0;

                                        $1_1 = ($49_1 + ($2_1 << 10 | 0) | 0) << 16 >> 16;

                                        if (($1_1 | 0) > (18284 | 0)) {

                                            break label$1

                                        }

                                        $7_1 = Math_imul(HEAP16[($6_1 + 12 | 0) >> 1] | 0, 24660) >> 15 | 0;

                                        $3_1 = Math_imul($2_1, 49320);

                                        $4_1 = ($7_1 << 1 | 0) + $3_1 | 0;

                                        label$3 : {

                                            if (($7_1 ^ $3_1 | 0 | 0) < (1 | 0)) {

                                                break label$3

                                            }

                                            if (($4_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                break label$3

                                            }

                                            HEAP32[$5_1 >> 2] = 1;

                                            $4_1 = ($2_1 >> 15 | 0) ^ 2147483647 | 0;

                                        }

                                        $3_1 = $220((($4_1 + 262144 | 0) >>> 0 < 524288 >>> 0 ? $4_1 << 13 | 0 : ($4_1 >> 31 | 0) ^ 2147483647 | 0) | 0, $5_1 | 0) | 0;

                                        $4_1 = $1_1;

                                    }

                                    $188($0_1 | 0, $4_1 << 16 >> 16 | 0, $3_1 << 16 >> 16 | 0);

                                    global$0 = $6_1 + 16 | 0;

                                }



                                function $150($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1, $12_1, $13_1, $14_1, $15_1, $16_1, $17_1, $18_1, $19_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    $12_1 = $12_1 | 0;

                                    $13_1 = $13_1 | 0;

                                    $14_1 = $14_1 | 0;

                                    $15_1 = $15_1 | 0;

                                    $16_1 = $16_1 | 0;

                                    $17_1 = $17_1 | 0;

                                    $18_1 = $18_1 | 0;

                                    $19_1 = $19_1 | 0;

                                    var $25_1 = 0, $24_1 = 0, $20_1 = 0, $23_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0,

                                        $29_1 = 0, $21_1 = 0, $38_1 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0,

                                        $35_1 = 0, $30_1 = 0, $22_1 = 0, $39_1 = 0, $40_1 = 0, $36_1 = 0, $37_1 = 0,

                                        $41_1 = 0, $42_1 = 0, $43_1 = 0, $44_1 = 0, $45_1 = 0, $46_1 = 0, $47_1 = 0,

                                        $48_1 = 0, $1009 = 0;

                                    $20_1 = global$0 - 16 | 0;

                                    global$0 = $20_1;

                                    HEAP16[($20_1 + 14 | 0) >> 1] = $1_1;

                                    HEAP16[($20_1 + 10 | 0) >> 1] = $9_1;

                                    HEAP16[($20_1 + 12 | 0) >> 1] = $8_1;

                                    $21_1 = $211(14 | 0, $2_1 | 0, $19_1 | 0) | 0;

                                    HEAP16[($20_1 + 8 | 0) >> 1] = $21_1;

                                    $22_1 = $211(14 | 0, $9_1 | 0, $19_1 | 0) | 0;

                                    $9_1 = HEAPU16[($10_1 + 6 | 0) >> 1] | 0;

                                    $2_1 = HEAPU16[($10_1 + 2 | 0) >> 1] | 0;

                                    $23_1 = HEAPU16[$10_1 >> 1] | 0;

                                    $24_1 = HEAPU16[($3_1 + 6 | 0) >> 1] | 0;

                                    $25_1 = HEAPU16[($3_1 + 2 | 0) >> 1] | 0;

                                    $26_1 = HEAPU16[$3_1 >> 1] | 0;

                                    $27_1 = $8_1 + (HEAPU16[($10_1 + 8 | 0) >> 1] | 0) | 0;

                                    $8_1 = $8_1 + -11 | 0;

                                    $10_1 = ($8_1 << 1 | 0) + (HEAPU16[($10_1 + 4 | 0) >> 1] | 0) | 0;

                                    $28_1 = $1_1 + (HEAPU16[($3_1 + 8 | 0) >> 1] | 0) | 0;

                                    $29_1 = $1_1 + -11 | 0;

                                    $3_1 = ($29_1 << 1 | 0) + (HEAPU16[($3_1 + 4 | 0) >> 1] | 0) | 0;

                                    label$1 : {

                                        label$2 : {

                                            $12_1 = ($5_1 - $12_1 | 0) << 16 >> 16;

                                            if (($12_1 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            $13_1 = $13_1 >> $12_1 | 0;

                                            break label$1;

                                        }

                                        $6_1 = $6_1 >> (0 - $12_1 | 0) | 0;

                                    }

                                    $5_1 = $9_1 + $8_1 | 0;

                                    $12_1 = $2_1 + -14 | 0;

                                    $2_1 = $23_1 + -13 | 0;

                                    $9_1 = $24_1 + $29_1 | 0;

                                    $25_1 = $25_1 + -14 | 0;

                                    $26_1 = $26_1 + -13 | 0;

                                    $23_1 = $27_1 + -10 | 0;

                                    $24_1 = $10_1 + 15 | 0;

                                    $27_1 = $28_1 + -10 | 0;

                                    $28_1 = $3_1 + 15 | 0;

                                    $10_1 = 1;

                                    label$3 : {

                                        if (($222($13_1 | 0, 1 | 0, $19_1 | 0) | 0 | 0) > ($6_1 | 0)) {

                                            break label$3

                                        }

                                        $10_1 = (($6_1 + 3 | 0) >> 2 | 0 | 0) > ($13_1 | 0) ? -1 : 0;

                                    }

                                    $3_1 = 0;

                                    $8_1 = (HEAPU16[$4_1 >> 1] | 0) << 16 | 0;

                                    label$4 : {

                                        label$5 : {

                                            $6_1 = $25_1 + $10_1 | 0;

                                            $13_1 = $6_1 << 16 >> 16;

                                            $25_1 = $28_1 + $10_1 | 0;

                                            $28_1 = $25_1 << 16 >> 16;

                                            $29_1 = $9_1 + $10_1 | 0;

                                            $9_1 = $29_1 << 16 >> 16;

                                            $27_1 = $27_1 + $10_1 | 0;

                                            $30_1 = $27_1 << 16 >> 16;

                                            $31_1 = $2_1 << 16 >> 16;

                                            $32_1 = $12_1 << 16 >> 16;

                                            $33_1 = $24_1 << 16 >> 16;

                                            $34_1 = $5_1 << 16 >> 16;

                                            $35_1 = $23_1 << 16 >> 16;

                                            $26_1 = $26_1 + $10_1 | 0;

                                            $10_1 = $26_1 << 16 >> 16;

                                            $10_1 = ($35_1 | 0) > ($10_1 | 0) ? $35_1 : $10_1;

                                            $10_1 = ($34_1 | 0) > ($10_1 | 0) ? $34_1 : $10_1;

                                            $10_1 = ($33_1 | 0) > ($10_1 | 0) ? $33_1 : $10_1;

                                            $10_1 = ($32_1 | 0) > ($10_1 | 0) ? $32_1 : $10_1;

                                            $10_1 = ($31_1 | 0) > ($10_1 | 0) ? $31_1 : $10_1;

                                            $10_1 = ($30_1 | 0) > ($10_1 | 0) ? $30_1 : $10_1;

                                            $10_1 = ($9_1 | 0) > ($10_1 | 0) ? $9_1 : $10_1;

                                            $10_1 = ($28_1 | 0) > ($10_1 | 0) ? $28_1 : $10_1;

                                            $10_1 = (($13_1 | 0) > ($10_1 | 0) ? $13_1 : $10_1) + 1 | 0;

                                            $13_1 = $10_1 - $26_1 | 0;

                                            if (($13_1 << 16 >> 16 | 0) <= (0 | 0)) {

                                                break label$5

                                            }

                                            $13_1 = $13_1 & 65535 | 0;

                                            if ($13_1 >>> 0 > 30 >>> 0) {

                                                break label$4

                                            }

                                            $3_1 = $8_1 >> $13_1 | 0;

                                            break label$4;

                                        }

                                        $13_1 = (0 - $13_1 | 0) << 16 >> 16;

                                        $3_1 = $8_1 << $13_1 | 0;

                                        if (($3_1 >> $13_1 | 0 | 0) == ($8_1 | 0)) {

                                            break label$4

                                        }

                                        $3_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $13_1 = (HEAPU16[($4_1 + 2 | 0) >> 1] | 0) << 16 | 0;

                                    $8_1 = 0;

                                    label$6 : {

                                        label$7 : {

                                            $6_1 = $10_1 - $6_1 | 0;

                                            if (($6_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$7

                                            }

                                            $6_1 = (0 - $6_1 | 0) << 16 >> 16;

                                            $8_1 = $13_1 << $6_1 | 0;

                                            if (($8_1 >> $6_1 | 0 | 0) == ($13_1 | 0)) {

                                                break label$6

                                            }

                                            $8_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$6;

                                        }

                                        $6_1 = $6_1 & 65535 | 0;

                                        if ($6_1 >>> 0 > 30 >>> 0) {

                                            break label$6

                                        }

                                        $8_1 = $13_1 >> $6_1 | 0;

                                    }

                                    $6_1 = (HEAPU16[($4_1 + 4 | 0) >> 1] | 0) << 16 | 0;

                                    $13_1 = 0;

                                    label$8 : {

                                        label$9 : {

                                            $9_1 = $10_1 - $25_1 | 0;

                                            if (($9_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$9

                                            }

                                            $9_1 = (0 - $9_1 | 0) << 16 >> 16;

                                            $13_1 = $6_1 << $9_1 | 0;

                                            if (($13_1 >> $9_1 | 0 | 0) == ($6_1 | 0)) {

                                                break label$8

                                            }

                                            $13_1 = ($6_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$8;

                                        }

                                        $9_1 = $9_1 & 65535 | 0;

                                        if ($9_1 >>> 0 > 30 >>> 0) {

                                            break label$8

                                        }

                                        $13_1 = $6_1 >> $9_1 | 0;

                                    }

                                    $9_1 = (HEAPU16[($4_1 + 6 | 0) >> 1] | 0) << 16 | 0;

                                    $6_1 = 0;

                                    label$10 : {

                                        label$11 : {

                                            $25_1 = $10_1 - $29_1 | 0;

                                            if (($25_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$11

                                            }

                                            $25_1 = (0 - $25_1 | 0) << 16 >> 16;

                                            $6_1 = $9_1 << $25_1 | 0;

                                            if (($6_1 >> $25_1 | 0 | 0) == ($9_1 | 0)) {

                                                break label$10

                                            }

                                            $6_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$10;

                                        }

                                        $25_1 = $25_1 & 65535 | 0;

                                        if ($25_1 >>> 0 > 30 >>> 0) {

                                            break label$10

                                        }

                                        $6_1 = $9_1 >> $25_1 | 0;

                                    }

                                    $9_1 = (HEAPU16[($4_1 + 8 | 0) >> 1] | 0) << 16 | 0;

                                    $4_1 = 0;

                                    label$12 : {

                                        label$13 : {

                                            $25_1 = $10_1 - $27_1 | 0;

                                            if (($25_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$13

                                            }

                                            $25_1 = (0 - $25_1 | 0) << 16 >> 16;

                                            $4_1 = $9_1 << $25_1 | 0;

                                            if (($4_1 >> $25_1 | 0 | 0) == ($9_1 | 0)) {

                                                break label$12

                                            }

                                            $4_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$12;

                                        }

                                        $25_1 = $25_1 & 65535 | 0;

                                        if ($25_1 >>> 0 > 30 >>> 0) {

                                            break label$12

                                        }

                                        $4_1 = $9_1 >> $25_1 | 0;

                                    }

                                    $25_1 = (HEAPU16[$11_1 >> 1] | 0) << 16 | 0;

                                    $9_1 = 0;

                                    label$14 : {

                                        label$15 : {

                                            $2_1 = $10_1 - $2_1 | 0;

                                            if (($2_1 << 16 >> 16 | 0) <= (0 | 0)) {

                                                break label$15

                                            }

                                            $2_1 = $2_1 & 65535 | 0;

                                            if ($2_1 >>> 0 > 30 >>> 0) {

                                                break label$14

                                            }

                                            $9_1 = $25_1 >> $2_1 | 0;

                                            break label$14;

                                        }

                                        $2_1 = (0 - $2_1 | 0) << 16 >> 16;

                                        $9_1 = $25_1 << $2_1 | 0;

                                        if (($9_1 >> $2_1 | 0 | 0) == ($25_1 | 0)) {

                                            break label$14

                                        }

                                        $9_1 = ($25_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $25_1 = (HEAPU16[($11_1 + 2 | 0) >> 1] | 0) << 16 | 0;

                                    $2_1 = 0;

                                    label$16 : {

                                        label$17 : {

                                            $12_1 = $10_1 - $12_1 | 0;

                                            if (($12_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$17

                                            }

                                            $12_1 = (0 - $12_1 | 0) << 16 >> 16;

                                            $2_1 = $25_1 << $12_1 | 0;

                                            if (($2_1 >> $12_1 | 0 | 0) == ($25_1 | 0)) {

                                                break label$16

                                            }

                                            $2_1 = ($25_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$16;

                                        }

                                        $12_1 = $12_1 & 65535 | 0;

                                        if ($12_1 >>> 0 > 30 >>> 0) {

                                            break label$16

                                        }

                                        $2_1 = $25_1 >> $12_1 | 0;

                                    }

                                    $26_1 = $3_1 >> 16 | 0;

                                    $27_1 = $8_1 >> 16 | 0;

                                    $28_1 = $13_1 >> 16 | 0;

                                    $29_1 = $6_1 >> 16 | 0;

                                    $30_1 = $4_1 >> 16 | 0;

                                    $36_1 = $9_1 >> 16 | 0;

                                    $37_1 = $2_1 >> 16 | 0;

                                    $25_1 = (HEAPU16[($11_1 + 4 | 0) >> 1] | 0) << 16 | 0;

                                    $12_1 = 0;

                                    label$18 : {

                                        label$19 : {

                                            $24_1 = $10_1 - $24_1 | 0;

                                            if (($24_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$19

                                            }

                                            $24_1 = (0 - $24_1 | 0) << 16 >> 16;

                                            $12_1 = $25_1 << $24_1 | 0;

                                            if (($12_1 >> $24_1 | 0 | 0) == ($25_1 | 0)) {

                                                break label$18

                                            }

                                            $12_1 = ($25_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$18;

                                        }

                                        $24_1 = $24_1 & 65535 | 0;

                                        if ($24_1 >>> 0 > 30 >>> 0) {

                                            break label$18

                                        }

                                        $12_1 = $25_1 >> $24_1 | 0;

                                    }

                                    $24_1 = $3_1 >>> 1 | 0;

                                    $25_1 = $26_1 << 15 | 0;

                                    $8_1 = $8_1 >>> 1 | 0;

                                    $31_1 = $27_1 << 15 | 0;

                                    $13_1 = $13_1 >>> 1 | 0;

                                    $32_1 = $28_1 << 15 | 0;

                                    $6_1 = $6_1 >>> 1 | 0;

                                    $33_1 = $29_1 << 15 | 0;

                                    $34_1 = $4_1 >>> 1 | 0;

                                    $35_1 = $30_1 << 15 | 0;

                                    $9_1 = $9_1 >>> 1 | 0;

                                    $38_1 = $36_1 << 15 | 0;

                                    $2_1 = $2_1 >>> 1 | 0;

                                    $39_1 = $37_1 << 15 | 0;

                                    $40_1 = $12_1 >>> 1 | 0;

                                    $41_1 = $12_1 >> 16 | 0;

                                    $12_1 = $41_1 << 15 | 0;

                                    $4_1 = (HEAPU16[($11_1 + 6 | 0) >> 1] | 0) << 16 | 0;

                                    $3_1 = 0;

                                    label$20 : {

                                        label$21 : {

                                            $5_1 = $10_1 - $5_1 | 0;

                                            if (($5_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$21

                                            }

                                            $5_1 = (0 - $5_1 | 0) << 16 >> 16;

                                            $3_1 = $4_1 << $5_1 | 0;

                                            if (($3_1 >> $5_1 | 0 | 0) == ($4_1 | 0)) {

                                                break label$20

                                            }

                                            $3_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$20;

                                        }

                                        $5_1 = $5_1 & 65535 | 0;

                                        if ($5_1 >>> 0 > 30 >>> 0) {

                                            break label$20

                                        }

                                        $3_1 = $4_1 >> $5_1 | 0;

                                    }

                                    $4_1 = $24_1 - $25_1 | 0;

                                    $8_1 = $8_1 - $31_1 | 0;

                                    $13_1 = $13_1 - $32_1 | 0;

                                    $6_1 = $6_1 - $33_1 | 0;

                                    $5_1 = $34_1 - $35_1 | 0;

                                    $9_1 = $9_1 - $38_1 | 0;

                                    $2_1 = $2_1 - $39_1 | 0;

                                    $12_1 = $40_1 - $12_1 | 0;

                                    $40_1 = $3_1 >> 16 | 0;

                                    $24_1 = ($3_1 >>> 1 | 0) - ($40_1 << 15 | 0) | 0;

                                    $11_1 = (HEAPU16[($11_1 + 8 | 0) >> 1] | 0) << 16 | 0;

                                    $3_1 = 0;

                                    label$22 : {

                                        label$23 : {

                                            $10_1 = $10_1 - $23_1 | 0;

                                            if (($10_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$23

                                            }

                                            $10_1 = (0 - $10_1 | 0) << 16 >> 16;

                                            $3_1 = $11_1 << $10_1 | 0;

                                            if (($3_1 >> $10_1 | 0 | 0) == ($11_1 | 0)) {

                                                break label$22

                                            }

                                            $3_1 = ($11_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$22;

                                        }

                                        $10_1 = $10_1 & 65535 | 0;

                                        if ($10_1 >>> 0 > 30 >>> 0) {

                                            break label$22

                                        }

                                        $3_1 = $11_1 >> $10_1 | 0;

                                    }

                                    $42_1 = $3_1 >> 16 | 0;

                                    $43_1 = (($3_1 >>> 1 | 0) - ($42_1 << 15 | 0) | 0) << 16 >> 16;

                                    $10_1 = global$4 + 67904 | 0;

                                    $44_1 = $24_1 << 16 >> 16;

                                    $45_1 = $12_1 << 16 >> 16;

                                    $46_1 = $2_1 << 16 >> 16;

                                    $47_1 = $9_1 << 16 >> 16;

                                    $48_1 = $22_1 << 16 >> 16;

                                    $31_1 = $5_1 << 16 >> 16;

                                    $32_1 = $6_1 << 16 >> 16;

                                    $33_1 = $13_1 << 16 >> 16;

                                    $34_1 = $8_1 << 16 >> 16;

                                    $35_1 = $4_1 << 16 >> 16;

                                    $22_1 = $21_1 << 16 >> 16;

                                    $25_1 = 2147483647;

                                    $21_1 = 0;

                                    $3_1 = 0;

                                    label$24 : while (1) {

                                        $8_1 = $3_1;

                                        $4_1 = Math_imul($22_1, HEAP16[($10_1 + 2 | 0) >> 1] | 0);

                                        label$25 : {

                                            label$26 : {

                                                $3_1 = HEAP16[$10_1 >> 1] | 0;

                                                $12_1 = $3_1 << 1 | 0;

                                                $13_1 = Math_imul($12_1, $3_1) >> 16 | 0;

                                                $11_1 = Math_imul($13_1, $26_1);

                                                if (($11_1 | 0) == (1073741824 | 0)) {

                                                    break label$26

                                                }

                                                $11_1 = $11_1 << 1 | 0;

                                                break label$25;

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $11_1 = 2147483647;

                                        }

                                        $4_1 = $4_1 << 1 | 0;

                                        $13_1 = Math_imul($13_1, $35_1) >> 15 | 0;

                                        $6_1 = $11_1 + ($13_1 << 1 | 0) | 0;

                                        label$27 : {

                                            if (($11_1 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                break label$27

                                            }

                                            if (($6_1 ^ $11_1 | 0 | 0) > (-1 | 0)) {

                                                break label$27

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $6_1 = ($11_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $13_1 = $4_1 & -65536 | 0;

                                        label$28 : {

                                            label$29 : {

                                                $11_1 = Math_imul($27_1, $3_1);

                                                if (($11_1 | 0) == (1073741824 | 0)) {

                                                    break label$29

                                                }

                                                $4_1 = $11_1 << 1 | 0;

                                                break label$28;

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $4_1 = 2147483647;

                                        }

                                        $11_1 = $13_1 >> 16 | 0;

                                        $2_1 = Math_imul($34_1, $3_1) >> 15 | 0;

                                        $9_1 = $4_1 + ($2_1 << 1 | 0) | 0;

                                        label$30 : {

                                            if (($4_1 ^ $2_1 | 0 | 0) < (1 | 0)) {

                                                break label$30

                                            }

                                            if (($9_1 ^ $4_1 | 0 | 0) > (-1 | 0)) {

                                                break label$30

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $9_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$31 : {

                                            label$32 : {

                                                $13_1 = Math_imul($13_1 >> 15 | 0, $11_1) >> 16 | 0;

                                                $4_1 = Math_imul($13_1, $28_1);

                                                if (($4_1 | 0) == (1073741824 | 0)) {

                                                    break label$32

                                                }

                                                $4_1 = $4_1 << 1 | 0;

                                                break label$31;

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $4_1 = 2147483647;

                                        }

                                        $2_1 = Math_imul($13_1, $33_1) >> 15 | 0;

                                        $13_1 = $4_1 + ($2_1 << 1 | 0) | 0;

                                        label$33 : {

                                            if (($4_1 ^ $2_1 | 0 | 0) < (1 | 0)) {

                                                break label$33

                                            }

                                            if (($13_1 ^ $4_1 | 0 | 0) > (-1 | 0)) {

                                                break label$33

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $13_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$34 : {

                                            label$35 : {

                                                $4_1 = Math_imul($11_1, $29_1);

                                                if (($4_1 | 0) == (1073741824 | 0)) {

                                                    break label$35

                                                }

                                                $4_1 = $4_1 << 1 | 0;

                                                break label$34;

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $4_1 = 2147483647;

                                        }

                                        $5_1 = Math_imul($11_1, $32_1) >> 15 | 0;

                                        $2_1 = $4_1 + ($5_1 << 1 | 0) | 0;

                                        label$36 : {

                                            if (($4_1 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                break label$36

                                            }

                                            if (($2_1 ^ $4_1 | 0 | 0) > (-1 | 0)) {

                                                break label$36

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $2_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$37 : {

                                            label$38 : {

                                                $4_1 = Math_imul($12_1, $11_1) >> 16 | 0;

                                                $11_1 = Math_imul($4_1, $30_1);

                                                if (($11_1 | 0) == (1073741824 | 0)) {

                                                    break label$38

                                                }

                                                $11_1 = $11_1 << 1 | 0;

                                                break label$37;

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $11_1 = 2147483647;

                                        }

                                        $12_1 = Math_imul($4_1, $31_1) >> 15 | 0;

                                        $4_1 = $11_1 + ($12_1 << 1 | 0) | 0;

                                        label$39 : {

                                            if (($11_1 ^ $12_1 | 0 | 0) < (1 | 0)) {

                                                break label$39

                                            }

                                            if (($4_1 ^ $11_1 | 0 | 0) > (-1 | 0)) {

                                                break label$39

                                            }

                                            HEAP32[$19_1 >> 2] = 1;

                                            $4_1 = ($11_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$40 : {

                                            if ((($3_1 - $14_1 | 0) << 16 >> 16 | 0) > (0 | 0)) {

                                                break label$40

                                            }

                                            $3_1 = HEAP16[($10_1 + 4 | 0) >> 1] | 0;

                                            if (($3_1 | 0) > ($14_1 | 0)) {

                                                break label$40

                                            }

                                            $12_1 = Math_imul($48_1, HEAP16[($10_1 + 6 | 0) >> 1] | 0);

                                            label$41 : {

                                                label$42 : {

                                                    $38_1 = $3_1 << 1 | 0;

                                                    $5_1 = Math_imul($38_1, $3_1) >> 16 | 0;

                                                    $11_1 = Math_imul($5_1, $36_1);

                                                    if (($11_1 | 0) == (1073741824 | 0)) {

                                                        break label$42

                                                    }

                                                    $11_1 = $11_1 << 1 | 0;

                                                    break label$41;

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $11_1 = 2147483647;

                                            }

                                            $12_1 = $12_1 << 1 | 0;

                                            $23_1 = Math_imul($5_1, $47_1) >> 15 | 0;

                                            $5_1 = $11_1 + ($23_1 << 1 | 0) | 0;

                                            label$43 : {

                                                if (($11_1 ^ $23_1 | 0 | 0) < (1 | 0)) {

                                                    break label$43

                                                }

                                                if (($5_1 ^ $11_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$43

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $5_1 = ($11_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $24_1 = $12_1 & -65536 | 0;

                                            label$44 : {

                                                label$45 : {

                                                    $11_1 = Math_imul($37_1, $3_1);

                                                    if (($11_1 | 0) == (1073741824 | 0)) {

                                                        break label$45

                                                    }

                                                    $12_1 = $11_1 << 1 | 0;

                                                    break label$44;

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $12_1 = 2147483647;

                                            }

                                            $11_1 = $24_1 >> 16 | 0;

                                            $3_1 = Math_imul($46_1, $3_1) >> 15 | 0;

                                            $23_1 = $12_1 + ($3_1 << 1 | 0) | 0;

                                            label$46 : {

                                                if (($12_1 ^ $3_1 | 0 | 0) < (1 | 0)) {

                                                    break label$46

                                                }

                                                if (($23_1 ^ $12_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$46

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $23_1 = ($12_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$47 : {

                                                label$48 : {

                                                    $12_1 = Math_imul($24_1 >> 15 | 0, $11_1) >> 16 | 0;

                                                    $3_1 = Math_imul($12_1, $41_1);

                                                    if (($3_1 | 0) == (1073741824 | 0)) {

                                                        break label$48

                                                    }

                                                    $3_1 = $3_1 << 1 | 0;

                                                    break label$47;

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $3_1 = 2147483647;

                                            }

                                            $24_1 = Math_imul($12_1, $45_1) >> 15 | 0;

                                            $12_1 = $3_1 + ($24_1 << 1 | 0) | 0;

                                            label$49 : {

                                                if (($3_1 ^ $24_1 | 0 | 0) < (1 | 0)) {

                                                    break label$49

                                                }

                                                if (($12_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$49

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $12_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$50 : {

                                                label$51 : {

                                                    $3_1 = Math_imul($11_1, $40_1);

                                                    if (($3_1 | 0) == (1073741824 | 0)) {

                                                        break label$51

                                                    }

                                                    $3_1 = $3_1 << 1 | 0;

                                                    break label$50;

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $3_1 = 2147483647;

                                            }

                                            $39_1 = Math_imul($11_1, $44_1) >> 15 | 0;

                                            $24_1 = $3_1 + ($39_1 << 1 | 0) | 0;

                                            label$52 : {

                                                if (($3_1 ^ $39_1 | 0 | 0) < (1 | 0)) {

                                                    break label$52

                                                }

                                                if (($24_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$52

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $24_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$53 : {

                                                label$54 : {

                                                    $11_1 = Math_imul($38_1, $11_1) >> 16 | 0;

                                                    $3_1 = Math_imul($11_1, $42_1);

                                                    if (($3_1 | 0) == (1073741824 | 0)) {

                                                        break label$54

                                                    }

                                                    $3_1 = $3_1 << 1 | 0;

                                                    break label$53;

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $3_1 = 2147483647;

                                            }

                                            $38_1 = Math_imul($11_1, $43_1) >> 15 | 0;

                                            $11_1 = $3_1 + ($38_1 << 1 | 0) | 0;

                                            label$55 : {

                                                if (($3_1 ^ $38_1 | 0 | 0) < (1 | 0)) {

                                                    break label$55

                                                }

                                                if (($11_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$55

                                                }

                                                HEAP32[$19_1 >> 2] = 1;

                                                $11_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $3_1 = (((((((($9_1 + $6_1 | 0) + $13_1 | 0) + $2_1 | 0) + $4_1 | 0) + $5_1 | 0) + $23_1 | 0) + $12_1 | 0) + $24_1 | 0) + $11_1 | 0;

                                            $1009 = $3_1;

                                            $3_1 = ($3_1 | 0) < ($25_1 | 0);

                                            $25_1 = $3_1 ? $1009 : $25_1;

                                            $21_1 = $3_1 ? $8_1 : $21_1;

                                        }

                                        $10_1 = $10_1 + 8 | 0;

                                        $3_1 = $8_1 + 1 | 0;

                                        if (($8_1 & 65535 | 0) >>> 0 < 255 >>> 0) {

                                            continue label$24

                                        }

                                        break label$24;

                                    }

                                    ;

                                    $10_1 = global$4 + 67904 | 0;

                                    $3_1 = $21_1 << 2 | 0;

                                    $151($0_1 | 0, $10_1 + ($3_1 << 16 >> 16 << 1 | 0) | 0 | 0, $22_1 | 0, $1_1 | 0, $15_1 | 0, $16_1 | 0, $19_1 | 0);

                                    $187($0_1 | 0, 0 | 0, $7_1 | 0, $20_1 + 12 | 0 | 0, $20_1 + 10 | 0 | 0, $20_1 + 14 | 0 | 0, $20_1 + 8 | 0 | 0, $19_1 | 0);

                                    $151($0_1 | 0, $10_1 + (($3_1 | 2 | 0) << 16 >> 16 << 1 | 0) | 0 | 0, ($211(14 | 0, HEAP16[($20_1 + 10 | 0) >> 1] | 0 | 0, $19_1 | 0) | 0) << 16 >> 16 | 0, HEAP16[($20_1 + 12 | 0) >> 1] | 0 | 0, $17_1 | 0, $18_1 | 0, $19_1 | 0);

                                    global$0 = $20_1 + 16 | 0;

                                    return $21_1 << 16 >> 16 | 0;

                                }



                                function $151($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0, $8_1 = 0;

                                    $7_1 = global$0 - 16 | 0;

                                    global$0 = $7_1;

                                    HEAP16[$4_1 >> 1] = HEAPU16[$1_1 >> 1] | 0;

                                    $8_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                    $4_1 = Math_imul($2_1, $8_1) << 1 | 0;

                                    label$1 : {

                                        label$2 : {

                                            $2_1 = 10 - $3_1 | 0;

                                            if (($2_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            $1_1 = 0;

                                            $3_1 = $2_1 & 65535 | 0;

                                            if ($3_1 >>> 0 > 30 >>> 0) {

                                                break label$1

                                            }

                                            $1_1 = $4_1 >> $3_1 | 0;

                                            break label$1;

                                        }

                                        $3_1 = ($3_1 + -10 | 0) << 16 >> 16;

                                        $1_1 = $4_1 << $3_1 | 0;

                                        if (($1_1 >> $3_1 | 0 | 0) == ($4_1 | 0)) {

                                            break label$1

                                        }

                                        $1_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    HEAP16[$5_1 >> 1] = $1_1 >>> 16 | 0;

                                    $197($8_1 | 0, $7_1 + 14 | 0 | 0, $7_1 + 12 | 0 | 0, $6_1 | 0);

                                    HEAP16[($7_1 + 14 | 0) >> 1] = (HEAPU16[($7_1 + 14 | 0) >> 1] | 0) + -12 | 0;

                                    $2_1 = $222(HEAP16[($7_1 + 12 | 0) >> 1] | 0 | 0, 5 | 0, $6_1 | 0) | 0;

                                    $5_1 = Math_imul(HEAP16[($7_1 + 12 | 0) >> 1] | 0, 24660) >> 15 | 0;

                                    $4_1 = HEAP16[($7_1 + 14 | 0) >> 1] | 0;

                                    $3_1 = Math_imul($4_1, 49320);

                                    $1_1 = ($5_1 << 1 | 0) + $3_1 | 0;

                                    label$3 : {

                                        if (($5_1 ^ $3_1 | 0 | 0) < (1 | 0)) {

                                            break label$3

                                        }

                                        if (($1_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                            break label$3

                                        }

                                        HEAP32[$6_1 >> 2] = 1;

                                        $1_1 = ($4_1 >> 15 | 0) ^ 2147483647 | 0;

                                    }

                                    $188($0_1 | 0, (($4_1 << 10 | 0) + $2_1 | 0) << 16 >> 16 | 0, (($1_1 << 13 | 0) + 32768 | 0) >> 16 | 0 | 0);

                                    global$0 = $7_1 + 16 | 0;

                                }



                                function $152($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1, $12_1, $13_1, $14_1, $15_1, $16_1, $17_1, $18_1, $19_1, $20_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    $12_1 = $12_1 | 0;

                                    $13_1 = $13_1 | 0;

                                    $14_1 = $14_1 | 0;

                                    $15_1 = $15_1 | 0;

                                    $16_1 = $16_1 | 0;

                                    $17_1 = $17_1 | 0;

                                    $18_1 = $18_1 | 0;

                                    $19_1 = $19_1 | 0;

                                    $20_1 = $20_1 | 0;

                                    var $21_1 = 0, $26_1 = 0, $28_1 = 0, $24_1 = 0, $35_1 = 0, $31_1 = 0, $22_1 = 0,

                                        $36_1 = 0, $37_1 = 0, $38_1 = 0, $33_1 = 0, $30_1 = 0, $32_1 = 0, $23_1 = 0,

                                        $25_1 = 0, $29_1 = 0, $27_1 = 0, $34_1 = 0, $39_1 = 0;

                                    $21_1 = global$0 - 64 | 0;

                                    global$0 = $21_1;

                                    $154(5 | 0, $13_1 | 0, $14_1 | 0, $21_1 + 6 | 0 | 0, $21_1 | 0, HEAP32[($19_1 + 72 | 0) >> 2] | 0 | 0, $20_1 | 0) | 0;

                                    $22_1 = $211(14 | 0, $9_1 | 0, $20_1 | 0) | 0;

                                    $23_1 = HEAP32[($19_1 + 68 | 0) >> 2] | 0;

                                    $9_1 = (HEAPU16[$5_1 >> 1] | 0) + -13 | 0;

                                    HEAP16[($21_1 + 24 | 0) >> 1] = $9_1;

                                    $24_1 = (HEAPU16[($5_1 + 2 | 0) >> 1] | 0) + -14 | 0;

                                    HEAP16[($21_1 + 26 | 0) >> 1] = $24_1;

                                    $13_1 = $8_1 + -10 | 0;

                                    $25_1 = $13_1 << 16 >> 16;

                                    $26_1 = ((($25_1 + 16384 | 0) >>> 0 < 32768 >>> 0 ? $13_1 << 1 | 0 : ($25_1 >> 15 | 0) ^ 32767 | 0) + (HEAPU16[($5_1 + 4 | 0) >> 1] | 0) | 0) + 15 | 0;

                                    HEAP16[($21_1 + 28 | 0) >> 1] = $26_1;

                                    $13_1 = (HEAPU16[($5_1 + 6 | 0) >> 1] | 0) + $13_1 | 0;

                                    HEAP16[($21_1 + 30 | 0) >> 1] = $13_1;

                                    $27_1 = $8_1 + -9 | 0;

                                    $5_1 = (HEAPU16[($5_1 + 8 | 0) >> 1] | 0) + $27_1 | 0;

                                    HEAP16[($21_1 + 32 | 0) >> 1] = $5_1;

                                    $5_1 = $5_1 << 16 >> 16;

                                    $13_1 = $13_1 << 16 >> 16;

                                    $26_1 = $26_1 << 16 >> 16;

                                    $24_1 = $24_1 << 16 >> 16;

                                    $9_1 = $9_1 << 16 >> 16;

                                    $9_1 = ($24_1 | 0) > ($9_1 | 0) ? $24_1 : $9_1;

                                    $9_1 = ($26_1 | 0) > ($9_1 | 0) ? $26_1 : $9_1;

                                    $13_1 = ($13_1 | 0) > ($9_1 | 0) ? $13_1 : $9_1;

                                    $28_1 = $183((($5_1 | 0) > ($13_1 | 0) ? $5_1 : $13_1) | 0, 1 | 0, $20_1 | 0) | 0;

                                    $13_1 = 0;

                                    label$1 : while (1) {

                                        $5_1 = $13_1 << 1 | 0;

                                        $24_1 = (HEAPU16[($4_1 + $5_1 | 0) >> 1] | 0) << 16 | 0;

                                        label$2 : {

                                            label$3 : {

                                                $26_1 = $28_1 - (HEAPU16[(($21_1 + 24 | 0) + $5_1 | 0) >> 1] | 0) | 0;

                                                if (($26_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                    break label$3

                                                }

                                                $9_1 = 0;

                                                $26_1 = $26_1 & 65535 | 0;

                                                if ($26_1 >>> 0 > 30 >>> 0) {

                                                    break label$2

                                                }

                                                $9_1 = $24_1 >> $26_1 | 0;

                                                break label$2;

                                            }

                                            $26_1 = (0 - $26_1 | 0) << 16 >> 16;

                                            $9_1 = $24_1 << $26_1 | 0;

                                            if (($9_1 >> $26_1 | 0 | 0) == ($24_1 | 0)) {

                                                break label$2

                                            }

                                            $9_1 = ($24_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $126($9_1 | 0, ($21_1 + 44 | 0) + $5_1 | 0 | 0, ($21_1 + 34 | 0) + $5_1 | 0 | 0, $20_1 | 0);

                                        $13_1 = $13_1 + 1 | 0;

                                        if (($13_1 | 0) != (5 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $29_1 = $22_1 << 16 >> 16;

                                    $30_1 = 0;

                                    $4_1 = 2147483647;

                                    $31_1 = 0;

                                    $22_1 = 0;

                                    label$4 : while (1) {

                                        label$5 : {

                                            label$6 : {

                                                $32_1 = HEAP16[(($21_1 + 6 | 0) + ($30_1 << 1 | 0) | 0) >> 1] | 0;

                                                $5_1 = Math_imul($32_1, $32_1);

                                                if ($5_1 >>> 0 >= 1073741824 >>> 0) {

                                                    break label$6

                                                }

                                                $5_1 = $5_1 >>> 15 | 0;

                                                break label$5;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $5_1 = 32767;

                                        }

                                        $5_1 = $5_1 << 16 >> 16;

                                        $9_1 = Math_imul($5_1, HEAP16[($21_1 + 34 | 0) >> 1] | 0) >> 15 | 0;

                                        $5_1 = Math_imul($5_1, HEAP16[($21_1 + 44 | 0) >> 1] | 0);

                                        $13_1 = ($9_1 + $5_1 | 0) << 1 | 0;

                                        label$7 : {

                                            $5_1 = $5_1 << 1 | 0;

                                            if (($9_1 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                break label$7

                                            }

                                            if (($13_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                break label$7

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $5_1 = 2147483647;

                                        $9_1 = HEAP16[($21_1 + 36 | 0) >> 1] | 0;

                                        label$8 : {

                                            label$9 : {

                                                $24_1 = Math_imul(HEAP16[($21_1 + 46 | 0) >> 1] | 0, $32_1);

                                                if (($24_1 | 0) == (1073741824 | 0)) {

                                                    break label$9

                                                }

                                                $5_1 = ($24_1 << 1 | 0) + $13_1 | 0;

                                                if (($24_1 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                    break label$8

                                                }

                                                if (($5_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$8

                                                }

                                                $5_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                        }

                                        label$10 : {

                                            label$11 : {

                                                $13_1 = Math_imul($9_1, $32_1);

                                                if (($13_1 | 0) >= (1073741824 | 0)) {

                                                    break label$11

                                                }

                                                $13_1 = $13_1 >> 15 | 0;

                                                break label$10;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $13_1 = 32767;

                                        }

                                        $33_1 = (($13_1 << 16 | 0) >> 15 | 0) + $5_1 | 0;

                                        label$12 : {

                                            if (($13_1 << 16 >> 16 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                break label$12

                                            }

                                            if (($33_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                break label$12

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $33_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $34_1 = ($33_1 >> 31 | 0) ^ 2147483647 | 0;

                                        $5_1 = 0;

                                        $26_1 = $23_1;

                                        label$13 : while (1) {

                                            $24_1 = $5_1;

                                            $5_1 = Math_imul($29_1, HEAP16[$26_1 >> 1] | 0);

                                            $9_1 = ($5_1 | 0) > (1073741823 | 0);

                                            $13_1 = $9_1 ? 32767 : ($5_1 << 1 | 0) >> 16 | 0;

                                            $5_1 = Math_imul($13_1, $13_1);

                                            $28_1 = ($5_1 | 0) == (1073741824 | 0) ? 2147483647 : $5_1 << 1 | 0;

                                            label$14 : {

                                                label$15 : {

                                                    if ($9_1) {

                                                        break label$15

                                                    }

                                                    if (($5_1 | 0) != (1073741824 | 0)) {

                                                        break label$14

                                                    }

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                            }

                                            $126($28_1 | 0, $21_1 + 16 | 0 | 0, $21_1 + 62 | 0 | 0, $20_1 | 0);

                                            label$16 : {

                                                label$17 : {

                                                    $5_1 = Math_imul($13_1, $32_1);

                                                    if (($5_1 | 0) == (1073741824 | 0)) {

                                                        break label$17

                                                    }

                                                    $5_1 = $5_1 << 1 | 0;

                                                    break label$16;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $5_1 = 2147483647;

                                            }

                                            $126($5_1 | 0, $21_1 + 60 | 0 | 0, $21_1 + 58 | 0 | 0, $20_1 | 0);

                                            $5_1 = 2147483647;

                                            $28_1 = HEAP16[($21_1 + 62 | 0) >> 1] | 0;

                                            $35_1 = HEAP16[($21_1 + 38 | 0) >> 1] | 0;

                                            label$18 : {

                                                label$19 : {

                                                    $36_1 = HEAP16[($21_1 + 16 | 0) >> 1] | 0;

                                                    $37_1 = HEAP16[($21_1 + 48 | 0) >> 1] | 0;

                                                    $38_1 = Math_imul($36_1, $37_1);

                                                    if (($38_1 | 0) == (1073741824 | 0)) {

                                                        break label$19

                                                    }

                                                    $9_1 = ($38_1 << 1 | 0) + $33_1 | 0;

                                                    if (($38_1 ^ $33_1 | 0 | 0) < (1 | 0)) {

                                                        break label$18

                                                    }

                                                    $5_1 = $34_1;

                                                    if (($9_1 ^ $33_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$18

                                                    }

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $9_1 = $5_1;

                                            }

                                            label$20 : {

                                                label$21 : {

                                                    $5_1 = Math_imul($28_1, $37_1);

                                                    if (($5_1 | 0) >= (1073741824 | 0)) {

                                                        break label$21

                                                    }

                                                    $28_1 = $5_1 >> 15 | 0;

                                                    break label$20;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $28_1 = 32767;

                                            }

                                            $5_1 = (($28_1 << 16 | 0) >> 15 | 0) + $9_1 | 0;

                                            label$22 : {

                                                if (($28_1 << 16 >> 16 ^ $9_1 | 0 | 0) < (1 | 0)) {

                                                    break label$22

                                                }

                                                if (($5_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$22

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $5_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$23 : {

                                                label$24 : {

                                                    $9_1 = Math_imul($36_1, $35_1);

                                                    if (($9_1 | 0) >= (1073741824 | 0)) {

                                                        break label$24

                                                    }

                                                    $28_1 = $9_1 >> 15 | 0;

                                                    break label$23;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $28_1 = 32767;

                                            }

                                            $9_1 = (($28_1 << 16 | 0) >> 15 | 0) + $5_1 | 0;

                                            label$25 : {

                                                if (($28_1 << 16 >> 16 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                    break label$25

                                                }

                                                if (($9_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$25

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $9_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $5_1 = 2147483647;

                                            $28_1 = HEAP16[($21_1 + 40 | 0) >> 1] | 0;

                                            label$26 : {

                                                label$27 : {

                                                    $35_1 = Math_imul($13_1, HEAP16[($21_1 + 50 | 0) >> 1] | 0);

                                                    if (($35_1 | 0) == (1073741824 | 0)) {

                                                        break label$27

                                                    }

                                                    $5_1 = ($35_1 << 1 | 0) + $9_1 | 0;

                                                    if (($35_1 ^ $9_1 | 0 | 0) < (1 | 0)) {

                                                        break label$26

                                                    }

                                                    if (($5_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$26

                                                    }

                                                    $5_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                            }

                                            label$28 : {

                                                label$29 : {

                                                    $13_1 = Math_imul($13_1, $28_1);

                                                    if (($13_1 | 0) >= (1073741824 | 0)) {

                                                        break label$29

                                                    }

                                                    $13_1 = $13_1 >> 15 | 0;

                                                    break label$28;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $13_1 = 32767;

                                            }

                                            $9_1 = (($13_1 << 16 | 0) >> 15 | 0) + $5_1 | 0;

                                            label$30 : {

                                                if (($13_1 << 16 >> 16 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                    break label$30

                                                }

                                                if (($9_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$30

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $9_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $13_1 = 2147483647;

                                            $5_1 = HEAP16[($21_1 + 58 | 0) >> 1] | 0;

                                            $28_1 = HEAP16[($21_1 + 42 | 0) >> 1] | 0;

                                            label$31 : {

                                                label$32 : {

                                                    $35_1 = HEAP16[($21_1 + 60 | 0) >> 1] | 0;

                                                    $36_1 = HEAP16[($21_1 + 52 | 0) >> 1] | 0;

                                                    $37_1 = Math_imul($35_1, $36_1);

                                                    if (($37_1 | 0) == (1073741824 | 0)) {

                                                        break label$32

                                                    }

                                                    $13_1 = ($37_1 << 1 | 0) + $9_1 | 0;

                                                    if (($37_1 ^ $9_1 | 0 | 0) < (1 | 0)) {

                                                        break label$31

                                                    }

                                                    if (($13_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$31

                                                    }

                                                    $13_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                            }

                                            label$33 : {

                                                label$34 : {

                                                    $5_1 = Math_imul($5_1, $36_1);

                                                    if (($5_1 | 0) >= (1073741824 | 0)) {

                                                        break label$34

                                                    }

                                                    $9_1 = $5_1 >> 15 | 0;

                                                    break label$33;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $9_1 = 32767;

                                            }

                                            $5_1 = (($9_1 << 16 | 0) >> 15 | 0) + $13_1 | 0;

                                            label$35 : {

                                                if (($9_1 << 16 >> 16 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                    break label$35

                                                }

                                                if (($5_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$35

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $5_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$36 : {

                                                label$37 : {

                                                    $13_1 = Math_imul($35_1, $28_1);

                                                    if (($13_1 | 0) >= (1073741824 | 0)) {

                                                        break label$37

                                                    }

                                                    $9_1 = $13_1 >> 15 | 0;

                                                    break label$36;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $9_1 = 32767;

                                            }

                                            $13_1 = (($9_1 << 16 | 0) >> 15 | 0) + $5_1 | 0;

                                            label$38 : {

                                                if (($9_1 << 16 >> 16 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                    break label$38

                                                }

                                                if (($13_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$38

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $26_1 = $26_1 + 6 | 0;

                                            $5_1 = ($13_1 | 0) < ($4_1 | 0);

                                            $4_1 = $5_1 ? $13_1 : $4_1;

                                            $31_1 = $5_1 ? $30_1 : $31_1;

                                            $22_1 = $5_1 ? $24_1 : $22_1;

                                            $5_1 = $24_1 + 1 | 0;

                                            if (($24_1 & 65535 | 0) >>> 0 < 31 >>> 0) {

                                                continue label$13

                                            }

                                            break label$13;

                                        }

                                        ;

                                        $30_1 = $30_1 + 1 | 0;

                                        if (($30_1 | 0) != (3 | 0)) {

                                            continue label$4

                                        }

                                        break label$4;

                                    }

                                    ;

                                    $5_1 = $23_1 + Math_imul($22_1 << 16 >> 16, 6) | 0;

                                    $13_1 = HEAP16[$5_1 >> 1] | 0;

                                    HEAP16[$16_1 >> 1] = HEAPU16[($5_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[$17_1 >> 1] = HEAPU16[($5_1 + 4 | 0) >> 1] | 0;

                                    label$39 : {

                                        label$40 : {

                                            $5_1 = Math_imul($29_1, $13_1);

                                            if (($5_1 | 0) == (1073741824 | 0)) {

                                                break label$40

                                            }

                                            $13_1 = $5_1 << 1 | 0;

                                            break label$39;

                                        }

                                        HEAP32[$20_1 >> 2] = 1;

                                        $13_1 = 2147483647;

                                    }

                                    label$41 : {

                                        label$42 : {

                                            $23_1 = 9 - $8_1 | 0;

                                            $39_1 = $23_1 << 16 >> 16;

                                            if (($39_1 | 0) < (1 | 0)) {

                                                break label$42

                                            }

                                            $5_1 = 0;

                                            $9_1 = $23_1 & 65535 | 0;

                                            if ($9_1 >>> 0 > 30 >>> 0) {

                                                break label$41

                                            }

                                            $5_1 = $13_1 >> $9_1 | 0;

                                            break label$41;

                                        }

                                        $9_1 = $27_1 << 16 >> 16;

                                        $5_1 = $13_1 << $9_1 | 0;

                                        if (($5_1 >> $9_1 | 0 | 0) == ($13_1 | 0)) {

                                            break label$41

                                        }

                                        $5_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    HEAP16[$15_1 >> 1] = $5_1 >>> 16 | 0;

                                    $5_1 = $31_1 << 16 >> 16 << 1 | 0;

                                    $13_1 = HEAP16[(($21_1 + 6 | 0) + $5_1 | 0) >> 1] | 0;

                                    HEAP16[$14_1 >> 1] = $13_1;

                                    $34_1 = HEAPU16[($21_1 + $5_1 | 0) >> 1] | 0;

                                    $79($1_1 | 0, $2_1 | 0, $3_1 | 0, $13_1 | 0, $10_1 | 0, $21_1 + 24 | 0 | 0, $21_1 + 16 | 0 | 0, $21_1 + 14 | 0 | 0, $20_1 | 0);

                                    $110($0_1 | 0, HEAP16[($21_1 + 14 | 0) >> 1] | 0 | 0, HEAP16[$15_1 >> 1] | 0 | 0, $21_1 + 12 | 0 | 0, $20_1 | 0);

                                    label$43 : {

                                        if (!(HEAPU16[($21_1 + 24 | 0) >> 1] | 0)) {

                                            break label$43

                                        }

                                        if ((HEAP16[($21_1 + 12 | 0) >> 1] | 0 | 0) < (1 | 0)) {

                                            break label$43

                                        }

                                        HEAP16[($21_1 + 22 | 0) >> 1] = $6_1;

                                        HEAP16[($21_1 + 30 | 0) >> 1] = $7_1;

                                        label$44 : {

                                            label$45 : {

                                                $13_1 = $224($12_1 | 0, $8_1 | 0, $20_1 | 0) | 0;

                                                $5_1 = ($13_1 + 10 | 0) << 16 >> 16;

                                                if (($5_1 | 0) > (-1 | 0)) {

                                                    break label$45

                                                }

                                                $4_1 = 0;

                                                $5_1 = (-10 - $13_1 | 0) << 16 >> 16;

                                                if (($5_1 | 0) > (14 | 0)) {

                                                    break label$44

                                                }

                                                $4_1 = $11_1 >> ($5_1 & 65535 | 0) | 0;

                                                break label$44;

                                            }

                                            $5_1 = $5_1 & 65535 | 0;

                                            $4_1 = $11_1 << $5_1 | 0;

                                            if (($4_1 << 16 >> 16 >> $5_1 | 0 | 0) == ($11_1 | 0)) {

                                                break label$44

                                            }

                                            $4_1 = ($11_1 >> 15 | 0) ^ 32767 | 0;

                                        }

                                        $13_1 = HEAP16[$14_1 >> 1] | 0;

                                        $5_1 = HEAP16[$15_1 >> 1] | 0;

                                        label$46 : {

                                            label$47 : {

                                                $9_1 = (10 - $8_1 | 0) << 16 >> 16;

                                                if (($9_1 | 0) > (-1 | 0)) {

                                                    break label$47

                                                }

                                                $22_1 = 0;

                                                if (($25_1 | 0) > (14 | 0)) {

                                                    break label$46

                                                }

                                                $22_1 = $5_1 >> ($25_1 & 65535 | 0) | 0;

                                                break label$46;

                                            }

                                            $9_1 = $9_1 & 65535 | 0;

                                            $22_1 = $5_1 << $9_1 | 0;

                                            if (($22_1 << 16 >> 16 >> $9_1 | 0 | 0) == ($5_1 | 0)) {

                                                break label$46

                                            }

                                            $22_1 = ($5_1 >> 15 | 0) ^ 32767 | 0;

                                        }

                                        $19_1 = HEAP32[($19_1 + 68 | 0) >> 2] | 0;

                                        $5_1 = HEAP16[($21_1 + 12 | 0) >> 1] | 0;

                                        label$48 : {

                                            label$49 : {

                                                $9_1 = Math_imul($13_1, $13_1);

                                                if ($9_1 >>> 0 >= 1073741824 >>> 0) {

                                                    break label$49

                                                }

                                                $24_1 = $9_1 >>> 15 | 0;

                                                break label$48;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $24_1 = 32767;

                                        }

                                        $26_1 = $183($5_1 ^ 32767 | 0 | 0, 1 | 0, $20_1 | 0) | 0;

                                        label$50 : {

                                            label$51 : {

                                                label$52 : {

                                                    $9_1 = Math_imul((HEAPU16[($21_1 + 26 | 0) >> 1] | 0) << 16 >> 16, $5_1);

                                                    if (($9_1 | 0) != (1073741824 | 0)) {

                                                        break label$52

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $28_1 = -2;

                                                    $31_1 = -1073741825;

                                                    break label$51;

                                                }

                                                $28_1 = $9_1 << 2 | 0;

                                                $31_1 = ($9_1 << 1 | 0) + 1073741824 | 0;

                                                if (($9_1 | 0) >= (0 | 0)) {

                                                    break label$51

                                                }

                                                $9_1 = -2147483648;

                                                break label$50;

                                            }

                                            $9_1 = 2147483647;

                                        }

                                        label$53 : {

                                            label$54 : {

                                                $9_1 = Math_imul((($31_1 | 0) < (0 | 0) ? $9_1 : $28_1) >> 16 | 0, $24_1 << 16 >> 16);

                                                if (($9_1 | 0) == (1073741824 | 0)) {

                                                    break label$54

                                                }

                                                $28_1 = $9_1 << 1 | 0;

                                                break label$53;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $28_1 = 2147483647;

                                        }

                                        label$55 : {

                                            label$56 : {

                                                label$57 : {

                                                    $9_1 = Math_imul((HEAPU16[($21_1 + 28 | 0) >> 1] | 0) << 16 >> 16, $5_1);

                                                    if (($9_1 | 0) != (1073741824 | 0)) {

                                                        break label$57

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $24_1 = -2;

                                                    $31_1 = -1073741825;

                                                    break label$56;

                                                }

                                                $24_1 = $9_1 << 2 | 0;

                                                $31_1 = ($9_1 << 1 | 0) + 1073741824 | 0;

                                                if (($9_1 | 0) >= (0 | 0)) {

                                                    break label$56

                                                }

                                                $9_1 = -2147483648;

                                                break label$55;

                                            }

                                            $9_1 = 2147483647;

                                        }

                                        label$58 : {

                                            label$59 : {

                                                $13_1 = Math_imul((($31_1 | 0) < (0 | 0) ? $9_1 : $24_1) >> 16 | 0, $13_1);

                                                if (($13_1 | 0) >= (1073741824 | 0)) {

                                                    break label$59

                                                }

                                                $13_1 = $13_1 >> 15 | 0;

                                                break label$58;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $13_1 = 32767;

                                        }

                                        $31_1 = HEAPU16[($21_1 + 18 | 0) >> 1] | 0;

                                        HEAP16[($21_1 + 48 | 0) >> 1] = $13_1;

                                        $9_1 = $183(HEAP16[($21_1 + 20 | 0) >> 1] | 0 | 0, $25_1 | 0, $20_1 | 0) | 0;

                                        label$60 : {

                                            label$61 : {

                                                label$62 : {

                                                    $13_1 = Math_imul((HEAPU16[($21_1 + 30 | 0) >> 1] | 0) << 16 >> 16, $5_1);

                                                    if (($13_1 | 0) != (1073741824 | 0)) {

                                                        break label$62

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $24_1 = -2;

                                                    $35_1 = -1073741825;

                                                    break label$61;

                                                }

                                                $24_1 = $13_1 << 2 | 0;

                                                $35_1 = ($13_1 << 1 | 0) + 1073741824 | 0;

                                                if (($13_1 | 0) >= (0 | 0)) {

                                                    break label$61

                                                }

                                                $13_1 = -2147483648;

                                                break label$60;

                                            }

                                            $13_1 = 2147483647;

                                        }

                                        HEAP16[($21_1 + 50 | 0) >> 1] = (($35_1 | 0) < (0 | 0) ? $13_1 : $24_1) >>> 16 | 0;

                                        $24_1 = 32767;

                                        $13_1 = (($8_1 + 16384 | 0) >>> 0 < 32768 >>> 0 ? $8_1 << 1 | 0 : ($8_1 >> 15 | 0) ^ 32767 | 0) + -7 | 0;

                                        HEAP16[($21_1 + 62 | 0) >> 1] = $13_1;

                                        $13_1 = $183(HEAP16[($21_1 + 22 | 0) >> 1] | 0 | 0, $13_1 << 16 >> 16 | 0, $20_1 | 0) | 0;

                                        label$63 : {

                                            label$64 : {

                                                $26_1 = Math_imul(HEAP16[($21_1 + 30 | 0) >> 1] | 0, $26_1);

                                                if (($26_1 | 0) >= (1073741824 | 0)) {

                                                    break label$64

                                                }

                                                $24_1 = $26_1 >> 15 | 0;

                                                break label$63;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                        }

                                        $26_1 = $31_1 + -15 | 0;

                                        HEAP16[($21_1 + 52 | 0) >> 1] = $24_1;

                                        $24_1 = $183($13_1 | 0, 1 | 0, $20_1 | 0) | 0;

                                        label$65 : {

                                            label$66 : {

                                                $5_1 = Math_imul(HEAP16[($21_1 + 24 | 0) >> 1] | 0, $5_1);

                                                if (($5_1 | 0) == (1073741824 | 0)) {

                                                    break label$66

                                                }

                                                $5_1 = $5_1 << 1 | 0;

                                                break label$65;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $5_1 = 2147483647;

                                        }

                                        $31_1 = $223($5_1 | 0, $21_1 + 62 | 0 | 0, $20_1 | 0) | 0;

                                        $5_1 = (HEAPU16[($21_1 + 62 | 0) >> 1] | 0) + 47 | 0;

                                        HEAP16[($21_1 + 62 | 0) >> 1] = $5_1;

                                        label$67 : {

                                            label$68 : {

                                                $35_1 = $26_1 << 16 >> 16;

                                                $36_1 = (HEAPU16[($21_1 + 16 | 0) >> 1] | 0) - $5_1 | 0;

                                                $5_1 = ($36_1 + 31 | 0) << 16 >> 16;

                                                $5_1 = ($35_1 | 0) > ($5_1 | 0) ? $35_1 : $5_1;

                                                $5_1 = ($9_1 | 0) > ($5_1 | 0) ? $9_1 : $5_1;

                                                $5_1 = ($13_1 | 0) > ($5_1 | 0) ? $13_1 : $5_1;

                                                $5_1 = ($24_1 | 0) > ($5_1 | 0) ? $24_1 : $5_1;

                                                $26_1 = $5_1 - $26_1 | 0;

                                                if (($26_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                    break label$68

                                                }

                                                $38_1 = 0;

                                                $26_1 = $26_1 & 65535 | 0;

                                                if ($26_1 >>> 0 > 30 >>> 0) {

                                                    break label$67

                                                }

                                                $38_1 = $28_1 >> $26_1 | 0;

                                                break label$67;

                                            }

                                            $26_1 = (0 - $26_1 | 0) << 16 >> 16;

                                            $38_1 = $28_1 << $26_1 | 0;

                                            if (($38_1 >> $26_1 | 0 | 0) == ($28_1 | 0)) {

                                                break label$67

                                            }

                                            $38_1 = ($28_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $35_1 = $21_1 + 48 | 0;

                                        $26_1 = (HEAPU16[($21_1 + 48 | 0) >> 1] | 0) << 16 | 0;

                                        label$69 : {

                                            label$70 : {

                                                $28_1 = $5_1 - $9_1 | 0;

                                                if (($28_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                    break label$70

                                                }

                                                $9_1 = 0;

                                                $28_1 = $28_1 & 65535 | 0;

                                                if ($28_1 >>> 0 > 30 >>> 0) {

                                                    break label$69

                                                }

                                                $9_1 = $26_1 >> $28_1 | 0;

                                                break label$69;

                                            }

                                            $28_1 = (0 - $28_1 | 0) << 16 >> 16;

                                            $9_1 = $26_1 << $28_1 | 0;

                                            if (($9_1 >> $28_1 | 0 | 0) == ($26_1 | 0)) {

                                                break label$69

                                            }

                                            $9_1 = ($26_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $28_1 = $21_1 + 50 | 0;

                                        $126($9_1 | 0, $35_1 | 0, $21_1 + 38 | 0 | 0, $20_1 | 0);

                                        $26_1 = (HEAPU16[($21_1 + 50 | 0) >> 1] | 0) << 16 | 0;

                                        $9_1 = 0;

                                        label$71 : {

                                            label$72 : {

                                                $13_1 = $5_1 - $13_1 | 0;

                                                if (($13_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                    break label$72

                                                }

                                                $13_1 = (0 - $13_1 | 0) << 16 >> 16;

                                                $9_1 = $26_1 << $13_1 | 0;

                                                if (($9_1 >> $13_1 | 0 | 0) == ($26_1 | 0)) {

                                                    break label$71

                                                }

                                                $9_1 = ($26_1 >> 31 | 0) ^ 2147483647 | 0;

                                                break label$71;

                                            }

                                            $13_1 = $13_1 & 65535 | 0;

                                            if ($13_1 >>> 0 > 30 >>> 0) {

                                                break label$71

                                            }

                                            $9_1 = $26_1 >> $13_1 | 0;

                                        }

                                        $26_1 = $21_1 + 52 | 0;

                                        $126($9_1 | 0, $28_1 | 0, $21_1 + 40 | 0 | 0, $20_1 | 0);

                                        $9_1 = (HEAPU16[($21_1 + 52 | 0) >> 1] | 0) << 16 | 0;

                                        $13_1 = 0;

                                        label$73 : {

                                            label$74 : {

                                                $24_1 = $5_1 - $24_1 | 0;

                                                if (($24_1 << 16 >> 16 | 0) > (0 | 0)) {

                                                    break label$74

                                                }

                                                $24_1 = (0 - $24_1 | 0) << 16 >> 16;

                                                $13_1 = $9_1 << $24_1 | 0;

                                                if (($13_1 >> $24_1 | 0 | 0) == ($9_1 | 0)) {

                                                    break label$73

                                                }

                                                $13_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                                break label$73;

                                            }

                                            $24_1 = $24_1 & 65535 | 0;

                                            if ($24_1 >>> 0 > 30 >>> 0) {

                                                break label$73

                                            }

                                            $13_1 = $9_1 >> $24_1 | 0;

                                        }

                                        $126($13_1 | 0, $26_1 | 0, $21_1 + 42 | 0 | 0, $20_1 | 0);

                                        $5_1 = $5_1 + -31 | 0;

                                        HEAP16[($21_1 + 62 | 0) >> 1] = $5_1;

                                        label$75 : {

                                            label$76 : {

                                                $13_1 = $5_1 - $36_1 | 0;

                                                $5_1 = $221($13_1 << 16 >> 16 | 0, 1 | 0, $20_1 | 0) | 0;

                                                if (($5_1 | 0) < (1 | 0)) {

                                                    break label$76

                                                }

                                                $28_1 = 0;

                                                if ($5_1 >>> 0 > 30 >>> 0) {

                                                    break label$75

                                                }

                                                $28_1 = $31_1 >> ($5_1 & 65535 | 0) | 0;

                                                break label$75;

                                            }

                                            $5_1 = (0 - $5_1 | 0) << 16 >> 16;

                                            $28_1 = $31_1 << $5_1 | 0;

                                            if (($28_1 >> $5_1 | 0 | 0) == ($31_1 | 0)) {

                                                break label$75

                                            }

                                            $28_1 = ($31_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$77 : {

                                            if (!($13_1 & 1 | 0)) {

                                                break label$77

                                            }

                                            $126($28_1 | 0, $21_1 + 44 | 0 | 0, $21_1 + 34 | 0 | 0, $20_1 | 0);

                                            $13_1 = Math_imul(HEAP16[($21_1 + 34 | 0) >> 1] | 0, 23170) >> 15 | 0;

                                            $5_1 = HEAP16[($21_1 + 44 | 0) >> 1] | 0;

                                            $28_1 = ($13_1 + Math_imul($5_1, 23170) | 0) << 1 | 0;

                                            $9_1 = Math_imul($5_1, 46340);

                                            if (($13_1 ^ $9_1 | 0 | 0) < (1 | 0)) {

                                                break label$77

                                            }

                                            if (($28_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                break label$77

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $28_1 = ($5_1 >> 15 | 0) ^ 2147483647 | 0;

                                        }

                                        $30_1 = ($38_1 >> 31 | 0) ^ 2147483647 | 0;

                                        $33_1 = $22_1 << 16 >> 16;

                                        $32_1 = $4_1 << 16 >> 16;

                                        $24_1 = $19_1;

                                        $26_1 = 2147483647;

                                        $5_1 = 0;

                                        $22_1 = 0;

                                        label$78 : while (1) {

                                            $9_1 = $5_1;

                                            label$79 : {

                                                label$80 : {

                                                    $5_1 = Math_imul($29_1, HEAP16[$24_1 >> 1] | 0);

                                                    if (($5_1 | 0) >= (1073741824 | 0)) {

                                                        break label$80

                                                    }

                                                    $5_1 = $5_1 >> 15 | 0;

                                                    break label$79;

                                                }

                                                HEAP32[$20_1 >> 2] = 1;

                                                $5_1 = 32767;

                                            }

                                            label$81 : {

                                                $5_1 = $5_1 << 16 >> 16;

                                                if (($33_1 | 0) <= ($5_1 | 0)) {

                                                    break label$81

                                                }

                                                label$82 : {

                                                    label$83 : {

                                                        $13_1 = Math_imul($5_1, $5_1);

                                                        if (($13_1 | 0) == (1073741824 | 0)) {

                                                            break label$83

                                                        }

                                                        $13_1 = $13_1 << 1 | 0;

                                                        break label$82;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $13_1 = 2147483647;

                                                }

                                                $126($13_1 | 0, $21_1 + 60 | 0 | 0, $21_1 + 58 | 0 | 0, $20_1 | 0);

                                                label$84 : {

                                                    label$85 : {

                                                        $13_1 = $224($5_1 | 0, $32_1 | 0, $20_1 | 0) | 0;

                                                        $13_1 = Math_imul($13_1, $13_1);

                                                        if (($13_1 | 0) == (1073741824 | 0)) {

                                                            break label$85

                                                        }

                                                        $13_1 = $13_1 << 1 | 0;

                                                        break label$84;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $13_1 = 2147483647;

                                                }

                                                $126($13_1 | 0, $21_1 + 56 | 0 | 0, $21_1 + 54 | 0 | 0, $20_1 | 0);

                                                $4_1 = 2147483647;

                                                $31_1 = HEAP16[($21_1 + 38 | 0) >> 1] | 0;

                                                label$86 : {

                                                    label$87 : {

                                                        $35_1 = Math_imul($5_1, HEAP16[($21_1 + 48 | 0) >> 1] | 0);

                                                        if (($35_1 | 0) == (1073741824 | 0)) {

                                                            break label$87

                                                        }

                                                        $13_1 = ($35_1 << 1 | 0) + $38_1 | 0;

                                                        if (($35_1 ^ $38_1 | 0 | 0) < (1 | 0)) {

                                                            break label$86

                                                        }

                                                        $4_1 = $30_1;

                                                        if (($13_1 ^ $38_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$86

                                                        }

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $13_1 = $4_1;

                                                }

                                                label$88 : {

                                                    label$89 : {

                                                        $5_1 = Math_imul($5_1, $31_1);

                                                        if (($5_1 | 0) >= (1073741824 | 0)) {

                                                            break label$89

                                                        }

                                                        $4_1 = $5_1 >> 15 | 0;

                                                        break label$88;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $4_1 = 32767;

                                                }

                                                $5_1 = (($4_1 << 16 | 0) >> 15 | 0) + $13_1 | 0;

                                                label$90 : {

                                                    if (($4_1 << 16 >> 16 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                        break label$90

                                                    }

                                                    if (($5_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$90

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $5_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                $13_1 = 2147483647;

                                                $4_1 = HEAP16[($21_1 + 58 | 0) >> 1] | 0;

                                                $31_1 = HEAP16[($21_1 + 40 | 0) >> 1] | 0;

                                                label$91 : {

                                                    label$92 : {

                                                        $35_1 = HEAP16[($21_1 + 60 | 0) >> 1] | 0;

                                                        $36_1 = HEAP16[($21_1 + 50 | 0) >> 1] | 0;

                                                        $37_1 = Math_imul($35_1, $36_1);

                                                        if (($37_1 | 0) == (1073741824 | 0)) {

                                                            break label$92

                                                        }

                                                        $13_1 = ($37_1 << 1 | 0) + $5_1 | 0;

                                                        if (($37_1 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                            break label$91

                                                        }

                                                        if (($13_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$91

                                                        }

                                                        $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                }

                                                label$93 : {

                                                    label$94 : {

                                                        $5_1 = Math_imul($4_1, $36_1);

                                                        if (($5_1 | 0) >= (1073741824 | 0)) {

                                                            break label$94

                                                        }

                                                        $4_1 = $5_1 >> 15 | 0;

                                                        break label$93;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $4_1 = 32767;

                                                }

                                                $5_1 = (($4_1 << 16 | 0) >> 15 | 0) + $13_1 | 0;

                                                label$95 : {

                                                    if (($4_1 << 16 >> 16 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                        break label$95

                                                    }

                                                    if (($5_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$95

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $5_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                label$96 : {

                                                    label$97 : {

                                                        $13_1 = Math_imul($35_1, $31_1);

                                                        if (($13_1 | 0) >= (1073741824 | 0)) {

                                                            break label$97

                                                        }

                                                        $4_1 = $13_1 >> 15 | 0;

                                                        break label$96;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $4_1 = 32767;

                                                }

                                                $13_1 = (($4_1 << 16 | 0) >> 15 | 0) + $5_1 | 0;

                                                label$98 : {

                                                    if (($4_1 << 16 >> 16 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                        break label$98

                                                    }

                                                    if (($13_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$98

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                $4_1 = $223($13_1 | 0, $21_1 + 62 | 0 | 0, $20_1 | 0) | 0;

                                                label$99 : {

                                                    label$100 : {

                                                        $13_1 = $221(HEAP16[($21_1 + 62 | 0) >> 1] | 0 | 0, 1 | 0, $20_1 | 0) | 0;

                                                        if (($13_1 | 0) < (1 | 0)) {

                                                            break label$100

                                                        }

                                                        $5_1 = 0;

                                                        if ($13_1 >>> 0 > 30 >>> 0) {

                                                            break label$99

                                                        }

                                                        $5_1 = $4_1 >> ($13_1 & 65535 | 0) | 0;

                                                        break label$99;

                                                    }

                                                    $13_1 = (0 - $13_1 | 0) << 16 >> 16;

                                                    $5_1 = $4_1 << $13_1 | 0;

                                                    if (($5_1 >> $13_1 | 0 | 0) == ($4_1 | 0)) {

                                                        break label$99

                                                    }

                                                    $5_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                $13_1 = $5_1 - $28_1 | 0;

                                                label$101 : {

                                                    if (($5_1 ^ $28_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$101

                                                    }

                                                    if (($13_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$101

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                label$102 : {

                                                    label$103 : {

                                                        $5_1 = $220($13_1 | 0, $20_1 | 0) | 0;

                                                        $5_1 = Math_imul($5_1, $5_1);

                                                        if (($5_1 | 0) == (1073741824 | 0)) {

                                                            break label$103

                                                        }

                                                        $5_1 = $5_1 << 1 | 0;

                                                        break label$102;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $5_1 = 2147483647;

                                                }

                                                $13_1 = 2147483647;

                                                $4_1 = HEAP16[($21_1 + 54 | 0) >> 1] | 0;

                                                $31_1 = HEAP16[($21_1 + 42 | 0) >> 1] | 0;

                                                label$104 : {

                                                    label$105 : {

                                                        $35_1 = HEAP16[($21_1 + 56 | 0) >> 1] | 0;

                                                        $36_1 = HEAP16[($21_1 + 52 | 0) >> 1] | 0;

                                                        $37_1 = Math_imul($35_1, $36_1);

                                                        if (($37_1 | 0) == (1073741824 | 0)) {

                                                            break label$105

                                                        }

                                                        $13_1 = ($37_1 << 1 | 0) + $5_1 | 0;

                                                        if (($37_1 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                            break label$104

                                                        }

                                                        if (($13_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$104

                                                        }

                                                        $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                }

                                                label$106 : {

                                                    label$107 : {

                                                        $5_1 = Math_imul($4_1, $36_1);

                                                        if (($5_1 | 0) >= (1073741824 | 0)) {

                                                            break label$107

                                                        }

                                                        $4_1 = $5_1 >> 15 | 0;

                                                        break label$106;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $4_1 = 32767;

                                                }

                                                $5_1 = (($4_1 << 16 | 0) >> 15 | 0) + $13_1 | 0;

                                                label$108 : {

                                                    if (($4_1 << 16 >> 16 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                        break label$108

                                                    }

                                                    if (($5_1 ^ $13_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$108

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $5_1 = ($13_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                label$109 : {

                                                    label$110 : {

                                                        $13_1 = Math_imul($35_1, $31_1);

                                                        if (($13_1 | 0) >= (1073741824 | 0)) {

                                                            break label$110

                                                        }

                                                        $4_1 = $13_1 >> 15 | 0;

                                                        break label$109;

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $4_1 = 32767;

                                                }

                                                $13_1 = (($4_1 << 16 | 0) >> 15 | 0) + $5_1 | 0;

                                                label$111 : {

                                                    if (($4_1 << 16 >> 16 ^ $5_1 | 0 | 0) < (1 | 0)) {

                                                        break label$111

                                                    }

                                                    if (($13_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                        break label$111

                                                    }

                                                    HEAP32[$20_1 >> 2] = 1;

                                                    $13_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                                }

                                                $24_1 = $24_1 + 6 | 0;

                                                $5_1 = ($13_1 | 0) < ($26_1 | 0);

                                                $26_1 = $5_1 ? $13_1 : $26_1;

                                                $22_1 = $5_1 ? $9_1 : $22_1;

                                                $5_1 = $9_1 + 1 | 0;

                                                if (($9_1 & 65535 | 0) >>> 0 < 31 >>> 0) {

                                                    continue label$78

                                                }

                                            }

                                            break label$78;

                                        }

                                        ;

                                        $5_1 = $19_1 + Math_imul($22_1 << 16 >> 16, 6) | 0;

                                        $13_1 = HEAP16[$5_1 >> 1] | 0;

                                        HEAP16[$16_1 >> 1] = HEAPU16[($5_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[$17_1 >> 1] = HEAPU16[($5_1 + 4 | 0) >> 1] | 0;

                                        label$112 : {

                                            label$113 : {

                                                $5_1 = Math_imul($29_1, $13_1);

                                                if (($5_1 | 0) == (1073741824 | 0)) {

                                                    break label$113

                                                }

                                                $5_1 = $5_1 << 1 | 0;

                                                break label$112;

                                            }

                                            HEAP32[$20_1 >> 2] = 1;

                                            $5_1 = 2147483647;

                                        }

                                        label$114 : {

                                            label$115 : {

                                                if (($39_1 | 0) < (1 | 0)) {

                                                    break label$115

                                                }

                                                $20_1 = 0;

                                                $13_1 = $23_1 & 65535 | 0;

                                                if ($13_1 >>> 0 > 30 >>> 0) {

                                                    break label$114

                                                }

                                                $20_1 = $5_1 >> $13_1 | 0;

                                                break label$114;

                                            }

                                            $13_1 = $27_1 << 16 >> 16;

                                            $20_1 = $5_1 << $13_1 | 0;

                                            if (($20_1 >> $13_1 | 0 | 0) == ($5_1 | 0)) {

                                                break label$114

                                            }

                                            $20_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        HEAP16[$15_1 >> 1] = $20_1 >>> 16 | 0;

                                    }

                                    $20_1 = HEAP32[$18_1 >> 2] | 0;

                                    HEAP16[$20_1 >> 1] = $34_1;

                                    HEAP32[$18_1 >> 2] = $20_1 + 4 | 0;

                                    HEAP16[($20_1 + 2 | 0) >> 1] = $22_1;

                                    global$0 = $21_1 + 64 | 0;

                                }



                                function $153($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $11_1 = 0, $9_1 = 0, $13_1 = 0, $10_1 = 0, $8_1 = 0, $12_1 = 0, $66_1 = 0,

                                        $84_1 = 0, $110_1 = 0;

                                    $8_1 = HEAPU16[$3_1 >> 1] | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (($0_1 | 0) != (7 | 0)) {

                                                break label$2

                                            }

                                            $7_1 = $211($1_1 | 0, $2_1 | 0, $7_1 | 0) | 0;

                                            $2_1 = $7_1 << 16 | 0;

                                            $7_1 = (($7_1 << 20 | 0) >> 20 | 0 | 0) == ($7_1 << 16 >> 16 | 0) ? $2_1 >> 12 | 0 : ($2_1 >> 31 | 0) ^ 32767 | 0;

                                            $8_1 = $8_1 << 16 >> 16 >> 1 | 0;

                                            break label$1;

                                        }

                                        $7_1 = $211($1_1 | 0, $2_1 | 0, $7_1 | 0) | 0;

                                        $2_1 = $7_1 << 16 | 0;

                                        $7_1 = (($7_1 << 21 | 0) >> 21 | 0 | 0) == ($7_1 << 16 >> 16 | 0) ? $2_1 >>> 11 | 0 : ($2_1 | 0) > (-1 | 0) ? 32767 : 32768;

                                    }

                                    $1_1 = $7_1 << 16 >> 16;

                                    $7_1 = $8_1 - (Math_imul($1_1, HEAP16[$6_1 >> 1] | 0) >>> 15 | 0) | 0;

                                    $66_1 = $7_1;

                                    $7_1 = $7_1 << 16 >> 16 >> 15 | 0;

                                    $9_1 = ($66_1 ^ $7_1 | 0) - $7_1 | 0;

                                    $10_1 = 0;

                                    $7_1 = 1;

                                    $2_1 = $6_1;

                                    label$3 : {

                                        label$4 : while (1) {

                                            $11_1 = $8_1 - (Math_imul($1_1, HEAP16[($2_1 + 6 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $84_1 = $11_1;

                                            $11_1 = $11_1 << 16 >> 16 >> 15 | 0;

                                            $11_1 = (($84_1 ^ $11_1 | 0) - $11_1 | 0) << 16 >> 16;

                                            $9_1 = $9_1 << 16 >> 16;

                                            $12_1 = ($11_1 | 0) < ($9_1 | 0);

                                            $10_1 = $12_1 ? $7_1 : $10_1;

                                            if (($7_1 & 65535 | 0) >>> 0 > 30 >>> 0) {

                                                break label$3

                                            }

                                            $13_1 = $8_1 - (Math_imul($1_1, HEAP16[($2_1 + 12 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $110_1 = $13_1;

                                            $13_1 = $13_1 << 16 >> 16 >> 15 | 0;

                                            $13_1 = (($110_1 ^ $13_1 | 0) - $13_1 | 0) << 16 >> 16;

                                            $9_1 = $12_1 ? $11_1 : $9_1;

                                            $11_1 = ($13_1 | 0) < ($9_1 | 0);

                                            $9_1 = $11_1 ? $13_1 : $9_1;

                                            $10_1 = $11_1 ? $7_1 + 1 | 0 : $10_1;

                                            $7_1 = $7_1 + 2 | 0;

                                            $2_1 = $2_1 + 12 | 0;

                                            continue label$4;

                                        }

                                        ;

                                    }

                                    $7_1 = $6_1 + (Math_imul($10_1, 3) << 16 >> 16 << 1 | 0) | 0;

                                    HEAP16[$3_1 >> 1] = (Math_imul($1_1, HEAP16[$7_1 >> 1] | 0) >>> 15 | 0) << (($0_1 | 0) == (7 | 0)) | 0;

                                    HEAP16[$4_1 >> 1] = HEAPU16[($7_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[$5_1 >> 1] = HEAPU16[($7_1 + 4 | 0) >> 1] | 0;

                                    return $10_1 << 16 >> 16 | 0;

                                }



                                function $154($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $7_1 = 0, $10_1 = 0, $9_1 = 0, $8_1 = 0, $49_1 = 0;

                                    $7_1 = $224(HEAP16[$2_1 >> 1] | 0 | 0, HEAP16[$5_1 >> 1] | 0 | 0, $6_1 | 0) | 0;

                                    $7_1 = ($7_1 >> 15 | 0) + $7_1 | 0;

                                    $8_1 = ($7_1 << 16 >> 16 >> 15 | 0) ^ $7_1 | 0;

                                    $9_1 = 0;

                                    $7_1 = 1;

                                    label$1 : while (1) {

                                        label$2 : {

                                            $10_1 = HEAP16[($5_1 + ($7_1 << 1 | 0) | 0) >> 1] | 0;

                                            if (($10_1 | 0) > ($1_1 | 0)) {

                                                break label$2

                                            }

                                            $10_1 = $224(HEAP16[$2_1 >> 1] | 0 | 0, $10_1 | 0, $6_1 | 0) | 0;

                                            $10_1 = ($10_1 >> 15 | 0) + $10_1 | 0;

                                            $10_1 = (($10_1 << 16 >> 16 >>> 15 | 0) ^ $10_1 | 0) << 16 >> 16;

                                            $49_1 = $10_1;

                                            $8_1 = $8_1 << 16 >> 16;

                                            $10_1 = ($10_1 | 0) < ($8_1 | 0);

                                            $8_1 = $10_1 ? $49_1 : $8_1;

                                            $9_1 = $10_1 ? $7_1 : $9_1;

                                        }

                                        $7_1 = $7_1 + 1 | 0;

                                        if (($7_1 | 0) != (16 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    label$3 : {

                                        label$4 : {

                                            switch ($0_1 + -5 | 0 | 0) {

                                                case 0:

                                                    $10_1 = $9_1 << 16 >> 16;

                                                    $7_1 = $9_1;

                                                    label$7 : {

                                                        label$8 : {

                                                            label$9 : {

                                                                switch ($7_1 & 65535 | 0 | 0) {

                                                                    default:

                                                                        if ((HEAP16[((($10_1 << 1 | 0) + $5_1 | 0) + 2 | 0) >> 1] | 0 | 0) <= ($1_1 | 0)) {

                                                                            break label$8

                                                                        }

                                                                        break;

                                                                    case 0:

                                                                        break label$7;

                                                                    case 15:

                                                                        break label$9;

                                                                }

                                                                ;

                                                            }

                                                            $7_1 = $9_1 + -2 | 0;

                                                            break label$7;

                                                        }

                                                        $7_1 = $9_1 + -1 | 0;

                                                    }

                                                    HEAP16[$4_1 >> 1] = $7_1;

                                                    HEAP16[$3_1 >> 1] = HEAPU16[($5_1 + ($7_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                                    $1_1 = $7_1 + 1 | 0;

                                                    HEAP16[($4_1 + 2 | 0) >> 1] = $1_1;

                                                    HEAP16[($3_1 + 2 | 0) >> 1] = HEAPU16[($5_1 + ($1_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                                    $7_1 = $7_1 + 2 | 0;

                                                    HEAP16[($4_1 + 4 | 0) >> 1] = $7_1;

                                                    HEAP16[($3_1 + 4 | 0) >> 1] = HEAPU16[($5_1 + ($7_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                                    $7_1 = HEAPU16[($5_1 + ($10_1 << 1 | 0) | 0) >> 1] | 0;

                                                    break label$3;

                                                case 2:

                                                    $7_1 = (HEAPU16[($5_1 + ($9_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) & -4 | 0;

                                                    break label$3;

                                                default:

                                                    break label$4;

                                            }

                                            ;

                                        }

                                        $7_1 = HEAPU16[($5_1 + ($9_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                    }

                                    HEAP16[$2_1 >> 1] = $7_1;

                                    return $9_1 << 16 >> 16 | 0;

                                }



                                function $155($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    var $16_1 = 0, $12_1 = 0, $18_1 = 0, $15_1 = 0, $31_1 = 0, $17_1 = 0, $30_1 = 0,

                                        $13_1 = 0, $14_1 = 0, $19_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = 0,

                                        $70_1 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0,

                                        $26_1 = 0, $27_1 = 0, $28_1 = 0, $29_1 = 0;

                                    $12_1 = global$0 - 32 | 0;

                                    global$0 = $12_1;

                                    label$1 : {

                                        label$2 : {

                                            if ($0_1 >>> 0 > 6 >>> 0) {

                                                break label$2

                                            }

                                            if (!((1 << $0_1 | 0) & 88 | 0)) {

                                                break label$2

                                            }

                                            $0_1 = $10_1 + 84 | 0;

                                            $13_1 = 128;

                                            break label$1;

                                        }

                                        $0_1 = $10_1 + 80 | 0;

                                        $13_1 = 64;

                                    }

                                    $14_1 = HEAP32[$0_1 >> 2] | 0;

                                    $15_1 = $211(14 | 0, $2_1 | 0, $11_1 | 0) | 0;

                                    $2_1 = (HEAPU16[$4_1 >> 1] | 0) + -13 | 0;

                                    HEAP16[($12_1 + 2 | 0) >> 1] = $2_1;

                                    $16_1 = (HEAPU16[($4_1 + 2 | 0) >> 1] | 0) + -14 | 0;

                                    HEAP16[($12_1 + 4 | 0) >> 1] = $16_1;

                                    $0_1 = $1_1 + -11 | 0;

                                    $70_1 = $0_1 << 1 | 0;

                                    $0_1 = $0_1 << 16 >> 16;

                                    $10_1 = $183(HEAP16[($4_1 + 4 | 0) >> 1] | 0 | 0, ((($0_1 + 16384 | 0) >>> 0 < 32768 >>> 0 ? $70_1 : ($0_1 >>> 15 | 0) ^ 32767 | 0) + 15 | 0) << 16 >> 16 | 0, $11_1 | 0) | 0;

                                    HEAP16[($12_1 + 6 | 0) >> 1] = $10_1;

                                    $0_1 = $183(HEAP16[($4_1 + 6 | 0) >> 1] | 0 | 0, $0_1 | 0, $11_1 | 0) | 0;

                                    HEAP16[($12_1 + 8 | 0) >> 1] = $0_1;

                                    $17_1 = ($1_1 + -10 | 0) << 16 >> 16;

                                    $4_1 = $183(HEAP16[($4_1 + 8 | 0) >> 1] | 0 | 0, $17_1 | 0, $11_1 | 0) | 0;

                                    HEAP16[($12_1 + 10 | 0) >> 1] = $4_1;

                                    $16_1 = $16_1 << 16 >> 16;

                                    $2_1 = $2_1 << 16 >> 16;

                                    $2_1 = ($16_1 | 0) > ($2_1 | 0) ? $16_1 : $2_1;

                                    $10_1 = ($10_1 | 0) > ($2_1 | 0) ? $10_1 : $2_1;

                                    $0_1 = ($0_1 | 0) > ($10_1 | 0) ? $0_1 : $10_1;

                                    $18_1 = (($4_1 | 0) > ($0_1 | 0) ? $4_1 : $0_1) + 1 | 0;

                                    $0_1 = 0;

                                    label$3 : while (1) {

                                        $4_1 = $0_1 << 1 | 0;

                                        $2_1 = (HEAPU16[($3_1 + $4_1 | 0) >> 1] | 0) << 16 | 0;

                                        label$4 : {

                                            label$5 : {

                                                $16_1 = $18_1 - (HEAPU16[(($12_1 + 2 | 0) + $4_1 | 0) >> 1] | 0) | 0;

                                                if (($16_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                    break label$5

                                                }

                                                $10_1 = 0;

                                                $16_1 = $16_1 & 65535 | 0;

                                                if ($16_1 >>> 0 > 30 >>> 0) {

                                                    break label$4

                                                }

                                                $10_1 = $2_1 >> $16_1 | 0;

                                                break label$4;

                                            }

                                            $16_1 = (0 - $16_1 | 0) << 16 >> 16;

                                            $10_1 = $2_1 << $16_1 | 0;

                                            if (($10_1 >> $16_1 | 0 | 0) == ($2_1 | 0)) {

                                                break label$4

                                            }

                                            $10_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $126($10_1 | 0, ($12_1 + 22 | 0) + $4_1 | 0 | 0, ($12_1 + 12 | 0) + $4_1 | 0 | 0, $11_1 | 0);

                                        $0_1 = $0_1 + 1 | 0;

                                        if (($0_1 | 0) != (5 | 0)) {

                                            continue label$3

                                        }

                                        break label$3;

                                    }

                                    ;

                                    $19_1 = $15_1 << 16 >> 16;

                                    $20_1 = HEAP16[($12_1 + 20 | 0) >> 1] | 0;

                                    $21_1 = HEAP16[($12_1 + 30 | 0) >> 1] | 0;

                                    $22_1 = HEAP16[($12_1 + 18 | 0) >> 1] | 0;

                                    $23_1 = HEAP16[($12_1 + 28 | 0) >> 1] | 0;

                                    $24_1 = HEAP16[($12_1 + 16 | 0) >> 1] | 0;

                                    $25_1 = HEAP16[($12_1 + 26 | 0) >> 1] | 0;

                                    $26_1 = HEAP16[($12_1 + 14 | 0) >> 1] | 0;

                                    $27_1 = HEAP16[($12_1 + 24 | 0) >> 1] | 0;

                                    $28_1 = HEAP16[($12_1 + 12 | 0) >> 1] | 0;

                                    $29_1 = HEAP16[($12_1 + 22 | 0) >> 1] | 0;

                                    $30_1 = 2147483647;

                                    $4_1 = $14_1;

                                    $2_1 = 0;

                                    $31_1 = 0;

                                    label$6 : while (1) {

                                        label$7 : {

                                            $0_1 = HEAP16[$4_1 >> 1] | 0;

                                            if (($0_1 | 0) > ($5_1 | 0)) {

                                                break label$7

                                            }

                                            $10_1 = Math_imul($0_1, $0_1);

                                            $32_1 = $10_1 >>> 0 > 1073741823 >>> 0 ? 32767 : ($10_1 << 1 | 0) >> 16 | 0;

                                            $18_1 = Math_imul($32_1, $29_1);

                                            $3_1 = ($18_1 | 0) == (1073741824 | 0) ? 2147483647 : $18_1 << 1 | 0;

                                            $16_1 = Math_imul($19_1, HEAP16[($4_1 + 2 | 0) >> 1] | 0);

                                            $33_1 = ($16_1 | 0) > (1073741823 | 0);

                                            $16_1 = $33_1 ? 32767 : ($16_1 << 1 | 0) >> 16 | 0;

                                            $15_1 = Math_imul($16_1, $16_1);

                                            label$8 : {

                                                label$9 : {

                                                    $34_1 = Math_imul($16_1, $0_1);

                                                    $35_1 = ($34_1 | 0) > (1073741823 | 0);

                                                    if ($35_1) {

                                                        break label$9

                                                    }

                                                    if ($33_1) {

                                                        break label$9

                                                    }

                                                    if (($15_1 | $10_1 | 0) >>> 0 > 1073741823 >>> 0) {

                                                        break label$9

                                                    }

                                                    if (($18_1 | 0) != (1073741824 | 0)) {

                                                        break label$8

                                                    }

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                            }

                                            $18_1 = Math_imul($32_1, $28_1) >> 15 | 0;

                                            $10_1 = $3_1 + ($18_1 << 1 | 0) | 0;

                                            label$10 : {

                                                if (($3_1 ^ $18_1 | 0 | 0) < (1 | 0)) {

                                                    break label$10

                                                }

                                                if (($10_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$10

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $10_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$11 : {

                                                label$12 : {

                                                    $3_1 = Math_imul($27_1, $0_1);

                                                    if (($3_1 | 0) == (1073741824 | 0)) {

                                                        break label$12

                                                    }

                                                    $3_1 = $3_1 << 1 | 0;

                                                    break label$11;

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $3_1 = 2147483647;

                                            }

                                            $0_1 = Math_imul($26_1, $0_1) >> 15 | 0;

                                            $18_1 = $3_1 + ($0_1 << 1 | 0) | 0;

                                            label$13 : {

                                                if (($3_1 ^ $0_1 | 0 | 0) < (1 | 0)) {

                                                    break label$13

                                                }

                                                if (($18_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$13

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $18_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $0_1 = $18_1 + $10_1 | 0;

                                            label$14 : {

                                                if (($18_1 ^ $10_1 | 0 | 0) < (0 | 0)) {

                                                    break label$14

                                                }

                                                if (($0_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$14

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $0_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$15 : {

                                                label$16 : {

                                                    $3_1 = $15_1 >>> 0 > 1073741823 >>> 0 ? 32767 : ($15_1 << 1 | 0) >> 16 | 0;

                                                    $10_1 = Math_imul($3_1, $25_1);

                                                    if (($10_1 | 0) == (1073741824 | 0)) {

                                                        break label$16

                                                    }

                                                    $10_1 = $10_1 << 1 | 0;

                                                    break label$15;

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $10_1 = 2147483647;

                                            }

                                            $18_1 = Math_imul($3_1, $24_1) >> 15 | 0;

                                            $3_1 = $10_1 + ($18_1 << 1 | 0) | 0;

                                            label$17 : {

                                                if (($10_1 ^ $18_1 | 0 | 0) < (1 | 0)) {

                                                    break label$17

                                                }

                                                if (($3_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$17

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $3_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $10_1 = $3_1 + $0_1 | 0;

                                            label$18 : {

                                                if (($3_1 ^ $0_1 | 0 | 0) < (0 | 0)) {

                                                    break label$18

                                                }

                                                if (($10_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$18

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $10_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$19 : {

                                                label$20 : {

                                                    $0_1 = Math_imul($16_1, $23_1);

                                                    if (($0_1 | 0) == (1073741824 | 0)) {

                                                        break label$20

                                                    }

                                                    $0_1 = $0_1 << 1 | 0;

                                                    break label$19;

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $0_1 = 2147483647;

                                            }

                                            $3_1 = Math_imul($16_1, $22_1) >> 15 | 0;

                                            $16_1 = $0_1 + ($3_1 << 1 | 0) | 0;

                                            label$21 : {

                                                if (($0_1 ^ $3_1 | 0 | 0) < (1 | 0)) {

                                                    break label$21

                                                }

                                                if (($16_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$21

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $16_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $0_1 = $16_1 + $10_1 | 0;

                                            label$22 : {

                                                if (($16_1 ^ $10_1 | 0 | 0) < (0 | 0)) {

                                                    break label$22

                                                }

                                                if (($0_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$22

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $0_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            label$23 : {

                                                label$24 : {

                                                    $16_1 = $35_1 ? 32767 : ($34_1 << 1 | 0) >> 16 | 0;

                                                    $10_1 = Math_imul($16_1, $21_1);

                                                    if (($10_1 | 0) == (1073741824 | 0)) {

                                                        break label$24

                                                    }

                                                    $10_1 = $10_1 << 1 | 0;

                                                    break label$23;

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $10_1 = 2147483647;

                                            }

                                            $3_1 = Math_imul($16_1, $20_1) >> 15 | 0;

                                            $16_1 = $10_1 + ($3_1 << 1 | 0) | 0;

                                            label$25 : {

                                                if (($10_1 ^ $3_1 | 0 | 0) < (1 | 0)) {

                                                    break label$25

                                                }

                                                if (($16_1 ^ $10_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$25

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $16_1 = ($10_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $10_1 = $16_1 + $0_1 | 0;

                                            label$26 : {

                                                if (($16_1 ^ $0_1 | 0 | 0) < (0 | 0)) {

                                                    break label$26

                                                }

                                                if (($10_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$26

                                                }

                                                HEAP32[$11_1 >> 2] = 1;

                                                $10_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $0_1 = ($10_1 | 0) < ($30_1 | 0);

                                            $30_1 = $0_1 ? $10_1 : $30_1;

                                            $31_1 = $0_1 ? $2_1 : $31_1;

                                        }

                                        $4_1 = $4_1 + 8 | 0;

                                        $2_1 = $2_1 + 1 | 0;

                                        if (($13_1 | 0) > ($2_1 << 16 >> 16 | 0)) {

                                            continue label$6

                                        }

                                        break label$6;

                                    }

                                    ;

                                    $0_1 = $31_1 << 16 >> 16;

                                    $4_1 = $14_1 + ((($0_1 + 8192 | 0) >>> 0 < 16384 >>> 0 ? $31_1 << 2 | 0 : ($0_1 >>> 15 | 0) ^ 32767 | 0) << 16 >> 16 << 1 | 0) | 0;

                                    HEAP16[$6_1 >> 1] = HEAPU16[$4_1 >> 1] | 0;

                                    $10_1 = HEAP16[($4_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[$8_1 >> 1] = HEAPU16[($4_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[$9_1 >> 1] = HEAPU16[($4_1 + 6 | 0) >> 1] | 0;

                                    label$27 : {

                                        label$28 : {

                                            $4_1 = Math_imul($19_1, $10_1);

                                            if (($4_1 | 0) == (1073741824 | 0)) {

                                                break label$28

                                            }

                                            $4_1 = $4_1 << 1 | 0;

                                            break label$27;

                                        }

                                        HEAP32[$11_1 >> 2] = 1;

                                        $4_1 = 2147483647;

                                    }

                                    label$29 : {

                                        label$30 : {

                                            $10_1 = 10 - $1_1 | 0;

                                            if (($10_1 << 16 >> 16 | 0) < (1 | 0)) {

                                                break label$30

                                            }

                                            $11_1 = 0;

                                            $10_1 = $10_1 & 65535 | 0;

                                            if ($10_1 >>> 0 > 30 >>> 0) {

                                                break label$29

                                            }

                                            $11_1 = $4_1 >> $10_1 | 0;

                                            break label$29;

                                        }

                                        $11_1 = $4_1 << $17_1 | 0;

                                        if (($11_1 >> $17_1 | 0 | 0) == ($4_1 | 0)) {

                                            break label$29

                                        }

                                        $11_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    HEAP16[$7_1 >> 1] = $11_1 >>> 16 | 0;

                                    global$0 = $12_1 + 32 | 0;

                                    return $0_1 | 0;

                                }



                                function $156($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    var $13_1 = 0, $14_1 = 0, $12_1 = 0, $11_1 = 0, $16_1 = 0, $30_1 = 0, $36_1 = 0,

                                        $15_1 = 0, $35_1 = 0, $33_1 = 0, $31_1 = 0, $40_1 = 0, $41_1 = 0, $42_1 = 0,

                                        $32_1 = 0, $29_1 = 0, $43_1 = 0, $46_1 = 0, $9_1 = 0, $37_1 = 0, $38_1 = 0,

                                        $39_1 = 0, $45_1 = 0, $44_1 = 0, $18_1 = 0, $49_1 = 0, $52_1 = 0, $17_1 = 0,

                                        $47_1 = 0, $48_1 = 0, $51_1 = 0, $21_1 = 0, $34_1 = 0, $50_1 = 0, $10_1 = 0,

                                        $23_1 = 0, $26_1 = 0, $27_1 = 0, $28_1 = 0, $20_1 = 0, $19_1 = 0, $22_1 = 0,

                                        $24_1 = 0, $25_1 = 0;

                                    $9_1 = global$0 - 160 | 0;

                                    global$0 = $9_1;

                                    $10_1 = HEAP16[($6_1 + ((HEAP16[$5_1 >> 1] | 0) << 1 | 0) | 0) >> 1] | 0;

                                    label$1 : {

                                        if (($0_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $11_1 = $0_1 & 7 | 0;

                                        $12_1 = 0;

                                        $13_1 = 0;

                                        $14_1 = $7_1;

                                        label$2 : {

                                            if ($0_1 >>> 0 < 8 >>> 0) {

                                                break label$2

                                            }

                                            $15_1 = $0_1 & 65528 | 0;

                                            $13_1 = 0;

                                            $14_1 = $7_1;

                                            $16_1 = 0;

                                            label$3 : while (1) {

                                                HEAP16[$14_1 >> 1] = $13_1;

                                                HEAP16[($14_1 + 14 | 0) >> 1] = $13_1 | 7 | 0;

                                                HEAP16[($14_1 + 12 | 0) >> 1] = $13_1 | 6 | 0;

                                                HEAP16[($14_1 + 10 | 0) >> 1] = $13_1 | 5 | 0;

                                                HEAP16[($14_1 + 8 | 0) >> 1] = $13_1 | 4 | 0;

                                                HEAP16[($14_1 + 6 | 0) >> 1] = $13_1 | 3 | 0;

                                                HEAP16[($14_1 + 4 | 0) >> 1] = $13_1 | 2 | 0;

                                                HEAP16[($14_1 + 2 | 0) >> 1] = $13_1 | 1 | 0;

                                                $13_1 = $13_1 + 8 | 0;

                                                $14_1 = $14_1 + 16 | 0;

                                                $16_1 = $16_1 + 8 | 0;

                                                if (($16_1 & 65535 | 0 | 0) != ($15_1 | 0)) {

                                                    continue label$3

                                                }

                                                break label$3;

                                            }

                                            ;

                                        }

                                        if (!$11_1) {

                                            break label$1

                                        }

                                        label$4 : while (1) {

                                            HEAP16[$14_1 >> 1] = $13_1;

                                            $13_1 = $13_1 + 1 | 0;

                                            $14_1 = $14_1 + 2 | 0;

                                            $12_1 = $12_1 + 1 | 0;

                                            if (($12_1 & 65535 | 0 | 0) != ($11_1 | 0)) {

                                                continue label$4

                                            }

                                            break label$4;

                                        }

                                        ;

                                    }

                                    label$5 : {

                                        if (($2_1 | 0) < (2 | 0)) {

                                            break label$5

                                        }

                                        $17_1 = $4_1 + Math_imul($10_1, 80) | 0;

                                        $18_1 = $10_1 << 1 | 0;

                                        $19_1 = $17_1 + $18_1 | 0;

                                        $20_1 = $5_1 + 4 | 0;

                                        $21_1 = $5_1 + 2 | 0;

                                        $22_1 = $3_1 + $18_1 | 0;

                                        $23_1 = 65535;

                                        $24_1 = (($0_1 + -2 | 0) & 65535 | 0) << 1 | 0;

                                        $25_1 = (($0_1 << 1 | 0) + $5_1 | 0) + -2 | 0;

                                        $26_1 = 1;

                                        $27_1 = 1;

                                        label$6 : while (1) {

                                            $28_1 = HEAP16[($6_1 + ((HEAP16[$21_1 >> 1] | 0) << 1 | 0) | 0) >> 1] | 0;

                                            $29_1 = $28_1 << 1 | 0;

                                            $30_1 = Math_imul($28_1, 80);

                                            label$7 : {

                                                $31_1 = HEAP16[($5_1 + 6 | 0) >> 1] | 0;

                                                $32_1 = ($31_1 | 0) > (39 | 0);

                                                if ($32_1) {

                                                    break label$7

                                                }

                                                $33_1 = (HEAPU16[($3_1 + $29_1 | 0) >> 1] | 0) + (HEAPU16[$22_1 >> 1] | 0) | 0;

                                                $13_1 = $9_1;

                                                $14_1 = $31_1;

                                                label$8 : while (1) {

                                                    $16_1 = $14_1 << 16 >> 16;

                                                    $12_1 = $4_1 + Math_imul($16_1, 80) | 0;

                                                    $11_1 = HEAP16[($12_1 + $29_1 | 0) >> 1] | 0;

                                                    $15_1 = HEAP16[($12_1 + $18_1 | 0) >> 1] | 0;

                                                    $16_1 = $16_1 << 1 | 0;

                                                    $12_1 = HEAP16[($12_1 + $16_1 | 0) >> 1] | 0;

                                                    HEAP16[$13_1 >> 1] = $33_1 + (HEAPU16[($3_1 + $16_1 | 0) >> 1] | 0) | 0;

                                                    HEAP16[($13_1 + 2 | 0) >> 1] = (($11_1 + ($15_1 + ($12_1 >>> 1 | 0) | 0) | 0) + 2 | 0) >>> 2 | 0;

                                                    $13_1 = $13_1 + 4 | 0;

                                                    $14_1 = ($14_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($14_1 | 0) < (40 | 0)) {

                                                        continue label$8

                                                    }

                                                    break label$8;

                                                }

                                                ;

                                            }

                                            $34_1 = $4_1 + $30_1 | 0;

                                            $16_1 = 1;

                                            $35_1 = 0;

                                            label$9 : {

                                                label$10 : {

                                                    $36_1 = HEAP16[$20_1 >> 1] | 0;

                                                    if (($36_1 | 0) <= (39 | 0)) {

                                                        break label$10

                                                    }

                                                    $37_1 = $31_1;

                                                    $38_1 = $36_1;

                                                    break label$9;

                                                }

                                                $39_1 = ((((HEAP16[($17_1 + $29_1 | 0) >> 1] | 0) << 13 | 0) + (((HEAP16[($34_1 + $29_1 | 0) >> 1] | 0) + (HEAP16[$19_1 >> 1] | 0) | 0) << 12 | 0) | 0) + 32768 | 0) >> 12 | 0;

                                                $11_1 = 65535;

                                                $38_1 = $36_1;

                                                $37_1 = $31_1;

                                                label$11 : while (1) {

                                                    label$12 : {

                                                        if ($32_1) {

                                                            break label$12

                                                        }

                                                        $13_1 = $36_1 << 16 >> 16;

                                                        $30_1 = $4_1 + Math_imul($13_1, 80) | 0;

                                                        $13_1 = $13_1 << 1 | 0;

                                                        $40_1 = ((($39_1 + (HEAP16[($30_1 + $13_1 | 0) >> 1] | 0) | 0) >> 1 | 0) + (HEAP16[($30_1 + $18_1 | 0) >> 1] | 0) | 0) + (HEAP16[($30_1 + $29_1 | 0) >> 1] | 0) | 0;

                                                        $41_1 = HEAPU16[($3_1 + $13_1 | 0) >> 1] | 0;

                                                        $13_1 = $9_1;

                                                        $14_1 = $31_1;

                                                        label$13 : while (1) {

                                                            label$14 : {

                                                                $15_1 = (HEAPU16[$13_1 >> 1] | 0) + $41_1 | 0;

                                                                $12_1 = $15_1 << 16 >> 16;

                                                                $12_1 = Math_imul($12_1, $12_1) >>> 15 | 0;

                                                                $33_1 = ((($40_1 + (HEAP16[($30_1 + ($14_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) | 0) >> 2 | 0) + (HEAP16[($13_1 + 2 | 0) >> 1] | 0) | 0) >> 1 | 0;

                                                                if ((Math_imul($12_1 << 16 >> 16, $16_1 << 16 >> 16) | 0) <= (Math_imul($33_1, $11_1 << 16 >> 16) | 0)) {

                                                                    break label$14

                                                                }

                                                                $11_1 = $12_1;

                                                                $16_1 = $33_1;

                                                                $35_1 = $15_1;

                                                                $37_1 = $14_1;

                                                                $38_1 = $36_1;

                                                            }

                                                            $13_1 = $13_1 + 4 | 0;

                                                            $14_1 = ($14_1 + $1_1 | 0) << 16 >> 16;

                                                            if (($14_1 | 0) < (40 | 0)) {

                                                                continue label$13

                                                            }

                                                            break label$13;

                                                        }

                                                        ;

                                                    }

                                                    $36_1 = ($36_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($36_1 | 0) < (40 | 0)) {

                                                        continue label$11

                                                    }

                                                    break label$11;

                                                }

                                                ;

                                            }

                                            label$15 : {

                                                $42_1 = HEAP16[($5_1 + 10 | 0) >> 1] | 0;

                                                $43_1 = ($42_1 | 0) > (39 | 0);

                                                if ($43_1) {

                                                    break label$15

                                                }

                                                $41_1 = $37_1 << 16 >> 16;

                                                $36_1 = $38_1 << 16 >> 16;

                                                $14_1 = $9_1;

                                                $12_1 = $42_1;

                                                label$16 : while (1) {

                                                    $11_1 = $12_1 << 16 >> 16;

                                                    $13_1 = $4_1 + Math_imul($11_1, 80) | 0;

                                                    $15_1 = HEAP16[($13_1 + ($41_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $33_1 = HEAP16[($13_1 + ($36_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $30_1 = HEAP16[($13_1 + $29_1 | 0) >> 1] | 0;

                                                    $40_1 = HEAP16[($13_1 + $18_1 | 0) >> 1] | 0;

                                                    $11_1 = $11_1 << 1 | 0;

                                                    $13_1 = HEAP16[($13_1 + $11_1 | 0) >> 1] | 0;

                                                    HEAP16[$14_1 >> 1] = (HEAPU16[($3_1 + $11_1 | 0) >> 1] | 0) + $35_1 | 0;

                                                    HEAP16[($14_1 + 2 | 0) >> 1] = (($15_1 + ($33_1 + ($30_1 + ($40_1 + ($13_1 >> 1 | 0) | 0) | 0) | 0) | 0) + 2 | 0) >>> 2 | 0;

                                                    $14_1 = $14_1 + 4 | 0;

                                                    $12_1 = ($12_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($12_1 | 0) < (40 | 0)) {

                                                        continue label$16

                                                    }

                                                    break label$16;

                                                }

                                                ;

                                            }

                                            label$17 : {

                                                label$18 : {

                                                    $31_1 = HEAP16[($5_1 + 8 | 0) >> 1] | 0;

                                                    if (($31_1 | 0) <= (39 | 0)) {

                                                        break label$18

                                                    }

                                                    $32_1 = 0;

                                                    $16_1 = 1;

                                                    $39_1 = $42_1;

                                                    break label$17;

                                                }

                                                $44_1 = ($16_1 << 16 >> 16 << 15 | 0) + 32768 | 0;

                                                $45_1 = $37_1 << 16 >> 16;

                                                $46_1 = $38_1 << 16 >> 16;

                                                $11_1 = 65535;

                                                $16_1 = 1;

                                                $32_1 = 0;

                                                $35_1 = $31_1;

                                                $39_1 = $42_1;

                                                label$19 : while (1) {

                                                    label$20 : {

                                                        if ($43_1) {

                                                            break label$20

                                                        }

                                                        $13_1 = $35_1 << 16 >> 16;

                                                        $14_1 = $13_1 << 1 | 0;

                                                        $40_1 = HEAPU16[($3_1 + $14_1 | 0) >> 1] | 0;

                                                        $30_1 = $4_1 + Math_imul($13_1, 80) | 0;

                                                        $41_1 = (((HEAP16[($30_1 + $29_1 | 0) >> 1] | 0) + (HEAP16[($30_1 + $18_1 | 0) >> 1] | 0) | 0) + (HEAP16[($30_1 + ($46_1 << 1 | 0) | 0) >> 1] | 0) | 0) + (HEAP16[($30_1 + ($45_1 << 1 | 0) | 0) >> 1] | 0) | 0;

                                                        $36_1 = $44_1 + ((HEAP16[($30_1 + $14_1 | 0) >> 1] | 0) << 11 | 0) | 0;

                                                        $13_1 = $9_1;

                                                        $14_1 = $42_1;

                                                        label$21 : while (1) {

                                                            label$22 : {

                                                                $15_1 = (HEAPU16[$13_1 >> 1] | 0) + $40_1 | 0;

                                                                $12_1 = $15_1 << 16 >> 16;

                                                                $12_1 = Math_imul($12_1, $12_1) >>> 15 | 0;

                                                                $33_1 = ($36_1 + ((HEAP16[($13_1 + 2 | 0) >> 1] | 0) << 14 | 0) | 0) + (($41_1 + (HEAP16[($30_1 + ($14_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) | 0) << 12 | 0) | 0;

                                                                if ((Math_imul($12_1 << 16 >> 16, $16_1 << 16 >> 16) | 0) <= (Math_imul($33_1 >> 16 | 0, $11_1 << 16 >> 16) | 0)) {

                                                                    break label$22

                                                                }

                                                                $16_1 = $33_1 >>> 16 | 0;

                                                                $11_1 = $12_1;

                                                                $32_1 = $15_1;

                                                                $39_1 = $14_1;

                                                                $31_1 = $35_1;

                                                            }

                                                            $13_1 = $13_1 + 4 | 0;

                                                            $14_1 = ($14_1 + $1_1 | 0) << 16 >> 16;

                                                            if (($14_1 | 0) < (40 | 0)) {

                                                                continue label$21

                                                            }

                                                            break label$21;

                                                        }

                                                        ;

                                                    }

                                                    $35_1 = ($35_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($35_1 | 0) < (40 | 0)) {

                                                        continue label$19

                                                    }

                                                    break label$19;

                                                }

                                                ;

                                            }

                                            label$23 : {

                                                $46_1 = HEAP16[($5_1 + 14 | 0) >> 1] | 0;

                                                $44_1 = ($46_1 | 0) > (39 | 0);

                                                if ($44_1) {

                                                    break label$23

                                                }

                                                $35_1 = $39_1 << 16 >> 16;

                                                $43_1 = $31_1 << 16 >> 16;

                                                $42_1 = $37_1 << 16 >> 16;

                                                $45_1 = $38_1 << 16 >> 16;

                                                $14_1 = $9_1;

                                                $12_1 = $46_1;

                                                label$24 : while (1) {

                                                    $11_1 = $12_1 << 16 >> 16;

                                                    $13_1 = $11_1 << 1 | 0;

                                                    $15_1 = HEAP16[(($4_1 + Math_imul($35_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                    $33_1 = HEAP16[(($4_1 + Math_imul($43_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                    $30_1 = HEAP16[(($4_1 + Math_imul($42_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                    $40_1 = HEAP16[(($4_1 + Math_imul($45_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                    $41_1 = HEAP16[($34_1 + $13_1 | 0) >> 1] | 0;

                                                    $36_1 = HEAP16[($17_1 + $13_1 | 0) >> 1] | 0;

                                                    $11_1 = HEAP16[(($4_1 + Math_imul($11_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                    HEAP16[$14_1 >> 1] = (HEAPU16[($3_1 + $13_1 | 0) >> 1] | 0) + $32_1 | 0;

                                                    HEAP16[($14_1 + 2 | 0) >> 1] = (($15_1 + ($33_1 + ($30_1 + ($40_1 + ($41_1 + ($36_1 + ($11_1 >> 1 | 0) | 0) | 0) | 0) | 0) | 0) | 0) + 4 | 0) >>> 3 | 0;

                                                    $14_1 = $14_1 + 4 | 0;

                                                    $12_1 = ($12_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($12_1 | 0) < (40 | 0)) {

                                                        continue label$24

                                                    }

                                                    break label$24;

                                                }

                                                ;

                                            }

                                            label$25 : {

                                                label$26 : {

                                                    $43_1 = HEAP16[($5_1 + 12 | 0) >> 1] | 0;

                                                    if (($43_1 | 0) <= (39 | 0)) {

                                                        break label$26

                                                    }

                                                    $32_1 = 0;

                                                    $12_1 = 1;

                                                    $16_1 = 65535;

                                                    $42_1 = $46_1;

                                                    break label$25;

                                                }

                                                $45_1 = ($16_1 << 16 >> 16 << 15 | 0) + 32768 | 0;

                                                $47_1 = $39_1 << 16 >> 16;

                                                $48_1 = $31_1 << 16 >> 16;

                                                $49_1 = $37_1 << 16 >> 16;

                                                $50_1 = $38_1 << 16 >> 16;

                                                $16_1 = 65535;

                                                $12_1 = 1;

                                                $32_1 = 0;

                                                $35_1 = $43_1;

                                                $42_1 = $46_1;

                                                label$27 : while (1) {

                                                    label$28 : {

                                                        if ($44_1) {

                                                            break label$28

                                                        }

                                                        $13_1 = $35_1 << 16 >> 16;

                                                        $14_1 = $13_1 << 1 | 0;

                                                        $40_1 = HEAPU16[($3_1 + $14_1 | 0) >> 1] | 0;

                                                        $30_1 = $4_1 + Math_imul($13_1, 80) | 0;

                                                        $41_1 = (((((HEAP16[($30_1 + $29_1 | 0) >> 1] | 0) + (HEAP16[($30_1 + $18_1 | 0) >> 1] | 0) | 0) + (HEAP16[($30_1 + ($50_1 << 1 | 0) | 0) >> 1] | 0) | 0) + (HEAP16[($30_1 + ($49_1 << 1 | 0) | 0) >> 1] | 0) | 0) + (HEAP16[($30_1 + ($48_1 << 1 | 0) | 0) >> 1] | 0) | 0) + (HEAP16[($30_1 + ($47_1 << 1 | 0) | 0) >> 1] | 0) | 0;

                                                        $36_1 = $45_1 + ((HEAP16[($30_1 + $14_1 | 0) >> 1] | 0) << 10 | 0) | 0;

                                                        $13_1 = $9_1;

                                                        $14_1 = $46_1;

                                                        label$29 : while (1) {

                                                            label$30 : {

                                                                $15_1 = (HEAPU16[$13_1 >> 1] | 0) + $40_1 | 0;

                                                                $11_1 = $15_1 << 16 >> 16;

                                                                $11_1 = Math_imul($11_1, $11_1) >>> 15 | 0;

                                                                $33_1 = ($36_1 + ((HEAP16[($13_1 + 2 | 0) >> 1] | 0) << 14 | 0) | 0) + (($41_1 + (HEAP16[($30_1 + ($14_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) | 0) << 11 | 0) | 0;

                                                                if ((Math_imul($11_1 << 16 >> 16, $12_1 << 16 >> 16) | 0) <= (Math_imul($33_1 >> 16 | 0, $16_1 << 16 >> 16) | 0)) {

                                                                    break label$30

                                                                }

                                                                $12_1 = $33_1 >>> 16 | 0;

                                                                $16_1 = $11_1;

                                                                $32_1 = $15_1;

                                                                $42_1 = $14_1;

                                                                $43_1 = $35_1;

                                                            }

                                                            $13_1 = $13_1 + 4 | 0;

                                                            $14_1 = ($14_1 + $1_1 | 0) << 16 >> 16;

                                                            if (($14_1 | 0) < (40 | 0)) {

                                                                continue label$29

                                                            }

                                                            break label$29;

                                                        }

                                                        ;

                                                    }

                                                    $35_1 = ($35_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($35_1 | 0) < (40 | 0)) {

                                                        continue label$27

                                                    }

                                                    break label$27;

                                                }

                                                ;

                                            }

                                            label$31 : {

                                                $50_1 = ($0_1 | 0) != (10 | 0);

                                                if ($50_1) {

                                                    break label$31

                                                }

                                                label$32 : {

                                                    $49_1 = HEAP16[($5_1 + 18 | 0) >> 1] | 0;

                                                    $29_1 = ($49_1 | 0) > (39 | 0);

                                                    if ($29_1) {

                                                        break label$32

                                                    }

                                                    $51_1 = $42_1 << 16 >> 16;

                                                    $44_1 = $43_1 << 16 >> 16;

                                                    $45_1 = $39_1 << 16 >> 16;

                                                    $46_1 = $31_1 << 16 >> 16;

                                                    $47_1 = $37_1 << 16 >> 16;

                                                    $48_1 = $38_1 << 16 >> 16;

                                                    $14_1 = $9_1;

                                                    $16_1 = $49_1;

                                                    label$33 : while (1) {

                                                        $11_1 = $16_1 << 16 >> 16;

                                                        $13_1 = $11_1 << 1 | 0;

                                                        $15_1 = HEAP16[(($4_1 + Math_imul($51_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                        $33_1 = HEAP16[(($4_1 + Math_imul($44_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                        $30_1 = HEAP16[(($4_1 + Math_imul($45_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                        $40_1 = HEAP16[(($4_1 + Math_imul($46_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                        $41_1 = HEAP16[(($4_1 + Math_imul($47_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                        $36_1 = HEAP16[(($4_1 + Math_imul($48_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                        $35_1 = HEAP16[($34_1 + $13_1 | 0) >> 1] | 0;

                                                        $52_1 = HEAP16[($17_1 + $13_1 | 0) >> 1] | 0;

                                                        $11_1 = HEAP16[(($4_1 + Math_imul($11_1, 80) | 0) + $13_1 | 0) >> 1] | 0;

                                                        HEAP16[$14_1 >> 1] = (HEAPU16[($3_1 + $13_1 | 0) >> 1] | 0) + $32_1 | 0;

                                                        HEAP16[($14_1 + 2 | 0) >> 1] = (($15_1 + ($33_1 + ($30_1 + ($40_1 + ($41_1 + ($36_1 + ($35_1 + ($52_1 + ($11_1 >> 1 | 0) | 0) | 0) | 0) | 0) | 0) | 0) | 0) | 0) + 4 | 0) >>> 3 | 0;

                                                        $14_1 = $14_1 + 4 | 0;

                                                        $16_1 = ($16_1 + $1_1 | 0) << 16 >> 16;

                                                        if (($16_1 | 0) < (40 | 0)) {

                                                            continue label$33

                                                        }

                                                        break label$33;

                                                    }

                                                    ;

                                                }

                                                label$34 : {

                                                    $52_1 = HEAP16[($5_1 + 16 | 0) >> 1] | 0;

                                                    if (($52_1 | 0) <= (39 | 0)) {

                                                        break label$34

                                                    }

                                                    $12_1 = 1;

                                                    $16_1 = 65535;

                                                    $51_1 = $49_1;

                                                    break label$31;

                                                }

                                                $35_1 = ($12_1 << 16 >> 16 << 15 | 0) + 32768 | 0;

                                                $32_1 = $42_1 << 16 >> 16;

                                                $44_1 = $43_1 << 16 >> 16;

                                                $45_1 = $39_1 << 16 >> 16;

                                                $46_1 = $31_1 << 16 >> 16;

                                                $47_1 = $37_1 << 16 >> 16;

                                                $48_1 = $38_1 << 16 >> 16;

                                                $16_1 = 65535;

                                                $12_1 = 1;

                                                $36_1 = $52_1;

                                                $51_1 = $49_1;

                                                label$35 : while (1) {

                                                    label$36 : {

                                                        if ($29_1) {

                                                            break label$36

                                                        }

                                                        $14_1 = $36_1 << 16 >> 16;

                                                        $13_1 = $14_1 << 1 | 0;

                                                        $33_1 = HEAPU16[($3_1 + $13_1 | 0) >> 1] | 0;

                                                        $30_1 = (((((((HEAP16[($34_1 + $13_1 | 0) >> 1] | 0) + (HEAP16[($17_1 + $13_1 | 0) >> 1] | 0) | 0) + (HEAP16[(($4_1 + Math_imul($48_1, 80) | 0) + $13_1 | 0) >> 1] | 0) | 0) + (HEAP16[(($4_1 + Math_imul($47_1, 80) | 0) + $13_1 | 0) >> 1] | 0) | 0) + (HEAP16[(($4_1 + Math_imul($46_1, 80) | 0) + $13_1 | 0) >> 1] | 0) | 0) + (HEAP16[(($4_1 + Math_imul($45_1, 80) | 0) + $13_1 | 0) >> 1] | 0) | 0) + (HEAP16[(($4_1 + Math_imul($44_1, 80) | 0) + $13_1 | 0) >> 1] | 0) | 0) + (HEAP16[(($4_1 + Math_imul($32_1, 80) | 0) + $13_1 | 0) >> 1] | 0) | 0;

                                                        $40_1 = $4_1 + Math_imul($14_1, 80) | 0;

                                                        $41_1 = $35_1 + ((HEAP16[($40_1 + $13_1 | 0) >> 1] | 0) << 9 | 0) | 0;

                                                        $13_1 = $9_1;

                                                        $14_1 = $49_1;

                                                        label$37 : while (1) {

                                                            label$38 : {

                                                                $11_1 = ((HEAPU16[$13_1 >> 1] | 0) + $33_1 | 0) << 16 >> 16;

                                                                $11_1 = Math_imul($11_1, $11_1) >>> 15 | 0;

                                                                $15_1 = ($41_1 + ((HEAP16[($13_1 + 2 | 0) >> 1] | 0) << 13 | 0) | 0) + (($30_1 + (HEAP16[($40_1 + ($14_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0) | 0) << 10 | 0) | 0;

                                                                if ((Math_imul($11_1 << 16 >> 16, $12_1 << 16 >> 16) | 0) <= (Math_imul($15_1 >> 16 | 0, $16_1 << 16 >> 16) | 0)) {

                                                                    break label$38

                                                                }

                                                                $12_1 = $15_1 >>> 16 | 0;

                                                                $16_1 = $11_1;

                                                                $51_1 = $14_1;

                                                                $52_1 = $36_1;

                                                            }

                                                            $13_1 = $13_1 + 4 | 0;

                                                            $14_1 = ($14_1 + $1_1 | 0) << 16 >> 16;

                                                            if (($14_1 | 0) < (40 | 0)) {

                                                                continue label$37

                                                            }

                                                            break label$37;

                                                        }

                                                        ;

                                                    }

                                                    $36_1 = ($36_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($36_1 | 0) < (40 | 0)) {

                                                        continue label$35

                                                    }

                                                    break label$35;

                                                }

                                                ;

                                            }

                                            label$39 : {

                                                label$40 : {

                                                    label$41 : {

                                                        label$42 : {

                                                            if ((Math_imul($16_1 << 16 >> 16, $27_1 << 16 >> 16) | 0) <= (Math_imul($12_1 << 16 >> 16, $23_1 << 16 >> 16) | 0)) {

                                                                break label$42

                                                            }

                                                            HEAP16[($7_1 + 14 | 0) >> 1] = $42_1;

                                                            HEAP16[($7_1 + 12 | 0) >> 1] = $43_1;

                                                            HEAP16[($7_1 + 10 | 0) >> 1] = $39_1;

                                                            HEAP16[($7_1 + 8 | 0) >> 1] = $31_1;

                                                            HEAP16[($7_1 + 6 | 0) >> 1] = $37_1;

                                                            HEAP16[($7_1 + 4 | 0) >> 1] = $38_1;

                                                            HEAP16[($7_1 + 2 | 0) >> 1] = $28_1;

                                                            HEAP16[$7_1 >> 1] = $10_1;

                                                            if (!$50_1) {

                                                                break label$41

                                                            }

                                                            $23_1 = $16_1;

                                                            $27_1 = $12_1;

                                                        }

                                                        $13_1 = HEAPU16[$21_1 >> 1] | 0;

                                                        if (($0_1 | 0) < (3 | 0)) {

                                                            break label$39

                                                        }

                                                        break label$40;

                                                    }

                                                    HEAP16[($7_1 + 18 | 0) >> 1] = $51_1;

                                                    HEAP16[($7_1 + 16 | 0) >> 1] = $52_1;

                                                    $13_1 = HEAPU16[$21_1 >> 1] | 0;

                                                    $27_1 = $12_1;

                                                    $23_1 = $16_1;

                                                }

                                                $228($21_1 | 0, $20_1 | 0, $24_1 | 0) | 0;

                                            }

                                            HEAP16[$25_1 >> 1] = $13_1;

                                            $26_1 = ($26_1 + 1 | 0) << 16 >> 16;

                                            if (($26_1 | 0) < ($2_1 | 0)) {

                                                continue label$6

                                            }

                                            break label$6;

                                        }

                                        ;

                                    }

                                    global$0 = $9_1 + 160 | 0;

                                }



                                function $157($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $4_1 = 0, $8_1 = 0, $5_1 = 0, $6_1 = 0, $49_1 = 0, $62_1 = 0,

                                        $77_1 = 0, $92_1 = 0, $107_1 = 0, $172_1 = 0, $185_1 = 0, $200_1 = 0,

                                        $215_1 = 0, $230_1 = 0, $295 = 0, $308 = 0, $323 = 0, $338 = 0, $353 = 0,

                                        $418 = 0, $431 = 0, $446 = 0, $461 = 0, $476 = 0, $541 = 0, $554 = 0, $569 = 0,

                                        $584 = 0, $599 = 0;

                                    $4_1 = 39;

                                    label$1 : while (1) {

                                        $5_1 = $4_1;

                                        $6_1 = $4_1 << 1 | 0;

                                        $7_1 = $1_1 + $6_1 | 0;

                                        label$2 : {

                                            label$3 : {

                                                $8_1 = $0_1 + $6_1 | 0;

                                                $4_1 = HEAP16[$8_1 >> 1] | 0;

                                                if (($4_1 | 0) < (0 | 0)) {

                                                    break label$3

                                                }

                                                HEAP16[$7_1 >> 1] = 32767;

                                                break label$2;

                                            }

                                            HEAP16[$7_1 >> 1] = 32769;

                                            $4_1 = ($4_1 | 0) == (-32768 | 0) ? 32767 : 0 - $4_1 | 0;

                                            HEAP16[$8_1 >> 1] = $4_1;

                                        }

                                        HEAP16[($2_1 + $6_1 | 0) >> 1] = $4_1;

                                        $4_1 = $5_1 + -1 | 0;

                                        if ($5_1) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    label$4 : {

                                        if (($3_1 | 0) >= (8 | 0)) {

                                            break label$4

                                        }

                                        $0_1 = 8 - $3_1 | 0;

                                        $4_1 = 0;

                                        $6_1 = 0;

                                        label$5 : while (1) {

                                            $5_1 = HEAPU16[$2_1 >> 1] | 0;

                                            $7_1 = $5_1 >>> 0 < 32767 >>> 0;

                                            $49_1 = $7_1 ? 0 : $4_1;

                                            $4_1 = HEAP16[($2_1 + 10 | 0) >> 1] | 0;

                                            $7_1 = $7_1 ? $5_1 : 32767;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 | 0) | 0;

                                            $62_1 = $8_1 ? 5 : $49_1;

                                            $5_1 = HEAP16[($2_1 + 20 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $77_1 = $8_1 ? 10 : $62_1;

                                            $4_1 = HEAP16[($2_1 + 30 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $92_1 = $8_1 ? 15 : $77_1;

                                            $5_1 = HEAP16[($2_1 + 40 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $107_1 = $8_1 ? 20 : $92_1;

                                            $4_1 = HEAP16[($2_1 + 50 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $5_1 = HEAP16[($2_1 + 60 | 0) >> 1] | 0;

                                            $4_1 = $8_1 ? $4_1 : $7_1;

                                            $7_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($4_1 << 16 >> 16 | 0) | 0;

                                            $8_1 = $7_1 ? 30 : $8_1 ? 25 : $107_1;

                                            $1_1 = HEAP16[($2_1 + 70 | 0) >> 1] | 0;

                                            $4_1 = ($1_1 | 0) > (-1 | 0) ? (($1_1 | 0) < (($7_1 ? $5_1 : $4_1) << 16 >> 16 | 0) ? 35 : $8_1) : $8_1;

                                            HEAP16[($2_1 + (($4_1 & 65535 | 0) << 1 | 0) | 0) >> 1] = 65535;

                                            $6_1 = $6_1 + 1 | 0;

                                            if (($0_1 | 0) > ($6_1 << 16 >> 16 | 0)) {

                                                continue label$5

                                            }

                                            break label$5;

                                        }

                                        ;

                                        if (($3_1 | 0) > (7 | 0)) {

                                            break label$4

                                        }

                                        $6_1 = 0;

                                        label$6 : while (1) {

                                            $5_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                            $7_1 = $5_1 >>> 0 < 32767 >>> 0;

                                            $172_1 = $7_1 ? 1 : $4_1;

                                            $4_1 = HEAP16[($2_1 + 12 | 0) >> 1] | 0;

                                            $7_1 = $7_1 ? $5_1 : 32767;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 | 0) | 0;

                                            $185_1 = $8_1 ? 6 : $172_1;

                                            $5_1 = HEAP16[($2_1 + 22 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $200_1 = $8_1 ? 11 : $185_1;

                                            $4_1 = HEAP16[($2_1 + 32 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $215_1 = $8_1 ? 16 : $200_1;

                                            $5_1 = HEAP16[($2_1 + 42 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $230_1 = $8_1 ? 21 : $215_1;

                                            $4_1 = HEAP16[($2_1 + 52 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $5_1 = HEAP16[($2_1 + 62 | 0) >> 1] | 0;

                                            $4_1 = $8_1 ? $4_1 : $7_1;

                                            $7_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($4_1 << 16 >> 16 | 0) | 0;

                                            $8_1 = $7_1 ? 31 : $8_1 ? 26 : $230_1;

                                            $1_1 = HEAP16[($2_1 + 72 | 0) >> 1] | 0;

                                            $4_1 = ($1_1 | 0) > (-1 | 0) ? (($1_1 | 0) < (($7_1 ? $5_1 : $4_1) << 16 >> 16 | 0) ? 36 : $8_1) : $8_1;

                                            HEAP16[($2_1 + (($4_1 & 65535 | 0) << 1 | 0) | 0) >> 1] = 65535;

                                            $6_1 = $6_1 + 1 | 0;

                                            if (($0_1 | 0) > ($6_1 << 16 >> 16 | 0)) {

                                                continue label$6

                                            }

                                            break label$6;

                                        }

                                        ;

                                        if (($3_1 | 0) > (7 | 0)) {

                                            break label$4

                                        }

                                        $6_1 = 0;

                                        label$7 : while (1) {

                                            $5_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                            $7_1 = $5_1 >>> 0 < 32767 >>> 0;

                                            $295 = $7_1 ? 2 : $4_1;

                                            $4_1 = HEAP16[($2_1 + 14 | 0) >> 1] | 0;

                                            $7_1 = $7_1 ? $5_1 : 32767;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 | 0) | 0;

                                            $308 = $8_1 ? 7 : $295;

                                            $5_1 = HEAP16[($2_1 + 24 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $323 = $8_1 ? 12 : $308;

                                            $4_1 = HEAP16[($2_1 + 34 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $338 = $8_1 ? 17 : $323;

                                            $5_1 = HEAP16[($2_1 + 44 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $353 = $8_1 ? 22 : $338;

                                            $4_1 = HEAP16[($2_1 + 54 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $5_1 = HEAP16[($2_1 + 64 | 0) >> 1] | 0;

                                            $4_1 = $8_1 ? $4_1 : $7_1;

                                            $7_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($4_1 << 16 >> 16 | 0) | 0;

                                            $8_1 = $7_1 ? 32 : $8_1 ? 27 : $353;

                                            $1_1 = HEAP16[($2_1 + 74 | 0) >> 1] | 0;

                                            $4_1 = ($1_1 | 0) > (-1 | 0) ? (($1_1 | 0) < (($7_1 ? $5_1 : $4_1) << 16 >> 16 | 0) ? 37 : $8_1) : $8_1;

                                            HEAP16[($2_1 + (($4_1 & 65535 | 0) << 1 | 0) | 0) >> 1] = 65535;

                                            $6_1 = $6_1 + 1 | 0;

                                            if (($0_1 | 0) > ($6_1 << 16 >> 16 | 0)) {

                                                continue label$7

                                            }

                                            break label$7;

                                        }

                                        ;

                                        if (($3_1 | 0) > (7 | 0)) {

                                            break label$4

                                        }

                                        $6_1 = 0;

                                        label$8 : while (1) {

                                            $5_1 = HEAPU16[($2_1 + 6 | 0) >> 1] | 0;

                                            $7_1 = $5_1 >>> 0 < 32767 >>> 0;

                                            $418 = $7_1 ? 3 : $4_1;

                                            $4_1 = HEAP16[($2_1 + 16 | 0) >> 1] | 0;

                                            $7_1 = $7_1 ? $5_1 : 32767;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 | 0) | 0;

                                            $431 = $8_1 ? 8 : $418;

                                            $5_1 = HEAP16[($2_1 + 26 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $446 = $8_1 ? 13 : $431;

                                            $4_1 = HEAP16[($2_1 + 36 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $461 = $8_1 ? 18 : $446;

                                            $5_1 = HEAP16[($2_1 + 46 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $476 = $8_1 ? 23 : $461;

                                            $4_1 = HEAP16[($2_1 + 56 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $5_1 = HEAP16[($2_1 + 66 | 0) >> 1] | 0;

                                            $4_1 = $8_1 ? $4_1 : $7_1;

                                            $7_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($4_1 << 16 >> 16 | 0) | 0;

                                            $8_1 = $7_1 ? 33 : $8_1 ? 28 : $476;

                                            $1_1 = HEAP16[($2_1 + 76 | 0) >> 1] | 0;

                                            $4_1 = ($1_1 | 0) > (-1 | 0) ? (($1_1 | 0) < (($7_1 ? $5_1 : $4_1) << 16 >> 16 | 0) ? 38 : $8_1) : $8_1;

                                            HEAP16[($2_1 + (($4_1 & 65535 | 0) << 1 | 0) | 0) >> 1] = 65535;

                                            $6_1 = $6_1 + 1 | 0;

                                            if (($0_1 | 0) > ($6_1 << 16 >> 16 | 0)) {

                                                continue label$8

                                            }

                                            break label$8;

                                        }

                                        ;

                                        if (($3_1 | 0) > (7 | 0)) {

                                            break label$4

                                        }

                                        $6_1 = 0;

                                        label$9 : while (1) {

                                            $5_1 = HEAPU16[($2_1 + 8 | 0) >> 1] | 0;

                                            $7_1 = $5_1 >>> 0 < 32767 >>> 0;

                                            $541 = $7_1 ? 4 : $4_1;

                                            $4_1 = HEAP16[($2_1 + 18 | 0) >> 1] | 0;

                                            $7_1 = $7_1 ? $5_1 : 32767;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 | 0) | 0;

                                            $554 = $8_1 ? 9 : $541;

                                            $5_1 = HEAP16[($2_1 + 28 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $569 = $8_1 ? 14 : $554;

                                            $4_1 = HEAP16[($2_1 + 38 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $584 = $8_1 ? 19 : $569;

                                            $5_1 = HEAP16[($2_1 + 48 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $4_1 : $7_1;

                                            $8_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $599 = $8_1 ? 24 : $584;

                                            $4_1 = HEAP16[($2_1 + 58 | 0) >> 1] | 0;

                                            $7_1 = $8_1 ? $5_1 : $7_1;

                                            $8_1 = ($4_1 | 0) > (-1 | 0) & ($4_1 | 0) < ($7_1 << 16 >> 16 | 0) | 0;

                                            $5_1 = HEAP16[($2_1 + 68 | 0) >> 1] | 0;

                                            $4_1 = $8_1 ? $4_1 : $7_1;

                                            $7_1 = ($5_1 | 0) > (-1 | 0) & ($5_1 | 0) < ($4_1 << 16 >> 16 | 0) | 0;

                                            $8_1 = $7_1 ? 34 : $8_1 ? 29 : $599;

                                            $1_1 = HEAP16[($2_1 + 78 | 0) >> 1] | 0;

                                            $4_1 = ($1_1 | 0) > (-1 | 0) ? (($1_1 | 0) < (($7_1 ? $5_1 : $4_1) << 16 >> 16 | 0) ? 39 : $8_1) : $8_1;

                                            HEAP16[($2_1 + (($4_1 & 65535 | 0) << 1 | 0) | 0) >> 1] = 65535;

                                            $6_1 = $6_1 + 1 | 0;

                                            if (($0_1 | 0) > ($6_1 << 16 >> 16 | 0)) {

                                                continue label$9

                                            }

                                            break label$9;

                                        }

                                        ;

                                    }

                                }



                                function $158($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $12_1 = 0, $13_1 = 0, $15_1 = 0, $14_1 = 0, $11_1 = 0, $9_1 = 0, $10_1 = 0,

                                        $8_1 = 0, $16_1 = 0, $17_1 = 0, $178_1 = 0;

                                    $8_1 = global$0 - 80 | 0;

                                    global$0 = $8_1;

                                    $9_1 = 256;

                                    $10_1 = 40;

                                    $11_1 = $0_1;

                                    $12_1 = $1_1;

                                    $13_1 = 256;

                                    label$1 : while (1) {

                                        $14_1 = $13_1;

                                        $15_1 = $11_1;

                                        $13_1 = 2147483647;

                                        label$2 : {

                                            label$3 : {

                                                $11_1 = HEAP16[$12_1 >> 1] | 0;

                                                $11_1 = Math_imul($11_1, $11_1);

                                                if (($11_1 | 0) == (1073741824 | 0)) {

                                                    break label$3

                                                }

                                                $13_1 = ($11_1 << 1 | 0) + $14_1 | 0;

                                                if (($11_1 ^ $14_1 | 0 | 0) < (1 | 0)) {

                                                    break label$2

                                                }

                                                if (($13_1 ^ $14_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$2

                                                }

                                                $13_1 = ($14_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                        }

                                        $12_1 = $12_1 + 2 | 0;

                                        $11_1 = $15_1 + 2 | 0;

                                        $15_1 = HEAP16[$15_1 >> 1] | 0;

                                        $9_1 = (Math_imul($15_1, $15_1) << 1 | 0) + $9_1 | 0;

                                        $10_1 = $10_1 + -1 | 0;

                                        if ($10_1 & 65535 | 0) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $13_1 = $196($13_1 | 0, $7_1 | 0) | 0;

                                    $16_1 = (($13_1 + 67108864 | 0) >>> 0 < 134217728 >>> 0 ? $13_1 << 5 | 0 : ($13_1 | 0) > (-1 | 0) ? 2147418112 : -2147483648) >> 16 | 0;

                                    $15_1 = $2_1 + 78 | 0;

                                    $10_1 = $1_1 + 78 | 0;

                                    $17_1 = (($196($9_1 | 0, $7_1 | 0) | 0) << 5 | 0) >> 16 | 0;

                                    $12_1 = $8_1 + 78 | 0;

                                    $9_1 = 39;

                                    label$4 : while (1) {

                                        $13_1 = 2147483647;

                                        label$5 : {

                                            label$6 : {

                                                $14_1 = $9_1;

                                                $1_1 = $0_1 + ($14_1 << 1 | 0) | 0;

                                                $11_1 = HEAP16[$1_1 >> 1] | 0;

                                                $9_1 = Math_imul($17_1, $11_1);

                                                if (($9_1 | 0) == (1073741824 | 0)) {

                                                    break label$6

                                                }

                                                $2_1 = Math_imul($16_1, HEAP16[$10_1 >> 1] | 0);

                                                $13_1 = ($9_1 + $2_1 | 0) << 1 | 0;

                                                $2_1 = $2_1 << 1 | 0;

                                                if (($9_1 ^ $2_1 | 0 | 0) < (1 | 0)) {

                                                    break label$5

                                                }

                                                if (($13_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$5

                                                }

                                                $13_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                        }

                                        label$7 : {

                                            label$8 : {

                                                $13_1 = $220((($13_1 + 2097152 | 0) >>> 0 < 4194304 >>> 0 ? $13_1 << 10 | 0 : ($13_1 >> 31 | 0) ^ 2147483647 | 0) | 0, $7_1 | 0) | 0;

                                                if (($13_1 | 0) < (0 | 0)) {

                                                    break label$8

                                                }

                                                HEAP16[$15_1 >> 1] = 32767;

                                                break label$7;

                                            }

                                            HEAP16[$15_1 >> 1] = 32769;

                                            HEAP16[$1_1 >> 1] = ($11_1 | 0) == (-32768 | 0) ? 32767 : 0 - $11_1 | 0;

                                            $13_1 = ($13_1 | 0) == (-32768 | 0) ? 32767 : 0 - $13_1 | 0;

                                        }

                                        $10_1 = $10_1 + -2 | 0;

                                        HEAP16[$12_1 >> 1] = $13_1;

                                        $9_1 = $14_1 + -1 | 0;

                                        $12_1 = $12_1 + -2 | 0;

                                        $15_1 = $15_1 + -2 | 0;

                                        if ($14_1) {

                                            continue label$4

                                        }

                                        break label$4;

                                    }

                                    ;

                                    $7_1 = 0;

                                    label$9 : {

                                        label$10 : {

                                            if (($4_1 | 0) > (0 | 0)) {

                                                break label$10

                                            }

                                            HEAP16[($5_1 + ($4_1 << 1 | 0) | 0) >> 1] = HEAPU16[$5_1 >> 1] | 0;

                                            break label$9;

                                        }

                                        $10_1 = 65535;

                                        $9_1 = $4_1 & 65535 | 0;

                                        $15_1 = 0;

                                        label$11 : while (1) {

                                            label$12 : {

                                                label$13 : {

                                                    if ($7_1 >>> 0 <= 39 >>> 0) {

                                                        break label$13

                                                    }

                                                    $12_1 = 65535;

                                                    break label$12;

                                                }

                                                $12_1 = 65535;

                                                $13_1 = $7_1;

                                                label$14 : while (1) {

                                                    $14_1 = HEAP16[($8_1 + ($13_1 << 16 >> 16 << 1 | 0) | 0) >> 1] | 0;

                                                    $178_1 = $14_1;

                                                    $12_1 = $12_1 << 16 >> 16;

                                                    $14_1 = ($14_1 | 0) > ($12_1 | 0);

                                                    $12_1 = $14_1 ? $178_1 : $12_1;

                                                    $15_1 = $14_1 ? $13_1 : $15_1;

                                                    $13_1 = ($13_1 + $6_1 | 0) << 16 >> 16;

                                                    if (($13_1 | 0) < (40 | 0)) {

                                                        continue label$14

                                                    }

                                                    break label$14;

                                                }

                                                ;

                                            }

                                            HEAP16[($3_1 + ($7_1 << 1 | 0) | 0) >> 1] = $15_1;

                                            label$15 : {

                                                if (($12_1 << 16 >> 16 | 0) <= ($10_1 << 16 >> 16 | 0)) {

                                                    break label$15

                                                }

                                                HEAP16[$5_1 >> 1] = $7_1;

                                                $10_1 = $12_1;

                                            }

                                            $7_1 = $7_1 + 1 | 0;

                                            if (($7_1 | 0) != ($9_1 | 0)) {

                                                continue label$11

                                            }

                                            break label$11;

                                        }

                                        ;

                                        $13_1 = 1;

                                        $12_1 = HEAPU16[$5_1 >> 1] | 0;

                                        HEAP16[($5_1 + ($4_1 << 1 | 0) | 0) >> 1] = $12_1;

                                        if (($4_1 | 0) < (2 | 0)) {

                                            break label$9

                                        }

                                        $15_1 = ($4_1 & 65535 | 0) + -1 | 0;

                                        $7_1 = $15_1 & 1 | 0;

                                        label$16 : {

                                            if (($4_1 | 0) == (2 | 0)) {

                                                break label$16

                                            }

                                            $6_1 = $15_1 & -2 | 0;

                                            $13_1 = 1;

                                            $15_1 = 0;

                                            label$17 : while (1) {

                                                $12_1 = $12_1 + 1 | 0;

                                                $12_1 = ($12_1 << 16 >> 16 | 0) < ($4_1 | 0) ? $12_1 : 0;

                                                HEAP16[($5_1 + ($13_1 << 1 | 0) | 0) >> 1] = $12_1;

                                                HEAP16[($5_1 + (($13_1 + $4_1 | 0) << 1 | 0) | 0) >> 1] = $12_1;

                                                $14_1 = $13_1 + 1 | 0;

                                                $12_1 = $12_1 + 1 | 0;

                                                $12_1 = ($12_1 << 16 >> 16 | 0) < ($4_1 | 0) ? $12_1 : 0;

                                                HEAP16[($5_1 + ($14_1 << 1 | 0) | 0) >> 1] = $12_1;

                                                HEAP16[($5_1 + (($14_1 + $4_1 | 0) << 1 | 0) | 0) >> 1] = $12_1;

                                                $13_1 = $13_1 + 2 | 0;

                                                $15_1 = $15_1 + 2 | 0;

                                                if (($15_1 | 0) != ($6_1 | 0)) {

                                                    continue label$17

                                                }

                                                break label$17;

                                            }

                                            ;

                                        }

                                        if (!$7_1) {

                                            break label$9

                                        }

                                        $12_1 = $12_1 + 1 | 0;

                                        $12_1 = ($12_1 << 16 >> 16 | 0) < ($4_1 | 0) ? $12_1 : 0;

                                        HEAP16[($5_1 + ($13_1 << 1 | 0) | 0) >> 1] = $12_1;

                                        HEAP16[($5_1 + (($13_1 + $4_1 | 0) << 1 | 0) | 0) >> 1] = $12_1;

                                    }

                                    global$0 = $8_1 + 80 | 0;

                                }



                                function $159($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, $1_1 = 0, $3_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(12 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP16[$2_1 >> 1] = 8;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        HEAP32[($2_1 + 8 | 0) >> 2] = 0;

                                        $3_1 = 3;

                                        HEAP16[($2_1 + 2 | 0) >> 1] = $3_1;

                                        HEAP16[($2_1 + 4 | 0) >> 1] = $3_1 >>> 16 | 0;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $160($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $161($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (($1_1 | 0) != (8 | 0)) {

                                                break label$2

                                            }

                                            $1_1 = (HEAPU16[($0_1 + 2 | 0) >> 1] | 0) + -1 | 0;

                                            HEAP16[($0_1 + 2 | 0) >> 1] = $1_1;

                                            label$3 : {

                                                if (HEAP32[($0_1 + 8 | 0) >> 2] | 0) {

                                                    break label$3

                                                }

                                                HEAP32[$2_1 >> 2] = 1;

                                                HEAP16[($0_1 + 2 | 0) >> 1] = 3;

                                                break label$1;

                                            }

                                            $1_1 = $1_1 << 16 >> 16;

                                            label$4 : {

                                                if ((HEAP16[($0_1 + 4 | 0) >> 1] | 0 | 0) < (1 | 0)) {

                                                    break label$4

                                                }

                                                if (($1_1 | 0) < (3 | 0)) {

                                                    break label$4

                                                }

                                                HEAP32[$2_1 >> 2] = 2;

                                                HEAP16[($0_1 + 4 | 0) >> 1] = (HEAPU16[($0_1 + 4 | 0) >> 1] | 0) + -1 | 0;

                                                break label$1;

                                            }

                                            label$5 : {

                                                if ($1_1) {

                                                    break label$5

                                                }

                                                HEAP32[$2_1 >> 2] = 2;

                                                HEAP16[($0_1 + 2 | 0) >> 1] = HEAPU16[$0_1 >> 1] | 0;

                                                break label$1;

                                            }

                                            HEAP32[$2_1 >> 2] = 3;

                                            break label$1;

                                        }

                                        HEAP16[($0_1 + 2 | 0) >> 1] = HEAPU16[$0_1 >> 1] | 0;

                                        HEAP32[$2_1 >> 2] = 0;

                                    }

                                    HEAP32[($0_1 + 8 | 0) >> 2] = HEAP32[$2_1 >> 2] | 0;

                                }



                                function $162($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $4_1 = 0, $3_1 = 0;

                                    $3_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $4_1 = $231(12 | 0) | 0;

                                        if (!$4_1) {

                                            break label$1

                                        }

                                        HEAP32[($4_1 + 8 | 0) >> 2] = $1_1;

                                        HEAP32[$4_1 >> 2] = 0;

                                        HEAP32[($4_1 + 4 | 0) >> 2] = 0;

                                        $3_1 = $4_1 + 4 | 0;

                                        label$2 : {

                                            label$3 : {

                                                if ($144($4_1 | 0) | 0) {

                                                    break label$3

                                                }

                                                if (!($87($3_1 | 0, HEAP32[($4_1 + 8 | 0) >> 2] | 0 | 0) | 0)) {

                                                    break label$2

                                                }

                                            }

                                            $146($4_1 | 0);

                                            $88($3_1 | 0);

                                            $232($4_1 | 0);

                                            return 65535 << 16 >> 16 | 0;

                                        }

                                        $145(HEAP32[$4_1 >> 2] | 0 | 0) | 0;

                                        $89(HEAP32[($4_1 + 4 | 0) >> 2] | 0 | 0) | 0;

                                        HEAP32[$0_1 >> 2] = $4_1;

                                        $3_1 = 0;

                                    }

                                    return $3_1 << 16 >> 16 | 0;

                                }



                                function $163($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $146($1_1 | 0);

                                        $88((HEAP32[$0_1 >> 2] | 0) + 4 | 0 | 0);

                                        $232(HEAP32[$0_1 >> 2] | 0 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $164($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $8_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0;

                                    $5_1 = global$0 - 448 | 0;

                                    global$0 = $5_1;

                                    $6_1 = 0;

                                    $7_1 = $229($3_1 | 0, 0 | 0, 488 | 0) | 0;

                                    label$1 : while (1) {

                                        $3_1 = $2_1 + ($6_1 << 1 | 0) | 0;

                                        HEAP16[$3_1 >> 1] = (HEAPU16[$3_1 >> 1] | 0) & 65528 | 0;

                                        $8_1 = $3_1 + 2 | 0;

                                        HEAP16[$8_1 >> 1] = (HEAPU16[$8_1 >> 1] | 0) & 65528 | 0;

                                        $8_1 = $3_1 + 4 | 0;

                                        HEAP16[$8_1 >> 1] = (HEAPU16[$8_1 >> 1] | 0) & 65528 | 0;

                                        $8_1 = $3_1 + 6 | 0;

                                        HEAP16[$8_1 >> 1] = (HEAPU16[$8_1 >> 1] | 0) & 65528 | 0;

                                        $3_1 = $3_1 + 8 | 0;

                                        HEAP16[$3_1 >> 1] = (HEAPU16[$3_1 >> 1] | 0) & 65528 | 0;

                                        $6_1 = $6_1 + 5 | 0;

                                        if (($6_1 | 0) != (160 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $147(HEAP32[$0_1 >> 2] | 0 | 0, $2_1 | 0, 160 | 0);

                                    $90(HEAP32[($0_1 + 4 | 0) >> 2] | 0 | 0, $1_1 | 0, $2_1 | 0, $5_1 + 320 | 0 | 0, $4_1 | 0, $5_1 | 0) | 0;

                                    $148(HEAP32[$4_1 >> 2] | 0 | 0, $5_1 + 320 | 0 | 0, $7_1 | 0, (HEAP32[($0_1 + 4 | 0) >> 2] | 0) + 2392 | 0 | 0);

                                    global$0 = $5_1 + 448 | 0;

                                }



                                function $165($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1, $12_1, $13_1, $14_1, $15_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    $12_1 = $12_1 | 0;

                                    $13_1 = $13_1 | 0;

                                    $14_1 = $14_1 | 0;

                                    $15_1 = $15_1 | 0;

                                    var i64toi32_i32$0 = 0, $16_1 = 0, i64toi32_i32$1 = 0, $22_1 = 0, $23_1 = 0,

                                        $24_1 = 0, $35_1 = 0, $39_1 = 0, $42_1 = 0;

                                    $16_1 = global$0 - 64 | 0;

                                    global$0 = $16_1;

                                    $226($4_1 | 0, (($0_1 & -2 | 0 | 0) == (6 | 0) ? $2_1 : $1_1) | 0, $16_1 + 32 | 0 | 0);

                                    $226($4_1 | 0, $3_1 | 0, $16_1 | 0);

                                    i64toi32_i32$0 = HEAPU16[($16_1 + 46 | 0) >> 1] | 0 | ((HEAPU16[($16_1 + 48 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[($16_1 + 50 | 0) >> 1] | 0 | ((HEAPU16[($16_1 + 52 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $35_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1 + 14 | 0;

                                    $22_1 = $35_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $22_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $22_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    i64toi32_i32$1 = HEAP32[($16_1 + 40 | 0) >> 2] | 0;

                                    i64toi32_i32$0 = HEAP32[($16_1 + 44 | 0) >> 2] | 0;

                                    $39_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $10_1 + 8 | 0;

                                    $23_1 = $39_1;

                                    HEAP16[i64toi32_i32$1 >> 1] = $23_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $23_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = HEAP32[($16_1 + 32 | 0) >> 2] | 0;

                                    i64toi32_i32$1 = HEAP32[($16_1 + 36 | 0) >> 2] | 0;

                                    $42_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $10_1;

                                    $24_1 = $42_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $24_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $24_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    $225($5_1 | 0, i64toi32_i32$0 | 0, $12_1 | 0, 40 | 0, $9_1 | 0, 0 | 0);

                                    $225($16_1 | 0, $12_1 | 0, $12_1 | 0, 40 | 0, $9_1 | 0, 0 | 0);

                                    $219($5_1 | 0, $6_1 | 0, $14_1 | 0, 40 | 0);

                                    $225($5_1 | 0, $227($11_1 | 0, $14_1 | 0, 80 | 0) | 0 | 0, $15_1 | 0, 40 | 0, $7_1 | 0, 0 | 0);

                                    $219($16_1 + 32 | 0 | 0, $15_1 | 0, $13_1 | 0, 40 | 0);

                                    $225($16_1 | 0, $13_1 | 0, $13_1 | 0, 40 | 0, $8_1 | 0, 0 | 0);

                                    global$0 = $16_1 + 64 | 0;

                                }



                                function $166($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1, $8_1, $9_1, $10_1, $11_1, $12_1, $13_1, $14_1, $15_1, $16_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    $8_1 = $8_1 | 0;

                                    $9_1 = $9_1 | 0;

                                    $10_1 = $10_1 | 0;

                                    $11_1 = $11_1 | 0;

                                    $12_1 = $12_1 | 0;

                                    $13_1 = $13_1 | 0;

                                    $14_1 = $14_1 | 0;

                                    $15_1 = $15_1 | 0;

                                    $16_1 = $16_1 | 0;

                                    var $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0, $107_1 = 0;

                                    HEAP16[$15_1 >> 1] = ($3_1 | 0) < (13017 | 0) ? $3_1 : 13017;

                                    $15_1 = ($1_1 | 0) == (7 | 0);

                                    $17_1 = $15_1 ? 2 : 1;

                                    $18_1 = $3_1 >> $15_1 | 0;

                                    $19_1 = 20;

                                    $20_1 = $14_1 + ($2_1 << 1 | 0) | 0;

                                    $15_1 = $20_1;

                                    label$1 : while (1) {

                                        $14_1 = HEAP16[$8_1 >> 1] | 0;

                                        HEAP16[($15_1 + 2 | 0) >> 1] = ((((Math_imul(HEAP16[($8_1 + 2 | 0) >> 1] | 0, $4_1) + Math_imul(HEAP16[($15_1 + 2 | 0) >> 1] | 0, $18_1) | 0) << 1 | 0) << $17_1 | 0) + 32768 | 0) >>> 16 | 0;

                                        HEAP16[$15_1 >> 1] = ((((Math_imul($14_1, $4_1) + Math_imul(HEAP16[$15_1 >> 1] | 0, $18_1) | 0) << 1 | 0) << $17_1 | 0) + 32768 | 0) >>> 16 | 0;

                                        $15_1 = $15_1 + 4 | 0;

                                        $8_1 = $8_1 + 4 | 0;

                                        $19_1 = $19_1 + -1 | 0;

                                        if ($19_1 & 65535 | 0) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    $225($5_1 | 0, $20_1 | 0, $6_1 + ($2_1 << 1 | 0) | 0 | 0, 40 | 0, $11_1 | 0, 1 | 0);

                                    $19_1 = ($1_1 | 0) == (7 | 0) ? 11 : 13;

                                    $15_1 = 30;

                                    $8_1 = 0;

                                    label$2 : while (1) {

                                        $17_1 = $8_1 << 1 | 0;

                                        $18_1 = ($15_1 + $2_1 | 0) << 1 | 0;

                                        HEAP16[($12_1 + $17_1 | 0) >> 1] = (HEAPU16[($0_1 + $18_1 | 0) >> 1] | 0) - (HEAPU16[($6_1 + $18_1 | 0) >> 1] | 0) | 0;

                                        $107_1 = $13_1 + $17_1 | 0;

                                        $17_1 = $15_1 << 1 | 0;

                                        HEAP16[$107_1 >> 1] = (HEAPU16[($7_1 + $17_1 | 0) >> 1] | 0) - ((Math_imul(HEAP16[($10_1 + $17_1 | 0) >> 1] | 0, $4_1) >> $19_1 | 0) + (Math_imul(HEAP16[($9_1 + $17_1 | 0) >> 1] | 0, $3_1) >>> 14 | 0) | 0) | 0;

                                        $15_1 = $15_1 + 1 | 0;

                                        $8_1 = $8_1 + 1 | 0;

                                        if (($8_1 | 0) != (10 | 0)) {

                                            continue label$2

                                        }

                                        break label$2;

                                    }

                                    ;

                                }



                                function $167($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $1_1 = 0, $5_1 = 0, $6_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(16 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        i64toi32_i32$1 = $2_1;

                                        i64toi32_i32$0 = 0;

                                        $5_1 = 0;

                                        HEAP16[$2_1 >> 1] = $5_1;

                                        HEAP16[($2_1 + 2 | 0) >> 1] = $5_1 >>> 16 | 0;

                                        HEAP16[($2_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[($2_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 8 | 0;

                                        i64toi32_i32$0 = 0;

                                        $6_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $6_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $168($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $3_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = i64toi32_i32$1 + 8 | 0;

                                    i64toi32_i32$0 = 0;

                                    $4_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $169($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $170($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, $5_1 = 0, $6_1 = 0, $4_1 = 0, $7_1 = 0, $8_1 = 0;

                                    label$1 : {

                                        label$2 : {

                                            $3_1 = HEAPU16[($1_1 + 14 | 0) >> 1] | 0;

                                            $4_1 = ($3_1 - (HEAPU16[($1_1 + 16 | 0) >> 1] | 0) | 0) << 16 >> 16;

                                            $5_1 = HEAPU16[($1_1 + 12 | 0) >> 1] | 0;

                                            $3_1 = ($5_1 - $3_1 | 0) << 16 >> 16;

                                            $6_1 = HEAPU16[($1_1 + 10 | 0) >> 1] | 0;

                                            $5_1 = ($6_1 - $5_1 | 0) << 16 >> 16;

                                            $7_1 = HEAPU16[($1_1 + 8 | 0) >> 1] | 0;

                                            $6_1 = ($7_1 - $6_1 | 0) << 16 >> 16;

                                            $8_1 = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                            $7_1 = ($8_1 - $7_1 | 0) << 16 >> 16;

                                            $6_1 = ($6_1 | 0) < ($7_1 | 0) ? $6_1 : $7_1;

                                            $5_1 = ($5_1 | 0) < ($6_1 | 0) ? $5_1 : $6_1;

                                            $3_1 = ($3_1 | 0) < ($5_1 | 0) ? $3_1 : $5_1;

                                            if (((($4_1 | 0) < ($3_1 | 0) ? $4_1 : $3_1) | 0) < (1500 | 0)) {

                                                break label$2

                                            }

                                            $3_1 = 0;

                                            $4_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                            $1_1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                            $5_1 = ($1_1 - $8_1 | 0) << 16 >> 16;

                                            $1_1 = ($4_1 - $1_1 | 0) << 16 >> 16;

                                            if (((($4_1 | 0) > (32e3 | 0) ? 600 : ($4_1 | 0) > (30500 | 0) ? 800 : 1100) | 0) <= ((($5_1 | 0) < ($1_1 | 0) ? $5_1 : $1_1) | 0)) {

                                                break label$1

                                            }

                                        }

                                        $3_1 = (HEAPU16[$0_1 >> 1] | 0) + 1 | 0;

                                    }

                                    $1_1 = ($3_1 << 16 >> 16 | 0) > (11 | 0);

                                    HEAP16[$0_1 >> 1] = $1_1 ? 12 : $3_1;

                                    return $1_1 | 0;

                                }



                                function $171($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    return ($183($183($183($183($183($183($183($221($1_1 | 0, 3 | 0, $2_1 | 0) | 0 | 0, HEAP16[($0_1 + 2 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0 | 0, HEAP16[($0_1 + 4 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0 | 0, HEAP16[($0_1 + 6 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0 | 0, HEAP16[($0_1 + 8 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0 | 0, HEAP16[($0_1 + 10 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0 | 0, HEAP16[($0_1 + 12 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0 | 0, HEAP16[($0_1 + 14 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0 | 0) > (15565 | 0) | 0;

                                }



                                function $172($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var i64toi32_i32$0 = 0, i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, $8_1 = 0, $9_1 = 0,

                                        $10_1 = 0, $11_1 = 0, $7_1 = 0;

                                    i64toi32_i32$2 = $0_1 + 4 | 0;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $7_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1 + 2 | 0;

                                    $8_1 = $7_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $8_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $8_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    $9_1 = $0_1 + 12 | 0;

                                    $10_1 = $0_1 + 10 | 0;

                                    $11_1 = HEAPU16[$9_1 >> 1] | 0 | ((HEAPU16[($9_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[$10_1 >> 1] = $11_1;

                                    HEAP16[($10_1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 14 | 0) >> 1] = $1_1 >>> 3 | 0;

                                }



                                function $173($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, $2_1 = 0, i64toi32_i32$0 = 0, $1_1 = 0, $5_1 = 0, $6_1 = 0,

                                        $7_1 = 0, $8_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13_1 = 0,

                                        $14_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0,

                                        $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(128 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP16[($2_1 + 54 | 0) >> 1] = 0;

                                        HEAP16[($2_1 + 18 | 0) >> 1] = 150;

                                        i64toi32_i32$1 = $2_1;

                                        i64toi32_i32$0 = 9830550;

                                        $5_1 = 9830550;

                                        HEAP16[($2_1 + 36 | 0) >> 1] = $5_1;

                                        HEAP16[($2_1 + 38 | 0) >> 1] = $5_1 >>> 16 | 0;

                                        HEAP16[($2_1 + 40 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[($2_1 + 42 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1;

                                        i64toi32_i32$0 = 9830550;

                                        $6_1 = 9830550;

                                        HEAP16[$2_1 >> 1] = $6_1;

                                        HEAP16[($2_1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                        HEAP16[($2_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[($2_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $7_1 = 9830550;

                                        HEAP16[($2_1 + 8 | 0) >> 1] = $7_1;

                                        HEAP16[($2_1 + 10 | 0) >> 1] = $7_1 >>> 16 | 0;

                                        HEAP16[($2_1 + 12 | 0) >> 1] = 150;

                                        i64toi32_i32$1 = $2_1 + 110 | 0;

                                        i64toi32_i32$0 = 0;

                                        $8_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $8_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $8_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 104 | 0;

                                        i64toi32_i32$0 = 0;

                                        $9_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $9_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $9_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 96 | 0;

                                        i64toi32_i32$0 = 0;

                                        $10_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $10_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $10_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 88 | 0;

                                        i64toi32_i32$0 = 0;

                                        $11_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $11_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 80 | 0;

                                        i64toi32_i32$0 = 0;

                                        $12_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $12_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 72 | 0;

                                        i64toi32_i32$0 = 0;

                                        $13_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $13_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $13_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 20 | 0;

                                        i64toi32_i32$0 = 9830550;

                                        $14_1 = 9830550;

                                        HEAP16[i64toi32_i32$1 >> 1] = $14_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $14_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 56 | 0;

                                        i64toi32_i32$0 = 0;

                                        $15_1 = 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $15_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $15_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $16_1 = $2_1 + 44 | 0;

                                        $17_1 = 9830550;

                                        HEAP16[$16_1 >> 1] = $17_1;

                                        HEAP16[($16_1 + 2 | 0) >> 1] = $17_1 >>> 16 | 0;

                                        HEAP16[($2_1 + 28 | 0) >> 1] = 150;

                                        HEAP16[($2_1 + 64 | 0) >> 1] = 0;

                                        HEAP16[($2_1 + 48 | 0) >> 1] = 150;

                                        $18_1 = $2_1 + 66 | 0;

                                        $19_1 = 0;

                                        HEAP16[$18_1 >> 1] = $19_1;

                                        HEAP16[($18_1 + 2 | 0) >> 1] = $19_1 >>> 16 | 0;

                                        $20_1 = $2_1 + 30 | 0;

                                        $21_1 = 9830550;

                                        HEAP16[$20_1 >> 1] = $21_1;

                                        HEAP16[($20_1 + 2 | 0) >> 1] = $21_1 >>> 16 | 0;

                                        $22_1 = $2_1 + 50 | 0;

                                        $23_1 = 9830550;

                                        HEAP16[$22_1 >> 1] = $23_1;

                                        HEAP16[($22_1 + 2 | 0) >> 1] = $23_1 >>> 16 | 0;

                                        $24_1 = 9830550;

                                        HEAP16[($2_1 + 14 | 0) >> 1] = $24_1;

                                        HEAP16[($2_1 + 16 | 0) >> 1] = $24_1 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1;

                                        i64toi32_i32$0 = 0;

                                        $25_1 = 13106;

                                        HEAP16[(i64toi32_i32$1 + 118 | 0) >> 1] = $25_1;

                                        HEAP16[(i64toi32_i32$1 + 120 | 0) >> 1] = $25_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 122 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 124 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 126 | 0) >> 1] = 13106;

                                        HEAP16[(i64toi32_i32$1 + 70 | 0) >> 1] = 0;

                                        HEAP16[(i64toi32_i32$1 + 34 | 0) >> 1] = 150;

                                        HEAP32[$0_1 >> 2] = i64toi32_i32$1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $174($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0,

                                        $7_1 = 0, $8_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13_1 = 0,

                                        $14_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0,

                                        $21_1 = 0, $22_1 = 0, $23_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    HEAP16[($0_1 + 54 | 0) >> 1] = 0;

                                    HEAP16[($0_1 + 18 | 0) >> 1] = 150;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 9830550;

                                    $3_1 = 9830550;

                                    HEAP16[($0_1 + 36 | 0) >> 1] = $3_1;

                                    HEAP16[($0_1 + 38 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 40 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($0_1 + 42 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 9830550;

                                    $4_1 = 9830550;

                                    HEAP16[$0_1 >> 1] = $4_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $5_1 = 9830550;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $5_1;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $5_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 12 | 0) >> 1] = 150;

                                    i64toi32_i32$1 = $0_1 + 110 | 0;

                                    i64toi32_i32$0 = 0;

                                    $6_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $6_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 104 | 0;

                                    i64toi32_i32$0 = 0;

                                    $7_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $7_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $7_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 96 | 0;

                                    i64toi32_i32$0 = 0;

                                    $8_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $8_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $8_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 88 | 0;

                                    i64toi32_i32$0 = 0;

                                    $9_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $9_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $9_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 80 | 0;

                                    i64toi32_i32$0 = 0;

                                    $10_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $10_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $10_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 72 | 0;

                                    i64toi32_i32$0 = 0;

                                    $11_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $11_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $11_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 20 | 0;

                                    i64toi32_i32$0 = 9830550;

                                    $12_1 = 9830550;

                                    HEAP16[i64toi32_i32$1 >> 1] = $12_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $12_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 56 | 0;

                                    i64toi32_i32$0 = 0;

                                    $13_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $13_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $13_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $14_1 = $0_1 + 44 | 0;

                                    $15_1 = 9830550;

                                    HEAP16[$14_1 >> 1] = $15_1;

                                    HEAP16[($14_1 + 2 | 0) >> 1] = $15_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 28 | 0) >> 1] = 150;

                                    HEAP16[($0_1 + 64 | 0) >> 1] = 0;

                                    HEAP16[($0_1 + 48 | 0) >> 1] = 150;

                                    $16_1 = $0_1 + 66 | 0;

                                    $17_1 = 0;

                                    HEAP16[$16_1 >> 1] = $17_1;

                                    HEAP16[($16_1 + 2 | 0) >> 1] = $17_1 >>> 16 | 0;

                                    $18_1 = $0_1 + 30 | 0;

                                    $19_1 = 9830550;

                                    HEAP16[$18_1 >> 1] = $19_1;

                                    HEAP16[($18_1 + 2 | 0) >> 1] = $19_1 >>> 16 | 0;

                                    $20_1 = $0_1 + 50 | 0;

                                    $21_1 = 9830550;

                                    HEAP16[$20_1 >> 1] = $21_1;

                                    HEAP16[($20_1 + 2 | 0) >> 1] = $21_1 >>> 16 | 0;

                                    $22_1 = 9830550;

                                    HEAP16[($0_1 + 14 | 0) >> 1] = $22_1;

                                    HEAP16[($0_1 + 16 | 0) >> 1] = $22_1 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $23_1 = 13106;

                                    HEAP16[(i64toi32_i32$1 + 118 | 0) >> 1] = $23_1;

                                    HEAP16[(i64toi32_i32$1 + 120 | 0) >> 1] = $23_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 122 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 124 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 126 | 0) >> 1] = 13106;

                                    HEAP16[(i64toi32_i32$1 + 70 | 0) >> 1] = 0;

                                    HEAP16[(i64toi32_i32$1 + 34 | 0) >> 1] = 150;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $175($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $176($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    HEAP16[($0_1 + 118 | 0) >> 1] = $1_1;

                                }



                                function $177($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    label$1 : {

                                        $2_1 = $220($2_1 | 0, $3_1 | 0) | 0;

                                        if (($2_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $2_1 = Math_imul($2_1 & 65535 | 0, -42596) + $1_1 | 0;

                                        label$2 : {

                                            if (($1_1 | 0) > (-1 | 0)) {

                                                break label$2

                                            }

                                            if (($2_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                break label$2

                                            }

                                            HEAP32[$3_1 >> 2] = 1;

                                            return;

                                        }

                                        if (($2_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        HEAP16[($0_1 + 104 | 0) >> 1] = HEAPU16[($0_1 + 104 | 0) >> 1] | 0 | 16384 | 0;

                                    }

                                }



                                function $178($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $3_1 = $221(HEAP16[($0_1 + 104 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0;

                                    HEAP16[($0_1 + 104 | 0) >> 1] = $3_1;

                                    label$1 : {

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $221($3_1 | 0, 1 | 0, $2_1 | 0) | 0 | 8192 | 0), HEAP16[(wasm2js_i32$0 + 104 | 0) >> 1] = wasm2js_i32$1;

                                    }

                                }



                                function $179($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $4_1 = 0, $3_1 = 0, $40_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $3_1 = $224(HEAP16[($0_1 + 112 | 0) >> 1] | 0 | 0, HEAP16[$1_1 >> 1] | 0 | 0, $2_1 | 0) | 0;

                                    $4_1 = HEAP16[$1_1 >> 1] | 0;

                                    HEAP16[($0_1 + 112 | 0) >> 1] = $4_1;

                                    $4_1 = $224($4_1 | 0, HEAP16[($1_1 + 2 | 0) >> 1] | 0 | 0, $2_1 | 0) | 0;

                                    HEAP16[($0_1 + 112 | 0) >> 1] = HEAPU16[($1_1 + 2 | 0) >> 1] | 0;

                                    (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $221(HEAP16[($0_1 + 102 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 102 | 0) >> 1] = wasm2js_i32$1;

                                    label$1 : {

                                        $1_1 = $3_1 + ($3_1 >> 15 | 0) | 0;

                                        $40_1 = ((($1_1 << 16 >> 16 >>> 15 | 0) ^ $1_1 | 0) << 16 >> 16 | 0) < (4 | 0);

                                        $1_1 = $4_1 + ($4_1 >> 15 | 0) | 0;

                                        $1_1 = $40_1 + (((($1_1 << 16 >> 16 >>> 15 | 0) ^ $1_1 | 0) << 16 >> 16 | 0) < (4 | 0)) | 0;

                                        if (($183(HEAP16[($0_1 + 110 | 0) >> 1] | 0 | 0, $1_1 | 0, $2_1 | 0) | 0 | 0) < (4 | 0)) {

                                            break label$1

                                        }

                                        HEAP16[($0_1 + 102 | 0) >> 1] = HEAPU16[($0_1 + 102 | 0) >> 1] | 0 | 16384 | 0;

                                    }

                                    HEAP16[($0_1 + 110 | 0) >> 1] = $1_1;

                                }



                                function $180($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $5_1 = 0, $4_1 = 0, $6_1 = 0, $7_1 = 0, $3_1 = 0, $10_1 = 0, $11_1 = 0,

                                        $8_1 = 0, $12_1 = 0, $13_1 = 0, $14_1 = 0, $9_1 = 0, $15_1 = 0, $16_1 = 0,

                                        $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0, $21_1 = 0, $26_1 = 0, $27_1 = 0,

                                        $159_1 = 0, $796 = 0, $798 = 0, $1030 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $3_1 = global$0 - 352 | 0;

                                    global$0 = $3_1;

                                    $4_1 = 0;

                                    $5_1 = 0;

                                    label$1 : while (1) {

                                        $6_1 = $5_1;

                                        $5_1 = 2147483647;

                                        label$2 : {

                                            label$3 : {

                                                $7_1 = HEAP16[((($4_1 << 1 | 0) + $1_1 | 0) + -80 | 0) >> 1] | 0;

                                                $7_1 = Math_imul($7_1, $7_1);

                                                if (($7_1 | 0) == (1073741824 | 0)) {

                                                    break label$3

                                                }

                                                $5_1 = ($7_1 << 1 | 0) + $6_1 | 0;

                                                if (($7_1 ^ $6_1 | 0 | 0) < (1 | 0)) {

                                                    break label$2

                                                }

                                                if (($5_1 ^ $6_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$2

                                                }

                                                $5_1 = ($6_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$2_1 >> 2] = 1;

                                        }

                                        $4_1 = $4_1 + 1 | 0;

                                        if (($4_1 | 0) != (160 | 0)) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    label$4 : {

                                        label$5 : {

                                            label$6 : {

                                                label$7 : {

                                                    label$8 : {

                                                        if (($5_1 | 0) > (-1 | 0)) {

                                                            break label$8

                                                        }

                                                        if ((($5_1 + -343040 | 0) ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                                            break label$8

                                                        }

                                                        HEAP32[$2_1 >> 2] = 1;

                                                        break label$7;

                                                    }

                                                    if (($5_1 | 0) < (343040 | 0)) {

                                                        break label$7

                                                    }

                                                    $8_1 = $5_1 + -15e3 | 0;

                                                    break label$6;

                                                }

                                                HEAP16[($0_1 + 102 | 0) >> 1] = (HEAPU16[($0_1 + 102 | 0) >> 1] | 0) & 16383 | 0;

                                                label$9 : {

                                                    $8_1 = $5_1 + -15e3 | 0;

                                                    $9_1 = ($5_1 & ($8_1 ^ $5_1 | 0) | 0 | 0) > (-1 | 0);

                                                    if ($9_1) {

                                                        break label$9

                                                    }

                                                    HEAP32[$2_1 >> 2] = 1;

                                                    break label$5;

                                                }

                                                if (($5_1 | 0) <= (14999 | 0)) {

                                                    break label$5

                                                }

                                            }

                                            $9_1 = 1;

                                            break label$4;

                                        }

                                        HEAP16[($0_1 + 108 | 0) >> 1] = (HEAPU16[($0_1 + 108 | 0) >> 1] | 0) & 16383 | 0;

                                    }

                                    $5_1 = HEAPU16[($0_1 + 74 | 0) >> 1] | 0;

                                    $6_1 = HEAPU16[($0_1 + 72 | 0) >> 1] | 0;

                                    $4_1 = 0;

                                    label$10 : while (1) {

                                        $6_1 = $6_1 << 16 >> 16;

                                        $7_1 = $5_1 << 16 >> 16;

                                        $5_1 = $4_1 << 3 | 0;

                                        $10_1 = $224((HEAP16[($1_1 + $5_1 | 0) >> 1] | 0) >> 2 | 0 | 0, (Math_imul($6_1, 21955) >>> 15 | 0) << 16 >> 16 | 0, $2_1 | 0) | 0;

                                        $11_1 = (Math_imul($10_1, 21955) >>> 15 | 0) << 16 >> 16;

                                        $6_1 = $183($6_1 | 0, $11_1 | 0, $2_1 | 0) | 0;

                                        $12_1 = $5_1 | 2 | 0;

                                        $13_1 = $224((HEAP16[($1_1 + $12_1 | 0) >> 1] | 0) >> 2 | 0 | 0, Math_imul($7_1, 6390) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        $14_1 = Math_imul($13_1, 6390) >> 15 | 0;

                                        $7_1 = $183($7_1 | 0, $14_1 | 0, $2_1 | 0) | 0;

                                        (wasm2js_i32$0 = ($3_1 + 32 | 0) + $5_1 | 0, wasm2js_i32$1 = $183($6_1 | 0, $7_1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        (wasm2js_i32$0 = ($3_1 + 32 | 0) + $12_1 | 0, wasm2js_i32$1 = $224($6_1 | 0, $7_1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $6_1 = $5_1 | 4 | 0;

                                        $159_1 = ($3_1 + 32 | 0) + $6_1 | 0;

                                        $6_1 = $224((HEAP16[($1_1 + $6_1 | 0) >> 1] | 0) >> 2 | 0 | 0, $11_1 | 0, $2_1 | 0) | 0;

                                        $7_1 = $183($10_1 | 0, (Math_imul($6_1, 21955) >>> 15 | 0) << 16 >> 16 | 0, $2_1 | 0) | 0;

                                        $10_1 = $5_1 | 6 | 0;

                                        $5_1 = $224((HEAP16[($1_1 + $10_1 | 0) >> 1] | 0) >> 2 | 0 | 0, $14_1 | 0, $2_1 | 0) | 0;

                                        $11_1 = $183($13_1 | 0, Math_imul($5_1, 6390) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        (wasm2js_i32$0 = $159_1, wasm2js_i32$1 = $183($7_1 | 0, $11_1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        (wasm2js_i32$0 = ($3_1 + 32 | 0) + $10_1 | 0, wasm2js_i32$1 = $224($7_1 | 0, $11_1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $4_1 = $4_1 + 1 | 0;

                                        if (($4_1 | 0) != (40 | 0)) {

                                            continue label$10

                                        }

                                        break label$10;

                                    }

                                    ;

                                    HEAP16[($0_1 + 74 | 0) >> 1] = $5_1;

                                    HEAP16[($0_1 + 72 | 0) >> 1] = $6_1;

                                    $4_1 = $0_1 + 80 | 0;

                                    $6_1 = $0_1 + 76 | 0;

                                    $5_1 = 0;

                                    label$11 : while (1) {

                                        $1_1 = ($3_1 + 32 | 0) + ($5_1 << 3 | 0) | 0;

                                        $181($1_1 | 0, $1_1 | 4 | 0 | 0, $6_1 | 0, $2_1 | 0);

                                        $181($1_1 | 2 | 0 | 0, $1_1 | 6 | 0 | 0, $4_1 | 0, $2_1 | 0);

                                        $5_1 = $5_1 + 1 | 0;

                                        if (($5_1 | 0) != (40 | 0)) {

                                            continue label$11

                                        }

                                        break label$11;

                                    }

                                    ;

                                    $5_1 = 0;

                                    label$12 : while (1) {

                                        $1_1 = ($3_1 + 32 | 0) + ($5_1 << 4 | 0) | 0;

                                        $4_1 = $224(HEAP16[($1_1 + 8 | 0) >> 1] | 0 | 0, Math_imul(HEAP16[($0_1 + 84 | 0) >> 1] | 0, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        $6_1 = $183(HEAP16[($0_1 + 84 | 0) >> 1] | 0 | 0, Math_imul($4_1, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        HEAP16[($0_1 + 84 | 0) >> 1] = $4_1;

                                        $4_1 = HEAP16[$1_1 >> 1] | 0;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($224($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 8 | 0) >> 1] = wasm2js_i32$1;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($183($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $4_1 = $224(HEAP16[($1_1 + 12 | 0) >> 1] | 0 | 0, Math_imul(HEAP16[($0_1 + 86 | 0) >> 1] | 0, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        $6_1 = $183(HEAP16[($0_1 + 86 | 0) >> 1] | 0 | 0, Math_imul($4_1, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        HEAP16[($0_1 + 86 | 0) >> 1] = $4_1;

                                        $4_1 = HEAP16[($1_1 + 4 | 0) >> 1] | 0;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($224($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 12 | 0) >> 1] = wasm2js_i32$1;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($183($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 4 | 0) >> 1] = wasm2js_i32$1;

                                        $4_1 = $224(HEAP16[($1_1 + 14 | 0) >> 1] | 0 | 0, Math_imul(HEAP16[($0_1 + 92 | 0) >> 1] | 0, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        $6_1 = $183(HEAP16[($0_1 + 92 | 0) >> 1] | 0 | 0, Math_imul($4_1, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        HEAP16[($0_1 + 92 | 0) >> 1] = $4_1;

                                        $4_1 = HEAP16[($1_1 + 6 | 0) >> 1] | 0;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($224($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 14 | 0) >> 1] = wasm2js_i32$1;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($183($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 6 | 0) >> 1] = wasm2js_i32$1;

                                        $5_1 = $5_1 + 1 | 0;

                                        if (($5_1 | 0) != (20 | 0)) {

                                            continue label$12

                                        }

                                        break label$12;

                                    }

                                    ;

                                    $5_1 = 0;

                                    label$13 : while (1) {

                                        $1_1 = ($3_1 + 32 | 0) + ($5_1 << 5 | 0) | 0;

                                        $7_1 = $1_1 + 16 | 0;

                                        $4_1 = $224(HEAP16[$7_1 >> 1] | 0 | 0, Math_imul(HEAP16[($0_1 + 88 | 0) >> 1] | 0, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        $6_1 = $183(HEAP16[($0_1 + 88 | 0) >> 1] | 0 | 0, Math_imul($4_1, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        HEAP16[($0_1 + 88 | 0) >> 1] = $4_1;

                                        $4_1 = HEAP16[$1_1 >> 1] | 0;

                                        (wasm2js_i32$0 = $7_1, wasm2js_i32$1 = $221($224($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($183($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $7_1 = $1_1 + 24 | 0;

                                        $4_1 = $224(HEAP16[$7_1 >> 1] | 0 | 0, Math_imul(HEAP16[($0_1 + 90 | 0) >> 1] | 0, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        $6_1 = $183(HEAP16[($0_1 + 90 | 0) >> 1] | 0 | 0, Math_imul($4_1, 13363) >> 15 | 0 | 0, $2_1 | 0) | 0;

                                        HEAP16[($0_1 + 90 | 0) >> 1] = $4_1;

                                        $4_1 = HEAP16[($1_1 + 8 | 0) >> 1] | 0;

                                        (wasm2js_i32$0 = $7_1, wasm2js_i32$1 = $221($224($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($183($4_1 | 0, $6_1 | 0, $2_1 | 0) | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 8 | 0) >> 1] = wasm2js_i32$1;

                                        $5_1 = $5_1 + 1 | 0;

                                        if (($5_1 | 0) != (10 | 0)) {

                                            continue label$13

                                        }

                                        break label$13;

                                    }

                                    ;

                                    $12_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 70 | 0 | 0, 32 | 0, 40 | 0, 4 | 0, 1 | 0, 15 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 16 | 0) >> 1] = $12_1;

                                    $13_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 68 | 0 | 0, 16 | 0, 20 | 0, 8 | 0, 7 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 14 | 0) >> 1] = $13_1;

                                    $14_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 66 | 0 | 0, 16 | 0, 20 | 0, 8 | 0, 3 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 12 | 0) >> 1] = $14_1;

                                    $15_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 64 | 0 | 0, 16 | 0, 20 | 0, 8 | 0, 2 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 10 | 0) >> 1] = $15_1;

                                    $16_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 62 | 0 | 0, 16 | 0, 20 | 0, 8 | 0, 6 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 8 | 0) >> 1] = $16_1;

                                    $17_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 60 | 0 | 0, 8 | 0, 10 | 0, 16 | 0, 4 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 6 | 0) >> 1] = $17_1;

                                    $18_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 58 | 0 | 0, 8 | 0, 10 | 0, 16 | 0, 12 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 4 | 0) >> 1] = $18_1;

                                    $19_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 56 | 0 | 0, 8 | 0, 10 | 0, 16 | 0, 8 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[($3_1 + 2 | 0) >> 1] = $19_1;

                                    $5_1 = 0;

                                    $20_1 = $182($3_1 + 32 | 0 | 0, $0_1 + 54 | 0 | 0, 8 | 0, 10 | 0, 16 | 0, 0 | 0, 16 | 0, $2_1 | 0) | 0;

                                    HEAP16[$3_1 >> 1] = $20_1;

                                    $1_1 = 0;

                                    label$14 : while (1) {

                                        $6_1 = $1_1;

                                        $10_1 = $5_1 << 1 | 0;

                                        $4_1 = $0_1 + $10_1 | 0;

                                        $1_1 = $210(HEAP16[$4_1 >> 1] | 0 | 0) | 0;

                                        $4_1 = HEAP16[$4_1 >> 1] | 0;

                                        label$15 : {

                                            label$16 : {

                                                if (($1_1 | 0) > (-1 | 0)) {

                                                    break label$16

                                                }

                                                $7_1 = 0;

                                                $11_1 = (0 - $1_1 | 0) << 16 >> 16;

                                                if (($11_1 | 0) > (14 | 0)) {

                                                    break label$15

                                                }

                                                $7_1 = $4_1 >> ($11_1 & 65535 | 0) | 0;

                                                break label$15;

                                            }

                                            $11_1 = $1_1 & 65535 | 0;

                                            $7_1 = $4_1 << $11_1 | 0;

                                            if (($7_1 << 16 >> 16 >> $11_1 | 0 | 0) == ($4_1 | 0)) {

                                                break label$15

                                            }

                                            $7_1 = ($4_1 >> 15 | 0) ^ 32767 | 0;

                                        }

                                        $4_1 = $185($221(HEAP16[($3_1 + $10_1 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0 | 0, $7_1 << 16 >> 16 | 0) | 0;

                                        label$17 : {

                                            label$18 : {

                                                $1_1 = $224($1_1 | 0, 5 | 0, $2_1 | 0) | 0;

                                                if (($1_1 | 0) > (-1 | 0)) {

                                                    break label$18

                                                }

                                                $7_1 = 0;

                                                $1_1 = (0 - $1_1 | 0) << 16 >> 16;

                                                if (($1_1 | 0) > (14 | 0)) {

                                                    break label$17

                                                }

                                                $7_1 = $4_1 >> ($1_1 & 65535 | 0) | 0;

                                                break label$17;

                                            }

                                            $1_1 = $1_1 & 65535 | 0;

                                            $7_1 = $4_1 << $1_1 | 0;

                                            if (($7_1 << 16 >> 16 >> $1_1 | 0 | 0) == ($4_1 | 0)) {

                                                break label$17

                                            }

                                            $7_1 = ($4_1 >> 15 | 0) ^ 32767 | 0;

                                        }

                                        $1_1 = 2147483647;

                                        label$19 : {

                                            label$20 : {

                                                $4_1 = $7_1 << 16 >> 16;

                                                $4_1 = Math_imul($4_1, $4_1);

                                                if (($4_1 | 0) == (1073741824 | 0)) {

                                                    break label$20

                                                }

                                                $1_1 = ($4_1 << 1 | 0) + $6_1 | 0;

                                                if (($4_1 ^ $6_1 | 0 | 0) < (1 | 0)) {

                                                    break label$19

                                                }

                                                if (($1_1 ^ $6_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$19

                                                }

                                                $1_1 = ($6_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            HEAP32[$2_1 >> 2] = 1;

                                        }

                                        $5_1 = $5_1 + 1 | 0;

                                        if (($5_1 | 0) != (9 | 0)) {

                                            continue label$14

                                        }

                                        break label$14;

                                    }

                                    ;

                                    $6_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                    $4_1 = HEAP16[$0_1 >> 1] | 0;

                                    $5_1 = $6_1 + $4_1 | 0;

                                    label$21 : {

                                        if (($6_1 ^ $4_1 | 0 | 0) < (0 | 0)) {

                                            break label$21

                                        }

                                        if (($5_1 ^ $4_1 | 0 | 0) > (-1 | 0)) {

                                            break label$21

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $5_1 = ($4_1 >> 15 | 0) ^ 2147483647 | 0;

                                    }

                                    $6_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                    $4_1 = $5_1 + $6_1 | 0;

                                    label$22 : {

                                        if (($5_1 ^ $6_1 | 0 | 0) < (0 | 0)) {

                                            break label$22

                                        }

                                        if (($4_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$22

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $4_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $6_1 = ($1_1 | 0) > (-1 | 0);

                                    $7_1 = $1_1 + 33554432 | 0;

                                    $10_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                    $5_1 = $4_1 + $10_1 | 0;

                                    label$23 : {

                                        if (($4_1 ^ $10_1 | 0 | 0) < (0 | 0)) {

                                            break label$23

                                        }

                                        if (($5_1 ^ $4_1 | 0 | 0) > (-1 | 0)) {

                                            break label$23

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $5_1 = ($4_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $4_1 = $6_1 ? 2147418112 : -2147483648;

                                    $6_1 = $1_1 << 6 | 0;

                                    $7_1 = $7_1 >>> 0 < 67108864 >>> 0;

                                    $10_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                    $1_1 = $5_1 + $10_1 | 0;

                                    label$24 : {

                                        if (($5_1 ^ $10_1 | 0 | 0) < (0 | 0)) {

                                            break label$24

                                        }

                                        if (($1_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$24

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $1_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $4_1 = $7_1 ? $6_1 : $4_1;

                                    $6_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                    $5_1 = $1_1 + $6_1 | 0;

                                    label$25 : {

                                        if (($1_1 ^ $6_1 | 0 | 0) < (0 | 0)) {

                                            break label$25

                                        }

                                        if (($5_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                            break label$25

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $5_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $4_1 = $4_1 >> 16 | 0;

                                    $6_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                    $1_1 = $5_1 + $6_1 | 0;

                                    label$26 : {

                                        if (($5_1 ^ $6_1 | 0 | 0) < (0 | 0)) {

                                            break label$26

                                        }

                                        if (($1_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$26

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $1_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $4_1 = Math_imul($4_1, 3641);

                                    $6_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                    $5_1 = $1_1 + $6_1 | 0;

                                    label$27 : {

                                        if (($1_1 ^ $6_1 | 0 | 0) < (0 | 0)) {

                                            break label$27

                                        }

                                        if (($5_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                            break label$27

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $5_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $4_1 = $4_1 >> 15 | 0;

                                    $6_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                    $1_1 = $5_1 + $6_1 | 0;

                                    label$28 : {

                                        if (($5_1 ^ $6_1 | 0 | 0) < (0 | 0)) {

                                            break label$28

                                        }

                                        if (($1_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$28

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $1_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $21_1 = ($1_1 + 262144 | 0) >>> 0 < 524288 >>> 0 ? $1_1 << 13 | 0 : ($1_1 | 0) > (-1 | 0) ? 2147418112 : -2147483648;

                                    $1_1 = $183((Math_imul($224($21_1 >> 16 | 0 | 0, 0 | 0, $2_1 | 0) | 0, 2147480840) >>> 15 | 0) << 16 >> 16 | 0, 1260 | 0, $2_1 | 0) | 0;

                                    $5_1 = $221(HEAP16[($0_1 + 100 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0;

                                    HEAP16[($0_1 + 100 | 0) >> 1] = ((($1_1 | 0) > (720 | 0) ? $1_1 : 720) | 0) < ($4_1 | 0) ? $5_1 | 16384 | 0 : $5_1;

                                    label$29 : {

                                        if ($9_1) {

                                            break label$29

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $8_1 = -2147483648;

                                    }

                                    $1_1 = HEAP16[($0_1 + 126 | 0) >> 1] | 0;

                                    $5_1 = $1_1 << 16 | 0;

                                    $4_1 = ($1_1 | 0) < (19660 | 0);

                                    $796 = $4_1 ? 2621 : 6553;

                                    $798 = $4_1 ? 2621 : 655;

                                    $4_1 = HEAP16[($0_1 + 118 | 0) >> 1] | 0;

                                    $6_1 = ($4_1 | 0) < ($1_1 | 0) ? $796 : $798;

                                    $7_1 = Math_imul($1_1, $6_1) << 1 | 0;

                                    $1_1 = $5_1 - $7_1 | 0;

                                    label$30 : {

                                        if (($7_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$30

                                        }

                                        if (($1_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$30

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $1_1 = ($5_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $4_1 = Math_imul($6_1, $4_1);

                                    $5_1 = $1_1 + ($4_1 << 1 | 0) | 0;

                                    label$31 : {

                                        if (($1_1 ^ $4_1 | 0 | 0) < (1 | 0)) {

                                            break label$31

                                        }

                                        if (($5_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                            break label$31

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $5_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    $1_1 = $220($5_1 | 0, $2_1 | 0) | 0;

                                    HEAP16[($0_1 + 126 | 0) >> 1] = ($8_1 | 0) > (-1 | 0) ? (($1_1 | 0) > (13106 | 0) ? $1_1 : 13106) : 13106;

                                    (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $221(HEAP16[($0_1 + 106 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 106 | 0) >> 1] = wasm2js_i32$1;

                                    $5_1 = $221(HEAP16[($0_1 + 108 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0;

                                    HEAP16[($0_1 + 108 | 0) >> 1] = $5_1;

                                    $1_1 = HEAP16[($0_1 + 126 | 0) >> 1] | 0;

                                    label$32 : {

                                        label$33 : {

                                            label$34 : {

                                                if (($8_1 | 0) < (0 | 0)) {

                                                    break label$34

                                                }

                                                label$35 : {

                                                    label$36 : {

                                                        if (($1_1 | 0) < (19661 | 0)) {

                                                            break label$36

                                                        }

                                                        HEAP16[($0_1 + 106 | 0) >> 1] = HEAPU16[($0_1 + 106 | 0) >> 1] | 0 | 16384 | 0;

                                                        break label$35;

                                                    }

                                                    if (($1_1 | 0) < (16384 | 0)) {

                                                        break label$33

                                                    }

                                                }

                                                HEAP16[($0_1 + 108 | 0) >> 1] = $5_1 | 16384 | 0;

                                            }

                                            if (($1_1 | 0) < (22937 | 0)) {

                                                break label$33

                                            }

                                            (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $183(HEAP16[($0_1 + 116 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 116 | 0) >> 1] = wasm2js_i32$1;

                                            break label$32;

                                        }

                                        HEAP16[($0_1 + 116 | 0) >> 1] = 0;

                                    }

                                    label$37 : {

                                        label$38 : {

                                            label$39 : {

                                                if (((HEAPU16[($0_1 + 106 | 0) >> 1] | 0) & 32640 | 0 | 0) != (32640 | 0)) {

                                                    break label$39

                                                }

                                                HEAP16[($0_1 + 122 | 0) >> 1] = 1;

                                                break label$38;

                                            }

                                            $1_1 = (HEAPU16[($0_1 + 108 | 0) >> 1] | 0) & 32767 | 0;

                                            HEAP16[($0_1 + 122 | 0) >> 1] = ($1_1 | 0) == (32767 | 0);

                                            if (($1_1 | 0) != (32767 | 0)) {

                                                break label$37

                                            }

                                        }

                                        if ((HEAP16[($0_1 + 98 | 0) >> 1] | 0 | 0) > (4 | 0)) {

                                            break label$37

                                        }

                                        HEAP16[($0_1 + 98 | 0) >> 1] = 5;

                                    }

                                    label$40 : {

                                        label$41 : {

                                            label$42 : {

                                                if (((HEAPU16[($0_1 + 102 | 0) >> 1] | 0) & 24576 | 0 | 0) == (24576 | 0)) {

                                                    break label$42

                                                }

                                                if (((HEAPU16[($0_1 + 104 | 0) >> 1] | 0) & 31744 | 0 | 0) != (31744 | 0)) {

                                                    break label$41

                                                }

                                            }

                                            HEAP16[($0_1 + 98 | 0) >> 1] = 20;

                                            $6_1 = 32767;

                                            break label$40;

                                        }

                                        label$43 : {

                                            if (!((HEAPU16[($0_1 + 100 | 0) >> 1] | 0) & 32640 | 0)) {

                                                break label$43

                                            }

                                            $4_1 = 0;

                                            $6_1 = 0;

                                            label$44 : while (1) {

                                                $5_1 = $4_1 << 1 | 0;

                                                $1_1 = HEAP16[($3_1 + $5_1 | 0) >> 1] | 0;

                                                $5_1 = HEAP16[(($0_1 + $5_1 | 0) + 18 | 0) >> 1] | 0;

                                                $7_1 = ($1_1 | 0) > ($5_1 | 0) ? $1_1 : $5_1;

                                                $7_1 = ($7_1 | 0) > (184 | 0) ? $7_1 : 184;

                                                label$45 : {

                                                    label$46 : {

                                                        $1_1 = ($1_1 | 0) < ($5_1 | 0) ? $1_1 : $5_1;

                                                        $10_1 = ($1_1 | 0) > (184 | 0) ? $1_1 : 184;

                                                        $1_1 = $210($10_1 | 0) | 0;

                                                        if (($1_1 | 0) > (-1 | 0)) {

                                                            break label$46

                                                        }

                                                        $5_1 = 0;

                                                        $11_1 = (0 - $1_1 | 0) << 16 >> 16;

                                                        if (($11_1 | 0) > (14 | 0)) {

                                                            break label$45

                                                        }

                                                        $5_1 = ($10_1 & 65535 | 0) >>> ($11_1 & 65535 | 0) | 0;

                                                        break label$45;

                                                    }

                                                    $5_1 = $10_1 & 65535 | 0;

                                                    $10_1 = $1_1 & 65535 | 0;

                                                    $11_1 = $5_1 << $10_1 | 0;

                                                    $5_1 = ($11_1 << 16 >> 16 >> $10_1 | 0 | 0) == ($5_1 | 0) ? $11_1 : 32767;

                                                }

                                                $6_1 = $183($6_1 << 16 >> 16 | 0, $221($185($221($7_1 | 0, 1 | 0, $2_1 | 0) | 0 | 0, $5_1 << 16 >> 16 | 0) | 0 | 0, $224(8 | 0, $1_1 | 0, $2_1 | 0) | 0 | 0, $2_1 | 0) | 0 | 0, $2_1 | 0) | 0;

                                                $4_1 = $4_1 + 1 | 0;

                                                if (($4_1 | 0) != (9 | 0)) {

                                                    continue label$44

                                                }

                                                break label$44;

                                            }

                                            ;

                                            label$47 : {

                                                if (($6_1 | 0) < (1001 | 0)) {

                                                    break label$47

                                                }

                                                HEAP16[($0_1 + 98 | 0) >> 1] = 20;

                                                $6_1 = 32767;

                                                break label$40;

                                            }

                                            $1_1 = HEAPU16[($0_1 + 98 | 0) >> 1] | 0;

                                            label$48 : {

                                                if (!((HEAPU8[($0_1 + 101 | 0) >> 0] | 0) & 64 | 0)) {

                                                    break label$48

                                                }

                                                label$49 : {

                                                    if ($1_1 & 65535 | 0) {

                                                        break label$49

                                                    }

                                                    $6_1 = 3276;

                                                    break label$40;

                                                }

                                                $1_1 = $224($1_1 << 16 >> 16 | 0, 1 | 0, $2_1 | 0) | 0;

                                                HEAP16[($0_1 + 98 | 0) >> 1] = $1_1;

                                            }

                                            $6_1 = 32767;

                                            if (($1_1 & 65535 | 0 | 0) == (20 | 0)) {

                                                break label$40

                                            }

                                            $6_1 = (HEAPU8[($0_1 + 101 | 0) >> 0] | 0) & 64 | 0 ? 3276 : 16383;

                                            break label$40;

                                        }

                                        HEAP16[($0_1 + 98 | 0) >> 1] = 20;

                                        $6_1 = 32767;

                                    }

                                    $11_1 = $21_1 >>> 16 | 0;

                                    $1_1 = 0;

                                    label$50 : while (1) {

                                        $5_1 = $1_1 << 1 | 0;

                                        $1030 = HEAP16[($3_1 + $5_1 | 0) >> 1] | 0;

                                        $5_1 = ($0_1 + $5_1 | 0) + 18 | 0;

                                        $4_1 = $208($6_1 | 0, $224($1030 | 0, HEAP16[$5_1 >> 1] | 0 | 0, $2_1 | 0) | 0 | 0, $2_1 | 0) | 0;

                                        (wasm2js_i32$0 = $5_1, wasm2js_i32$1 = $183(HEAP16[$5_1 >> 1] | 0 | 0, $4_1 | 0, $2_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                        $1_1 = $1_1 + 1 | 0;

                                        if (($1_1 | 0) != (9 | 0)) {

                                            continue label$50

                                        }

                                        break label$50;

                                    }

                                    ;

                                    label$51 : {

                                        label$52 : {

                                            if ((HEAPU8[($0_1 + 101 | 0) >> 0] | 0) & 120 | 0) {

                                                break label$52

                                            }

                                            if ((HEAPU8[($0_1 + 103 | 0) >> 0] | 0) & 120 | 0) {

                                                break label$52

                                            }

                                            if (HEAPU16[($0_1 + 114 | 0) >> 1] | 0) {

                                                break label$52

                                            }

                                            $6_1 = 2;

                                            $10_1 = 2097;

                                            $7_1 = 1638;

                                            break label$51;

                                        }

                                        label$53 : {

                                            if (HEAPU16[($0_1 + 98 | 0) >> 1] | 0) {

                                                break label$53

                                            }

                                            if (HEAPU16[($0_1 + 114 | 0) >> 1] | 0) {

                                                break label$53

                                            }

                                            $6_1 = 2;

                                            $10_1 = 1867;

                                            $7_1 = 491;

                                            break label$51;

                                        }

                                        $10_1 = 1638;

                                        $7_1 = 0;

                                        $6_1 = 0;

                                    }

                                    $5_1 = 0;

                                    label$54 : while (1) {

                                        label$55 : {

                                            label$56 : {

                                                $1_1 = $0_1 + ($5_1 << 1 | 0) | 0;

                                                $4_1 = $224(HEAP16[($1_1 + 36 | 0) >> 1] | 0 | 0, HEAP16[$1_1 >> 1] | 0 | 0, $2_1 | 0) | 0;

                                                if (($4_1 | 0) > (-1 | 0)) {

                                                    break label$56

                                                }

                                                $4_1 = $208($10_1 | 0, $4_1 | 0, $2_1 | 0) | 0;

                                                $4_1 = $183(-2 | 0, $183(HEAP16[$1_1 >> 1] | 0 | 0, $4_1 | 0, $2_1 | 0) | 0 | 0, $2_1 | 0) | 0;

                                                $4_1 = ($4_1 | 0) > (40 | 0) ? $4_1 : 40;

                                                break label$55;

                                            }

                                            $4_1 = $208($7_1 | 0, $4_1 | 0, $2_1 | 0) | 0;

                                            $4_1 = $183($6_1 | 0, $183(HEAP16[$1_1 >> 1] | 0 | 0, $4_1 | 0, $2_1 | 0) | 0 | 0, $2_1 | 0) | 0;

                                            $4_1 = ($4_1 | 0) < (16e3 | 0) ? $4_1 : 16e3;

                                        }

                                        HEAP16[$1_1 >> 1] = $4_1;

                                        $5_1 = $5_1 + 1 | 0;

                                        if (($5_1 | 0) != (9 | 0)) {

                                            continue label$54

                                        }

                                        break label$54;

                                    }

                                    ;

                                    HEAP16[($0_1 + 36 | 0) >> 1] = $20_1;

                                    HEAP16[($0_1 + 52 | 0) >> 1] = $12_1;

                                    HEAP16[($0_1 + 50 | 0) >> 1] = $13_1;

                                    HEAP16[($0_1 + 48 | 0) >> 1] = $14_1;

                                    HEAP16[($0_1 + 46 | 0) >> 1] = $15_1;

                                    HEAP16[($0_1 + 44 | 0) >> 1] = $16_1;

                                    HEAP16[($0_1 + 42 | 0) >> 1] = $17_1;

                                    HEAP16[($0_1 + 40 | 0) >> 1] = $18_1;

                                    HEAP16[($0_1 + 38 | 0) >> 1] = $19_1;

                                    label$57 : {

                                        label$58 : {

                                            if (($8_1 | 0) > (-1 | 0)) {

                                                break label$58

                                            }

                                            $1_1 = 0;

                                            $26_1 = 0;

                                            HEAP16[($0_1 + 114 | 0) >> 1] = $26_1;

                                            HEAP16[($0_1 + 116 | 0) >> 1] = $26_1 >>> 16 | 0;

                                            $27_1 = 0;

                                            HEAP16[($0_1 + 94 | 0) >> 1] = $27_1;

                                            HEAP16[($0_1 + 96 | 0) >> 1] = $27_1 >>> 16 | 0;

                                            break label$57;

                                        }

                                        $5_1 = HEAP16[($0_1 + 114 | 0) >> 1] | 0;

                                        label$59 : {

                                            label$60 : {

                                                label$61 : {

                                                    if ((HEAP16[($0_1 + 116 | 0) >> 1] | 0 | 0) < (101 | 0)) {

                                                        break label$61

                                                    }

                                                    if (($5_1 | 0) > (249 | 0)) {

                                                        break label$60

                                                    }

                                                    $5_1 = 250;

                                                    HEAP16[($0_1 + 114 | 0) >> 1] = 250;

                                                    break label$60;

                                                }

                                                if (!$5_1) {

                                                    break label$59

                                                }

                                            }

                                            HEAP16[($0_1 + 94 | 0) >> 1] = 4;

                                            $1_1 = 1;

                                            (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $224($5_1 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 114 | 0) >> 1] = wasm2js_i32$1;

                                            break label$57;

                                        }

                                        label$62 : {

                                            $5_1 = HEAPU16[($0_1 + 100 | 0) >> 1] | 0;

                                            if ($5_1 & 16368 | 0) {

                                                break label$62

                                            }

                                            $1_1 = 1;

                                            if ((HEAP16[($0_1 + 126 | 0) >> 1] | 0 | 0) > (21298 | 0)) {

                                                break label$57

                                            }

                                        }

                                        label$63 : {

                                            if (!($5_1 & 16384 | 0)) {

                                                break label$63

                                            }

                                            $1_1 = 1;

                                            $2_1 = $183(HEAP16[($0_1 + 94 | 0) >> 1] | 0 | 0, 1 | 0, $2_1 | 0) | 0;

                                            HEAP16[($0_1 + 94 | 0) >> 1] = $2_1;

                                            $5_1 = ($11_1 << 16 >> 16 | 0) > (100 | 0);

                                            if ((($5_1 ? 4 : 5) | 0) > ($2_1 | 0)) {

                                                break label$57

                                            }

                                            HEAP16[($0_1 + 96 | 0) >> 1] = $5_1 ? 7 : 4;

                                            break label$57;

                                        }

                                        $1_1 = 0;

                                        HEAP16[($0_1 + 94 | 0) >> 1] = 0;

                                        $5_1 = HEAP16[($0_1 + 96 | 0) >> 1] | 0;

                                        if (($5_1 | 0) < (1 | 0)) {

                                            break label$57

                                        }

                                        (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $224($5_1 | 0, 1 | 0, $2_1 | 0) | 0), HEAP16[(wasm2js_i32$0 + 96 | 0) >> 1] = wasm2js_i32$1;

                                        $1_1 = 1;

                                    }

                                    HEAP16[($0_1 + 120 | 0) >> 1] = $1_1;

                                    global$0 = $3_1 + 352 | 0;

                                    return $1_1 | 0;

                                }



                                function $181($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0, $5_1 = 0, $6_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $4_1 = $224(HEAP16[$0_1 >> 1] | 0 | 0, (Math_imul(HEAP16[$2_1 >> 1] | 0, 21955) >>> 15 | 0) << 16 >> 16 | 0, $3_1 | 0) | 0;

                                    $5_1 = $183(HEAP16[$2_1 >> 1] | 0 | 0, (Math_imul($4_1, 21955) >>> 15 | 0) << 16 >> 16 | 0, $3_1 | 0) | 0;

                                    HEAP16[$2_1 >> 1] = $4_1;

                                    $4_1 = $224(HEAP16[$1_1 >> 1] | 0 | 0, Math_imul(HEAP16[($2_1 + 2 | 0) >> 1] | 0, 6390) >> 15 | 0 | 0, $3_1 | 0) | 0;

                                    $6_1 = $183(HEAP16[($2_1 + 2 | 0) >> 1] | 0 | 0, Math_imul($4_1, 6390) >> 15 | 0 | 0, $3_1 | 0) | 0;

                                    HEAP16[($2_1 + 2 | 0) >> 1] = $4_1;

                                    (wasm2js_i32$0 = $0_1, wasm2js_i32$1 = $221($183($5_1 | 0, $6_1 | 0, $3_1 | 0) | 0 | 0, 1 | 0, $3_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                    (wasm2js_i32$0 = $1_1, wasm2js_i32$1 = $221($224($5_1 | 0, $6_1 | 0, $3_1 | 0) | 0 | 0, 1 | 0, $3_1 | 0) | 0), HEAP16[wasm2js_i32$0 >> 1] = wasm2js_i32$1;

                                }



                                function $182($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $8_1 = 0, $12_1 = 0, $13_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0;

                                    $8_1 = 0;

                                    label$1 : {

                                        $9_1 = $3_1 & 65535 | 0;

                                        if (($2_1 | 0) >= ($9_1 | 0)) {

                                            break label$1

                                        }

                                        $10_1 = $5_1 & 65535 | 0;

                                        $11_1 = $4_1 & 65535 | 0;

                                        $8_1 = 0;

                                        $3_1 = $2_1;

                                        $12_1 = $3_1;

                                        label$2 : while (1) {

                                            $3_1 = HEAP16[($0_1 + ((Math_imul($3_1, $11_1) + $10_1 | 0) << 1 | 0) | 0) >> 1] | 0;

                                            $3_1 = ($3_1 >> 15 | 0) + $3_1 | 0;

                                            $13_1 = (($3_1 << 16 >> 16 >>> 15 | 0) ^ $3_1 | 0) << 16 >> 16;

                                            $3_1 = $8_1;

                                            $8_1 = ($13_1 << 1 | 0) + $3_1 | 0;

                                            label$3 : {

                                                if (($3_1 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                    break label$3

                                                }

                                                if (($8_1 ^ $3_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$3

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $8_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $12_1 = $12_1 + 1 | 0;

                                            $3_1 = $12_1 << 16 >> 16;

                                            if (($3_1 | 0) < ($9_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $3_1 = HEAP16[$1_1 >> 1] | 0;

                                    label$4 : {

                                        label$5 : {

                                            $13_1 = $224(16 | 0, $6_1 | 0, $7_1 | 0) | 0;

                                            if (($13_1 | 0) < (1 | 0)) {

                                                break label$5

                                            }

                                            $13_1 = $13_1 & 65535 | 0;

                                            $12_1 = $3_1 << $13_1 | 0;

                                            if (($12_1 >> $13_1 | 0 | 0) == ($3_1 | 0)) {

                                                break label$4

                                            }

                                            $12_1 = ($3_1 >> 15 | 0) ^ 2147483647 | 0;

                                            break label$4;

                                        }

                                        $12_1 = 0;

                                        $13_1 = (0 - $13_1 | 0) << 16 >> 16;

                                        if (($13_1 | 0) > (30 | 0)) {

                                            break label$4

                                        }

                                        $12_1 = $3_1 >> ($13_1 & 65535 | 0) | 0;

                                    }

                                    $3_1 = $12_1 + $8_1 | 0;

                                    label$6 : {

                                        if (($12_1 ^ $8_1 | 0 | 0) < (0 | 0)) {

                                            break label$6

                                        }

                                        if (($3_1 ^ $8_1 | 0 | 0) > (-1 | 0)) {

                                            break label$6

                                        }

                                        HEAP32[$7_1 >> 2] = 1;

                                        $3_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    label$7 : {

                                        label$8 : {

                                            if (($6_1 | 0) < (1 | 0)) {

                                                break label$8

                                            }

                                            $13_1 = $6_1 & 65535 | 0;

                                            $12_1 = $8_1 << $13_1 | 0;

                                            if (($12_1 >> $13_1 | 0 | 0) == ($8_1 | 0)) {

                                                break label$7

                                            }

                                            $12_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$7;

                                        }

                                        $12_1 = 0;

                                        $13_1 = (0 - $6_1 | 0) << 16 >> 16;

                                        if (($13_1 | 0) > (30 | 0)) {

                                            break label$7

                                        }

                                        $12_1 = $8_1 >> ($13_1 & 65535 | 0) | 0;

                                    }

                                    HEAP16[$1_1 >> 1] = $12_1 >>> 16 | 0;

                                    label$9 : {

                                        if (!$2_1) {

                                            break label$9

                                        }

                                        $9_1 = $2_1 & 65535 | 0;

                                        $10_1 = $5_1 & 65535 | 0;

                                        $11_1 = $4_1 & 65535 | 0;

                                        $8_1 = 0;

                                        $12_1 = 0;

                                        label$10 : while (1) {

                                            $8_1 = HEAP16[($0_1 + ((Math_imul($8_1, $11_1) + $10_1 | 0) << 1 | 0) | 0) >> 1] | 0;

                                            $8_1 = ($8_1 >> 15 | 0) + $8_1 | 0;

                                            $13_1 = (($8_1 << 16 >> 16 >>> 15 | 0) ^ $8_1 | 0) << 16 >> 16;

                                            $8_1 = $3_1;

                                            $3_1 = ($13_1 << 1 | 0) + $3_1 | 0;

                                            label$11 : {

                                                if (($8_1 ^ $13_1 | 0 | 0) < (1 | 0)) {

                                                    break label$11

                                                }

                                                if (($3_1 ^ $8_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$11

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $3_1 = ($8_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $12_1 = $12_1 + 1 | 0;

                                            $8_1 = $12_1 << 16 >> 16;

                                            if (($8_1 | 0) < ($9_1 | 0)) {

                                                continue label$10

                                            }

                                            break label$10;

                                        }

                                        ;

                                    }

                                    label$12 : {

                                        label$13 : {

                                            if (($6_1 | 0) < (1 | 0)) {

                                                break label$13

                                            }

                                            $12_1 = $6_1 & 65535 | 0;

                                            $8_1 = $3_1 << $12_1 | 0;

                                            if (($8_1 >> $12_1 | 0 | 0) == ($3_1 | 0)) {

                                                break label$12

                                            }

                                            $8_1 = ($3_1 >> 31 | 0) ^ 2147483647 | 0;

                                            break label$12;

                                        }

                                        $8_1 = 0;

                                        $12_1 = (0 - $6_1 | 0) << 16 >> 16;

                                        if (($12_1 | 0) > (30 | 0)) {

                                            break label$12

                                        }

                                        $8_1 = $3_1 >> ($12_1 & 65535 | 0) | 0;

                                    }

                                    return $8_1 >> 16 | 0 | 0;

                                }



                                function $183($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0;

                                    $3_1 = 32767;

                                    label$1 : {

                                        label$2 : {

                                            $0_1 = $1_1 + $0_1 | 0;

                                            if (($0_1 | 0) > (32767 | 0)) {

                                                break label$2

                                            }

                                            $3_1 = -32768;

                                            if (($0_1 | 0) > (-32769 | 0)) {

                                                break label$1

                                            }

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $0_1 = $3_1;

                                    }

                                    return $0_1 << 16 >> 16 | 0;

                                }



                                function $184($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $6_1 = 0, $5_1 = 0, $13_1 = 0, $8_1 = 0, $4_1 = 0, $14_1 = 0,

                                        $26_1 = 0, $21_1 = 0, $10_1 = 0, $12_1 = 0, $19_1 = 0, $9_1 = 0, $11_1 = 0,

                                        $17_1 = 0, $18_1 = 0, $20_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0,

                                        $27_1 = 0, $28_1 = 0, $29_1 = 0, $141_1 = 0, $15_1 = 0, $16_1 = 0;

                                    $4_1 = global$0 - 32 | 0;

                                    global$0 = $4_1;

                                    HEAP16[($4_1 + 20 | 0) >> 1] = 1024;

                                    HEAP16[($4_1 + 8 | 0) >> 1] = 1024;

                                    $5_1 = HEAP16[($0_1 + 20 | 0) >> 1] | 0;

                                    $6_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                    $7_1 = (($5_1 + $6_1 | 0) >>> 2 | 0) + -1024 | 0;

                                    HEAP16[($4_1 + 22 | 0) >> 1] = $7_1;

                                    $5_1 = (($6_1 - $5_1 | 0) >>> 2 | 0) + 1024 | 0;

                                    HEAP16[($4_1 + 10 | 0) >> 1] = $5_1;

                                    $6_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                    $8_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                    $9_1 = $5_1 + (($6_1 - $8_1 | 0) >>> 2 | 0) | 0;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = $9_1;

                                    $10_1 = (($8_1 + $6_1 | 0) >>> 2 | 0) - $7_1 | 0;

                                    HEAP16[($4_1 + 24 | 0) >> 1] = $10_1;

                                    $5_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                    $6_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                    $11_1 = $9_1 + (($5_1 - $6_1 | 0) >>> 2 | 0) | 0;

                                    HEAP16[($4_1 + 14 | 0) >> 1] = $11_1;

                                    $12_1 = (($6_1 + $5_1 | 0) >>> 2 | 0) - $10_1 | 0;

                                    HEAP16[($4_1 + 26 | 0) >> 1] = $12_1;

                                    $6_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                    $8_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                    $5_1 = (($6_1 + $8_1 | 0) >>> 2 | 0) - $12_1 | 0;

                                    HEAP16[($4_1 + 28 | 0) >> 1] = $5_1;

                                    $6_1 = $11_1 + (($8_1 - $6_1 | 0) >>> 2 | 0) | 0;

                                    HEAP16[($4_1 + 16 | 0) >> 1] = $6_1;

                                    $13_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                    $0_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 18 | 0) >> 1] = $6_1 + (($13_1 - $0_1 | 0) >>> 2 | 0) | 0;

                                    $8_1 = HEAP16[global$16 >> 1] | 0;

                                    $0_1 = (($0_1 + $13_1 | 0) >>> 2 | 0) - $5_1 | 0;

                                    HEAP16[($4_1 + 30 | 0) >> 1] = $0_1;

                                    $141_1 = $0_1 << 16 >> 16 << 13 | 0;

                                    $0_1 = ($7_1 << 16 >> 16 << 14 | 0) + ($8_1 << 10 | 0) | 0;

                                    $7_1 = ($0_1 >>> 1 | 0) & 32256 | 0;

                                    $0_1 = $0_1 & -65536 | 0;

                                    $6_1 = ((((Math_imul($8_1, $7_1) >> 15 | 0) + Math_imul($8_1, $0_1 >> 16 | 0) | 0) << 2 | 0) + ($10_1 << 16 >> 16 << 14 | 0) | 0) + -16777216 | 0;

                                    $13_1 = ($6_1 << 15 | 0) & 2147352576 | 0;

                                    $6_1 = $6_1 & -65536 | 0;

                                    $0_1 = ((((Math_imul($8_1, $13_1 >>> 16 | 0) >> 15 | 0) + Math_imul($8_1, $6_1 >> 16 | 0) | 0) << 2 | 0) - ($7_1 << 1 | 0 | $0_1 | 0) | 0) + ($12_1 << 16 >> 16 << 14 | 0) | 0;

                                    $7_1 = ($0_1 << 15 | 0) & 2147352576 | 0;

                                    $0_1 = $0_1 & -65536 | 0;

                                    $5_1 = ((((Math_imul($8_1, $7_1 >>> 16 | 0) >> 15 | 0) + Math_imul($8_1, $0_1 >> 16 | 0) | 0) << 2 | 0) - ($13_1 >>> 15 | 0 | $6_1 | 0) | 0) + ($5_1 << 16 >> 16 << 14 | 0) | 0;

                                    $0_1 = $141_1 + ((((Math_imul($8_1, ($5_1 >>> 1 | 0) & 32766 | 0) >> 15 | 0) + Math_imul($8_1, $5_1 >> 16 | 0) | 0) << 1 | 0) - ($7_1 >>> 15 | 0 | $0_1 | 0) | 0) | 0;

                                    $14_1 = ($0_1 + 33554432 | 0) >>> 0 < 67108863 >>> 0 ? $0_1 >>> 10 | 0 : ($0_1 | 0) > (33554431 | 0) ? 32767 : -32768;

                                    $0_1 = $4_1 + 20 | 0;

                                    $15_1 = HEAPU16[($4_1 + 22 | 0) >> 1] | 0;

                                    $16_1 = HEAPU16[($4_1 + 10 | 0) >> 1] | 0;

                                    $17_1 = 0;

                                    $18_1 = 0;

                                    $19_1 = 0;

                                    $20_1 = 0;

                                    label$1 : while (1) {

                                        $7_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                        $5_1 = global$16;

                                        $21_1 = 4;

                                        label$2 : {

                                            label$3 : {

                                                $22_1 = (HEAP16[($0_1 + 10 | 0) >> 1] | 0) << 13 | 0;

                                                $23_1 = $7_1 << 14 | 0;

                                                $24_1 = $17_1 + 1 | 0;

                                                $5_1 = HEAP16[($5_1 + ($24_1 << 1 | 0) | 0) >> 1] | 0;

                                                $7_1 = $23_1 + ($5_1 << 10 | 0) | 0;

                                                $6_1 = ($7_1 >>> 1 | 0) & 32256 | 0;

                                                $7_1 = $7_1 & -65536 | 0;

                                                $25_1 = (HEAP16[($0_1 + 4 | 0) >> 1] | 0) << 14 | 0;

                                                $13_1 = ((((Math_imul($6_1, $5_1) >> 15 | 0) + Math_imul($7_1 >> 16 | 0, $5_1) | 0) << 2 | 0) + $25_1 | 0) + -16777216 | 0;

                                                $26_1 = ($13_1 << 15 | 0) & 2147352576 | 0;

                                                $13_1 = $13_1 & -65536 | 0;

                                                $27_1 = (HEAP16[($0_1 + 6 | 0) >> 1] | 0) << 14 | 0;

                                                $7_1 = ((((Math_imul($26_1 >>> 16 | 0, $5_1) >> 15 | 0) + Math_imul($13_1 >> 16 | 0, $5_1) | 0) << 2 | 0) - ($6_1 << 1 | 0 | $7_1 | 0) | 0) + $27_1 | 0;

                                                $6_1 = ($7_1 << 15 | 0) & 2147352576 | 0;

                                                $7_1 = $7_1 & -65536 | 0;

                                                $28_1 = (HEAP16[($0_1 + 8 | 0) >> 1] | 0) << 14 | 0;

                                                $13_1 = ((((Math_imul($6_1 >>> 16 | 0, $5_1) >> 15 | 0) + Math_imul($7_1 >> 16 | 0, $5_1) | 0) << 2 | 0) - ($26_1 >>> 15 | 0 | $13_1 | 0) | 0) + $28_1 | 0;

                                                $7_1 = $22_1 + ((((Math_imul(($13_1 >>> 1 | 0) & 32766 | 0, $5_1) >> 15 | 0) + Math_imul($13_1 >> 16 | 0, $5_1) | 0) << 1 | 0) - ($6_1 >>> 15 | 0 | $7_1 | 0) | 0) | 0;

                                                $6_1 = ($7_1 + 33554432 | 0) >>> 0 < 67108863 >>> 0 ? $7_1 >>> 10 | 0 : ($7_1 | 0) > (33554431 | 0) ? 32767 : -32768;

                                                if ((Math_imul($6_1 << 16 >> 16, $14_1 << 16 >> 16) | 0) <= (0 | 0)) {

                                                    break label$3

                                                }

                                                $8_1 = $5_1;

                                                $14_1 = $6_1;

                                                break label$2;

                                            }

                                            label$4 : while (1) {

                                                $0_1 = ($8_1 << 16 >> 16 >> 1 | 0) + ($5_1 << 16 >> 16 >> 1 | 0) | 0;

                                                $7_1 = ($0_1 << 10 | 0) + $23_1 | 0;

                                                $13_1 = ($7_1 >>> 1 | 0) & 32767 | 0;

                                                $7_1 = $7_1 & -65536 | 0;

                                                $26_1 = ((((Math_imul($13_1, $0_1) >> 15 | 0) + Math_imul($7_1 >> 16 | 0, $0_1) | 0) << 2 | 0) + $25_1 | 0) + -16777216 | 0;

                                                $29_1 = ($26_1 << 15 | 0) & 2147418112 | 0;

                                                $26_1 = $26_1 & -65536 | 0;

                                                $7_1 = ((((Math_imul($29_1 >>> 16 | 0, $0_1) >> 15 | 0) + Math_imul($26_1 >> 16 | 0, $0_1) | 0) << 2 | 0) - ($13_1 << 1 | 0 | $7_1 | 0) | 0) + $27_1 | 0;

                                                $13_1 = ($7_1 << 15 | 0) & 2147418112 | 0;

                                                $7_1 = $7_1 & -65536 | 0;

                                                $26_1 = ((((Math_imul($13_1 >>> 16 | 0, $0_1) >> 15 | 0) + Math_imul($7_1 >> 16 | 0, $0_1) | 0) << 2 | 0) - ($29_1 >>> 15 | 0 | $26_1 | 0) | 0) + $28_1 | 0;

                                                $7_1 = $22_1 + ((((Math_imul(($26_1 >>> 1 | 0) & 32767 | 0, $0_1) >> 15 | 0) + Math_imul($26_1 >> 16 | 0, $0_1) | 0) << 1 | 0) - ($13_1 >>> 15 | 0 | $7_1 | 0) | 0) | 0;

                                                $13_1 = ($7_1 + 33554432 | 0) >>> 0 < 67108863 >>> 0 ? $7_1 >>> 10 | 0 : ($7_1 | 0) > (33554431 | 0) ? 32767 : -32768;

                                                $7_1 = (Math_imul($13_1 << 16 >> 16, $6_1 << 16 >> 16) | 0) < (1 | 0);

                                                $14_1 = $7_1 ? $13_1 : $14_1;

                                                $6_1 = $7_1 ? $6_1 : $13_1;

                                                $8_1 = $7_1 ? $0_1 : $8_1;

                                                $5_1 = $7_1 ? $5_1 : $0_1;

                                                $21_1 = $21_1 + -1 | 0;

                                                if ($21_1 & 65535 | 0) {

                                                    continue label$4

                                                }

                                                break label$4;

                                            }

                                            ;

                                            label$5 : {

                                                label$6 : {

                                                    if (($14_1 & 65535 | 0 | 0) != ($6_1 & 65535 | 0 | 0)) {

                                                        break label$6

                                                    }

                                                    $8_1 = $5_1;

                                                    break label$5;

                                                }

                                                $0_1 = $14_1 - $6_1 | 0;

                                                $7_1 = $0_1 << 16 >> 16;

                                                $0_1 = ($7_1 >> 15 | 0) + $0_1 | 0;

                                                $0_1 = ($0_1 << 16 >> 16 >> 15 | 0) ^ $0_1 | 0;

                                                $13_1 = $210($0_1 << 16 >> 16 | 0) | 0;

                                                $0_1 = Math_imul($185(16383 | 0, ($0_1 << $13_1 | 0) << 16 >> 16 | 0) | 0, ($8_1 - $5_1 | 0) << 16 >> 16) >> (19 - $13_1 | 0) | 0;

                                                $8_1 = $5_1 - (Math_imul((($7_1 | 0) < (0 | 0) ? 0 - $0_1 | 0 : $0_1) << 16 >> 16, $6_1 << 16 >> 16) >>> 10 | 0) | 0;

                                            }

                                            HEAP16[($1_1 + ($18_1 << 1 | 0) | 0) >> 1] = $8_1;

                                            $5_1 = $20_1 & 65535 | 0;

                                            $0_1 = $5_1 ? $4_1 + 20 | 0 : $4_1 + 8 | 0;

                                            $7_1 = $8_1 << 16 >> 16;

                                            $6_1 = (($5_1 ? $15_1 : $16_1) << 16 >> 16 << 14 | 0) + ($7_1 << 10 | 0) | 0;

                                            $13_1 = ($6_1 >>> 1 | 0) & 32256 | 0;

                                            $6_1 = $6_1 & -65536 | 0;

                                            $14_1 = ((((Math_imul($13_1, $7_1) >> 15 | 0) + Math_imul($6_1 >> 16 | 0, $7_1) | 0) << 2 | 0) + (($5_1 ? $10_1 : $9_1) << 16 >> 16 << 14 | 0) | 0) + -16777216 | 0;

                                            $21_1 = ($14_1 << 15 | 0) & 2147352576 | 0;

                                            $14_1 = $14_1 & -65536 | 0;

                                            $6_1 = ((((Math_imul($21_1 >>> 16 | 0, $7_1) >> 15 | 0) + Math_imul($14_1 >> 16 | 0, $7_1) | 0) << 2 | 0) - ($13_1 << 1 | 0 | $6_1 | 0) | 0) + (($5_1 ? $12_1 : $11_1) << 16 >> 16 << 14 | 0) | 0;

                                            $13_1 = ($6_1 << 15 | 0) & 2147352576 | 0;

                                            $6_1 = $6_1 & -65536 | 0;

                                            $14_1 = ((((Math_imul($13_1 >>> 16 | 0, $7_1) >> 15 | 0) + Math_imul($6_1 >> 16 | 0, $7_1) | 0) << 2 | 0) - ($21_1 >>> 15 | 0 | $14_1 | 0) | 0) + ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) << 14 | 0) | 0;

                                            $7_1 = ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) << 13 | 0) + ((((Math_imul(($14_1 >>> 1 | 0) & 32766 | 0, $7_1) >> 15 | 0) + Math_imul($14_1 >> 16 | 0, $7_1) | 0) << 1 | 0) - ($13_1 >>> 15 | 0 | $6_1 | 0) | 0) | 0;

                                            $14_1 = ($7_1 + 33554432 | 0) >>> 0 < 67108863 >>> 0 ? $7_1 >>> 10 | 0 : ($7_1 | 0) > (33554431 | 0) ? 32767 : -32768;

                                            $19_1 = $19_1 + 1 | 0;

                                            $20_1 = !$5_1;

                                        }

                                        label$7 : {

                                            $18_1 = $19_1 << 16 >> 16;

                                            if (($18_1 | 0) > (9 | 0)) {

                                                break label$7

                                            }

                                            $7_1 = $17_1 >>> 0 < 59 >>> 0;

                                            $17_1 = $24_1;

                                            if ($7_1) {

                                                continue label$1

                                            }

                                        }

                                        break label$1;

                                    }

                                    ;

                                    label$8 : {

                                        if (($19_1 << 16 >> 16 | 0) > (9 | 0)) {

                                            break label$8

                                        }

                                        HEAP16[$1_1 >> 1] = HEAPU16[$2_1 >> 1] | 0;

                                        HEAP16[($1_1 + 2 | 0) >> 1] = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 4 | 0) >> 1] = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 6 | 0) >> 1] = HEAPU16[($2_1 + 6 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 8 | 0) >> 1] = HEAPU16[($2_1 + 8 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 10 | 0) >> 1] = HEAPU16[($2_1 + 10 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 12 | 0) >> 1] = HEAPU16[($2_1 + 12 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 14 | 0) >> 1] = HEAPU16[($2_1 + 14 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 16 | 0) >> 1] = HEAPU16[($2_1 + 16 | 0) >> 1] | 0;

                                        HEAP16[($1_1 + 18 | 0) >> 1] = HEAPU16[($2_1 + 18 | 0) >> 1] | 0;

                                    }

                                    global$0 = $4_1 + 32 | 0;

                                }



                                function $185($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var $3_1 = 0, $4_1 = 0, $5_1 = 0, $2_1 = 0, $22_1 = 0, $24_1 = 0, $38_1 = 0,

                                        $76_1 = 0, $114_1 = 0, $152_1 = 0;

                                    $2_1 = 0;

                                    label$1 : {

                                        if (($0_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        if (($0_1 | 0) > ($1_1 | 0)) {

                                            break label$1

                                        }

                                        $2_1 = 32767;

                                        if (($0_1 | 0) == ($1_1 | 0)) {

                                            break label$1

                                        }

                                        $2_1 = $0_1 << 3 | 0;

                                        $0_1 = $1_1 << 2 | 0;

                                        $3_1 = (($2_1 | 0) >= ($0_1 | 0)) << 2 | 0;

                                        $22_1 = $3_1;

                                        $24_1 = $3_1 | 2 | 0;

                                        $3_1 = $2_1 - (($2_1 | 0) < ($0_1 | 0) ? 0 : $0_1) | 0;

                                        $2_1 = $1_1 << 1 | 0;

                                        $4_1 = ($3_1 | 0) < ($2_1 | 0);

                                        $38_1 = $4_1 ? $22_1 : $24_1;

                                        $3_1 = $3_1 - ($4_1 ? 0 : $2_1) | 0;

                                        $4_1 = ($3_1 | 0) >= ($1_1 | 0);

                                        $5_1 = ($38_1 | $4_1 | 0) << 3 | 0;

                                        $3_1 = ($3_1 - ($4_1 ? $1_1 : 0) | 0) << 3 | 0;

                                        $4_1 = ($3_1 | 0) < ($0_1 | 0);

                                        $5_1 = $4_1 ? $5_1 : $5_1 | 4 | 0;

                                        $3_1 = $3_1 - ($4_1 ? 0 : $0_1) | 0;

                                        $4_1 = ($3_1 | 0) < ($2_1 | 0);

                                        $76_1 = $4_1 ? $5_1 : $5_1 | 2 | 0;

                                        $3_1 = $3_1 - ($4_1 ? 0 : $2_1) | 0;

                                        $4_1 = ($3_1 | 0) >= ($1_1 | 0);

                                        $5_1 = ($76_1 | $4_1 | 0) << 3 | 0;

                                        $3_1 = ($3_1 - ($4_1 ? $1_1 : 0) | 0) << 3 | 0;

                                        $4_1 = ($3_1 | 0) < ($0_1 | 0);

                                        $5_1 = $4_1 ? $5_1 : $5_1 | 4 | 0;

                                        $3_1 = $3_1 - ($4_1 ? 0 : $0_1) | 0;

                                        $4_1 = ($3_1 | 0) < ($2_1 | 0);

                                        $114_1 = $4_1 ? $5_1 : $5_1 | 2 | 0;

                                        $3_1 = $3_1 - ($4_1 ? 0 : $2_1) | 0;

                                        $4_1 = ($3_1 | 0) >= ($1_1 | 0);

                                        $5_1 = ($114_1 | $4_1 | 0) << 3 | 0;

                                        $3_1 = ($3_1 - ($4_1 ? $1_1 : 0) | 0) << 3 | 0;

                                        $4_1 = ($3_1 | 0) < ($0_1 | 0);

                                        $5_1 = $4_1 ? $5_1 : $5_1 | 4 | 0;

                                        $3_1 = $3_1 - ($4_1 ? 0 : $0_1) | 0;

                                        $4_1 = ($3_1 | 0) < ($2_1 | 0);

                                        $152_1 = $4_1 ? $5_1 : $5_1 | 2 | 0;

                                        $3_1 = $3_1 - ($4_1 ? 0 : $2_1) | 0;

                                        $4_1 = ($3_1 | 0) >= ($1_1 | 0);

                                        $5_1 = ($152_1 | $4_1 | 0) << 3 | 0;

                                        $3_1 = ($3_1 - ($4_1 ? $1_1 : 0) | 0) << 3 | 0;

                                        $4_1 = ($3_1 | 0) < ($0_1 | 0);

                                        $5_1 = $4_1 ? $5_1 : $5_1 | 4 | 0;

                                        $0_1 = $3_1 - ($4_1 ? 0 : $0_1) | 0;

                                        $3_1 = ($0_1 | 0) < ($2_1 | 0);

                                        $2_1 = ($3_1 ? $5_1 : $5_1 | 2 | 0) | ($0_1 - ($3_1 ? 0 : $2_1) | 0 | 0) >= ($1_1 | 0) | 0;

                                    }

                                    return $2_1 << 16 >> 16 | 0;

                                }



                                function $186($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = -939472896;

                                    $3_1 = -939472896;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$0 = -155978061;

                                    $4_1 = -155978061;

                                    HEAP16[(i64toi32_i32$1 + 8 | 0) >> 1] = $4_1;

                                    HEAP16[(i64toi32_i32$1 + 10 | 0) >> 1] = $4_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 12 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 14 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $187($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var $9_1 = 0, $10_1 = 0, $8_1 = 0, $11_1 = 0, $12_1 = 0, $21_1 = 0, $27_1 = 0,

                                        $33_1 = 0, $39_1 = 0, $45_1 = 0, $51_1 = 0, $57_1 = 0, $63_1 = 0, $69_1 = 0,

                                        $75_1 = 0, $82_1 = 0, $89_1 = 0, $97_1 = 0, $104_1 = 0, $111_1 = 0, $119_1 = 0,

                                        $126_1 = 0, $133_1 = 0, $141_1 = 0, $148_1 = 0, $155_1 = 0, $163_1 = 0,

                                        $170_1 = 0, $177_1 = 0, $185_1 = 0, $192_1 = 0, $199_1 = 0, $207_1 = 0,

                                        $214_1 = 0, $221_1 = 0, $229_1 = 0, $236_1 = 0, $243_1 = 0, $251_1 = 0,

                                        $258 = 0, $265 = 0, $273 = 0, $280 = 0, $607 = 0, $609 = 0;

                                    $8_1 = global$0 - 16 | 0;

                                    global$0 = $8_1;

                                    $9_1 = HEAP16[($2_1 + 72 | 0) >> 1] | 0;

                                    $21_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 64 | 0) >> 1] | 0;

                                    $27_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 56 | 0) >> 1] | 0;

                                    $33_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 48 | 0) >> 1] | 0;

                                    $39_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 40 | 0) >> 1] | 0;

                                    $45_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 32 | 0) >> 1] | 0;

                                    $51_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 24 | 0) >> 1] | 0;

                                    $57_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 16 | 0) >> 1] | 0;

                                    $63_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 8 | 0) >> 1] | 0;

                                    $69_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[$2_1 >> 1] | 0;

                                    $75_1 = Math_imul($9_1, $9_1) >>> 3 | 0;

                                    $9_1 = HEAP16[($2_1 + 2 | 0) >> 1] | 0;

                                    $82_1 = $75_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 4 | 0) >> 1] | 0;

                                    $89_1 = $82_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 6 | 0) >> 1] | 0;

                                    $97_1 = $69_1 + ($89_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 10 | 0) >> 1] | 0;

                                    $104_1 = $97_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 12 | 0) >> 1] | 0;

                                    $111_1 = $104_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 14 | 0) >> 1] | 0;

                                    $119_1 = $63_1 + ($111_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 18 | 0) >> 1] | 0;

                                    $126_1 = $119_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 20 | 0) >> 1] | 0;

                                    $133_1 = $126_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 22 | 0) >> 1] | 0;

                                    $141_1 = $57_1 + ($133_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 26 | 0) >> 1] | 0;

                                    $148_1 = $141_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 28 | 0) >> 1] | 0;

                                    $155_1 = $148_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 30 | 0) >> 1] | 0;

                                    $163_1 = $51_1 + ($155_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 34 | 0) >> 1] | 0;

                                    $170_1 = $163_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 36 | 0) >> 1] | 0;

                                    $177_1 = $170_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 38 | 0) >> 1] | 0;

                                    $185_1 = $45_1 + ($177_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 42 | 0) >> 1] | 0;

                                    $192_1 = $185_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 44 | 0) >> 1] | 0;

                                    $199_1 = $192_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 46 | 0) >> 1] | 0;

                                    $207_1 = $39_1 + ($199_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 50 | 0) >> 1] | 0;

                                    $214_1 = $207_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 52 | 0) >> 1] | 0;

                                    $221_1 = $214_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 54 | 0) >> 1] | 0;

                                    $229_1 = $33_1 + ($221_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 58 | 0) >> 1] | 0;

                                    $236_1 = $229_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 60 | 0) >> 1] | 0;

                                    $243_1 = $236_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 62 | 0) >> 1] | 0;

                                    $251_1 = $27_1 + ($243_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 66 | 0) >> 1] | 0;

                                    $258 = $251_1 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 68 | 0) >> 1] | 0;

                                    $265 = $258 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 70 | 0) >> 1] | 0;

                                    $273 = $21_1 + ($265 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 74 | 0) >> 1] | 0;

                                    $280 = $273 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0;

                                    $9_1 = HEAP16[($2_1 + 76 | 0) >> 1] | 0;

                                    $2_1 = HEAP16[($2_1 + 78 | 0) >> 1] | 0;

                                    $2_1 = (($280 + (Math_imul($9_1, $9_1) >>> 3 | 0) | 0) + (Math_imul($2_1, $2_1) >>> 3 | 0) | 0) << 4 | 0;

                                    $2_1 = ($2_1 | 0) > (-1 | 0) ? $2_1 : 2147483647;

                                    label$1 : {

                                        label$2 : {

                                            if (($1_1 | 0) != (7 | 0)) {

                                                break label$2

                                            }

                                            $197(Math_imul($220($2_1 | 0, $7_1 | 0) | 0, 52428) | 0, $8_1 + 14 | 0 | 0, $8_1 + 12 | 0 | 0, $7_1 | 0);

                                            $9_1 = Math_imul(HEAP16[($0_1 + 10 | 0) >> 1] | 0, 74);

                                            $10_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                            $1_1 = Math_imul($10_1, 88) + 783741 | 0;

                                            $2_1 = $9_1 + $1_1 | 0;

                                            label$3 : {

                                                if (($9_1 ^ $1_1 | 0 | 0) < (0 | 0)) {

                                                    break label$3

                                                }

                                                if (($2_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$3

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $2_1 = ($10_1 | 0) > (-8907 | 0) ? 2147483647 : -2147483648;

                                            }

                                            $9_1 = HEAP16[($8_1 + 12 | 0) >> 1] | 0;

                                            $10_1 = HEAPU16[($8_1 + 14 | 0) >> 1] | 0;

                                            $11_1 = Math_imul(HEAP16[($0_1 + 12 | 0) >> 1] | 0, 44);

                                            $1_1 = $11_1 + $2_1 | 0;

                                            label$4 : {

                                                if (($11_1 ^ $2_1 | 0 | 0) < (0 | 0)) {

                                                    break label$4

                                                }

                                                if (($1_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$4

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $1_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $9_1 = $9_1 << 1 | 0;

                                            $10_1 = $10_1 << 16 | 0;

                                            $0_1 = Math_imul(HEAP16[($0_1 + 14 | 0) >> 1] | 0, 24);

                                            $2_1 = $0_1 + $1_1 | 0;

                                            label$5 : {

                                                if (($0_1 ^ $1_1 | 0 | 0) < (0 | 0)) {

                                                    break label$5

                                                }

                                                if (($2_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$5

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $2_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $1_1 = ($10_1 + $9_1 | 0) + -1966080 | 0;

                                            $0_1 = $2_1 - $1_1 | 0;

                                            label$6 : {

                                                if (($2_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$6

                                                }

                                                if (($0_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                    break label$6

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $0_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                            }

                                            $2_1 = $0_1 >> 17 | 0;

                                            HEAP16[$3_1 >> 1] = $2_1;

                                            $2_1 = ($0_1 >> 2 | 0) - ($2_1 << 15 | 0) | 0;

                                            break label$1;

                                        }

                                        label$7 : {

                                            label$8 : {

                                                $10_1 = $209($2_1 | 0) | 0;

                                                if (($10_1 | 0) < (1 | 0)) {

                                                    break label$8

                                                }

                                                $9_1 = $10_1 & 65535 | 0;

                                                $11_1 = $2_1 << $9_1 | 0;

                                                $11_1 = ($11_1 >> $9_1 | 0 | 0) == ($2_1 | 0) ? $11_1 : 2147483647;

                                                break label$7;

                                            }

                                            $11_1 = 0;

                                            $9_1 = (0 - $10_1 | 0) << 16 >> 16;

                                            if (($9_1 | 0) > (30 | 0)) {

                                                break label$7

                                            }

                                            $11_1 = $2_1 >>> ($9_1 & 65535 | 0) | 0;

                                        }

                                        $198($11_1 | 0, $10_1 | 0, $8_1 + 14 | 0 | 0, $8_1 + 12 | 0 | 0);

                                        $2_1 = Math_imul(HEAP16[($8_1 + 12 | 0) >> 1] | 0, -24660) >> 15 | 0;

                                        $9_1 = $2_1 << 1 | 0;

                                        $9_1 = $2_1 & 65536 | 0 ? $9_1 | -131072 | 0 : $9_1;

                                        $12_1 = Math_imul(HEAP16[($8_1 + 14 | 0) >> 1] | 0, -49320);

                                        $2_1 = $9_1 + $12_1 | 0;

                                        label$9 : {

                                            if (($9_1 ^ $12_1 | 0 | 0) < (0 | 0)) {

                                                break label$9

                                            }

                                            if (($2_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                break label$9

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $2_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        label$10 : {

                                            label$11 : {

                                                label$12 : {

                                                    label$13 : {

                                                        label$14 : {

                                                            switch ($1_1 + -3 | 0 | 0) {

                                                                case 3:

                                                                    $9_1 = $2_1 + 2134784 | 0;

                                                                    if (($2_1 | 0) < (0 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    if (($9_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    break label$12;

                                                                case 2:

                                                                    HEAP16[$6_1 >> 1] = $11_1 >>> 16 | 0;

                                                                    HEAP16[$5_1 >> 1] = -11 - $10_1 | 0;

                                                                    $9_1 = $2_1 + 2183936 | 0;

                                                                    if (($2_1 | 0) < (0 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    if (($9_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    break label$12;

                                                                case 1:

                                                                    $9_1 = $2_1 + 2085632 | 0;

                                                                    if (($2_1 | 0) < (0 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    if (($9_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    break label$12;

                                                                case 0:

                                                                    $9_1 = $2_1 + 2065152 | 0;

                                                                    if (($2_1 | 0) < (0 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    if (($9_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                                        break label$13

                                                                    }

                                                                    break label$12;

                                                                default:

                                                                    break label$14;

                                                            }

                                                            ;

                                                        }

                                                        $9_1 = $2_1 + 2134784 | 0;

                                                        if (($2_1 | 0) < (0 | 0)) {

                                                            break label$13

                                                        }

                                                        if (($9_1 ^ $2_1 | 0 | 0) < (0 | 0)) {

                                                            break label$12

                                                        }

                                                    }

                                                    if (($9_1 | 0) < (2097152 | 0)) {

                                                        break label$11

                                                    }

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $9_1 = 2147483647;

                                                break label$10;

                                            }

                                            label$19 : {

                                                if (($9_1 | 0) > (-2097153 | 0)) {

                                                    break label$19

                                                }

                                                HEAP32[$7_1 >> 2] = 1;

                                                $9_1 = -2147483648;

                                                break label$10;

                                            }

                                            $9_1 = $9_1 << 10 | 0;

                                        }

                                        $10_1 = Math_imul(HEAP16[$0_1 >> 1] | 0, 11142);

                                        $2_1 = $10_1 + $9_1 | 0;

                                        label$20 : {

                                            if (($10_1 ^ $9_1 | 0 | 0) < (0 | 0)) {

                                                break label$20

                                            }

                                            if (($2_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                break label$20

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $2_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $10_1 = Math_imul(HEAP16[($0_1 + 2 | 0) >> 1] | 0, 9502);

                                        $9_1 = $10_1 + $2_1 | 0;

                                        label$21 : {

                                            if (($10_1 ^ $2_1 | 0 | 0) < (0 | 0)) {

                                                break label$21

                                            }

                                            if (($9_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                break label$21

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $9_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $10_1 = Math_imul(HEAP16[($0_1 + 4 | 0) >> 1] | 0, 5570);

                                        $2_1 = $10_1 + $9_1 | 0;

                                        label$22 : {

                                            if (($10_1 ^ $9_1 | 0 | 0) < (0 | 0)) {

                                                break label$22

                                            }

                                            if (($2_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                                break label$22

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $2_1 = ($9_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $9_1 = Math_imul(HEAP16[($0_1 + 6 | 0) >> 1] | 0, 3112);

                                        $0_1 = $9_1 + $2_1 | 0;

                                        label$23 : {

                                            if (($9_1 ^ $2_1 | 0 | 0) < (0 | 0)) {

                                                break label$23

                                            }

                                            if (($0_1 ^ $2_1 | 0 | 0) > (-1 | 0)) {

                                                break label$23

                                            }

                                            HEAP32[$7_1 >> 2] = 1;

                                            $0_1 = ($2_1 >> 31 | 0) ^ 2147483647 | 0;

                                        }

                                        $1_1 = Math_imul($0_1 >> 16 | 0, ($1_1 | 0) == (4 | 0) ? 10878 : 10886);

                                        $2_1 = $1_1 >>> 8 | 0;

                                        $607 = $2_1;

                                        $609 = $2_1 | -16777216 | 0;

                                        $2_1 = ($1_1 | 0) > (-1 | 0);

                                        $0_1 = $2_1 ? $607 : $609;

                                        $9_1 = $0_1 >> 16 | 0;

                                        HEAP16[$3_1 >> 1] = $9_1;

                                        $0_1 = $0_1 >>> 1 | 0;

                                        $0_1 = $2_1 ? $0_1 : $0_1 | -2147483648 | 0;

                                        $9_1 = $9_1 << 15 | 0;

                                        $2_1 = $0_1 - $9_1 | 0;

                                        if (($0_1 ^ $9_1 | 0 | 0) > (-1 | 0)) {

                                            break label$1

                                        }

                                        if (($2_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                            break label$1

                                        }

                                        HEAP32[$7_1 >> 2] = 1;

                                        $2_1 = ($1_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    HEAP16[$4_1 >> 1] = $2_1;

                                    global$0 = $8_1 + 16 | 0;

                                }



                                function $188($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, $4_1 = 0;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = HEAPU16[($0_1 + 4 | 0) >> 1] | 0;

                                    $3_1 = HEAPU16[$0_1 >> 1] | 0 | ((HEAPU16[($0_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $3_1;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[$0_1 >> 1] = $2_1;

                                    $2_1 = HEAPU16[($0_1 + 8 | 0) >> 1] | 0 | ((HEAPU16[($0_1 + 10 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $1_1;

                                    HEAP16[($0_1 + 14 | 0) >> 1] = HEAPU16[($0_1 + 12 | 0) >> 1] | 0;

                                    $4_1 = $0_1 + 10 | 0;

                                    HEAP16[$4_1 >> 1] = $2_1;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = $2_1 >>> 16 | 0;

                                }



                                function $189($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0;

                                    $4_1 = $183($183($183($183(0 | 0, HEAP16[($0_1 + 8 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0 | 0, HEAP16[($0_1 + 10 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0 | 0, HEAP16[($0_1 + 12 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0 | 0, HEAP16[($0_1 + 14 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0;

                                    $4_1 = ($4_1 | 0) < (0 | 0) ? $4_1 >>> 2 | 0 | -16384 | 0 : $4_1 >> 2 | 0;

                                    HEAP16[$1_1 >> 1] = ($4_1 | 0) > (-2381 | 0) ? $4_1 : -2381;

                                    $0_1 = $183($183($183($183(0 | 0, HEAP16[$0_1 >> 1] | 0 | 0, $3_1 | 0) | 0 | 0, HEAP16[($0_1 + 2 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0 | 0, HEAP16[($0_1 + 4 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0 | 0, HEAP16[($0_1 + 6 | 0) >> 1] | 0 | 0, $3_1 | 0) | 0;

                                    $3_1 = $0_1 >>> 2 | 0;

                                    HEAP16[$2_1 >> 1] = ($0_1 | 0) < (0 | 0) ? $3_1 | 49152 | 0 : $3_1;

                                }



                                function $190($0_1) {

                                    $0_1 = $0_1 | 0;

                                    HEAP32[($0_1 + 132 | 0) >> 2] = global$17;

                                    HEAP32[($0_1 + 128 | 0) >> 2] = global$18;

                                    HEAP32[($0_1 + 124 | 0) >> 2] = global$19;

                                    HEAP32[($0_1 + 120 | 0) >> 2] = global$20;

                                    HEAP32[($0_1 + 116 | 0) >> 2] = global$21;

                                    HEAP32[($0_1 + 112 | 0) >> 2] = global$22;

                                    HEAP32[($0_1 + 108 | 0) >> 2] = global$23;

                                    HEAP32[($0_1 + 104 | 0) >> 2] = global$24;

                                    HEAP32[($0_1 + 100 | 0) >> 2] = global$25;

                                    HEAP32[($0_1 + 96 | 0) >> 2] = global$26;

                                    HEAP32[($0_1 + 92 | 0) >> 2] = global$27;

                                    HEAP32[($0_1 + 88 | 0) >> 2] = global$28;

                                    HEAP32[($0_1 + 84 | 0) >> 2] = global$29;

                                    HEAP32[($0_1 + 80 | 0) >> 2] = global$30;

                                    HEAP32[($0_1 + 76 | 0) >> 2] = global$31;

                                    HEAP32[($0_1 + 72 | 0) >> 2] = global$32;

                                    HEAP32[($0_1 + 68 | 0) >> 2] = global$33;

                                    HEAP32[($0_1 + 64 | 0) >> 2] = global$34;

                                    HEAP32[($0_1 + 60 | 0) >> 2] = global$35;

                                    HEAP32[($0_1 + 56 | 0) >> 2] = global$36;

                                    HEAP32[($0_1 + 52 | 0) >> 2] = global$37;

                                    HEAP32[($0_1 + 48 | 0) >> 2] = global$38;

                                    HEAP32[($0_1 + 44 | 0) >> 2] = global$39;

                                    HEAP32[($0_1 + 40 | 0) >> 2] = global$40;

                                    HEAP32[($0_1 + 36 | 0) >> 2] = global$41;

                                    HEAP32[($0_1 + 32 | 0) >> 2] = global$42;

                                    HEAP32[($0_1 + 28 | 0) >> 2] = global$43;

                                    HEAP32[($0_1 + 24 | 0) >> 2] = global$44;

                                    HEAP32[($0_1 + 20 | 0) >> 2] = global$45;

                                    HEAP32[($0_1 + 16 | 0) >> 2] = global$46;

                                    HEAP32[($0_1 + 12 | 0) >> 2] = global$47;

                                    HEAP32[($0_1 + 8 | 0) >> 2] = global$48;

                                    HEAP32[($0_1 + 4 | 0) >> 2] = global$49;

                                    HEAP32[$0_1 >> 2] = global$50;

                                }



                                function $191($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var $2_1 = 0, $3_1 = 0, $13_1 = 0, $15_1 = 0, $17_1 = 0, $9_1 = 0, $7_1 = 0,

                                        $10_1 = 0, $11_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0,

                                        $5_1 = 0, $12_1 = 0, $14_1 = 0, $16_1 = 0, $4_1 = 0, $6_1 = 0, $8_1 = 0;

                                    $2_1 = global$0 - 64 | 0;

                                    global$0 = $2_1;

                                    $3_1 = $227($2_1 | 0, $0_1 | 0, $1_1 << 1 | 0 | 0) | 0;

                                    label$1 : {

                                        if (($1_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $4_1 = $1_1 & 65532 | 0;

                                        $5_1 = $1_1 & 3 | 0;

                                        $6_1 = $1_1 & 65535 | 0;

                                        $7_1 = 0;

                                        $8_1 = $1_1 >>> 0 < 4 >>> 0;

                                        $9_1 = 0;

                                        label$2 : while (1) {

                                            $10_1 = 32769;

                                            $2_1 = 0;

                                            $11_1 = 0;

                                            label$3 : {

                                                if ($8_1) {

                                                    break label$3

                                                }

                                                label$4 : while (1) {

                                                    $12_1 = $2_1 | 3 | 0;

                                                    $13_1 = HEAP16[($3_1 + ($12_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $14_1 = $2_1 | 2 | 0;

                                                    $15_1 = HEAP16[($3_1 + ($14_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $16_1 = $2_1 | 1 | 0;

                                                    $17_1 = HEAP16[($3_1 + ($16_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $18_1 = HEAP16[($3_1 + ($2_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $19_1 = $10_1 << 16 >> 16;

                                                    $20_1 = ($18_1 | 0) > ($19_1 | 0) ? $18_1 : $19_1;

                                                    $21_1 = ($17_1 | 0) > ($20_1 | 0) ? $17_1 : $20_1;

                                                    $22_1 = ($15_1 | 0) > ($21_1 | 0) ? $15_1 : $21_1;

                                                    $10_1 = ($13_1 | 0) > ($22_1 | 0) ? $13_1 : $22_1;

                                                    $9_1 = ($13_1 | 0) < ($22_1 | 0) ? (($15_1 | 0) < ($21_1 | 0) ? (($17_1 | 0) < ($20_1 | 0) ? (($18_1 | 0) < ($19_1 | 0) ? $9_1 : $2_1) : $16_1) : $14_1) : $12_1;

                                                    $2_1 = $2_1 + 4 | 0;

                                                    $11_1 = $11_1 + 4 | 0;

                                                    if (($11_1 | 0) != ($4_1 | 0)) {

                                                        continue label$4

                                                    }

                                                    break label$4;

                                                }

                                                ;

                                            }

                                            $17_1 = 0;

                                            label$5 : {

                                                if (!$5_1) {

                                                    break label$5

                                                }

                                                label$6 : while (1) {

                                                    $13_1 = HEAP16[($3_1 + ($2_1 << 1 | 0) | 0) >> 1] | 0;

                                                    $15_1 = $10_1 << 16 >> 16;

                                                    $10_1 = ($13_1 | 0) > ($15_1 | 0) ? $13_1 : $15_1;

                                                    $9_1 = ($13_1 | 0) < ($15_1 | 0) ? $9_1 : $2_1;

                                                    $2_1 = $2_1 + 1 | 0;

                                                    $17_1 = $17_1 + 1 | 0;

                                                    if (($17_1 | 0) != ($5_1 | 0)) {

                                                        continue label$6

                                                    }

                                                    break label$6;

                                                }

                                                ;

                                            }

                                            HEAP16[(($3_1 + 32 | 0) + ($7_1 << 1 | 0) | 0) >> 1] = $9_1;

                                            HEAP16[($3_1 + ($9_1 << 16 >> 16 << 1 | 0) | 0) >> 1] = 32768;

                                            $7_1 = $7_1 + 1 | 0;

                                            if (($7_1 | 0) != ($6_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    $2_1 = HEAP16[($0_1 + ((HEAP16[(($3_1 + 32 | 0) + ($1_1 & -2 | 0) | 0) >> 1] | 0) << 1 | 0) | 0) >> 1] | 0;

                                    global$0 = $3_1 + 64 | 0;

                                    return $2_1 | 0;

                                }



                                function $192($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $5_1 = 0;

                                    $5_1 = global$0 - 32 | 0;

                                    global$0 = $5_1;

                                    HEAP16[$5_1 >> 1] = ((HEAP16[$1_1 >> 1] | 0) >>> 1 | 0) + ((HEAP16[$0_1 >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 10 | 0) >> 1] = ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 12 | 0) >> 1] = ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 14 | 0) >> 1] = ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 16 | 0) >> 1] = ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 18 | 0) >> 1] = ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    $201($5_1 | 0, $3_1 | 0, $4_1 | 0);

                                    $201($1_1 | 0, $3_1 + 22 | 0 | 0, $4_1 | 0);

                                    HEAP16[$5_1 >> 1] = ((HEAP16[$2_1 >> 1] | 0) >>> 1 | 0) + ((HEAP16[$1_1 >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = ((HEAP16[($2_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = ((HEAP16[($2_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = ((HEAP16[($2_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = ((HEAP16[($2_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 10 | 0) >> 1] = ((HEAP16[($2_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 12 | 0) >> 1] = ((HEAP16[($2_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 14 | 0) >> 1] = ((HEAP16[($2_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 16 | 0) >> 1] = ((HEAP16[($2_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 18 | 0) >> 1] = ((HEAP16[($2_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    $201($5_1 | 0, $3_1 + 44 | 0 | 0, $4_1 | 0);

                                    $201($2_1 | 0, $3_1 + 66 | 0 | 0, $4_1 | 0);

                                    global$0 = $5_1 + 32 | 0;

                                }



                                function $193($0_1, $1_1, $2_1, $3_1, $4_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    var $5_1 = 0;

                                    $5_1 = global$0 - 32 | 0;

                                    global$0 = $5_1;

                                    HEAP16[$5_1 >> 1] = ((HEAP16[$1_1 >> 1] | 0) >>> 1 | 0) + ((HEAP16[$0_1 >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 10 | 0) >> 1] = ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 12 | 0) >> 1] = ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 14 | 0) >> 1] = ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 16 | 0) >> 1] = ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 18 | 0) >> 1] = ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    $201($5_1 | 0, $3_1 | 0, $4_1 | 0);

                                    HEAP16[$5_1 >> 1] = ((HEAP16[$2_1 >> 1] | 0) >>> 1 | 0) + ((HEAP16[$1_1 >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = ((HEAP16[($2_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 4 | 0) >> 1] = ((HEAP16[($2_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = ((HEAP16[($2_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = ((HEAP16[($2_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 10 | 0) >> 1] = ((HEAP16[($2_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 12 | 0) >> 1] = ((HEAP16[($2_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 14 | 0) >> 1] = ((HEAP16[($2_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 16 | 0) >> 1] = ((HEAP16[($2_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($5_1 + 18 | 0) >> 1] = ((HEAP16[($2_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    $201($5_1 | 0, $3_1 + 44 | 0 | 0, $4_1 | 0);

                                    global$0 = $5_1 + 32 | 0;

                                }



                                function $194($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $5_1 = 0, $4_1 = 0;

                                    $4_1 = global$0 - 32 | 0;

                                    global$0 = $4_1;

                                    $5_1 = HEAP16[$0_1 >> 1] | 0;

                                    HEAP16[$4_1 >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[$1_1 >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 4 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 6 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 8 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 10 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 14 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 16 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 18 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $201($4_1 | 0, $2_1 | 0, $3_1 | 0);

                                    HEAP16[$4_1 >> 1] = ((HEAP16[$0_1 >> 1] | 0) >>> 1 | 0) + ((HEAP16[$1_1 >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = ((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 4 | 0) >> 1] = ((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 6 | 0) >> 1] = ((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 8 | 0) >> 1] = ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 10 | 0) >> 1] = ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = ((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 14 | 0) >> 1] = ((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 16 | 0) >> 1] = ((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 18 | 0) >> 1] = ((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    $201($4_1 | 0, $2_1 + 22 | 0 | 0, $3_1 | 0);

                                    $5_1 = HEAP16[$1_1 >> 1] | 0;

                                    HEAP16[$4_1 >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[$0_1 >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 4 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 6 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 8 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 8 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 10 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 10 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 12 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 14 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 14 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 16 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 16 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 18 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 18 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $201($4_1 | 0, $2_1 + 44 | 0 | 0, $3_1 | 0);

                                    $201($1_1 | 0, $2_1 + 66 | 0 | 0, $3_1 | 0);

                                    global$0 = $4_1 + 32 | 0;

                                }



                                function $195($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $5_1 = 0, $4_1 = 0;

                                    $4_1 = global$0 - 32 | 0;

                                    global$0 = $4_1;

                                    $5_1 = HEAP16[$0_1 >> 1] | 0;

                                    HEAP16[$4_1 >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[$1_1 >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 4 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 6 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 8 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 10 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 14 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 16 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 18 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $201($4_1 | 0, $2_1 | 0, $3_1 | 0);

                                    HEAP16[$4_1 >> 1] = ((HEAP16[$0_1 >> 1] | 0) >>> 1 | 0) + ((HEAP16[$1_1 >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = ((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 2 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 4 | 0) >> 1] = ((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 4 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 6 | 0) >> 1] = ((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 6 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 8 | 0) >> 1] = ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 8 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 10 | 0) >> 1] = ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 10 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = ((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 12 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 14 | 0) >> 1] = ((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 14 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 16 | 0) >> 1] = ((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 16 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    HEAP16[($4_1 + 18 | 0) >> 1] = ((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) + ((HEAP16[($1_1 + 18 | 0) >> 1] | 0) >>> 1 | 0) | 0;

                                    $201($4_1 | 0, $2_1 + 22 | 0 | 0, $3_1 | 0);

                                    $5_1 = HEAP16[$1_1 >> 1] | 0;

                                    HEAP16[$4_1 >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[$0_1 >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 4 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 6 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 8 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 8 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 10 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 10 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 12 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 12 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 14 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 14 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $5_1 = HEAP16[($1_1 + 16 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 16 | 0) >> 1] = ($5_1 - ($5_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $1_1 = HEAP16[($1_1 + 18 | 0) >> 1] | 0;

                                    HEAP16[($4_1 + 18 | 0) >> 1] = ($1_1 - ($1_1 >>> 2 | 0) | 0) + ((HEAP16[($0_1 + 18 | 0) >> 1] | 0) >>> 2 | 0) | 0;

                                    $201($4_1 | 0, $2_1 + 44 | 0 | 0, $3_1 | 0);

                                    global$0 = $4_1 + 32 | 0;

                                }



                                function $196($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var $2_1 = 0, $3_1 = 0, $4_1 = 0, $12_1 = 0;

                                    label$1 : {

                                        if (($0_1 | 0) >= (1 | 0)) {

                                            break label$1

                                        }

                                        return 1073741823 | 0;

                                    }

                                    $2_1 = $209($0_1 | 0) | 0;

                                    $12_1 = $0_1 << ($2_1 & 65535 | 0) | 0;

                                    $0_1 = 30 - $2_1 | 0;

                                    $2_1 = $12_1 >> !($0_1 & 1 | 0) | 0;

                                    $3_1 = (($2_1 >> 25 | 0) << 1 | 0) + global$51 | 0;

                                    $4_1 = HEAPU16[($3_1 + -32 | 0) >> 1] | 0;

                                    return (($4_1 << 16 | 0) - (Math_imul(($4_1 - (HEAPU16[($3_1 + -30 | 0) >> 1] | 0) | 0) << 16 >> 16, ($2_1 >>> 10 | 0) & 32767 | 0) << 1 | 0) | 0) >> ((($0_1 << 16 >> 16 >>> 1 | 0) + 1 | 0) & 65535 | 0) | 0 | 0;

                                }



                                function $197($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0;

                                    $4_1 = $209($0_1 | 0) | 0;

                                    $198($0_1 << ($4_1 & 65535 | 0) | 0 | 0, $4_1 | 0, $1_1 | 0, $2_1 | 0);

                                }



                                function $198($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    label$1 : {

                                        if (($0_1 | 0) > (0 | 0)) {

                                            break label$1

                                        }

                                        HEAP16[$2_1 >> 1] = 0;

                                        HEAP16[$3_1 >> 1] = 0;

                                        return;

                                    }

                                    HEAP16[$2_1 >> 1] = 30 - $1_1 | 0;

                                    $2_1 = (($0_1 >>> 24 | 0) & 254 | 0) + global$52 | 0;

                                    $1_1 = HEAPU16[($2_1 + -64 | 0) >> 1] | 0;

                                    HEAP16[$3_1 >> 1] = (($1_1 << 16 | 0) - Math_imul(($0_1 >>> 9 | 0) & 65534 | 0, ($1_1 - (HEAPU16[($2_1 + -62 | 0) >> 1] | 0) | 0) << 16 >> 16) | 0) >>> 16 | 0;

                                }



                                function $199($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, $4_1 = 0, $6_1 = 0, $8_1 = 0, $9_1 = 0, $5_1 = 0, $7_1 = 0, $10_1 = 0,

                                        $11_1 = 0, $12_1 = 0;

                                    $3_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[$1_1 >> 1] = $3_1;

                                    $4_1 = $0_1 + 4 | 0;

                                    $5_1 = (HEAPU16[$4_1 >> 1] | 0) - (HEAPU16[$0_1 >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 2 | 0) >> 1] = $5_1;

                                    $6_1 = $0_1 + 6 | 0;

                                    $7_1 = (HEAPU16[$6_1 >> 1] | 0) - (HEAPU16[($0_1 + 2 | 0) >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 4 | 0) >> 1] = $7_1;

                                    $8_1 = $0_1 + 8 | 0;

                                    $4_1 = (HEAPU16[$8_1 >> 1] | 0) - (HEAPU16[$4_1 >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 6 | 0) >> 1] = $4_1;

                                    $9_1 = $0_1 + 10 | 0;

                                    $6_1 = (HEAPU16[$9_1 >> 1] | 0) - (HEAPU16[$6_1 >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 8 | 0) >> 1] = $6_1;

                                    $10_1 = $0_1 + 12 | 0;

                                    $8_1 = (HEAPU16[$10_1 >> 1] | 0) - (HEAPU16[$8_1 >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 10 | 0) >> 1] = $8_1;

                                    $11_1 = $0_1 + 14 | 0;

                                    $9_1 = (HEAPU16[$11_1 >> 1] | 0) - (HEAPU16[$9_1 >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 12 | 0) >> 1] = $9_1;

                                    $12_1 = $0_1 + 16 | 0;

                                    HEAP16[($1_1 + 14 | 0) >> 1] = (HEAPU16[$12_1 >> 1] | 0) - (HEAPU16[$10_1 >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 16 | 0) >> 1] = (HEAPU16[($0_1 + 18 | 0) >> 1] | 0) - (HEAPU16[$11_1 >> 1] | 0) | 0;

                                    HEAP16[($1_1 + 18 | 0) >> 1] = 16384 - (HEAPU16[$12_1 >> 1] | 0) | 0;

                                    label$1 : {

                                        label$2 : {

                                            $0_1 = ($3_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                            break label$1;

                                        }

                                        $0_1 = 3427 - (Math_imul($3_1, 56320) >>> 16 | 0) | 0;

                                    }

                                    HEAP16[$1_1 >> 1] = $0_1 << 3 | 0;

                                    label$3 : {

                                        label$4 : {

                                            $0_1 = ($5_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$4

                                            }

                                            $0_1 = 3427 - (Math_imul($5_1 << 16 >> 16, 56320) >>> 16 | 0) | 0;

                                            break label$3;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 2 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$5 : {

                                        label$6 : {

                                            $0_1 = ($7_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$6

                                            }

                                            $0_1 = 3427 - (Math_imul($7_1 << 16 >> 16, 56320) >>> 16 | 0) | 0;

                                            break label$5;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 4 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$7 : {

                                        label$8 : {

                                            $0_1 = ($4_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$8

                                            }

                                            $0_1 = 3427 - (Math_imul($4_1 << 16 >> 16, 56320) >>> 16 | 0) | 0;

                                            break label$7;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 6 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$9 : {

                                        label$10 : {

                                            $0_1 = ($6_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$10

                                            }

                                            $0_1 = 3427 - (Math_imul($6_1 << 16 >> 16, 56320) >>> 16 | 0) | 0;

                                            break label$9;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 8 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$11 : {

                                        label$12 : {

                                            $0_1 = ($8_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$12

                                            }

                                            $0_1 = 3427 - (Math_imul($8_1 << 16 >> 16, 56320) >>> 16 | 0) | 0;

                                            break label$11;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 10 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$13 : {

                                        label$14 : {

                                            $0_1 = ($9_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$14

                                            }

                                            $0_1 = 3427 - (Math_imul($9_1 << 16 >> 16, 56320) >>> 16 | 0) | 0;

                                            break label$13;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 12 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$15 : {

                                        label$16 : {

                                            $3_1 = HEAP16[($1_1 + 14 | 0) >> 1] | 0;

                                            $0_1 = ($3_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$16

                                            }

                                            $0_1 = 3427 - (Math_imul($3_1, 56320) >>> 16 | 0) | 0;

                                            break label$15;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 14 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$17 : {

                                        label$18 : {

                                            $3_1 = HEAP16[($1_1 + 16 | 0) >> 1] | 0;

                                            $0_1 = ($3_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$18

                                            }

                                            $0_1 = 3427 - (Math_imul($3_1, 56320) >>> 16 | 0) | 0;

                                            break label$17;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 16 | 0) >> 1] = $0_1 << 3 | 0;

                                    label$19 : {

                                        label$20 : {

                                            $3_1 = HEAP16[($1_1 + 18 | 0) >> 1] | 0;

                                            $0_1 = ($3_1 + -1843 | 0) << 16 >> 16;

                                            if (($0_1 | 0) > (0 | 0)) {

                                                break label$20

                                            }

                                            $0_1 = 3427 - (Math_imul($3_1, 56320) >>> 16 | 0) | 0;

                                            break label$19;

                                        }

                                        $0_1 = 1843 - (Math_imul($0_1 & 65535 | 0, 6242) >>> 15 | 0) | 0;

                                    }

                                    HEAP16[($1_1 + 18 | 0) >> 1] = $0_1 << 3 | 0;

                                }



                                function $200($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0;

                                    $3_1 = 0;

                                    label$1 : {

                                        if (($1_1 | 0) > (31 | 0)) {

                                            break label$1

                                        }

                                        label$2 : {

                                            if (($1_1 | 0) < (1 | 0)) {

                                                break label$2

                                            }

                                            return (($0_1 >>> ($1_1 + -1 | 0) | 0) & 1 | 0) + ($1_1 >>> 0 < 31 >>> 0 ? $0_1 >> ($1_1 & 65535 | 0) | 0 : 0) | 0 | 0;

                                        }

                                        $1_1 = (0 - $1_1 | 0) << 16 >> 16;

                                        $3_1 = $0_1 << $1_1 | 0;

                                        if (($3_1 >> $1_1 | 0 | 0) == ($0_1 | 0)) {

                                            break label$1

                                        }

                                        $3_1 = ($0_1 >> 31 | 0) ^ 2147483647 | 0;

                                    }

                                    return $3_1 | 0;

                                }



                                function $201($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $5_1 = 0, $7_1 = 0, $10_1 = 0, $3_1 = 0, $12_1 = 0, $6_1 = 0, $4_1 = 0,

                                        $9_1 = 0, $13_1 = 0, $11_1 = 0, $18_1 = 0, $8_1 = 0, $17_1 = 0, $14_1 = 0,

                                        $15_1 = 0, $16_1 = 0, $21_1 = 0, $19_1 = 0, $20_1 = 0, $22_1 = 0, $23_1 = 0,

                                        $24_1 = 0, $101_1 = 0, $174_1 = 0, $261 = 0, $334 = 0, $410 = 0, $454 = 0,

                                        $501 = 0;

                                    $3_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                    $4_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                    $5_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                    $6_1 = HEAP16[$0_1 >> 1] | 0;

                                    $7_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                    $8_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                    $9_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                    $10_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                    $11_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                    $0_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[$1_1 >> 1] = 4096;

                                    $12_1 = 0 - ($6_1 << 10 | 0) | 0;

                                    $6_1 = $12_1 - ($7_1 << 10 | 0) | 0;

                                    $13_1 = $6_1 - ($5_1 << 10 | 0) | 0;

                                    $14_1 = $13_1 - ($4_1 << 10 | 0) | 0;

                                    $15_1 = $14_1 - ($3_1 << 10 | 0) | 0;

                                    $16_1 = $15_1 + 16781312 | 0;

                                    $17_1 = 0 - ($11_1 << 10 | 0) | 0;

                                    $11_1 = $17_1 - ($0_1 << 10 | 0) | 0;

                                    $18_1 = $11_1 - ($10_1 << 10 | 0) | 0;

                                    $19_1 = $18_1 - ($9_1 << 10 | 0) | 0;

                                    $20_1 = $19_1 - ($8_1 << 10 | 0) | 0;

                                    $21_1 = $20_1 + -16777216 | 0;

                                    HEAP16[($1_1 + 20 | 0) >> 1] = ($16_1 - $21_1 | 0) >>> 13 | 0;

                                    HEAP16[($1_1 + 2 | 0) >> 1] = ($16_1 + $21_1 | 0) >>> 13 | 0;

                                    $101_1 = $12_1 >>> 1 | 0;

                                    $12_1 = $12_1 >> 16 | 0;

                                    $7_1 = (Math_imul($7_1, ($101_1 - ($12_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($12_1, $7_1) | 0;

                                    $12_1 = $6_1 >> 16 | 0;

                                    $12_1 = $7_1 + ((Math_imul($5_1, (($6_1 >>> 1 | 0) - ($12_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($12_1, $5_1) | 0) | 0;

                                    $16_1 = $13_1 >> 16 | 0;

                                    $16_1 = $12_1 + ((Math_imul($4_1, (($13_1 >>> 1 | 0) - ($16_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($16_1, $4_1) | 0) | 0;

                                    $21_1 = $14_1 >> 16 | 0;

                                    $21_1 = 83886080 - (($16_1 + ((Math_imul($3_1, (($14_1 >>> 1 | 0) - ($21_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($21_1, $3_1) | 0) | 0) << 2 | 0) | 0;

                                    $15_1 = ($21_1 + $15_1 | 0) + 4096 | 0;

                                    $174_1 = $17_1 >>> 1 | 0;

                                    $17_1 = $17_1 >> 16 | 0;

                                    $17_1 = (Math_imul($0_1, ($174_1 - ($17_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($17_1, $0_1) | 0;

                                    $0_1 = $11_1 >> 16 | 0;

                                    $22_1 = $17_1 + ((Math_imul($10_1, (($11_1 >>> 1 | 0) - ($0_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($0_1, $10_1) | 0) | 0;

                                    $0_1 = $18_1 >> 16 | 0;

                                    $23_1 = $22_1 + ((Math_imul($9_1, (($18_1 >>> 1 | 0) - ($0_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($0_1, $9_1) | 0) | 0;

                                    $0_1 = $19_1 >> 16 | 0;

                                    $24_1 = 83886080 - (($23_1 + ((Math_imul($8_1, (($19_1 >>> 1 | 0) - ($0_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($0_1, $8_1) | 0) | 0) << 2 | 0) | 0;

                                    $0_1 = $24_1 - $20_1 | 0;

                                    HEAP16[($1_1 + 18 | 0) >> 1] = ($15_1 - $0_1 | 0) >>> 13 | 0;

                                    HEAP16[($1_1 + 4 | 0) >> 1] = ($15_1 + $0_1 | 0) >>> 13 | 0;

                                    $0_1 = 33554432 - ($7_1 << 2 | 0) | 0;

                                    $261 = $0_1 >>> 1 | 0;

                                    $0_1 = $0_1 >> 16 | 0;

                                    $7_1 = ($6_1 << 1 | 0) - (((Math_imul($5_1, ($261 - ($0_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($0_1, $5_1) | 0) << 2 | 0) | 0;

                                    $6_1 = 50331648 - ($12_1 << 2 | 0) | 0;

                                    $0_1 = $6_1 >> 16 | 0;

                                    $0_1 = ($13_1 + $7_1 | 0) - (((Math_imul($4_1, (($6_1 >>> 1 | 0) - ($0_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($0_1, $4_1) | 0) << 2 | 0) | 0;

                                    $13_1 = 67108864 - ($16_1 << 2 | 0) | 0;

                                    $5_1 = $13_1 >> 16 | 0;

                                    $12_1 = ($14_1 + $0_1 | 0) - (((Math_imul($3_1, (($13_1 >>> 1 | 0) - ($5_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($5_1, $3_1) | 0) << 2 | 0) | 0;

                                    $15_1 = ($12_1 + $21_1 | 0) + 4096 | 0;

                                    $5_1 = 33554432 - ($17_1 << 2 | 0) | 0;

                                    $334 = $5_1 >>> 1 | 0;

                                    $5_1 = $5_1 >> 16 | 0;

                                    $10_1 = ($11_1 << 1 | 0) - (((Math_imul($10_1, ($334 - ($5_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($5_1, $10_1) | 0) << 2 | 0) | 0;

                                    $14_1 = 50331648 - ($22_1 << 2 | 0) | 0;

                                    $5_1 = $14_1 >> 16 | 0;

                                    $5_1 = ($18_1 + $10_1 | 0) - (((Math_imul($9_1, (($14_1 >>> 1 | 0) - ($5_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($5_1, $9_1) | 0) << 2 | 0) | 0;

                                    $11_1 = 67108864 - ($23_1 << 2 | 0) | 0;

                                    $18_1 = $11_1 >> 16 | 0;

                                    $18_1 = ($19_1 + $5_1 | 0) - (((Math_imul($8_1, (($11_1 >>> 1 | 0) - ($18_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($18_1, $8_1) | 0) << 2 | 0) | 0;

                                    $19_1 = $18_1 - $24_1 | 0;

                                    HEAP16[($1_1 + 16 | 0) >> 1] = ($15_1 - $19_1 | 0) >>> 13 | 0;

                                    HEAP16[($1_1 + 6 | 0) >> 1] = ($15_1 + $19_1 | 0) >>> 13 | 0;

                                    $410 = $7_1 >>> 1 | 0;

                                    $7_1 = $7_1 >> 16 | 0;

                                    $4_1 = ($6_1 << 1 | 0) - (((Math_imul($4_1, ($410 - ($7_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($7_1, $4_1) | 0) << 2 | 0) | 0;

                                    $7_1 = $0_1 >> 16 | 0;

                                    $7_1 = ($13_1 + $4_1 | 0) - (((Math_imul($3_1, (($0_1 >>> 1 | 0) - ($7_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($7_1, $3_1) | 0) << 2 | 0) | 0;

                                    $6_1 = ($7_1 + $12_1 | 0) + 4096 | 0;

                                    $454 = $10_1 >>> 1 | 0;

                                    $10_1 = $10_1 >> 16 | 0;

                                    $9_1 = ($14_1 << 1 | 0) - (((Math_imul($9_1, ($454 - ($10_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($10_1, $9_1) | 0) << 2 | 0) | 0;

                                    $10_1 = $5_1 >> 16 | 0;

                                    $10_1 = ($11_1 + $9_1 | 0) - (((Math_imul($8_1, (($5_1 >>> 1 | 0) - ($10_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($10_1, $8_1) | 0) << 2 | 0) | 0;

                                    $13_1 = $10_1 - $18_1 | 0;

                                    HEAP16[($1_1 + 14 | 0) >> 1] = ($6_1 - $13_1 | 0) >>> 13 | 0;

                                    HEAP16[($1_1 + 8 | 0) >> 1] = ($6_1 + $13_1 | 0) >>> 13 | 0;

                                    $501 = $0_1 << 1 | 0;

                                    $0_1 = $4_1 >> 16 | 0;

                                    $0_1 = (($501 - (((Math_imul($3_1, (($4_1 >>> 1 | 0) - ($0_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($0_1, $3_1) | 0) << 2 | 0) | 0) + $7_1 | 0) + 4096 | 0;

                                    $3_1 = $9_1 >> 16 | 0;

                                    $3_1 = ($5_1 << 1 | 0) - ((((Math_imul($8_1, (($9_1 >>> 1 | 0) - ($3_1 << 15 | 0) | 0) << 16 >> 16) >> 15 | 0) + Math_imul($3_1, $8_1) | 0) << 2 | 0) + $10_1 | 0) | 0;

                                    HEAP16[($1_1 + 12 | 0) >> 1] = ($0_1 - $3_1 | 0) >>> 13 | 0;

                                    HEAP16[($1_1 + 10 | 0) >> 1] = ($0_1 + $3_1 | 0) >>> 13 | 0;

                                }



                                function $202($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $1_1 = 0, $4_1 = 0, $2_1 = 0,

                                        i64toi32_i32$2 = 0, $3_1 = 0, $8_1 = 0, $9_1 = 0, $10_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $231(44 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        if ($215($2_1 + 40 | 0 | 0) | 0) {

                                            break label$1

                                        }

                                        $1_1 = global$40;

                                        i64toi32_i32$2 = $1_1;

                                        i64toi32_i32$0 = HEAPU16[$1_1 >> 1] | 0 | ((HEAPU16[($1_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($1_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $4_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $2_1;

                                        HEAP16[i64toi32_i32$0 >> 1] = $4_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 20 | 0) >> 1] = $4_1;

                                        HEAP16[(i64toi32_i32$0 + 22 | 0) >> 1] = $4_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 24 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 26 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        $8_1 = $1_1 + 16 | 0;

                                        $3_1 = HEAPU16[$8_1 >> 1] | 0 | ((HEAPU16[($8_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $9_1 = i64toi32_i32$0 + 16 | 0;

                                        HEAP16[$9_1 >> 1] = $3_1;

                                        HEAP16[($9_1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $1_1 + 8 | 0;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $4_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $2_1 + 8 | 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        i64toi32_i32$1 = $2_1 + 28 | 0;

                                        HEAP16[i64toi32_i32$1 >> 1] = $4_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $4_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                        $10_1 = $2_1 + 36 | 0;

                                        HEAP16[$10_1 >> 1] = $3_1;

                                        HEAP16[($10_1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                        $216(HEAP32[($2_1 + 40 | 0) >> 2] | 0 | 0) | 0;

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $203($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, i64toi32_i32$2 = 0, $3_1 = 0, $2_1 = 0,

                                        $6_1 = 0, $7_1 = 0, $8_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$2 = global$40;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $3_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $0_1;

                                    HEAP16[i64toi32_i32$0 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 20 | 0) >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$0 + 22 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$0 + 24 | 0) >> 1] = i64toi32_i32$1;

                                    HEAP16[(i64toi32_i32$0 + 26 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                    $6_1 = i64toi32_i32$2 + 16 | 0;

                                    $2_1 = HEAPU16[$6_1 >> 1] | 0 | ((HEAPU16[($6_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $7_1 = i64toi32_i32$0 + 16 | 0;

                                    HEAP16[$7_1 >> 1] = $2_1;

                                    HEAP16[($7_1 + 2 | 0) >> 1] = $2_1 >>> 16 | 0;

                                    i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $3_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $0_1 + 8 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 28 | 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $3_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $8_1 = $0_1 + 36 | 0;

                                    HEAP16[$8_1 >> 1] = $2_1;

                                    HEAP16[($8_1 + 2 | 0) >> 1] = $2_1 >>> 16 | 0;

                                    $216(HEAP32[($0_1 + 40 | 0) >> 2] | 0 | 0) | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $204($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $217($1_1 + 40 | 0 | 0);

                                        $232(HEAP32[$0_1 >> 2] | 0 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $205($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1, $7_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    $7_1 = $7_1 | 0;

                                    var i64toi32_i32$2 = 0, i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $8_1 = 0, $18_1 = 0,

                                        $19_1 = 0, $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0,

                                        $26_1 = 0, $27_1 = 0, $95_1 = 0, $98_1 = 0, $101_1 = 0, $105_1 = 0, $114_1 = 0,

                                        $124_1 = 0;

                                    $8_1 = global$0 - 96 | 0;

                                    global$0 = $8_1;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    if (($1_1 | 0) != (7 | 0)) {

                                                        break label$4

                                                    }

                                                    $184($3_1 + 22 | 0 | 0, $8_1 + 32 | 0 | 0, $0_1 | 0, $7_1 | 0);

                                                    $184($3_1 + 66 | 0 | 0, $5_1 | 0, $8_1 + 32 | 0 | 0, $7_1 | 0);

                                                    $193($0_1 | 0, $8_1 + 32 | 0 | 0, $5_1 | 0, $3_1 | 0, $7_1 | 0);

                                                    if (($2_1 | 0) == (8 | 0)) {

                                                        break label$2

                                                    }

                                                    $214(HEAP32[($0_1 + 40 | 0) >> 2] | 0 | 0, $8_1 + 32 | 0 | 0, $5_1 | 0, $8_1 | 0, $8_1 + 64 | 0 | 0, HEAP32[$6_1 >> 2] | 0 | 0, $7_1 | 0);

                                                    $192($0_1 + 20 | 0 | 0, $8_1 | 0, $8_1 + 64 | 0 | 0, $4_1 | 0, $7_1 | 0);

                                                    $7_1 = 5;

                                                    break label$3;

                                                }

                                                $184($3_1 + 66 | 0 | 0, $5_1 | 0, $0_1 | 0, $7_1 | 0);

                                                $195($0_1 | 0, $5_1 | 0, $3_1 | 0, $7_1 | 0);

                                                if (($2_1 | 0) == (8 | 0)) {

                                                    break label$2

                                                }

                                                $213(HEAP32[($0_1 + 40 | 0) >> 2] | 0 | 0, $1_1 | 0, $5_1 | 0, $8_1 + 64 | 0 | 0, HEAP32[$6_1 >> 2] | 0 | 0, $8_1 + 32 | 0 | 0, $7_1 | 0);

                                                $194($0_1 + 20 | 0 | 0, $8_1 + 64 | 0 | 0, $4_1 | 0, $7_1 | 0);

                                                $7_1 = 3;

                                            }

                                            HEAP32[$6_1 >> 2] = (HEAP32[$6_1 >> 2] | 0) + ($7_1 << 1 | 0) | 0;

                                            $18_1 = $5_1 + 16 | 0;

                                            $19_1 = $0_1 + 16 | 0;

                                            $20_1 = HEAPU16[$18_1 >> 1] | 0 | ((HEAPU16[($18_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                            HEAP16[$19_1 >> 1] = $20_1;

                                            HEAP16[($19_1 + 2 | 0) >> 1] = $20_1 >>> 16 | 0;

                                            i64toi32_i32$2 = $5_1 + 8 | 0;

                                            i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                            i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                            $95_1 = i64toi32_i32$0;

                                            i64toi32_i32$0 = $0_1 + 8 | 0;

                                            $21_1 = $95_1;

                                            HEAP16[i64toi32_i32$0 >> 1] = $21_1;

                                            HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $21_1 >>> 16 | 0;

                                            HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                            HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                            i64toi32_i32$2 = $5_1;

                                            i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                            i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                            $98_1 = i64toi32_i32$1;

                                            i64toi32_i32$1 = $0_1;

                                            $22_1 = $98_1;

                                            HEAP16[$0_1 >> 1] = $22_1;

                                            HEAP16[($0_1 + 2 | 0) >> 1] = $22_1 >>> 16 | 0;

                                            HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                            HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                            i64toi32_i32$2 = $8_1;

                                            i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 64 | 0) >> 2] | 0;

                                            i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 68 | 0) >> 2] | 0;

                                            $101_1 = i64toi32_i32$0;

                                            i64toi32_i32$0 = $0_1;

                                            HEAP32[($0_1 + 20 | 0) >> 2] = $101_1;

                                            HEAP32[($0_1 + 24 | 0) >> 2] = i64toi32_i32$1;

                                            i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 72 | 0) >> 2] | 0;

                                            i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 76 | 0) >> 2] | 0;

                                            $105_1 = i64toi32_i32$1;

                                            i64toi32_i32$1 = $0_1 + 28 | 0;

                                            HEAP32[i64toi32_i32$1 >> 2] = $105_1;

                                            HEAP32[(i64toi32_i32$1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            HEAP32[($0_1 + 36 | 0) >> 2] = HEAP32[((i64toi32_i32$2 + 64 | 0) + 16 | 0) >> 2] | 0;

                                            break label$1;

                                        }

                                        i64toi32_i32$2 = $5_1;

                                        i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $114_1 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $0_1;

                                        $23_1 = $114_1;

                                        HEAP16[$0_1 >> 1] = $23_1;

                                        HEAP16[($0_1 + 2 | 0) >> 1] = $23_1 >>> 16 | 0;

                                        HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        $24_1 = i64toi32_i32$2 + 16 | 0;

                                        $25_1 = $0_1 + 16 | 0;

                                        $26_1 = HEAPU16[$24_1 >> 1] | 0 | ((HEAPU16[($24_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$25_1 >> 1] = $26_1;

                                        HEAP16[($25_1 + 2 | 0) >> 1] = $26_1 >>> 16 | 0;

                                        i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $124_1 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $0_1 + 8 | 0;

                                        $27_1 = $124_1;

                                        HEAP16[i64toi32_i32$1 >> 1] = $27_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $27_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    }

                                    global$0 = $8_1 + 96 | 0;

                                }



                                function $206($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $5_1 = 0, $6_1 = 0, $7_1 = 0, $4_1 = 0, $20_1 = 0;

                                    label$1 : {

                                        if (($2_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $4_1 = $2_1 & 65535 | 0;

                                        $2_1 = 0;

                                        label$2 : while (1) {

                                            $5_1 = $2_1 << 1 | 0;

                                            $6_1 = HEAPU16[($0_1 + $5_1 | 0) >> 1] | 0;

                                            $20_1 = $1_1 + $5_1 | 0;

                                            $5_1 = global$53 + (($6_1 << 16 >> 16 >> 8 | 0) << 1 | 0) | 0;

                                            $7_1 = HEAP16[$5_1 >> 1] | 0;

                                            HEAP16[$20_1 >> 1] = $7_1 + (Math_imul((HEAP16[($5_1 + 2 | 0) >> 1] | 0) - $7_1 | 0, $6_1 & 255 | 0) >>> 8 | 0) | 0;

                                            $2_1 = $2_1 + 1 | 0;

                                            if (($2_1 | 0) != ($4_1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $207($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $4_1 = 0, $5_1 = 0, $6_1 = 0, $7_1 = 0, $8_1 = 0, $9_1 = 0;

                                    label$1 : {

                                        $4_1 = $2_1 + -1 | 0;

                                        if (($4_1 << 16 >> 16 | 0) < (0 | 0)) {

                                            break label$1

                                        }

                                        $2_1 = $4_1 << 1 | 0;

                                        $5_1 = $0_1 + $2_1 | 0;

                                        $6_1 = $1_1 + $2_1 | 0;

                                        $2_1 = 63;

                                        label$2 : while (1) {

                                            $0_1 = HEAP16[$5_1 >> 1] | 0;

                                            label$3 : while (1) {

                                                $1_1 = $2_1;

                                                $2_1 = $2_1 + -1 | 0;

                                                $7_1 = $1_1 << 16 >> 16;

                                                $8_1 = $7_1 << 1 | 0;

                                                $9_1 = HEAP16[(global$53 + $8_1 | 0) >> 1] | 0;

                                                if (($0_1 | 0) > ($9_1 | 0)) {

                                                    continue label$3

                                                }

                                                break label$3;

                                            }

                                            ;

                                            HEAP16[$6_1 >> 1] = (((Math_imul($0_1 - $9_1 | 0, HEAP16[(global$54 + $8_1 | 0) >> 1] | 0) << 4 | 0) + 32768 | 0) >>> 16 | 0) + ($7_1 << 8 | 0) | 0;

                                            $6_1 = $6_1 + -2 | 0;

                                            $5_1 = $5_1 + -2 | 0;

                                            $2_1 = $1_1;

                                            $4_1 = ($4_1 + -1 | 0) << 16 >> 16;

                                            if (($4_1 | 0) > (-1 | 0)) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $208($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0;

                                    $3_1 = 32767;

                                    label$1 : {

                                        label$2 : {

                                            $0_1 = (Math_imul($1_1, $0_1) + 16384 | 0) >> 15 | 0;

                                            $0_1 = $0_1 | (0 - ($0_1 & 65536 | 0) | 0) | 0;

                                            if (($0_1 | 0) > (32767 | 0)) {

                                                break label$2

                                            }

                                            $3_1 = -32768;

                                            if (($0_1 | 0) > (-32769 | 0)) {

                                                break label$1

                                            }

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $0_1 = $3_1;

                                    }

                                    return $0_1 << 16 >> 16 | 0;

                                }



                                function $209($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 0 << 16 >> 16 | 0;

                                    }

                                    $1_1 = 0;

                                    label$2 : {

                                        $0_1 = ($0_1 >> 31 | 0) + $0_1 | 0;

                                        $0_1 = ($0_1 >> 31 | 0) ^ $0_1 | 0;

                                        if ($0_1 & 1073741824 | 0) {

                                            break label$2

                                        }

                                        label$3 : {

                                            label$4 : {

                                                label$5 : while (1) {

                                                    if ($0_1 & 536870912 | 0) {

                                                        break label$3

                                                    }

                                                    if ($0_1 & 268435456 | 0) {

                                                        break label$4

                                                    }

                                                    label$6 : {

                                                        if ($0_1 & 134217728 | 0) {

                                                            break label$6

                                                        }

                                                        $1_1 = $1_1 + 4 | 0;

                                                        $2_1 = $0_1 & 67108864 | 0;

                                                        $0_1 = $0_1 << 4 | 0;

                                                        if (!$2_1) {

                                                            continue label$5

                                                        }

                                                        break label$2;

                                                    }

                                                    break label$5;

                                                }

                                                ;

                                                return ($1_1 | 3 | 0) << 16 >> 16 | 0;

                                            }

                                            return ($1_1 | 2 | 0) << 16 >> 16 | 0;

                                        }

                                        $1_1 = $1_1 | 1 | 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $210($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 0 << 16 >> 16 | 0;

                                    }

                                    $1_1 = 0;

                                    label$2 : {

                                        $0_1 = ($0_1 >> 15 | 0) + $0_1 | 0;

                                        $2_1 = ($0_1 << 16 >> 16 >> 15 | 0) ^ $0_1 | 0;

                                        if ($2_1 & 16384 | 0) {

                                            break label$2

                                        }

                                        $0_1 = $2_1 & 65535 | 0;

                                        label$3 : {

                                            label$4 : {

                                                label$5 : while (1) {

                                                    if ($0_1 & 8192 | 0) {

                                                        break label$3

                                                    }

                                                    if ($0_1 & 4096 | 0) {

                                                        break label$4

                                                    }

                                                    label$6 : {

                                                        if ($0_1 & 2048 | 0) {

                                                            break label$6

                                                        }

                                                        $1_1 = $1_1 + 4 | 0;

                                                        $2_1 = $2_1 << 4 | 0;

                                                        $0_1 = $2_1 & 65520 | 0;

                                                        if (!($2_1 & 16384 | 0)) {

                                                            continue label$5

                                                        }

                                                        break label$2;

                                                    }

                                                    break label$5;

                                                }

                                                ;

                                                return ($1_1 | 3 | 0) << 16 >> 16 | 0;

                                            }

                                            return ($1_1 | 2 | 0) << 16 >> 16 | 0;

                                        }

                                        $1_1 = $1_1 | 1 | 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $211($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, $4_1 = 0, $5_1 = 0;

                                    $3_1 = global$55 + (($1_1 >>> 9 | 0) & 62 | 0) | 0;

                                    $4_1 = HEAP16[$3_1 >> 1] | 0;

                                    $5_1 = $4_1 << 16 | 0;

                                    $3_1 = Math_imul(($4_1 - (HEAPU16[($3_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16, ($1_1 << 5 | 0) & 32736 | 0) << 1 | 0;

                                    $1_1 = $5_1 - $3_1 | 0;

                                    label$1 : {

                                        if (($3_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$1

                                        }

                                        if (($1_1 ^ $5_1 | 0 | 0) > (-1 | 0)) {

                                            break label$1

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $1_1 = ($4_1 >> 15 | 0) ^ 2147483647 | 0;

                                    }

                                    return $200($1_1 | 0, (30 - $0_1 | 0) << 16 >> 16 | 0, $2_1 | 0) | 0 | 0;

                                }



                                function $212($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $6_1 = 0, $7_1 = 0, $8_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0,

                                        $13_1 = 0, $14_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0,

                                        $20_1 = 0, $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0, $26_1 = 0,

                                        $27_1 = 0, $28_1 = 0, $29_1 = 0, $30_1 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0,

                                        $34_1 = 0, $35_1 = 0, $36_1 = 0, $37_1 = 0, $38_1 = 0, $39_1 = 0, $40_1 = 0,

                                        $41_1 = 0, $42_1 = 0, $43_1 = 0, $53_1 = 0;

                                    label$1 : {

                                        if ($3_1 >>> 0 < 2 >>> 0) {

                                            break label$1

                                        }

                                        $6_1 = global$56;

                                        $4_1 = ($4_1 | 0) != (0 | 0);

                                        $53_1 = 6 - ($2_1 << $4_1 | 0) | 0;

                                        $2_1 = (0 - $2_1 | 0) << $4_1 | 0;

                                        $7_1 = $2_1 << 16 >> 16;

                                        $8_1 = (($7_1 | 0) < (0 | 0) ? $53_1 : $2_1) << 16 >> 16;

                                        $2_1 = $6_1 + ($8_1 << 1 | 0) | 0;

                                        $4_1 = HEAP16[($2_1 + 108 | 0) >> 1] | 0;

                                        $9_1 = HEAP16[($2_1 + 96 | 0) >> 1] | 0;

                                        $10_1 = HEAP16[($2_1 + 84 | 0) >> 1] | 0;

                                        $11_1 = HEAP16[($2_1 + 72 | 0) >> 1] | 0;

                                        $12_1 = HEAP16[($2_1 + 60 | 0) >> 1] | 0;

                                        $13_1 = HEAP16[($2_1 + 48 | 0) >> 1] | 0;

                                        $14_1 = HEAP16[($2_1 + 36 | 0) >> 1] | 0;

                                        $15_1 = HEAP16[($2_1 + 24 | 0) >> 1] | 0;

                                        $16_1 = HEAP16[($2_1 + 12 | 0) >> 1] | 0;

                                        $17_1 = HEAP16[$2_1 >> 1] | 0;

                                        $2_1 = $6_1 + ((6 - $8_1 | 0) << 1 | 0) | 0;

                                        $6_1 = HEAP16[($2_1 + 108 | 0) >> 1] | 0;

                                        $8_1 = HEAP16[($2_1 + 96 | 0) >> 1] | 0;

                                        $18_1 = HEAP16[($2_1 + 84 | 0) >> 1] | 0;

                                        $19_1 = HEAP16[($2_1 + 72 | 0) >> 1] | 0;

                                        $20_1 = HEAP16[($2_1 + 60 | 0) >> 1] | 0;

                                        $21_1 = HEAP16[($2_1 + 48 | 0) >> 1] | 0;

                                        $22_1 = HEAP16[($2_1 + 36 | 0) >> 1] | 0;

                                        $23_1 = HEAP16[($2_1 + 24 | 0) >> 1] | 0;

                                        $24_1 = HEAP16[($2_1 + 12 | 0) >> 1] | 0;

                                        $25_1 = HEAP16[$2_1 >> 1] | 0;

                                        $2_1 = ($0_1 - ($1_1 << 1 | 0) | 0) + (($7_1 >> 15 | 0) << 1 | 0) | 0;

                                        $3_1 = $3_1 >> 1 | 0;

                                        label$2 : while (1) {

                                            $1_1 = HEAP16[($2_1 + -18 | 0) >> 1] | 0;

                                            $7_1 = HEAP16[($2_1 + 2 | 0) >> 1] | 0;

                                            $26_1 = HEAP16[($2_1 + 4 | 0) >> 1] | 0;

                                            $27_1 = HEAP16[$2_1 >> 1] | 0;

                                            $28_1 = HEAP16[($2_1 + 6 | 0) >> 1] | 0;

                                            $29_1 = HEAP16[($2_1 + -2 | 0) >> 1] | 0;

                                            $30_1 = HEAP16[($2_1 + 8 | 0) >> 1] | 0;

                                            $31_1 = HEAP16[($2_1 + -4 | 0) >> 1] | 0;

                                            $32_1 = HEAP16[($2_1 + 10 | 0) >> 1] | 0;

                                            $33_1 = HEAP16[($2_1 + -6 | 0) >> 1] | 0;

                                            $34_1 = HEAP16[($2_1 + 12 | 0) >> 1] | 0;

                                            $35_1 = HEAP16[($2_1 + -8 | 0) >> 1] | 0;

                                            $36_1 = HEAP16[($2_1 + 14 | 0) >> 1] | 0;

                                            $37_1 = HEAP16[($2_1 + -10 | 0) >> 1] | 0;

                                            $38_1 = HEAP16[($2_1 + 16 | 0) >> 1] | 0;

                                            $39_1 = HEAP16[($2_1 + -12 | 0) >> 1] | 0;

                                            $40_1 = HEAP16[($2_1 + 18 | 0) >> 1] | 0;

                                            $41_1 = HEAP16[($2_1 + -14 | 0) >> 1] | 0;

                                            $42_1 = HEAP16[($2_1 + 20 | 0) >> 1] | 0;

                                            $43_1 = HEAP16[($2_1 + -16 | 0) >> 1] | 0;

                                            HEAP16[($0_1 + 2 | 0) >> 1] = ((((((((((((((((((((Math_imul($17_1, $7_1) + Math_imul($26_1, $25_1) | 0) + Math_imul($16_1, $27_1) | 0) + Math_imul($28_1, $24_1) | 0) + Math_imul($15_1, $29_1) | 0) + Math_imul($30_1, $23_1) | 0) + Math_imul($14_1, $31_1) | 0) + Math_imul($32_1, $22_1) | 0) + Math_imul($13_1, $33_1) | 0) + Math_imul($34_1, $21_1) | 0) + Math_imul($12_1, $35_1) | 0) + Math_imul($36_1, $20_1) | 0) + Math_imul($11_1, $37_1) | 0) + Math_imul($38_1, $19_1) | 0) + Math_imul($10_1, $39_1) | 0) + Math_imul($40_1, $18_1) | 0) + Math_imul($9_1, $41_1) | 0) + Math_imul($42_1, $8_1) | 0) + Math_imul($4_1, $43_1) | 0) + Math_imul(HEAP16[($2_1 + 22 | 0) >> 1] | 0, $6_1) | 0) + 16384 | 0) >>> 15 | 0;

                                            HEAP16[$0_1 >> 1] = ((((((((((((((((((((Math_imul($27_1, $17_1) + Math_imul($25_1, $7_1) | 0) + Math_imul($29_1, $16_1) | 0) + Math_imul($24_1, $26_1) | 0) + Math_imul($31_1, $15_1) | 0) + Math_imul($23_1, $28_1) | 0) + Math_imul($33_1, $14_1) | 0) + Math_imul($22_1, $30_1) | 0) + Math_imul($35_1, $13_1) | 0) + Math_imul($21_1, $32_1) | 0) + Math_imul($37_1, $12_1) | 0) + Math_imul($20_1, $34_1) | 0) + Math_imul($39_1, $11_1) | 0) + Math_imul($19_1, $36_1) | 0) + Math_imul($41_1, $10_1) | 0) + Math_imul($18_1, $38_1) | 0) + Math_imul($43_1, $9_1) | 0) + Math_imul($8_1, $40_1) | 0) + Math_imul($1_1, $4_1) | 0) + Math_imul($6_1, $42_1) | 0) + 16384 | 0) >>> 15 | 0;

                                            $0_1 = $0_1 + 4 | 0;

                                            $2_1 = $2_1 + 4 | 0;

                                            $3_1 = $3_1 + -1 | 0;

                                            if ($3_1 & 65535 | 0) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $213($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $8_1 = 0, $7_1 = 0, $21_1 = 0, $27_1 = 0, $9_1 = 0, $54_1 = 0, $51_1 = 0,

                                        $40_1 = 0, $10_1 = 0, $25_1 = 0, $29_1 = 0, $52_1 = 0, $53_1 = 0, $23_1 = 0,

                                        i64toi32_i32$1 = 0, $55_1 = 0, $56_1 = 0, $57_1 = 0, i64toi32_i32$2 = 0,

                                        i64toi32_i32$0 = 0, $12_1 = 0, $14_1 = 0, $16_1 = 0, $18_1 = 0, $11_1 = 0,

                                        $13_1 = 0, $15_1 = 0, $17_1 = 0, $19_1 = 0, $20_1 = 0, $22_1 = 0, $24_1 = 0,

                                        $26_1 = 0, $28_1 = 0, $58_1 = 0, $59_1 = 0, $60_1 = 0, $61_1 = 0, $62_1 = 0,

                                        $63_1 = 0, $64_1 = 0, $65_1 = 0, $66_1 = 0, $67_1 = 0, $68_1 = 0, $69_1 = 0,

                                        $70_1 = 0, $115_1 = 0, $116_1 = 0, $117_1 = 0, $118_1 = 0, $119_1 = 0,

                                        $30_1 = 0, $31_1 = 0, $32_1 = 0, $33_1 = 0, $34_1 = 0, $35_1 = 0, $36_1 = 0,

                                        $37_1 = 0, $38_1 = 0, $39_1 = 0, $41_1 = 0, $42_1 = 0, $43_1 = 0, $44_1 = 0,

                                        $45_1 = 0, $46_1 = 0, $47_1 = 0, $48_1 = 0, $49_1 = 0, $50_1 = 0, $277 = 0,

                                        $290 = 0, $303 = 0, $316 = 0, $329 = 0, $342 = 0, $355 = 0, $368 = 0, $381 = 0,

                                        $409 = 0, $419 = 0, $469 = 0, $481 = 0, $494 = 0, $546 = 0, $558 = 0, $571 = 0,

                                        $629 = 0, $641 = 0, $653 = 0, $666 = 0, $709 = 0, $721 = 0, $734 = 0, $786 = 0,

                                        $798 = 0, $811 = 0, $866 = 0, $878 = 0, $890 = 0, $903 = 0, $933 = 0, $945 = 0,

                                        $958 = 0, $1010 = 0, $1022 = 0, $1035 = 0, $1090 = 0, $1102 = 0, $1114 = 0,

                                        $1127 = 0;

                                    $7_1 = global$0 - 96 | 0;

                                    global$0 = $7_1;

                                    $207($2_1 | 0, $7_1 + 64 | 0 | 0, 10 | 0, $6_1 | 0);

                                    $199($7_1 + 64 | 0 | 0, $7_1 + 32 | 0 | 0, $6_1 | 0);

                                    label$1 : {

                                        label$2 : {

                                            if (($1_1 | 0) == (8 | 0)) {

                                                break label$2

                                            }

                                            $8_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                            $9_1 = global$34;

                                            $10_1 = HEAP16[($9_1 + 18 | 0) >> 1] | 0;

                                            $2_1 = global$39;

                                            $11_1 = (HEAPU16[($2_1 + 18 | 0) >> 1] | 0) + (Math_imul($10_1, $8_1) >>> 15 | 0) | 0;

                                            $12_1 = (HEAPU16[($7_1 + 82 | 0) >> 1] | 0) - $11_1 | 0;

                                            $13_1 = (HEAPU16[($2_1 + 16 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 16 | 0) >> 1] | 0, HEAP16[($0_1 + 16 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $14_1 = (HEAPU16[($7_1 + 80 | 0) >> 1] | 0) - $13_1 | 0;

                                            $15_1 = (HEAPU16[($2_1 + 14 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 14 | 0) >> 1] | 0, HEAP16[($0_1 + 14 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $16_1 = (HEAPU16[($7_1 + 78 | 0) >> 1] | 0) - $15_1 | 0;

                                            $17_1 = (HEAPU16[($2_1 + 12 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 12 | 0) >> 1] | 0, HEAP16[($0_1 + 12 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $18_1 = (HEAPU16[($7_1 + 76 | 0) >> 1] | 0) - $17_1 | 0;

                                            $19_1 = (HEAPU16[($2_1 + 10 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 10 | 0) >> 1] | 0, HEAP16[($0_1 + 10 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $10_1 = (HEAPU16[($7_1 + 74 | 0) >> 1] | 0) - $19_1 | 0;

                                            $20_1 = (HEAPU16[($2_1 + 8 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 8 | 0) >> 1] | 0, HEAP16[($0_1 + 8 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $21_1 = (HEAPU16[($7_1 + 72 | 0) >> 1] | 0) - $20_1 | 0;

                                            $22_1 = (HEAPU16[($2_1 + 6 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 6 | 0) >> 1] | 0, HEAP16[($0_1 + 6 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $23_1 = (HEAPU16[($7_1 + 70 | 0) >> 1] | 0) - $22_1 | 0;

                                            $24_1 = (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 4 | 0) >> 1] | 0, HEAP16[($0_1 + 4 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $25_1 = (HEAPU16[($7_1 + 68 | 0) >> 1] | 0) - $24_1 | 0;

                                            $26_1 = (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) + (Math_imul(HEAP16[($9_1 + 2 | 0) >> 1] | 0, HEAP16[($0_1 + 2 | 0) >> 1] | 0) >>> 15 | 0) | 0;

                                            $27_1 = (HEAPU16[($7_1 + 66 | 0) >> 1] | 0) - $26_1 | 0;

                                            $28_1 = (HEAPU16[$2_1 >> 1] | 0) + (Math_imul(HEAP16[$9_1 >> 1] | 0, HEAP16[$0_1 >> 1] | 0) >>> 15 | 0) | 0;

                                            $29_1 = (HEAPU16[($7_1 + 64 | 0) >> 1] | 0) - $28_1 | 0;

                                            break label$1;

                                        }

                                        $9_1 = 0;

                                        HEAP16[$5_1 >> 1] = 0;

                                        $2_1 = global$39;

                                        $30_1 = HEAPU16[($2_1 + 18 | 0) >> 1] | 0;

                                        $31_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                        $32_1 = HEAPU16[$2_1 >> 1] | 0;

                                        $33_1 = HEAPU16[($2_1 + 16 | 0) >> 1] | 0;

                                        $34_1 = HEAPU16[($2_1 + 14 | 0) >> 1] | 0;

                                        $35_1 = HEAPU16[($2_1 + 12 | 0) >> 1] | 0;

                                        $36_1 = HEAPU16[($2_1 + 10 | 0) >> 1] | 0;

                                        $37_1 = HEAPU16[($2_1 + 8 | 0) >> 1] | 0;

                                        $38_1 = HEAPU16[($2_1 + 6 | 0) >> 1] | 0;

                                        $39_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        $40_1 = 2147483647;

                                        $41_1 = HEAPU16[($7_1 + 82 | 0) >> 1] | 0;

                                        $42_1 = HEAPU16[($7_1 + 80 | 0) >> 1] | 0;

                                        $43_1 = HEAPU16[($7_1 + 64 | 0) >> 1] | 0;

                                        $44_1 = HEAPU16[($7_1 + 78 | 0) >> 1] | 0;

                                        $45_1 = HEAPU16[($7_1 + 76 | 0) >> 1] | 0;

                                        $46_1 = HEAPU16[($7_1 + 74 | 0) >> 1] | 0;

                                        $47_1 = HEAPU16[($7_1 + 72 | 0) >> 1] | 0;

                                        $48_1 = HEAPU16[($7_1 + 70 | 0) >> 1] | 0;

                                        $49_1 = HEAPU16[($7_1 + 68 | 0) >> 1] | 0;

                                        $50_1 = HEAPU16[($7_1 + 66 | 0) >> 1] | 0;

                                        label$3 : while (1) {

                                            label$4 : {

                                                $2_1 = global$35 + Math_imul($9_1, 20) | 0;

                                                $51_1 = (HEAPU16[($2_1 + 18 | 0) >> 1] | 0) + $30_1 | 0;

                                                $52_1 = $41_1 - $51_1 | 0;

                                                $8_1 = $52_1 << 16 >> 16;

                                                $277 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $53_1 = (HEAPU16[($2_1 + 16 | 0) >> 1] | 0) + $33_1 | 0;

                                                $54_1 = $42_1 - $53_1 | 0;

                                                $8_1 = $54_1 << 16 >> 16;

                                                $290 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $55_1 = (HEAPU16[($2_1 + 14 | 0) >> 1] | 0) + $34_1 | 0;

                                                $56_1 = $44_1 - $55_1 | 0;

                                                $8_1 = $56_1 << 16 >> 16;

                                                $303 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $57_1 = (HEAPU16[($2_1 + 12 | 0) >> 1] | 0) + $35_1 | 0;

                                                $58_1 = $45_1 - $57_1 | 0;

                                                $8_1 = $58_1 << 16 >> 16;

                                                $316 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $59_1 = (HEAPU16[($2_1 + 10 | 0) >> 1] | 0) + $36_1 | 0;

                                                $60_1 = $46_1 - $59_1 | 0;

                                                $8_1 = $60_1 << 16 >> 16;

                                                $329 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $61_1 = (HEAPU16[($2_1 + 8 | 0) >> 1] | 0) + $37_1 | 0;

                                                $62_1 = $47_1 - $61_1 | 0;

                                                $8_1 = $62_1 << 16 >> 16;

                                                $342 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $63_1 = (HEAPU16[($2_1 + 6 | 0) >> 1] | 0) + $38_1 | 0;

                                                $64_1 = $48_1 - $63_1 | 0;

                                                $8_1 = $64_1 << 16 >> 16;

                                                $355 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $65_1 = (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) + $39_1 | 0;

                                                $66_1 = $49_1 - $65_1 | 0;

                                                $8_1 = $66_1 << 16 >> 16;

                                                $368 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $67_1 = (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) + $31_1 | 0;

                                                $68_1 = $50_1 - $67_1 | 0;

                                                $8_1 = $68_1 << 16 >> 16;

                                                $381 = Math_imul($8_1, $8_1) << 1 | 0;

                                                $69_1 = (HEAPU16[$2_1 >> 1] | 0) + $32_1 | 0;

                                                $70_1 = $43_1 - $69_1 | 0;

                                                $8_1 = $70_1 << 16 >> 16;

                                                $8_1 = $277 + ($290 + ($303 + ($316 + ($329 + ($342 + ($355 + ($368 + ($381 + (Math_imul($8_1, $8_1) << 1 | 0) | 0) | 0) | 0) | 0) | 0) | 0) | 0) | 0) | 0;

                                                if (($8_1 | 0) >= ($40_1 | 0)) {

                                                    break label$4

                                                }

                                                i64toi32_i32$2 = $2_1;

                                                i64toi32_i32$0 = HEAPU16[$2_1 >> 1] | 0 | ((HEAPU16[($2_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($2_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $409 = i64toi32_i32$0;

                                                i64toi32_i32$0 = $0_1;

                                                $115_1 = $409;

                                                HEAP16[$0_1 >> 1] = $115_1;

                                                HEAP16[($0_1 + 2 | 0) >> 1] = $115_1 >>> 16 | 0;

                                                HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$1;

                                                HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                                $116_1 = $2_1 + 16 | 0;

                                                $117_1 = $0_1 + 16 | 0;

                                                $118_1 = HEAPU16[$116_1 >> 1] | 0 | ((HEAPU16[($116_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                HEAP16[$117_1 >> 1] = $118_1;

                                                HEAP16[($117_1 + 2 | 0) >> 1] = $118_1 >>> 16 | 0;

                                                i64toi32_i32$2 = $2_1 + 8 | 0;

                                                i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                                $419 = i64toi32_i32$1;

                                                i64toi32_i32$1 = $0_1 + 8 | 0;

                                                $119_1 = $419;

                                                HEAP16[i64toi32_i32$1 >> 1] = $119_1;

                                                HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $119_1 >>> 16 | 0;

                                                HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                                HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                                HEAP16[$5_1 >> 1] = $9_1;

                                                $29_1 = $70_1;

                                                $27_1 = $68_1;

                                                $25_1 = $66_1;

                                                $23_1 = $64_1;

                                                $21_1 = $62_1;

                                                $10_1 = $60_1;

                                                $18_1 = $58_1;

                                                $16_1 = $56_1;

                                                $14_1 = $54_1;

                                                $12_1 = $52_1;

                                                $28_1 = $69_1;

                                                $26_1 = $67_1;

                                                $24_1 = $65_1;

                                                $22_1 = $63_1;

                                                $20_1 = $61_1;

                                                $19_1 = $59_1;

                                                $17_1 = $57_1;

                                                $15_1 = $55_1;

                                                $13_1 = $53_1;

                                                $11_1 = $51_1;

                                                $40_1 = $8_1;

                                            }

                                            $9_1 = $9_1 + 1 | 0;

                                            if (($9_1 | 0) != (8 | 0)) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                    }

                                    label$5 : {

                                        label$6 : {

                                            if ($1_1 >>> 0 > 1 >>> 0) {

                                                break label$6

                                            }

                                            $52_1 = (HEAP16[($7_1 + 36 | 0) >> 1] | 0) << 1 | 0;

                                            $53_1 = (HEAP16[($7_1 + 34 | 0) >> 1] | 0) << 1 | 0;

                                            $54_1 = (HEAP16[($7_1 + 32 | 0) >> 1] | 0) << 1 | 0;

                                            $8_1 = 2147483647;

                                            $2_1 = global$49;

                                            $9_1 = 0;

                                            $40_1 = 0;

                                            label$7 : while (1) {

                                                $51_1 = Math_imul($53_1, ($27_1 - (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $469 = Math_imul($51_1, $51_1);

                                                $51_1 = Math_imul($54_1, ($29_1 - (HEAPU16[$2_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $481 = $469 + Math_imul($51_1, $51_1) | 0;

                                                $51_1 = Math_imul($52_1, ($25_1 - (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $51_1 = $481 + Math_imul($51_1, $51_1) | 0;

                                                $494 = $51_1;

                                                $51_1 = ($51_1 | 0) < ($8_1 | 0);

                                                $8_1 = $51_1 ? $494 : $8_1;

                                                $40_1 = $51_1 ? $9_1 : $40_1;

                                                $2_1 = $2_1 + 6 | 0;

                                                $51_1 = $9_1 & 65535 | 0;

                                                $9_1 = $9_1 + 1 | 0;

                                                if ($51_1 >>> 0 < 255 >>> 0) {

                                                    continue label$7

                                                }

                                                break label$7;

                                            }

                                            ;

                                            HEAP16[$4_1 >> 1] = $40_1;

                                            $29_1 = (HEAP16[($7_1 + 42 | 0) >> 1] | 0) << 1 | 0;

                                            $51_1 = (HEAP16[($7_1 + 40 | 0) >> 1] | 0) << 1 | 0;

                                            $52_1 = (HEAP16[($7_1 + 38 | 0) >> 1] | 0) << 1 | 0;

                                            $2_1 = global$49 + Math_imul($40_1 << 16 >> 16, 6) | 0;

                                            $53_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                            $54_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                            $55_1 = HEAPU16[$2_1 >> 1] | 0;

                                            $8_1 = 2147483647;

                                            $2_1 = global$47;

                                            $9_1 = 0;

                                            $25_1 = 0;

                                            label$8 : while (1) {

                                                $27_1 = Math_imul($51_1, ($21_1 - (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $546 = Math_imul($27_1, $27_1);

                                                $27_1 = Math_imul($52_1, ($23_1 - (HEAPU16[$2_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $558 = $546 + Math_imul($27_1, $27_1) | 0;

                                                $27_1 = Math_imul($29_1, ($10_1 - (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $27_1 = $558 + Math_imul($27_1, $27_1) | 0;

                                                $571 = $27_1;

                                                $27_1 = ($27_1 | 0) < ($8_1 | 0);

                                                $8_1 = $27_1 ? $571 : $8_1;

                                                $25_1 = $27_1 ? $9_1 : $25_1;

                                                $2_1 = $2_1 + 12 | 0;

                                                $27_1 = $9_1 & 65535 | 0;

                                                $9_1 = $9_1 + 1 | 0;

                                                if ($27_1 >>> 0 < 255 >>> 0) {

                                                    continue label$8

                                                }

                                                break label$8;

                                            }

                                            ;

                                            HEAP16[($4_1 + 2 | 0) >> 1] = $25_1;

                                            $2_1 = Math_imul($25_1 << 16 >> 16, 6);

                                            $2_1 = (global$47 + $2_1 | 0) + $2_1 | 0;

                                            $52_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                            $56_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                            $57_1 = HEAPU16[$2_1 >> 1] | 0;

                                            $25_1 = (HEAP16[($7_1 + 50 | 0) >> 1] | 0) << 1 | 0;

                                            $27_1 = (HEAP16[($7_1 + 48 | 0) >> 1] | 0) << 1 | 0;

                                            $29_1 = (HEAP16[($7_1 + 46 | 0) >> 1] | 0) << 1 | 0;

                                            $40_1 = (HEAP16[($7_1 + 44 | 0) >> 1] | 0) << 1 | 0;

                                            $10_1 = 2147483647;

                                            $2_1 = global$37;

                                            $8_1 = 0;

                                            $9_1 = 0;

                                            label$9 : while (1) {

                                                $21_1 = Math_imul($29_1, ($16_1 - (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $629 = Math_imul($21_1, $21_1);

                                                $21_1 = Math_imul($40_1, ($18_1 - (HEAPU16[$2_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $641 = $629 + Math_imul($21_1, $21_1) | 0;

                                                $21_1 = Math_imul($27_1, ($14_1 - (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $653 = $641 + Math_imul($21_1, $21_1) | 0;

                                                $21_1 = Math_imul($25_1, ($12_1 - (HEAPU16[($2_1 + 6 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $21_1 = $653 + Math_imul($21_1, $21_1) | 0;

                                                $666 = $21_1;

                                                $21_1 = ($21_1 | 0) < ($10_1 | 0);

                                                $10_1 = $21_1 ? $666 : $10_1;

                                                $9_1 = $21_1 ? $8_1 : $9_1;

                                                $2_1 = $2_1 + 8 | 0;

                                                $23_1 = $8_1 & 65535 | 0;

                                                $21_1 = global$37;

                                                $8_1 = $8_1 + 1 | 0;

                                                if ($23_1 >>> 0 < 127 >>> 0) {

                                                    continue label$9

                                                }

                                                break label$5;

                                            }

                                            ;

                                        }

                                        $51_1 = (HEAP16[($7_1 + 36 | 0) >> 1] | 0) << 1 | 0;

                                        $52_1 = (HEAP16[($7_1 + 34 | 0) >> 1] | 0) << 1 | 0;

                                        $53_1 = (HEAP16[($7_1 + 32 | 0) >> 1] | 0) << 1 | 0;

                                        $8_1 = global$49;

                                        $9_1 = 2147483647;

                                        $40_1 = global$36;

                                        $2_1 = 0;

                                        label$10 : {

                                            if (($1_1 | 0) != (5 | 0)) {

                                                break label$10

                                            }

                                            $8_1 = 0;

                                            label$11 : while (1) {

                                                $54_1 = Math_imul($52_1, ($27_1 - (HEAPU16[($40_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $709 = Math_imul($54_1, $54_1);

                                                $54_1 = Math_imul($53_1, ($29_1 - (HEAPU16[$40_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $721 = $709 + Math_imul($54_1, $54_1) | 0;

                                                $54_1 = Math_imul($51_1, ($25_1 - (HEAPU16[($40_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $54_1 = $721 + Math_imul($54_1, $54_1) | 0;

                                                $734 = $54_1;

                                                $54_1 = ($54_1 | 0) < ($9_1 | 0);

                                                $9_1 = $54_1 ? $734 : $9_1;

                                                $8_1 = $54_1 ? $2_1 : $8_1;

                                                $40_1 = $40_1 + 6 | 0;

                                                $54_1 = $2_1 & 65535 | 0;

                                                $2_1 = $2_1 + 1 | 0;

                                                if ($54_1 >>> 0 < 511 >>> 0) {

                                                    continue label$11

                                                }

                                                break label$11;

                                            }

                                            ;

                                            HEAP16[$4_1 >> 1] = $8_1;

                                            $29_1 = (HEAP16[($7_1 + 42 | 0) >> 1] | 0) << 1 | 0;

                                            $40_1 = (HEAP16[($7_1 + 40 | 0) >> 1] | 0) << 1 | 0;

                                            $51_1 = (HEAP16[($7_1 + 38 | 0) >> 1] | 0) << 1 | 0;

                                            $2_1 = global$36 + Math_imul($8_1 << 16 >> 16, 6) | 0;

                                            $53_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                            $54_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                            $55_1 = HEAPU16[$2_1 >> 1] | 0;

                                            $8_1 = 2147483647;

                                            $2_1 = global$47;

                                            $9_1 = 0;

                                            $25_1 = 0;

                                            label$12 : while (1) {

                                                $27_1 = Math_imul($40_1, ($21_1 - (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $786 = Math_imul($27_1, $27_1);

                                                $27_1 = Math_imul($51_1, ($23_1 - (HEAPU16[$2_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $798 = $786 + Math_imul($27_1, $27_1) | 0;

                                                $27_1 = Math_imul($29_1, ($10_1 - (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $27_1 = $798 + Math_imul($27_1, $27_1) | 0;

                                                $811 = $27_1;

                                                $27_1 = ($27_1 | 0) < ($8_1 | 0);

                                                $8_1 = $27_1 ? $811 : $8_1;

                                                $25_1 = $27_1 ? $9_1 : $25_1;

                                                $2_1 = $2_1 + 6 | 0;

                                                $27_1 = $9_1 & 65535 | 0;

                                                $9_1 = $9_1 + 1 | 0;

                                                if ($27_1 >>> 0 < 511 >>> 0) {

                                                    continue label$12

                                                }

                                                break label$12;

                                            }

                                            ;

                                            HEAP16[($4_1 + 2 | 0) >> 1] = $25_1;

                                            $27_1 = (HEAP16[($7_1 + 50 | 0) >> 1] | 0) << 1 | 0;

                                            $29_1 = (HEAP16[($7_1 + 48 | 0) >> 1] | 0) << 1 | 0;

                                            $40_1 = (HEAP16[($7_1 + 46 | 0) >> 1] | 0) << 1 | 0;

                                            $51_1 = (HEAP16[($7_1 + 44 | 0) >> 1] | 0) << 1 | 0;

                                            $2_1 = global$47 + Math_imul($25_1 << 16 >> 16, 6) | 0;

                                            $52_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                            $56_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                            $57_1 = HEAPU16[$2_1 >> 1] | 0;

                                            $10_1 = 2147483647;

                                            $2_1 = global$45;

                                            $8_1 = 0;

                                            $9_1 = 0;

                                            label$13 : while (1) {

                                                $21_1 = Math_imul($40_1, ($16_1 - (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $866 = Math_imul($21_1, $21_1);

                                                $21_1 = Math_imul($51_1, ($18_1 - (HEAPU16[$2_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $878 = $866 + Math_imul($21_1, $21_1) | 0;

                                                $21_1 = Math_imul($29_1, ($14_1 - (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $890 = $878 + Math_imul($21_1, $21_1) | 0;

                                                $21_1 = Math_imul($27_1, ($12_1 - (HEAPU16[($2_1 + 6 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                                $21_1 = $890 + Math_imul($21_1, $21_1) | 0;

                                                $903 = $21_1;

                                                $21_1 = ($21_1 | 0) < ($10_1 | 0);

                                                $10_1 = $21_1 ? $903 : $10_1;

                                                $9_1 = $21_1 ? $8_1 : $9_1;

                                                $2_1 = $2_1 + 8 | 0;

                                                $23_1 = $8_1 & 65535 | 0;

                                                $21_1 = global$45;

                                                $8_1 = $8_1 + 1 | 0;

                                                if ($23_1 >>> 0 < 511 >>> 0) {

                                                    continue label$13

                                                }

                                                break label$5;

                                            }

                                            ;

                                        }

                                        $40_1 = 0;

                                        label$14 : while (1) {

                                            $54_1 = Math_imul($52_1, ($27_1 - (HEAPU16[($8_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $933 = Math_imul($54_1, $54_1);

                                            $54_1 = Math_imul($53_1, ($29_1 - (HEAPU16[$8_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $945 = $933 + Math_imul($54_1, $54_1) | 0;

                                            $54_1 = Math_imul($51_1, ($25_1 - (HEAPU16[($8_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $54_1 = $945 + Math_imul($54_1, $54_1) | 0;

                                            $958 = $54_1;

                                            $54_1 = ($54_1 | 0) < ($9_1 | 0);

                                            $9_1 = $54_1 ? $958 : $9_1;

                                            $40_1 = $54_1 ? $2_1 : $40_1;

                                            $8_1 = $8_1 + 6 | 0;

                                            $54_1 = $2_1 & 65535 | 0;

                                            $2_1 = $2_1 + 1 | 0;

                                            if ($54_1 >>> 0 < 255 >>> 0) {

                                                continue label$14

                                            }

                                            break label$14;

                                        }

                                        ;

                                        HEAP16[$4_1 >> 1] = $40_1;

                                        $29_1 = (HEAP16[($7_1 + 42 | 0) >> 1] | 0) << 1 | 0;

                                        $51_1 = (HEAP16[($7_1 + 40 | 0) >> 1] | 0) << 1 | 0;

                                        $52_1 = (HEAP16[($7_1 + 38 | 0) >> 1] | 0) << 1 | 0;

                                        $2_1 = global$49 + Math_imul($40_1 << 16 >> 16, 6) | 0;

                                        $53_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        $54_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                        $55_1 = HEAPU16[$2_1 >> 1] | 0;

                                        $8_1 = 2147483647;

                                        $2_1 = global$47;

                                        $9_1 = 0;

                                        $25_1 = 0;

                                        label$15 : while (1) {

                                            $27_1 = Math_imul($51_1, ($21_1 - (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $1010 = Math_imul($27_1, $27_1);

                                            $27_1 = Math_imul($52_1, ($23_1 - (HEAPU16[$2_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $1022 = $1010 + Math_imul($27_1, $27_1) | 0;

                                            $27_1 = Math_imul($29_1, ($10_1 - (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $27_1 = $1022 + Math_imul($27_1, $27_1) | 0;

                                            $1035 = $27_1;

                                            $27_1 = ($27_1 | 0) < ($8_1 | 0);

                                            $8_1 = $27_1 ? $1035 : $8_1;

                                            $25_1 = $27_1 ? $9_1 : $25_1;

                                            $2_1 = $2_1 + 6 | 0;

                                            $27_1 = $9_1 & 65535 | 0;

                                            $9_1 = $9_1 + 1 | 0;

                                            if ($27_1 >>> 0 < 511 >>> 0) {

                                                continue label$15

                                            }

                                            break label$15;

                                        }

                                        ;

                                        HEAP16[($4_1 + 2 | 0) >> 1] = $25_1;

                                        $27_1 = (HEAP16[($7_1 + 50 | 0) >> 1] | 0) << 1 | 0;

                                        $29_1 = (HEAP16[($7_1 + 48 | 0) >> 1] | 0) << 1 | 0;

                                        $40_1 = (HEAP16[($7_1 + 46 | 0) >> 1] | 0) << 1 | 0;

                                        $51_1 = (HEAP16[($7_1 + 44 | 0) >> 1] | 0) << 1 | 0;

                                        $2_1 = global$47 + Math_imul($25_1 << 16 >> 16, 6) | 0;

                                        $52_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                        $56_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                        $57_1 = HEAPU16[$2_1 >> 1] | 0;

                                        $10_1 = 2147483647;

                                        $2_1 = global$45;

                                        $8_1 = 0;

                                        $9_1 = 0;

                                        label$16 : while (1) {

                                            $21_1 = Math_imul($40_1, ($16_1 - (HEAPU16[($2_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $1090 = Math_imul($21_1, $21_1);

                                            $21_1 = Math_imul($51_1, ($18_1 - (HEAPU16[$2_1 >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $1102 = $1090 + Math_imul($21_1, $21_1) | 0;

                                            $21_1 = Math_imul($29_1, ($14_1 - (HEAPU16[($2_1 + 4 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $1114 = $1102 + Math_imul($21_1, $21_1) | 0;

                                            $21_1 = Math_imul($27_1, ($12_1 - (HEAPU16[($2_1 + 6 | 0) >> 1] | 0) | 0) << 16 >> 16) >> 16 | 0;

                                            $21_1 = $1114 + Math_imul($21_1, $21_1) | 0;

                                            $1127 = $21_1;

                                            $21_1 = ($21_1 | 0) < ($10_1 | 0);

                                            $10_1 = $21_1 ? $1127 : $10_1;

                                            $9_1 = $21_1 ? $8_1 : $9_1;

                                            $2_1 = $2_1 + 8 | 0;

                                            $23_1 = $8_1 & 65535 | 0;

                                            $21_1 = global$45;

                                            $8_1 = $8_1 + 1 | 0;

                                            if ($23_1 >>> 0 < 511 >>> 0) {

                                                continue label$16

                                            }

                                            break label$16;

                                        }

                                        ;

                                    }

                                    HEAP16[($4_1 + 4 | 0) >> 1] = $9_1;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $52_1;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $56_1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = $57_1;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $53_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $54_1;

                                    HEAP16[$0_1 >> 1] = $55_1;

                                    $2_1 = $21_1 + ($9_1 << 16 >> 16 << 3 | 0) | 0;

                                    $9_1 = HEAPU16[($2_1 + 2 | 0) >> 1] | 0;

                                    HEAP16[($0_1 + 14 | 0) >> 1] = $9_1;

                                    $8_1 = HEAPU16[$2_1 >> 1] | 0;

                                    HEAP16[($0_1 + 12 | 0) >> 1] = $8_1;

                                    $10_1 = HEAPU16[($2_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[($0_1 + 18 | 0) >> 1] = $10_1;

                                    $2_1 = HEAPU16[($2_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($0_1 + 16 | 0) >> 1] = $2_1;

                                    HEAP16[($7_1 + 18 | 0) >> 1] = $11_1 + $10_1 | 0;

                                    HEAP16[($7_1 + 16 | 0) >> 1] = $13_1 + $2_1 | 0;

                                    HEAP16[($7_1 + 14 | 0) >> 1] = $15_1 + $9_1 | 0;

                                    HEAP16[($7_1 + 12 | 0) >> 1] = $17_1 + $8_1 | 0;

                                    HEAP16[($7_1 + 10 | 0) >> 1] = $19_1 + $52_1 | 0;

                                    HEAP16[($7_1 + 8 | 0) >> 1] = $20_1 + $56_1 | 0;

                                    HEAP16[($7_1 + 6 | 0) >> 1] = $22_1 + $57_1 | 0;

                                    HEAP16[($7_1 + 4 | 0) >> 1] = $24_1 + $53_1 | 0;

                                    HEAP16[($7_1 + 2 | 0) >> 1] = $26_1 + $54_1 | 0;

                                    HEAP16[$7_1 >> 1] = $28_1 + $55_1 | 0;

                                    $218($7_1 | 0, 205 | 0, 10 | 0, $6_1 | 0);

                                    $206($7_1 | 0, $3_1 | 0, 10 | 0, $6_1 | 0);

                                    global$0 = $7_1 + 96 | 0;

                                }



                                function $214($0_1, $1_1, $2_1, $3_1, $4_1, $5_1, $6_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    $6_1 = $6_1 | 0;

                                    var $44_1 = 0, $7_1 = 0, $42_1 = 0, $45_1 = 0, $11_1 = 0, $10_1 = 0, $9_1 = 0,

                                        $39_1 = 0, $43_1 = 0, $8_1 = 0, $40_1 = 0, $41_1 = 0, $25_1 = 0, $26_1 = 0,

                                        $28_1 = 0, $29_1 = 0, $37_1 = 0, $12_1 = 0, $15_1 = 0, $18_1 = 0, $19_1 = 0,

                                        $20_1 = 0, $21_1 = 0, $24_1 = 0, $27_1 = 0, $30_1 = 0, $31_1 = 0, $33_1 = 0,

                                        $35_1 = 0, $36_1 = 0, $38_1 = 0, $22_1 = 0, $23_1 = 0, $32_1 = 0, $34_1 = 0,

                                        $48_1 = 0, $49_1 = 0, $13_1 = 0, $14_1 = 0, $16_1 = 0, $17_1 = 0, $296 = 0,

                                        $46_1 = 0, $47_1 = 0, $408 = 0, $468 = 0, $491 = 0, $522 = 0, $560 = 0,

                                        $695 = 0, $807 = 0;

                                    $7_1 = global$0 - 192 | 0;

                                    global$0 = $7_1;

                                    $207($1_1 | 0, $7_1 + 160 | 0 | 0, 10 | 0, $6_1 | 0);

                                    $207($2_1 | 0, $7_1 + 128 | 0 | 0, 10 | 0, $6_1 | 0);

                                    $199($7_1 + 160 | 0 | 0, $7_1 + 96 | 0 | 0, $6_1 | 0);

                                    $199($7_1 + 128 | 0 | 0, $7_1 + 64 | 0 | 0, $6_1 | 0);

                                    $8_1 = (HEAP16[($7_1 + 66 | 0) >> 1] | 0) << 1 | 0;

                                    $9_1 = (HEAP16[($7_1 + 64 | 0) >> 1] | 0) << 1 | 0;

                                    $10_1 = (HEAP16[($7_1 + 98 | 0) >> 1] | 0) << 1 | 0;

                                    $11_1 = (HEAP16[($7_1 + 96 | 0) >> 1] | 0) << 1 | 0;

                                    $2_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                    $1_1 = global$38;

                                    $12_1 = (HEAPU16[($1_1 + 18 | 0) >> 1] | 0) + (Math_imul($2_1, 21299) >>> 15 | 0) | 0;

                                    $13_1 = (HEAPU16[($7_1 + 146 | 0) >> 1] | 0) - $12_1 | 0;

                                    $14_1 = (HEAPU16[($7_1 + 178 | 0) >> 1] | 0) - $12_1 | 0;

                                    $15_1 = (HEAPU16[($1_1 + 16 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 16 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $16_1 = (HEAPU16[($7_1 + 144 | 0) >> 1] | 0) - $15_1 | 0;

                                    $17_1 = (HEAPU16[($7_1 + 176 | 0) >> 1] | 0) - $15_1 | 0;

                                    $18_1 = (HEAPU16[($1_1 + 14 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 14 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $19_1 = (HEAPU16[($7_1 + 142 | 0) >> 1] | 0) - $18_1 | 0;

                                    $20_1 = (HEAPU16[($7_1 + 174 | 0) >> 1] | 0) - $18_1 | 0;

                                    $21_1 = (HEAPU16[($1_1 + 12 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 12 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $22_1 = (HEAPU16[($7_1 + 140 | 0) >> 1] | 0) - $21_1 | 0;

                                    $23_1 = (HEAPU16[($7_1 + 172 | 0) >> 1] | 0) - $21_1 | 0;

                                    $24_1 = (HEAPU16[($1_1 + 10 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 10 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $25_1 = (HEAPU16[($7_1 + 138 | 0) >> 1] | 0) - $24_1 | 0;

                                    $26_1 = (HEAPU16[($7_1 + 170 | 0) >> 1] | 0) - $24_1 | 0;

                                    $27_1 = (HEAPU16[($1_1 + 8 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 8 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $28_1 = (HEAPU16[($7_1 + 136 | 0) >> 1] | 0) - $27_1 | 0;

                                    $29_1 = (HEAPU16[($7_1 + 168 | 0) >> 1] | 0) - $27_1 | 0;

                                    $30_1 = (HEAPU16[($1_1 + 6 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 6 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $31_1 = (HEAPU16[($7_1 + 134 | 0) >> 1] | 0) - $30_1 | 0;

                                    $32_1 = (HEAPU16[($7_1 + 166 | 0) >> 1] | 0) - $30_1 | 0;

                                    $33_1 = (HEAPU16[($1_1 + 4 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 4 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $34_1 = (HEAPU16[($7_1 + 132 | 0) >> 1] | 0) - $33_1 | 0;

                                    $35_1 = (HEAPU16[($7_1 + 164 | 0) >> 1] | 0) - $33_1 | 0;

                                    $36_1 = (HEAPU16[($1_1 + 2 | 0) >> 1] | 0) + (Math_imul(HEAP16[($0_1 + 2 | 0) >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $37_1 = ((HEAPU16[($7_1 + 130 | 0) >> 1] | 0) - $36_1 | 0) << 16 >> 16;

                                    $38_1 = (HEAPU16[$1_1 >> 1] | 0) + (Math_imul(HEAP16[$0_1 >> 1] | 0, 21299) >>> 15 | 0) | 0;

                                    $39_1 = ((HEAPU16[($7_1 + 128 | 0) >> 1] | 0) - $38_1 | 0) << 16 >> 16;

                                    $40_1 = ((HEAPU16[($7_1 + 162 | 0) >> 1] | 0) - $36_1 | 0) << 16 >> 16;

                                    $41_1 = ((HEAPU16[($7_1 + 160 | 0) >> 1] | 0) - $38_1 | 0) << 16 >> 16;

                                    $42_1 = 2147483647;

                                    $1_1 = global$48;

                                    $43_1 = 0;

                                    $44_1 = 0;

                                    label$1 : while (1) {

                                        $2_1 = $44_1;

                                        label$2 : {

                                            $44_1 = Math_imul($11_1, $41_1 - (HEAP16[$1_1 >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($44_1, $44_1);

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$2

                                            }

                                            $45_1 = Math_imul($10_1, $40_1 - (HEAP16[($1_1 + 2 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($45_1, $45_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$2

                                            }

                                            $45_1 = Math_imul($9_1, $39_1 - (HEAP16[($1_1 + 4 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($45_1, $45_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$2

                                            }

                                            $45_1 = Math_imul($8_1, $37_1 - (HEAP16[($1_1 + 6 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($45_1, $45_1) + $44_1 | 0;

                                            $296 = $44_1;

                                            $44_1 = ($44_1 | 0) < ($42_1 | 0);

                                            $42_1 = $44_1 ? $296 : $42_1;

                                            $43_1 = $44_1 ? $2_1 : $43_1;

                                        }

                                        $44_1 = $2_1 + 1 | 0;

                                        $1_1 = $1_1 + 8 | 0;

                                        if (($2_1 & 65535 | 0) >>> 0 < 127 >>> 0) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    HEAP16[$5_1 >> 1] = $43_1;

                                    $8_1 = (HEAP16[($7_1 + 70 | 0) >> 1] | 0) << 1 | 0;

                                    $39_1 = (HEAP16[($7_1 + 68 | 0) >> 1] | 0) << 1 | 0;

                                    $10_1 = (HEAP16[($7_1 + 102 | 0) >> 1] | 0) << 1 | 0;

                                    $11_1 = (HEAP16[($7_1 + 100 | 0) >> 1] | 0) << 1 | 0;

                                    $1_1 = global$48 + ($43_1 << 16 >> 16 << 3 | 0) | 0;

                                    $46_1 = HEAPU16[($1_1 + 2 | 0) >> 1] | 0;

                                    $47_1 = HEAPU16[$1_1 >> 1] | 0;

                                    $48_1 = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                    $49_1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                    $37_1 = $31_1 << 16 >> 16;

                                    $43_1 = $34_1 << 16 >> 16;

                                    $40_1 = $32_1 << 16 >> 16;

                                    $41_1 = $35_1 << 16 >> 16;

                                    $42_1 = 2147483647;

                                    $1_1 = global$46;

                                    $9_1 = 0;

                                    $44_1 = 0;

                                    label$3 : while (1) {

                                        $2_1 = $44_1;

                                        label$4 : {

                                            $44_1 = Math_imul($11_1, $41_1 - (HEAP16[$1_1 >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($44_1, $44_1);

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$4

                                            }

                                            $45_1 = Math_imul($10_1, $40_1 - (HEAP16[($1_1 + 2 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($45_1, $45_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$4

                                            }

                                            $45_1 = Math_imul($39_1, $43_1 - (HEAP16[($1_1 + 4 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($45_1, $45_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$4

                                            }

                                            $45_1 = Math_imul($8_1, $37_1 - (HEAP16[($1_1 + 6 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($45_1, $45_1) + $44_1 | 0;

                                            $408 = $44_1;

                                            $44_1 = ($44_1 | 0) < ($42_1 | 0);

                                            $42_1 = $44_1 ? $408 : $42_1;

                                            $9_1 = $44_1 ? $2_1 : $9_1;

                                        }

                                        $44_1 = $2_1 + 1 | 0;

                                        $1_1 = $1_1 + 8 | 0;

                                        if (($2_1 & 65535 | 0) >>> 0 < 255 >>> 0) {

                                            continue label$3

                                        }

                                        break label$3;

                                    }

                                    ;

                                    HEAP16[($5_1 + 2 | 0) >> 1] = $9_1;

                                    $40_1 = (HEAP16[($7_1 + 74 | 0) >> 1] | 0) << 1 | 0;

                                    $43_1 = (HEAP16[($7_1 + 72 | 0) >> 1] | 0) << 1 | 0;

                                    $11_1 = (HEAP16[($7_1 + 106 | 0) >> 1] | 0) << 1 | 0;

                                    $41_1 = (HEAP16[($7_1 + 104 | 0) >> 1] | 0) << 1 | 0;

                                    $1_1 = global$46 + ($9_1 << 16 >> 16 << 3 | 0) | 0;

                                    $32_1 = HEAPU16[($1_1 + 2 | 0) >> 1] | 0;

                                    $34_1 = HEAPU16[$1_1 >> 1] | 0;

                                    $37_1 = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                    $31_1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                    $2_1 = 2147483647;

                                    $1_1 = global$44;

                                    $39_1 = 0;

                                    $8_1 = 0;

                                    $44_1 = 0;

                                    label$5 : while (1) {

                                        $42_1 = $44_1;

                                        $45_1 = HEAPU16[($1_1 + 2 | 0) >> 1] | 0;

                                        $44_1 = Math_imul($11_1, ($45_1 + $26_1 | 0) << 16 >> 16) >> 16 | 0;

                                        $468 = Math_imul($44_1, $44_1);

                                        $10_1 = HEAPU16[$1_1 >> 1] | 0;

                                        $44_1 = Math_imul($41_1, ($10_1 + $29_1 | 0) << 16 >> 16) >> 16 | 0;

                                        $44_1 = $468 + Math_imul($44_1, $44_1) | 0;

                                        label$6 : {

                                            label$7 : {

                                                $45_1 = Math_imul($11_1, ($26_1 - $45_1 | 0) << 16 >> 16) >> 16 | 0;

                                                $491 = Math_imul($45_1, $45_1);

                                                $45_1 = Math_imul($41_1, ($29_1 - $10_1 | 0) << 16 >> 16) >> 16 | 0;

                                                $45_1 = $491 + Math_imul($45_1, $45_1) | 0;

                                                if (($45_1 | 0) < ($2_1 | 0)) {

                                                    break label$7

                                                }

                                                if (($44_1 | 0) >= ($2_1 | 0)) {

                                                    break label$6

                                                }

                                            }

                                            label$8 : {

                                                $10_1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                                $9_1 = Math_imul($43_1, ($10_1 + $28_1 | 0) << 16 >> 16) >> 16 | 0;

                                                $522 = Math_imul($9_1, $9_1) + $44_1 | 0;

                                                $44_1 = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                                $9_1 = Math_imul($40_1, ($44_1 + $25_1 | 0) << 16 >> 16) >> 16 | 0;

                                                $9_1 = $522 + Math_imul($9_1, $9_1) | 0;

                                                $10_1 = Math_imul($43_1, ($28_1 - $10_1 | 0) << 16 >> 16) >> 16 | 0;

                                                $44_1 = Math_imul($40_1, ($25_1 - $44_1 | 0) << 16 >> 16) >> 16 | 0;

                                                $44_1 = (Math_imul($10_1, $10_1) + $45_1 | 0) + Math_imul($44_1, $44_1) | 0;

                                                $560 = $44_1;

                                                $44_1 = ($44_1 | 0) < ($2_1 | 0);

                                                $2_1 = $44_1 ? $560 : $2_1;

                                                if (($9_1 | 0) < ($2_1 | 0)) {

                                                    break label$8

                                                }

                                                $39_1 = $44_1 ? $42_1 : $39_1;

                                                $8_1 = $44_1 ? 0 : $8_1;

                                                break label$6;

                                            }

                                            $8_1 = 1;

                                            $2_1 = $9_1;

                                            $39_1 = $42_1;

                                        }

                                        $44_1 = $42_1 + 1 | 0;

                                        $1_1 = $1_1 + 8 | 0;

                                        if (($42_1 & 65535 | 0) >>> 0 < 255 >>> 0) {

                                            continue label$5

                                        }

                                        break label$5;

                                    }

                                    ;

                                    $2_1 = $39_1 << 1 | 0;

                                    $1_1 = global$44 + ($39_1 << 16 >> 16 << 3 | 0) | 0;

                                    $9_1 = HEAPU16[$1_1 >> 1] | 0;

                                    label$9 : {

                                        label$10 : {

                                            if (!($8_1 & 65535 | 0)) {

                                                break label$10

                                            }

                                            $2_1 = $2_1 | 1 | 0;

                                            $9_1 = 0 - $9_1 | 0;

                                            $39_1 = 0 - (HEAPU16[($1_1 + 6 | 0) >> 1] | 0) | 0;

                                            $8_1 = 0 - (HEAPU16[($1_1 + 4 | 0) >> 1] | 0) | 0;

                                            $35_1 = 0 - (HEAPU16[($1_1 + 2 | 0) >> 1] | 0) | 0;

                                            break label$9;

                                        }

                                        $39_1 = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                        $8_1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                        $35_1 = HEAPU16[($1_1 + 2 | 0) >> 1] | 0;

                                    }

                                    HEAP16[($5_1 + 4 | 0) >> 1] = $2_1;

                                    $40_1 = (HEAP16[($7_1 + 78 | 0) >> 1] | 0) << 1 | 0;

                                    $25_1 = (HEAP16[($7_1 + 76 | 0) >> 1] | 0) << 1 | 0;

                                    $41_1 = (HEAP16[($7_1 + 110 | 0) >> 1] | 0) << 1 | 0;

                                    $26_1 = (HEAP16[($7_1 + 108 | 0) >> 1] | 0) << 1 | 0;

                                    $43_1 = $19_1 << 16 >> 16;

                                    $28_1 = $22_1 << 16 >> 16;

                                    $45_1 = $20_1 << 16 >> 16;

                                    $29_1 = $23_1 << 16 >> 16;

                                    $42_1 = 2147483647;

                                    $1_1 = global$43;

                                    $10_1 = 0;

                                    $44_1 = 0;

                                    label$11 : while (1) {

                                        $2_1 = $44_1;

                                        label$12 : {

                                            $44_1 = Math_imul($26_1, $29_1 - (HEAP16[$1_1 >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($44_1, $44_1);

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$12

                                            }

                                            $11_1 = Math_imul($41_1, $45_1 - (HEAP16[($1_1 + 2 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($11_1, $11_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$12

                                            }

                                            $11_1 = Math_imul($25_1, $28_1 - (HEAP16[($1_1 + 4 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($11_1, $11_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$12

                                            }

                                            $11_1 = Math_imul($40_1, $43_1 - (HEAP16[($1_1 + 6 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($11_1, $11_1) + $44_1 | 0;

                                            $695 = $44_1;

                                            $44_1 = ($44_1 | 0) < ($42_1 | 0);

                                            $42_1 = $44_1 ? $695 : $42_1;

                                            $10_1 = $44_1 ? $2_1 : $10_1;

                                        }

                                        $44_1 = $2_1 + 1 | 0;

                                        $1_1 = $1_1 + 8 | 0;

                                        if (($2_1 & 65535 | 0) >>> 0 < 255 >>> 0) {

                                            continue label$11

                                        }

                                        break label$11;

                                    }

                                    ;

                                    HEAP16[($5_1 + 6 | 0) >> 1] = $10_1;

                                    $40_1 = (HEAP16[($7_1 + 82 | 0) >> 1] | 0) << 1 | 0;

                                    $25_1 = (HEAP16[($7_1 + 80 | 0) >> 1] | 0) << 1 | 0;

                                    $41_1 = (HEAP16[($7_1 + 114 | 0) >> 1] | 0) << 1 | 0;

                                    $26_1 = (HEAP16[($7_1 + 112 | 0) >> 1] | 0) << 1 | 0;

                                    $1_1 = global$43 + ($10_1 << 16 >> 16 << 3 | 0) | 0;

                                    $22_1 = HEAPU16[($1_1 + 2 | 0) >> 1] | 0;

                                    $23_1 = HEAPU16[$1_1 >> 1] | 0;

                                    $19_1 = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                    $20_1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                    $43_1 = $13_1 << 16 >> 16;

                                    $28_1 = $16_1 << 16 >> 16;

                                    $45_1 = $14_1 << 16 >> 16;

                                    $29_1 = $17_1 << 16 >> 16;

                                    $42_1 = 2147483647;

                                    $1_1 = global$42;

                                    $10_1 = 0;

                                    $44_1 = 0;

                                    label$13 : while (1) {

                                        $2_1 = $44_1;

                                        label$14 : {

                                            $44_1 = Math_imul($26_1, $29_1 - (HEAP16[$1_1 >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($44_1, $44_1);

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$14

                                            }

                                            $11_1 = Math_imul($41_1, $45_1 - (HEAP16[($1_1 + 2 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($11_1, $11_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$14

                                            }

                                            $11_1 = Math_imul($25_1, $28_1 - (HEAP16[($1_1 + 4 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($11_1, $11_1) + $44_1 | 0;

                                            if (($44_1 | 0) >= ($42_1 | 0)) {

                                                break label$14

                                            }

                                            $11_1 = Math_imul($40_1, $43_1 - (HEAP16[($1_1 + 6 | 0) >> 1] | 0) | 0) >> 16 | 0;

                                            $44_1 = Math_imul($11_1, $11_1) + $44_1 | 0;

                                            $807 = $44_1;

                                            $44_1 = ($44_1 | 0) < ($42_1 | 0);

                                            $42_1 = $44_1 ? $807 : $42_1;

                                            $10_1 = $44_1 ? $2_1 : $10_1;

                                        }

                                        $44_1 = $2_1 + 1 | 0;

                                        $1_1 = $1_1 + 8 | 0;

                                        if (($2_1 & 65535 | 0) >>> 0 < 63 >>> 0) {

                                            continue label$13

                                        }

                                        break label$13;

                                    }

                                    ;

                                    HEAP16[($5_1 + 8 | 0) >> 1] = $10_1;

                                    HEAP16[($0_1 + 14 | 0) >> 1] = $19_1;

                                    HEAP16[($0_1 + 12 | 0) >> 1] = $20_1;

                                    HEAP16[($0_1 + 10 | 0) >> 1] = $39_1;

                                    HEAP16[($0_1 + 8 | 0) >> 1] = $8_1;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = $37_1;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = $31_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $48_1;

                                    HEAP16[$0_1 >> 1] = $49_1;

                                    $1_1 = global$42 + ($10_1 << 16 >> 16 << 3 | 0) | 0;

                                    $2_1 = HEAPU16[($1_1 + 6 | 0) >> 1] | 0;

                                    HEAP16[($0_1 + 18 | 0) >> 1] = $2_1;

                                    $42_1 = HEAPU16[($1_1 + 4 | 0) >> 1] | 0;

                                    HEAP16[($0_1 + 16 | 0) >> 1] = $42_1;

                                    HEAP16[$7_1 >> 1] = $49_1 + $38_1 | 0;

                                    HEAP16[($7_1 + 32 | 0) >> 1] = $38_1 + $47_1 | 0;

                                    HEAP16[($7_1 + 34 | 0) >> 1] = $36_1 + $46_1 | 0;

                                    HEAP16[($7_1 + 2 | 0) >> 1] = $48_1 + $36_1 | 0;

                                    HEAP16[($7_1 + 36 | 0) >> 1] = $33_1 + $34_1 | 0;

                                    HEAP16[($7_1 + 4 | 0) >> 1] = $31_1 + $33_1 | 0;

                                    HEAP16[($7_1 + 38 | 0) >> 1] = $30_1 + $32_1 | 0;

                                    HEAP16[($7_1 + 6 | 0) >> 1] = $37_1 + $30_1 | 0;

                                    HEAP16[($7_1 + 40 | 0) >> 1] = $27_1 + $9_1 | 0;

                                    HEAP16[($7_1 + 8 | 0) >> 1] = $8_1 + $27_1 | 0;

                                    HEAP16[($7_1 + 42 | 0) >> 1] = $24_1 + $35_1 | 0;

                                    HEAP16[($7_1 + 10 | 0) >> 1] = $39_1 + $24_1 | 0;

                                    HEAP16[($7_1 + 44 | 0) >> 1] = $21_1 + $23_1 | 0;

                                    HEAP16[($7_1 + 12 | 0) >> 1] = $20_1 + $21_1 | 0;

                                    HEAP16[($7_1 + 46 | 0) >> 1] = $18_1 + $22_1 | 0;

                                    HEAP16[($7_1 + 14 | 0) >> 1] = $19_1 + $18_1 | 0;

                                    HEAP16[($7_1 + 48 | 0) >> 1] = $15_1 + (HEAPU16[$1_1 >> 1] | 0) | 0;

                                    HEAP16[($7_1 + 16 | 0) >> 1] = $42_1 + $15_1 | 0;

                                    HEAP16[($7_1 + 50 | 0) >> 1] = $12_1 + (HEAPU16[($1_1 + 2 | 0) >> 1] | 0) | 0;

                                    HEAP16[($7_1 + 18 | 0) >> 1] = $2_1 + $12_1 | 0;

                                    $218($7_1 + 32 | 0 | 0, 205 | 0, 10 | 0, $6_1 | 0);

                                    $218($7_1 | 0, 205 | 0, 10 | 0, $6_1 | 0);

                                    $206($7_1 + 32 | 0 | 0, $3_1 | 0, 10 | 0, $6_1 | 0);

                                    $206($7_1 | 0, $4_1 | 0, 10 | 0, $6_1 | 0);

                                    global$0 = $7_1 + 192 | 0;

                                }



                                function $215($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0;

                                    $1_1 = 65535;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = 0;

                                        $2_1 = $233(1 | 0, 20 | 0) | 0;

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP32[$0_1 >> 2] = $2_1;

                                        $1_1 = 0;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $216($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var i64toi32_i32$1 = 0, i64toi32_i32$0 = 0, $3_1 = 0, $4_1 = 0, $5_1 = 0, $6_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        return 65535 << 16 >> 16 | 0;

                                    }

                                    i64toi32_i32$1 = $0_1;

                                    i64toi32_i32$0 = 0;

                                    $3_1 = 0;

                                    HEAP16[$0_1 >> 1] = $3_1;

                                    HEAP16[($0_1 + 2 | 0) >> 1] = $3_1 >>> 16 | 0;

                                    HEAP16[($0_1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[($0_1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    $4_1 = $0_1 + 16 | 0;

                                    $5_1 = 0;

                                    HEAP16[$4_1 >> 1] = $5_1;

                                    HEAP16[($4_1 + 2 | 0) >> 1] = $5_1 >>> 16 | 0;

                                    i64toi32_i32$1 = $0_1 + 8 | 0;

                                    i64toi32_i32$0 = 0;

                                    $6_1 = 0;

                                    HEAP16[i64toi32_i32$1 >> 1] = $6_1;

                                    HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $6_1 >>> 16 | 0;

                                    HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                    HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    return 0 << 16 >> 16 | 0;

                                }



                                function $217($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = HEAP32[$0_1 >> 2] | 0;

                                        if (!$1_1) {

                                            break label$1

                                        }

                                        $232($1_1 | 0);

                                        HEAP32[$0_1 >> 2] = 0;

                                    }

                                }



                                function $218($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $6_1 = 0, $4_1 = 0, $5_1 = 0;

                                    label$1 : {

                                        if (($2_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $4_1 = $2_1 & 3 | 0;

                                        label$2 : {

                                            label$3 : {

                                                if ($2_1 >>> 0 >= 4 >>> 0) {

                                                    break label$3

                                                }

                                                $2_1 = $1_1;

                                                break label$2;

                                            }

                                            $5_1 = $2_1 & 65532 | 0;

                                            $6_1 = 0;

                                            $2_1 = $1_1;

                                            label$4 : while (1) {

                                                label$5 : {

                                                    $7_1 = HEAP16[$0_1 >> 1] | 0;

                                                    if (($7_1 | 0) >= ($2_1 << 16 >> 16 | 0)) {

                                                        break label$5

                                                    }

                                                    HEAP16[$0_1 >> 1] = $2_1;

                                                    $7_1 = $2_1;

                                                }

                                                label$6 : {

                                                    $2_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                                    $7_1 = ($7_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($2_1 | 0) >= ($7_1 | 0)) {

                                                        break label$6

                                                    }

                                                    HEAP16[($0_1 + 2 | 0) >> 1] = $7_1;

                                                    $2_1 = $7_1;

                                                }

                                                label$7 : {

                                                    $7_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                                    $2_1 = ($2_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($7_1 | 0) >= ($2_1 | 0)) {

                                                        break label$7

                                                    }

                                                    HEAP16[($0_1 + 4 | 0) >> 1] = $2_1;

                                                    $7_1 = $2_1;

                                                }

                                                label$8 : {

                                                    $2_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                                    $7_1 = ($7_1 + $1_1 | 0) << 16 >> 16;

                                                    if (($2_1 | 0) >= ($7_1 | 0)) {

                                                        break label$8

                                                    }

                                                    HEAP16[($0_1 + 6 | 0) >> 1] = $7_1;

                                                    $2_1 = $7_1;

                                                }

                                                $0_1 = $0_1 + 8 | 0;

                                                $2_1 = $2_1 + $1_1 | 0;

                                                $6_1 = $6_1 + 4 | 0;

                                                if (($6_1 & 65535 | 0 | 0) != ($5_1 | 0)) {

                                                    continue label$4

                                                }

                                                break label$4;

                                            }

                                            ;

                                        }

                                        if (!$4_1) {

                                            break label$1

                                        }

                                        $6_1 = 0;

                                        label$9 : while (1) {

                                            label$10 : {

                                                $7_1 = HEAP16[$0_1 >> 1] | 0;

                                                if (($7_1 | 0) >= ($2_1 << 16 >> 16 | 0)) {

                                                    break label$10

                                                }

                                                HEAP16[$0_1 >> 1] = $2_1;

                                                $7_1 = $2_1;

                                            }

                                            $0_1 = $0_1 + 2 | 0;

                                            $2_1 = $7_1 + $1_1 | 0;

                                            $6_1 = $6_1 + 1 | 0;

                                            if (($6_1 & 65535 | 0 | 0) != ($4_1 | 0)) {

                                                continue label$9

                                            }

                                            break label$9;

                                        }

                                        ;

                                    }

                                }



                                function $219($0_1, $1_1, $2_1, $3_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    var $7_1 = 0, $8_1 = 0, $9_1 = 0, $10_1 = 0, $11_1 = 0, $12_1 = 0, $13_1 = 0,

                                        $14_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0,

                                        $21_1 = 0, $22_1 = 0, $24_1 = 0, $26_1 = 0, $27_1 = 0, $4_1 = 0, $23_1 = 0,

                                        $6_1 = 0, $25_1 = 0, $5_1 = 0;

                                    label$1 : {

                                        if ($3_1 >>> 0 < 4 >>> 0) {

                                            break label$1

                                        }

                                        $4_1 = $3_1 >> 2 | 0;

                                        $3_1 = $3_1 << 1 | 0;

                                        $2_1 = ($3_1 + $2_1 | 0) + -2 | 0;

                                        $3_1 = ($3_1 + $1_1 | 0) + -22 | 0;

                                        label$2 : while (1) {

                                            $5_1 = HEAP16[($3_1 + -6 | 0) >> 1] | 0;

                                            $6_1 = HEAP16[($3_1 + -4 | 0) >> 1] | 0;

                                            $1_1 = HEAP16[($3_1 + -2 | 0) >> 1] | 0;

                                            $7_1 = HEAP16[$3_1 >> 1] | 0;

                                            $8_1 = HEAP16[($0_1 + 20 | 0) >> 1] | 0;

                                            $9_1 = HEAP16[($3_1 + 2 | 0) >> 1] | 0;

                                            $10_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                            $11_1 = HEAP16[($3_1 + 4 | 0) >> 1] | 0;

                                            $12_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                            $13_1 = HEAP16[($3_1 + 6 | 0) >> 1] | 0;

                                            $14_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                            $15_1 = HEAP16[($3_1 + 8 | 0) >> 1] | 0;

                                            $16_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                            $17_1 = HEAP16[($3_1 + 10 | 0) >> 1] | 0;

                                            $18_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                            $19_1 = HEAP16[($3_1 + 12 | 0) >> 1] | 0;

                                            $20_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                            $21_1 = HEAP16[($3_1 + 14 | 0) >> 1] | 0;

                                            $22_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                            $23_1 = HEAP16[($3_1 + 16 | 0) >> 1] | 0;

                                            $24_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                            $25_1 = HEAP16[($3_1 + 18 | 0) >> 1] | 0;

                                            $26_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                            $27_1 = HEAP16[$0_1 >> 1] | 0;

                                            HEAP16[$2_1 >> 1] = (((((((((((Math_imul($7_1, $8_1) + Math_imul($9_1, $10_1) | 0) + Math_imul($11_1, $12_1) | 0) + Math_imul($13_1, $14_1) | 0) + Math_imul($15_1, $16_1) | 0) + Math_imul($17_1, $18_1) | 0) + Math_imul($19_1, $20_1) | 0) + Math_imul($21_1, $22_1) | 0) + Math_imul($23_1, $24_1) | 0) + Math_imul($25_1, $26_1) | 0) + Math_imul(HEAP16[($3_1 + 20 | 0) >> 1] | 0, $27_1) | 0) + 2048 | 0) >>> 12 | 0;

                                            HEAP16[($2_1 + -2 | 0) >> 1] = (((((((((((Math_imul($1_1, $8_1) + Math_imul($7_1, $10_1) | 0) + Math_imul($9_1, $12_1) | 0) + Math_imul($11_1, $14_1) | 0) + Math_imul($13_1, $16_1) | 0) + Math_imul($15_1, $18_1) | 0) + Math_imul($17_1, $20_1) | 0) + Math_imul($19_1, $22_1) | 0) + Math_imul($21_1, $24_1) | 0) + Math_imul($23_1, $26_1) | 0) + Math_imul($25_1, $27_1) | 0) + 2048 | 0) >>> 12 | 0;

                                            HEAP16[($2_1 + -4 | 0) >> 1] = (((((((((((Math_imul($6_1, $8_1) + Math_imul($1_1, $10_1) | 0) + Math_imul($7_1, $12_1) | 0) + Math_imul($9_1, $14_1) | 0) + Math_imul($11_1, $16_1) | 0) + Math_imul($13_1, $18_1) | 0) + Math_imul($15_1, $20_1) | 0) + Math_imul($17_1, $22_1) | 0) + Math_imul($19_1, $24_1) | 0) + Math_imul($21_1, $26_1) | 0) + Math_imul($23_1, $27_1) | 0) + 2048 | 0) >>> 12 | 0;

                                            HEAP16[($2_1 + -6 | 0) >> 1] = (((((((((((Math_imul($5_1, $8_1) + Math_imul($6_1, $10_1) | 0) + Math_imul($1_1, $12_1) | 0) + Math_imul($7_1, $14_1) | 0) + Math_imul($9_1, $16_1) | 0) + Math_imul($11_1, $18_1) | 0) + Math_imul($13_1, $20_1) | 0) + Math_imul($15_1, $22_1) | 0) + Math_imul($17_1, $24_1) | 0) + Math_imul($19_1, $26_1) | 0) + Math_imul($21_1, $27_1) | 0) + 2048 | 0) >>> 12 | 0;

                                            $2_1 = $2_1 + -8 | 0;

                                            $3_1 = $3_1 + -8 | 0;

                                            $4_1 = $4_1 + -1 | 0;

                                            if ($4_1 & 65535 | 0) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                }



                                function $220($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var $2_1 = 0;

                                    $2_1 = $0_1 + 32768 | 0;

                                    label$1 : {

                                        if (($0_1 | 0) < (0 | 0)) {

                                            break label$1

                                        }

                                        if (($2_1 ^ $0_1 | 0 | 0) > (-1 | 0)) {

                                            break label$1

                                        }

                                        HEAP32[$1_1 >> 2] = 1;

                                        $2_1 = 2147483647;

                                    }

                                    return $2_1 >> 16 | 0 | 0;

                                }



                                function $221($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0;

                                    label$1 : {

                                        if ($1_1) {

                                            break label$1

                                        }

                                        return $0_1 << 16 >> 16 | 0;

                                    }

                                    label$2 : {

                                        if (($1_1 | 0) < (1 | 0)) {

                                            break label$2

                                        }

                                        return ($0_1 >> ((($1_1 | 0) < (15 | 0) ? $1_1 : 15) & 65535 | 0) | 0) << 16 >> 16 | 0;

                                    }

                                    label$3 : {

                                        $1_1 = (0 - $1_1 | 0) << 16 >> 16;

                                        $3_1 = ($1_1 | 0) < (15 | 0) ? $1_1 : 15;

                                        $1_1 = $0_1 << $3_1 | 0;

                                        if (($1_1 << 16 >> 16 >> $3_1 | 0 | 0) == ($0_1 | 0)) {

                                            break label$3

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $1_1 = ($0_1 | 0) > (0 | 0) ? 32767 : -32768;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $222($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0;

                                    $3_1 = 0;

                                    label$1 : {

                                        if (($1_1 | 0) > (15 | 0)) {

                                            break label$1

                                        }

                                        $3_1 = $221($0_1 | 0, $1_1 | 0, $2_1 | 0) | 0;

                                        if (($1_1 | 0) < (1 | 0)) {

                                            break label$1

                                        }

                                        $3_1 = $3_1 + (($0_1 >>> ($1_1 + -1 | 0) | 0) & 1 | 0) | 0;

                                    }

                                    return $3_1 << 16 >> 16 | 0;

                                }



                                function $223($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $4_1 = 0, $3_1 = 0, $5_1 = 0;

                                    label$1 : {

                                        if (($0_1 | 0) > (0 | 0)) {

                                            break label$1

                                        }

                                        HEAP16[$1_1 >> 1] = 0;

                                        return 0 | 0;

                                    }

                                    label$2 : {

                                        label$3 : {

                                            $3_1 = ($209($0_1 | 0) | 0) & -2 | 0;

                                            if (($3_1 | 0) < (1 | 0)) {

                                                break label$3

                                            }

                                            $4_1 = $3_1 & 65535 | 0;

                                            $5_1 = $0_1 << $4_1 | 0;

                                            $4_1 = ($5_1 >> $4_1 | 0 | 0) == ($0_1 | 0) ? $5_1 : 2147483647;

                                            break label$2;

                                        }

                                        $4_1 = 0;

                                        $5_1 = (0 - $3_1 | 0) << 16 >> 16;

                                        if (($5_1 | 0) > (30 | 0)) {

                                            break label$2

                                        }

                                        $4_1 = $0_1 >>> ($5_1 & 65535 | 0) | 0;

                                    }

                                    HEAP16[$1_1 >> 1] = $3_1;

                                    $0_1 = ($4_1 >>> 25 | 0) & 63 | 0;

                                    $0_1 = global$57 + (($0_1 >>> 0 > 15 >>> 0 ? $0_1 + -16 | 0 : $0_1) << 1 | 0) | 0;

                                    $3_1 = HEAP16[$0_1 >> 1] | 0;

                                    $1_1 = $3_1 << 16 | 0;

                                    $4_1 = Math_imul(($3_1 - (HEAPU16[($0_1 + 2 | 0) >> 1] | 0) | 0) << 16 >> 16, ($4_1 >>> 10 | 0) & 32767 | 0) << 1 | 0;

                                    $0_1 = $1_1 - $4_1 | 0;

                                    label$4 : {

                                        if (($4_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                            break label$4

                                        }

                                        if (($0_1 ^ $1_1 | 0 | 0) > (-1 | 0)) {

                                            break label$4

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $0_1 = ($3_1 >> 15 | 0) ^ 2147483647 | 0;

                                    }

                                    return $0_1 | 0;

                                }



                                function $224($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    label$1 : {

                                        $1_1 = $0_1 - $1_1 | 0;

                                        if (($1_1 + -32768 | 0) >>> 0 > -65537 >>> 0) {

                                            break label$1

                                        }

                                        HEAP32[$2_1 >> 2] = 1;

                                        $1_1 = ($1_1 | 0) > (32767 | 0) ? 32767 : -32768;

                                    }

                                    return $1_1 << 16 >> 16 | 0;

                                }



                                function $225($0_1, $1_1, $2_1, $3_1, $4_1, $5_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    $3_1 = $3_1 | 0;

                                    $4_1 = $4_1 | 0;

                                    $5_1 = $5_1 | 0;

                                    var $7_1 = 0, $6_1 = 0, $10_1 = 0, i64toi32_i32$2 = 0, i64toi32_i32$0 = 0,

                                        i64toi32_i32$1 = 0, $8_1 = 0, $29_1 = 0, $9_1 = 0, $12_1 = 0, $13_1 = 0,

                                        $14_1 = 0, $15_1 = 0, $16_1 = 0, $17_1 = 0, $18_1 = 0, $19_1 = 0, $20_1 = 0,

                                        $21_1 = 0, $22_1 = 0, $23_1 = 0, $24_1 = 0, $25_1 = 0, $26_1 = 0, $27_1 = 0,

                                        $28_1 = 0, $30_1 = 0, $31_1 = 0, $11_1 = 0, $40_1 = 0, $42_1 = 0, $43_1 = 0,

                                        $44_1 = 0, $46_1 = 0, $47_1 = 0, $41_1 = 0, $45_1 = 0, $335 = 0, $430 = 0,

                                        $440 = 0;

                                    $6_1 = global$0 - 48 | 0;

                                    $40_1 = $4_1 + 16 | 0;

                                    HEAP32[($6_1 + 16 | 0) >> 2] = HEAPU16[$40_1 >> 1] | 0 | ((HEAPU16[($40_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$2 = $4_1;

                                    i64toi32_i32$0 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$1 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $41_1 = i64toi32_i32$0;

                                    i64toi32_i32$0 = $6_1;

                                    HEAP32[$6_1 >> 2] = $41_1;

                                    HEAP32[($6_1 + 4 | 0) >> 2] = i64toi32_i32$1;

                                    i64toi32_i32$2 = i64toi32_i32$2 + 8 | 0;

                                    i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                    $45_1 = i64toi32_i32$1;

                                    i64toi32_i32$1 = $6_1;

                                    HEAP32[($6_1 + 8 | 0) >> 2] = $45_1;

                                    HEAP32[($6_1 + 12 | 0) >> 2] = i64toi32_i32$0;

                                    $7_1 = $6_1 + 18 | 0;

                                    $8_1 = $6_1 + 20 | 0;

                                    $9_1 = 5;

                                    $10_1 = HEAPU16[($6_1 + 18 | 0) >> 1] | 0;

                                    $6_1 = $2_1;

                                    label$1 : while (1) {

                                        $11_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                        $12_1 = HEAP16[$0_1 >> 1] | 0;

                                        $10_1 = $10_1 << 16 >> 16;

                                        $13_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                        $14_1 = HEAP16[($7_1 + -4 | 0) >> 1] | 0;

                                        $15_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                        $16_1 = HEAP16[($7_1 + -2 | 0) >> 1] | 0;

                                        $17_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                        $18_1 = HEAP16[($7_1 + -6 | 0) >> 1] | 0;

                                        $19_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                        $20_1 = HEAP16[($7_1 + -10 | 0) >> 1] | 0;

                                        $21_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                        $22_1 = HEAP16[($7_1 + -8 | 0) >> 1] | 0;

                                        $23_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                        $24_1 = HEAP16[($7_1 + -12 | 0) >> 1] | 0;

                                        $25_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                        $26_1 = HEAP16[($7_1 + -16 | 0) >> 1] | 0;

                                        $27_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                        $28_1 = HEAP16[($7_1 + -14 | 0) >> 1] | 0;

                                        $29_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                        $30_1 = HEAP16[($0_1 + 20 | 0) >> 1] | 0;

                                        $7_1 = Math_imul($12_1, HEAP16[$1_1 >> 1] | 0) - (((Math_imul($10_1, $13_1) + ((Math_imul($14_1, $15_1) + Math_imul($16_1, $17_1) | 0) + Math_imul($18_1, $19_1) | 0) | 0) + ((Math_imul($20_1, $21_1) + Math_imul($22_1, $23_1) | 0) + Math_imul($24_1, $25_1) | 0) | 0) + ((Math_imul($26_1, $27_1) + Math_imul($28_1, $29_1) | 0) + Math_imul(HEAP16[($7_1 + -18 | 0) >> 1] | 0, $30_1) | 0) | 0) | 0;

                                        $31_1 = $7_1 + 2048 | 0;

                                        $7_1 = ($7_1 + 134219776 | 0) >>> 0 < 268435455 >>> 0 ? $31_1 >>> 12 | 0 : ($31_1 | 0) > (134217727 | 0) ? 32767 : -32768;

                                        HEAP16[$8_1 >> 1] = $7_1;

                                        HEAP16[$6_1 >> 1] = $7_1;

                                        $7_1 = Math_imul($11_1, $12_1) - (((((Math_imul($15_1, $16_1) + Math_imul($10_1, $17_1) | 0) + Math_imul($19_1, $14_1) | 0) + ((Math_imul($21_1, $22_1) + Math_imul($18_1, $23_1) | 0) + Math_imul($25_1, $20_1) | 0) | 0) + ((Math_imul($27_1, $28_1) + Math_imul($24_1, $29_1) | 0) + Math_imul($30_1, $26_1) | 0) | 0) + Math_imul($13_1, $7_1 << 16 >> 16) | 0) | 0;

                                        $10_1 = $7_1 + 2048 | 0;

                                        $10_1 = ($7_1 + 134219776 | 0) >>> 0 < 268435455 >>> 0 ? $10_1 >>> 12 | 0 : ($10_1 | 0) > (134217727 | 0) ? 32767 : -32768;

                                        HEAP16[($8_1 + 2 | 0) >> 1] = $10_1;

                                        HEAP16[($6_1 + 2 | 0) >> 1] = $10_1;

                                        $6_1 = $6_1 + 4 | 0;

                                        $7_1 = $8_1 + 2 | 0;

                                        $1_1 = $1_1 + 4 | 0;

                                        $8_1 = $8_1 + 4 | 0;

                                        $9_1 = $9_1 + -1 | 0;

                                        if ($9_1 & 65535 | 0) {

                                            continue label$1

                                        }

                                        break label$1;

                                    }

                                    ;

                                    label$2 : {

                                        $31_1 = $3_1 + -10 | 0;

                                        $8_1 = $31_1 >>> 1 | 0;

                                        if (!($8_1 & 65535 | 0)) {

                                            break label$2

                                        }

                                        $7_1 = $2_1 + 18 | 0;

                                        $10_1 = HEAPU16[($2_1 + 18 | 0) >> 1] | 0;

                                        label$3 : while (1) {

                                            $9_1 = HEAP16[($1_1 + 2 | 0) >> 1] | 0;

                                            $11_1 = HEAP16[$0_1 >> 1] | 0;

                                            $10_1 = $10_1 << 16 >> 16;

                                            $12_1 = HEAP16[($0_1 + 2 | 0) >> 1] | 0;

                                            $13_1 = HEAP16[($7_1 + -4 | 0) >> 1] | 0;

                                            $14_1 = HEAP16[($0_1 + 6 | 0) >> 1] | 0;

                                            $15_1 = HEAP16[($7_1 + -2 | 0) >> 1] | 0;

                                            $16_1 = HEAP16[($0_1 + 4 | 0) >> 1] | 0;

                                            $17_1 = HEAP16[($7_1 + -6 | 0) >> 1] | 0;

                                            $18_1 = HEAP16[($0_1 + 8 | 0) >> 1] | 0;

                                            $19_1 = HEAP16[($7_1 + -10 | 0) >> 1] | 0;

                                            $20_1 = HEAP16[($0_1 + 12 | 0) >> 1] | 0;

                                            $21_1 = HEAP16[($7_1 + -8 | 0) >> 1] | 0;

                                            $22_1 = HEAP16[($0_1 + 10 | 0) >> 1] | 0;

                                            $23_1 = HEAP16[($7_1 + -12 | 0) >> 1] | 0;

                                            $24_1 = HEAP16[($0_1 + 14 | 0) >> 1] | 0;

                                            $25_1 = HEAP16[($7_1 + -16 | 0) >> 1] | 0;

                                            $26_1 = HEAP16[($0_1 + 18 | 0) >> 1] | 0;

                                            $27_1 = HEAP16[($7_1 + -14 | 0) >> 1] | 0;

                                            $28_1 = HEAP16[($0_1 + 16 | 0) >> 1] | 0;

                                            $335 = HEAP16[($7_1 + -18 | 0) >> 1] | 0;

                                            $7_1 = HEAP16[($0_1 + 20 | 0) >> 1] | 0;

                                            $29_1 = Math_imul($11_1, HEAP16[$1_1 >> 1] | 0) - (((Math_imul($10_1, $12_1) + ((Math_imul($13_1, $14_1) + Math_imul($15_1, $16_1) | 0) + Math_imul($17_1, $18_1) | 0) | 0) + ((Math_imul($19_1, $20_1) + Math_imul($21_1, $22_1) | 0) + Math_imul($23_1, $24_1) | 0) | 0) + ((Math_imul($25_1, $26_1) + Math_imul($27_1, $28_1) | 0) + Math_imul($335, $7_1) | 0) | 0) | 0;

                                            $30_1 = $29_1 + 2048 | 0;

                                            $29_1 = ($29_1 + 134219776 | 0) >>> 0 < 268435455 >>> 0 ? $30_1 >>> 12 | 0 : ($30_1 | 0) > (134217727 | 0) ? 32767 : -32768;

                                            HEAP16[$6_1 >> 1] = $29_1;

                                            $7_1 = Math_imul($9_1, $11_1) - (((((Math_imul($14_1, $15_1) + Math_imul($10_1, $16_1) | 0) + Math_imul($18_1, $13_1) | 0) + ((Math_imul($20_1, $21_1) + Math_imul($17_1, $22_1) | 0) + Math_imul($24_1, $19_1) | 0) | 0) + ((Math_imul($26_1, $27_1) + Math_imul($23_1, $28_1) | 0) + Math_imul($7_1, $25_1) | 0) | 0) + Math_imul($12_1, $29_1 << 16 >> 16) | 0) | 0;

                                            $10_1 = $7_1 + 2048 | 0;

                                            $10_1 = ($7_1 + 134219776 | 0) >>> 0 < 268435455 >>> 0 ? $10_1 >>> 12 | 0 : ($10_1 | 0) > (134217727 | 0) ? 32767 : -32768;

                                            HEAP16[($6_1 + 2 | 0) >> 1] = $10_1;

                                            $7_1 = $6_1 + 2 | 0;

                                            $1_1 = $1_1 + 4 | 0;

                                            $6_1 = $6_1 + 4 | 0;

                                            $8_1 = $8_1 + -1 | 0;

                                            if ($8_1 & 65535 | 0) {

                                                continue label$3

                                            }

                                            break label$3;

                                        }

                                        ;

                                    }

                                    label$4 : {

                                        if (!$5_1) {

                                            break label$4

                                        }

                                        $0_1 = $2_1 + ($31_1 << 1 | 0) | 0;

                                        i64toi32_i32$2 = $0_1;

                                        i64toi32_i32$0 = HEAPU16[$0_1 >> 1] | 0 | ((HEAPU16[($0_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$1 = HEAPU16[($0_1 + 4 | 0) >> 1] | 0 | ((HEAPU16[($0_1 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $430 = i64toi32_i32$0;

                                        i64toi32_i32$0 = $4_1;

                                        $42_1 = $430;

                                        HEAP16[i64toi32_i32$0 >> 1] = $42_1;

                                        HEAP16[(i64toi32_i32$0 + 2 | 0) >> 1] = $42_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$0 + 4 | 0) >> 1] = i64toi32_i32$1;

                                        HEAP16[(i64toi32_i32$0 + 6 | 0) >> 1] = i64toi32_i32$1 >>> 16 | 0;

                                        $43_1 = $0_1 + 16 | 0;

                                        $44_1 = i64toi32_i32$0 + 16 | 0;

                                        $46_1 = HEAPU16[$43_1 >> 1] | 0 | ((HEAPU16[($43_1 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        HEAP16[$44_1 >> 1] = $46_1;

                                        HEAP16[($44_1 + 2 | 0) >> 1] = $46_1 >>> 16 | 0;

                                        i64toi32_i32$2 = $0_1 + 8 | 0;

                                        i64toi32_i32$1 = HEAPU16[i64toi32_i32$2 >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 2 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        i64toi32_i32$0 = HEAPU16[(i64toi32_i32$2 + 4 | 0) >> 1] | 0 | ((HEAPU16[(i64toi32_i32$2 + 6 | 0) >> 1] | 0) << 16 | 0) | 0;

                                        $440 = i64toi32_i32$1;

                                        i64toi32_i32$1 = $4_1 + 8 | 0;

                                        $47_1 = $440;

                                        HEAP16[i64toi32_i32$1 >> 1] = $47_1;

                                        HEAP16[(i64toi32_i32$1 + 2 | 0) >> 1] = $47_1 >>> 16 | 0;

                                        HEAP16[(i64toi32_i32$1 + 4 | 0) >> 1] = i64toi32_i32$0;

                                        HEAP16[(i64toi32_i32$1 + 6 | 0) >> 1] = i64toi32_i32$0 >>> 16 | 0;

                                    }

                                }



                                function $226($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    HEAP16[$2_1 >> 1] = HEAPU16[$0_1 >> 1] | 0;

                                    HEAP16[($2_1 + 2 | 0) >> 1] = (Math_imul(HEAP16[$1_1 >> 1] | 0, HEAP16[($0_1 + 2 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 4 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 2 | 0) >> 1] | 0, HEAP16[($0_1 + 4 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 6 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 4 | 0) >> 1] | 0, HEAP16[($0_1 + 6 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 8 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 6 | 0) >> 1] | 0, HEAP16[($0_1 + 8 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 10 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 8 | 0) >> 1] | 0, HEAP16[($0_1 + 10 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 12 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 10 | 0) >> 1] | 0, HEAP16[($0_1 + 12 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 14 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 12 | 0) >> 1] | 0, HEAP16[($0_1 + 14 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 16 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 14 | 0) >> 1] | 0, HEAP16[($0_1 + 16 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 18 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 16 | 0) >> 1] | 0, HEAP16[($0_1 + 18 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                    HEAP16[($2_1 + 20 | 0) >> 1] = (Math_imul(HEAP16[($1_1 + 18 | 0) >> 1] | 0, HEAP16[($0_1 + 20 | 0) >> 1] | 0) + 16384 | 0) >>> 15 | 0;

                                }



                                function $227($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $4_1 = 0, $3_1 = 0, $5_1 = 0;

                                    label$1 : {

                                        if ($2_1 >>> 0 < 512 >>> 0) {

                                            break label$1

                                        }

                                        fimport$0($0_1 | 0, $1_1 | 0, $2_1 | 0);

                                        return $0_1 | 0;

                                    }

                                    $3_1 = $0_1 + $2_1 | 0;

                                    label$2 : {

                                        label$3 : {

                                            if (($1_1 ^ $0_1 | 0) & 3 | 0) {

                                                break label$3

                                            }

                                            label$4 : {

                                                label$5 : {

                                                    if ($0_1 & 3 | 0) {

                                                        break label$5

                                                    }

                                                    $2_1 = $0_1;

                                                    break label$4;

                                                }

                                                label$6 : {

                                                    if ($2_1) {

                                                        break label$6

                                                    }

                                                    $2_1 = $0_1;

                                                    break label$4;

                                                }

                                                $2_1 = $0_1;

                                                label$7 : while (1) {

                                                    HEAP8[$2_1 >> 0] = HEAPU8[$1_1 >> 0] | 0;

                                                    $1_1 = $1_1 + 1 | 0;

                                                    $2_1 = $2_1 + 1 | 0;

                                                    if (!($2_1 & 3 | 0)) {

                                                        break label$4

                                                    }

                                                    if ($2_1 >>> 0 < $3_1 >>> 0) {

                                                        continue label$7

                                                    }

                                                    break label$7;

                                                }

                                                ;

                                            }

                                            label$8 : {

                                                $4_1 = $3_1 & -4 | 0;

                                                if ($4_1 >>> 0 < 64 >>> 0) {

                                                    break label$8

                                                }

                                                $5_1 = $4_1 + -64 | 0;

                                                if ($2_1 >>> 0 > $5_1 >>> 0) {

                                                    break label$8

                                                }

                                                label$9 : while (1) {

                                                    HEAP32[$2_1 >> 2] = HEAP32[$1_1 >> 2] | 0;

                                                    HEAP32[($2_1 + 4 | 0) >> 2] = HEAP32[($1_1 + 4 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 8 | 0) >> 2] = HEAP32[($1_1 + 8 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 12 | 0) >> 2] = HEAP32[($1_1 + 12 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 16 | 0) >> 2] = HEAP32[($1_1 + 16 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 20 | 0) >> 2] = HEAP32[($1_1 + 20 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 24 | 0) >> 2] = HEAP32[($1_1 + 24 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 28 | 0) >> 2] = HEAP32[($1_1 + 28 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 32 | 0) >> 2] = HEAP32[($1_1 + 32 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 36 | 0) >> 2] = HEAP32[($1_1 + 36 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 40 | 0) >> 2] = HEAP32[($1_1 + 40 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 44 | 0) >> 2] = HEAP32[($1_1 + 44 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 48 | 0) >> 2] = HEAP32[($1_1 + 48 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 52 | 0) >> 2] = HEAP32[($1_1 + 52 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 56 | 0) >> 2] = HEAP32[($1_1 + 56 | 0) >> 2] | 0;

                                                    HEAP32[($2_1 + 60 | 0) >> 2] = HEAP32[($1_1 + 60 | 0) >> 2] | 0;

                                                    $1_1 = $1_1 + 64 | 0;

                                                    $2_1 = $2_1 + 64 | 0;

                                                    if ($2_1 >>> 0 <= $5_1 >>> 0) {

                                                        continue label$9

                                                    }

                                                    break label$9;

                                                }

                                                ;

                                            }

                                            if ($2_1 >>> 0 >= $4_1 >>> 0) {

                                                break label$2

                                            }

                                            label$10 : while (1) {

                                                HEAP32[$2_1 >> 2] = HEAP32[$1_1 >> 2] | 0;

                                                $1_1 = $1_1 + 4 | 0;

                                                $2_1 = $2_1 + 4 | 0;

                                                if ($2_1 >>> 0 < $4_1 >>> 0) {

                                                    continue label$10

                                                }

                                                break label$2;

                                            }

                                            ;

                                        }

                                        label$11 : {

                                            if ($3_1 >>> 0 >= 4 >>> 0) {

                                                break label$11

                                            }

                                            $2_1 = $0_1;

                                            break label$2;

                                        }

                                        label$12 : {

                                            $4_1 = $3_1 + -4 | 0;

                                            if ($4_1 >>> 0 >= $0_1 >>> 0) {

                                                break label$12

                                            }

                                            $2_1 = $0_1;

                                            break label$2;

                                        }

                                        $2_1 = $0_1;

                                        label$13 : while (1) {

                                            HEAP8[$2_1 >> 0] = HEAPU8[$1_1 >> 0] | 0;

                                            HEAP8[($2_1 + 1 | 0) >> 0] = HEAPU8[($1_1 + 1 | 0) >> 0] | 0;

                                            HEAP8[($2_1 + 2 | 0) >> 0] = HEAPU8[($1_1 + 2 | 0) >> 0] | 0;

                                            HEAP8[($2_1 + 3 | 0) >> 0] = HEAPU8[($1_1 + 3 | 0) >> 0] | 0;

                                            $1_1 = $1_1 + 4 | 0;

                                            $2_1 = $2_1 + 4 | 0;

                                            if ($2_1 >>> 0 <= $4_1 >>> 0) {

                                                continue label$13

                                            }

                                            break label$13;

                                        }

                                        ;

                                    }

                                    label$14 : {

                                        if ($2_1 >>> 0 >= $3_1 >>> 0) {

                                            break label$14

                                        }

                                        label$15 : while (1) {

                                            HEAP8[$2_1 >> 0] = HEAPU8[$1_1 >> 0] | 0;

                                            $1_1 = $1_1 + 1 | 0;

                                            $2_1 = $2_1 + 1 | 0;

                                            if (($2_1 | 0) != ($3_1 | 0)) {

                                                continue label$15

                                            }

                                            break label$15;

                                        }

                                        ;

                                    }

                                    return $0_1 | 0;

                                }



                                function $228($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, $4_1 = 0;

                                    label$1 : {

                                        if (($0_1 | 0) == ($1_1 | 0)) {

                                            break label$1

                                        }

                                        label$2 : {

                                            $3_1 = $0_1 + $2_1 | 0;

                                            if (($1_1 - $3_1 | 0) >>> 0 > (0 - ($2_1 << 1 | 0) | 0) >>> 0) {

                                                break label$2

                                            }

                                            return $227($0_1 | 0, $1_1 | 0, $2_1 | 0) | 0 | 0;

                                        }

                                        $4_1 = ($1_1 ^ $0_1 | 0) & 3 | 0;

                                        label$3 : {

                                            label$4 : {

                                                label$5 : {

                                                    if ($0_1 >>> 0 >= $1_1 >>> 0) {

                                                        break label$5

                                                    }

                                                    label$6 : {

                                                        if (!$4_1) {

                                                            break label$6

                                                        }

                                                        $3_1 = $0_1;

                                                        break label$3;

                                                    }

                                                    label$7 : {

                                                        if ($0_1 & 3 | 0) {

                                                            break label$7

                                                        }

                                                        $3_1 = $0_1;

                                                        break label$4;

                                                    }

                                                    $3_1 = $0_1;

                                                    label$8 : while (1) {

                                                        if (!$2_1) {

                                                            break label$1

                                                        }

                                                        HEAP8[$3_1 >> 0] = HEAPU8[$1_1 >> 0] | 0;

                                                        $1_1 = $1_1 + 1 | 0;

                                                        $2_1 = $2_1 + -1 | 0;

                                                        $3_1 = $3_1 + 1 | 0;

                                                        if (!($3_1 & 3 | 0)) {

                                                            break label$4

                                                        }

                                                        continue label$8;

                                                    }

                                                    ;

                                                }

                                                label$9 : {

                                                    if ($4_1) {

                                                        break label$9

                                                    }

                                                    label$10 : {

                                                        if (!($3_1 & 3 | 0)) {

                                                            break label$10

                                                        }

                                                        label$11 : while (1) {

                                                            if (!$2_1) {

                                                                break label$1

                                                            }

                                                            $2_1 = $2_1 + -1 | 0;

                                                            $3_1 = $0_1 + $2_1 | 0;

                                                            HEAP8[$3_1 >> 0] = HEAPU8[($1_1 + $2_1 | 0) >> 0] | 0;

                                                            if ($3_1 & 3 | 0) {

                                                                continue label$11

                                                            }

                                                            break label$11;

                                                        }

                                                        ;

                                                    }

                                                    if ($2_1 >>> 0 <= 3 >>> 0) {

                                                        break label$9

                                                    }

                                                    label$12 : while (1) {

                                                        $2_1 = $2_1 + -4 | 0;

                                                        HEAP32[($0_1 + $2_1 | 0) >> 2] = HEAP32[($1_1 + $2_1 | 0) >> 2] | 0;

                                                        if ($2_1 >>> 0 > 3 >>> 0) {

                                                            continue label$12

                                                        }

                                                        break label$12;

                                                    }

                                                    ;

                                                }

                                                if (!$2_1) {

                                                    break label$1

                                                }

                                                label$13 : while (1) {

                                                    $2_1 = $2_1 + -1 | 0;

                                                    HEAP8[($0_1 + $2_1 | 0) >> 0] = HEAPU8[($1_1 + $2_1 | 0) >> 0] | 0;

                                                    if ($2_1) {

                                                        continue label$13

                                                    }

                                                    break label$1;

                                                }

                                                ;

                                            }

                                            if ($2_1 >>> 0 <= 3 >>> 0) {

                                                break label$3

                                            }

                                            label$14 : while (1) {

                                                HEAP32[$3_1 >> 2] = HEAP32[$1_1 >> 2] | 0;

                                                $1_1 = $1_1 + 4 | 0;

                                                $3_1 = $3_1 + 4 | 0;

                                                $2_1 = $2_1 + -4 | 0;

                                                if ($2_1 >>> 0 > 3 >>> 0) {

                                                    continue label$14

                                                }

                                                break label$14;

                                            }

                                            ;

                                        }

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        label$15 : while (1) {

                                            HEAP8[$3_1 >> 0] = HEAPU8[$1_1 >> 0] | 0;

                                            $3_1 = $3_1 + 1 | 0;

                                            $1_1 = $1_1 + 1 | 0;

                                            $2_1 = $2_1 + -1 | 0;

                                            if ($2_1) {

                                                continue label$15

                                            }

                                            break label$15;

                                        }

                                        ;

                                    }

                                    return $0_1 | 0;

                                }



                                function $229($0_1, $1_1, $2_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    $2_1 = $2_1 | 0;

                                    var $3_1 = 0, i64toi32_i32$0 = 0, $4_1 = 0, i64toi32_i32$1 = 0, $6_1 = 0, $5_1 = 0,

                                        $6$hi = 0;

                                    label$1 : {

                                        if (!$2_1) {

                                            break label$1

                                        }

                                        HEAP8[$0_1 >> 0] = $1_1;

                                        $3_1 = $2_1 + $0_1 | 0;

                                        HEAP8[($3_1 + -1 | 0) >> 0] = $1_1;

                                        if ($2_1 >>> 0 < 3 >>> 0) {

                                            break label$1

                                        }

                                        HEAP8[($0_1 + 2 | 0) >> 0] = $1_1;

                                        HEAP8[($0_1 + 1 | 0) >> 0] = $1_1;

                                        HEAP8[($3_1 + -3 | 0) >> 0] = $1_1;

                                        HEAP8[($3_1 + -2 | 0) >> 0] = $1_1;

                                        if ($2_1 >>> 0 < 7 >>> 0) {

                                            break label$1

                                        }

                                        HEAP8[($0_1 + 3 | 0) >> 0] = $1_1;

                                        HEAP8[($3_1 + -4 | 0) >> 0] = $1_1;

                                        if ($2_1 >>> 0 < 9 >>> 0) {

                                            break label$1

                                        }

                                        $4_1 = (0 - $0_1 | 0) & 3 | 0;

                                        $3_1 = $0_1 + $4_1 | 0;

                                        $1_1 = Math_imul($1_1 & 255 | 0, 16843009);

                                        HEAP32[$3_1 >> 2] = $1_1;

                                        $4_1 = ($2_1 - $4_1 | 0) & -4 | 0;

                                        $2_1 = $3_1 + $4_1 | 0;

                                        HEAP32[($2_1 + -4 | 0) >> 2] = $1_1;

                                        if ($4_1 >>> 0 < 9 >>> 0) {

                                            break label$1

                                        }

                                        HEAP32[($3_1 + 8 | 0) >> 2] = $1_1;

                                        HEAP32[($3_1 + 4 | 0) >> 2] = $1_1;

                                        HEAP32[($2_1 + -8 | 0) >> 2] = $1_1;

                                        HEAP32[($2_1 + -12 | 0) >> 2] = $1_1;

                                        if ($4_1 >>> 0 < 25 >>> 0) {

                                            break label$1

                                        }

                                        HEAP32[($3_1 + 24 | 0) >> 2] = $1_1;

                                        HEAP32[($3_1 + 20 | 0) >> 2] = $1_1;

                                        HEAP32[($3_1 + 16 | 0) >> 2] = $1_1;

                                        HEAP32[($3_1 + 12 | 0) >> 2] = $1_1;

                                        HEAP32[($2_1 + -16 | 0) >> 2] = $1_1;

                                        HEAP32[($2_1 + -20 | 0) >> 2] = $1_1;

                                        HEAP32[($2_1 + -24 | 0) >> 2] = $1_1;

                                        HEAP32[($2_1 + -28 | 0) >> 2] = $1_1;

                                        $5_1 = $3_1 & 4 | 0 | 24 | 0;

                                        $2_1 = $4_1 - $5_1 | 0;

                                        if ($2_1 >>> 0 < 32 >>> 0) {

                                            break label$1

                                        }

                                        i64toi32_i32$0 = 0;

                                        i64toi32_i32$1 = 1;

                                        i64toi32_i32$1 = __wasm_i64_mul($1_1 | 0, i64toi32_i32$0 | 0, 1 | 0, i64toi32_i32$1 | 0) | 0;

                                        i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;

                                        $6_1 = i64toi32_i32$1;

                                        $6$hi = i64toi32_i32$0;

                                        $1_1 = $3_1 + $5_1 | 0;

                                        label$2 : while (1) {

                                            i64toi32_i32$0 = $6$hi;

                                            i64toi32_i32$1 = $1_1;

                                            HEAP32[($1_1 + 24 | 0) >> 2] = $6_1;

                                            HEAP32[($1_1 + 28 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $1_1;

                                            HEAP32[($1_1 + 16 | 0) >> 2] = $6_1;

                                            HEAP32[($1_1 + 20 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $1_1;

                                            HEAP32[($1_1 + 8 | 0) >> 2] = $6_1;

                                            HEAP32[($1_1 + 12 | 0) >> 2] = i64toi32_i32$0;

                                            i64toi32_i32$1 = $1_1;

                                            HEAP32[$1_1 >> 2] = $6_1;

                                            HEAP32[($1_1 + 4 | 0) >> 2] = i64toi32_i32$0;

                                            $1_1 = $1_1 + 32 | 0;

                                            $2_1 = $2_1 + -32 | 0;

                                            if ($2_1 >>> 0 > 31 >>> 0) {

                                                continue label$2

                                            }

                                            break label$2;

                                        }

                                        ;

                                    }

                                    return $0_1 | 0;

                                }



                                function $230() {

                                    return 99424 | 0;

                                }



                                function $231($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $4_1 = 0, $5_1 = 0, $7_1 = 0, $8_1 = 0, $3_1 = 0, $2_1 = 0, $11_1 = 0, $6_1 = 0,

                                        i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $9_1 = 0, i64toi32_i32$2 = 0, $10_1 = 0,

                                        $1_1 = 0, $79_1 = 0, $191_1 = 0, $1104 = 0, $1106 = 0, wasm2js_i32$0 = 0,

                                        wasm2js_i32$1 = 0;

                                    $1_1 = global$0 - 16 | 0;

                                    global$0 = $1_1;

                                    label$1 : {

                                        label$2 : {

                                            label$3 : {

                                                label$4 : {

                                                    label$5 : {

                                                        label$6 : {

                                                            label$7 : {

                                                                label$8 : {

                                                                    label$9 : {

                                                                        label$10 : {

                                                                            if ($0_1 >>> 0 > 244 >>> 0) {

                                                                                break label$10

                                                                            }

                                                                            label$11 : {

                                                                                $2_1 = HEAP32[(0 + 99428 | 0) >> 2] | 0;

                                                                                $3_1 = $0_1 >>> 0 < 11 >>> 0 ? 16 : ($0_1 + 11 | 0) & -8 | 0;

                                                                                $4_1 = $3_1 >>> 3 | 0;

                                                                                $0_1 = $2_1 >>> $4_1 | 0;

                                                                                if (!($0_1 & 3 | 0)) {

                                                                                    break label$11

                                                                                }

                                                                                label$12 : {

                                                                                    label$13 : {

                                                                                        $5_1 = (($0_1 ^ -1 | 0) & 1 | 0) + $4_1 | 0;

                                                                                        $4_1 = $5_1 << 3 | 0;

                                                                                        $0_1 = $4_1 + 99468 | 0;

                                                                                        $4_1 = HEAP32[($4_1 + 99476 | 0) >> 2] | 0;

                                                                                        $3_1 = HEAP32[($4_1 + 8 | 0) >> 2] | 0;

                                                                                        if (($0_1 | 0) != ($3_1 | 0)) {

                                                                                            break label$13

                                                                                        }

                                                                                        (wasm2js_i32$0 = 0, wasm2js_i32$1 = $2_1 & (__wasm_rotl_i32(-2 | 0, $5_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99428 | 0) >> 2] = wasm2js_i32$1;

                                                                                        break label$12;

                                                                                    }

                                                                                    HEAP32[($3_1 + 12 | 0) >> 2] = $0_1;

                                                                                    HEAP32[($0_1 + 8 | 0) >> 2] = $3_1;

                                                                                }

                                                                                $0_1 = $4_1 + 8 | 0;

                                                                                $5_1 = $5_1 << 3 | 0;

                                                                                HEAP32[($4_1 + 4 | 0) >> 2] = $5_1 | 3 | 0;

                                                                                $4_1 = $4_1 + $5_1 | 0;

                                                                                HEAP32[($4_1 + 4 | 0) >> 2] = HEAP32[($4_1 + 4 | 0) >> 2] | 0 | 1 | 0;

                                                                                break label$1;

                                                                            }

                                                                            $6_1 = HEAP32[(0 + 99436 | 0) >> 2] | 0;

                                                                            if ($3_1 >>> 0 <= $6_1 >>> 0) {

                                                                                break label$9

                                                                            }

                                                                            label$14 : {

                                                                                if (!$0_1) {

                                                                                    break label$14

                                                                                }

                                                                                label$15 : {

                                                                                    label$16 : {

                                                                                        $79_1 = $0_1 << $4_1 | 0;

                                                                                        $0_1 = 2 << $4_1 | 0;

                                                                                        $0_1 = $79_1 & ($0_1 | (0 - $0_1 | 0) | 0) | 0;

                                                                                        $4_1 = __wasm_ctz_i32($0_1 & (0 - $0_1 | 0) | 0 | 0) | 0;

                                                                                        $0_1 = $4_1 << 3 | 0;

                                                                                        $5_1 = $0_1 + 99468 | 0;

                                                                                        $0_1 = HEAP32[($0_1 + 99476 | 0) >> 2] | 0;

                                                                                        $7_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                                                        if (($5_1 | 0) != ($7_1 | 0)) {

                                                                                            break label$16

                                                                                        }

                                                                                        $2_1 = $2_1 & (__wasm_rotl_i32(-2 | 0, $4_1 | 0) | 0) | 0;

                                                                                        HEAP32[(0 + 99428 | 0) >> 2] = $2_1;

                                                                                        break label$15;

                                                                                    }

                                                                                    HEAP32[($7_1 + 12 | 0) >> 2] = $5_1;

                                                                                    HEAP32[($5_1 + 8 | 0) >> 2] = $7_1;

                                                                                }

                                                                                HEAP32[($0_1 + 4 | 0) >> 2] = $3_1 | 3 | 0;

                                                                                $7_1 = $0_1 + $3_1 | 0;

                                                                                $4_1 = $4_1 << 3 | 0;

                                                                                $5_1 = $4_1 - $3_1 | 0;

                                                                                HEAP32[($7_1 + 4 | 0) >> 2] = $5_1 | 1 | 0;

                                                                                HEAP32[($0_1 + $4_1 | 0) >> 2] = $5_1;

                                                                                label$17 : {

                                                                                    if (!$6_1) {

                                                                                        break label$17

                                                                                    }

                                                                                    $3_1 = ($6_1 & -8 | 0) + 99468 | 0;

                                                                                    $4_1 = HEAP32[(0 + 99448 | 0) >> 2] | 0;

                                                                                    label$18 : {

                                                                                        label$19 : {

                                                                                            $8_1 = 1 << ($6_1 >>> 3 | 0) | 0;

                                                                                            if ($2_1 & $8_1 | 0) {

                                                                                                break label$19

                                                                                            }

                                                                                            HEAP32[(0 + 99428 | 0) >> 2] = $2_1 | $8_1 | 0;

                                                                                            $8_1 = $3_1;

                                                                                            break label$18;

                                                                                        }

                                                                                        $8_1 = HEAP32[($3_1 + 8 | 0) >> 2] | 0;

                                                                                    }

                                                                                    HEAP32[($3_1 + 8 | 0) >> 2] = $4_1;

                                                                                    HEAP32[($8_1 + 12 | 0) >> 2] = $4_1;

                                                                                    HEAP32[($4_1 + 12 | 0) >> 2] = $3_1;

                                                                                    HEAP32[($4_1 + 8 | 0) >> 2] = $8_1;

                                                                                }

                                                                                $0_1 = $0_1 + 8 | 0;

                                                                                HEAP32[(0 + 99448 | 0) >> 2] = $7_1;

                                                                                HEAP32[(0 + 99436 | 0) >> 2] = $5_1;

                                                                                break label$1;

                                                                            }

                                                                            $9_1 = HEAP32[(0 + 99432 | 0) >> 2] | 0;

                                                                            if (!$9_1) {

                                                                                break label$9

                                                                            }

                                                                            $7_1 = HEAP32[(((__wasm_ctz_i32($9_1 & (0 - $9_1 | 0) | 0 | 0) | 0) << 2 | 0) + 99732 | 0) >> 2] | 0;

                                                                            $4_1 = ((HEAP32[($7_1 + 4 | 0) >> 2] | 0) & -8 | 0) - $3_1 | 0;

                                                                            $5_1 = $7_1;

                                                                            label$20 : {

                                                                                label$21 : while (1) {

                                                                                    label$22 : {

                                                                                        $0_1 = HEAP32[($5_1 + 16 | 0) >> 2] | 0;

                                                                                        if ($0_1) {

                                                                                            break label$22

                                                                                        }

                                                                                        $0_1 = HEAP32[($5_1 + 20 | 0) >> 2] | 0;

                                                                                        if (!$0_1) {

                                                                                            break label$20

                                                                                        }

                                                                                    }

                                                                                    $5_1 = ((HEAP32[($0_1 + 4 | 0) >> 2] | 0) & -8 | 0) - $3_1 | 0;

                                                                                    $191_1 = $5_1;

                                                                                    $5_1 = $5_1 >>> 0 < $4_1 >>> 0;

                                                                                    $4_1 = $5_1 ? $191_1 : $4_1;

                                                                                    $7_1 = $5_1 ? $0_1 : $7_1;

                                                                                    $5_1 = $0_1;

                                                                                    continue label$21;

                                                                                }

                                                                                ;

                                                                            }

                                                                            $10_1 = HEAP32[($7_1 + 24 | 0) >> 2] | 0;

                                                                            label$23 : {

                                                                                $8_1 = HEAP32[($7_1 + 12 | 0) >> 2] | 0;

                                                                                if (($8_1 | 0) == ($7_1 | 0)) {

                                                                                    break label$23

                                                                                }

                                                                                $0_1 = HEAP32[($7_1 + 8 | 0) >> 2] | 0;

                                                                                HEAP32[(0 + 99444 | 0) >> 2] | 0;

                                                                                HEAP32[($0_1 + 12 | 0) >> 2] = $8_1;

                                                                                HEAP32[($8_1 + 8 | 0) >> 2] = $0_1;

                                                                                break label$2;

                                                                            }

                                                                            label$24 : {

                                                                                $5_1 = $7_1 + 20 | 0;

                                                                                $0_1 = HEAP32[$5_1 >> 2] | 0;

                                                                                if ($0_1) {

                                                                                    break label$24

                                                                                }

                                                                                $0_1 = HEAP32[($7_1 + 16 | 0) >> 2] | 0;

                                                                                if (!$0_1) {

                                                                                    break label$8

                                                                                }

                                                                                $5_1 = $7_1 + 16 | 0;

                                                                            }

                                                                            label$25 : while (1) {

                                                                                $11_1 = $5_1;

                                                                                $8_1 = $0_1;

                                                                                $5_1 = $0_1 + 20 | 0;

                                                                                $0_1 = HEAP32[$5_1 >> 2] | 0;

                                                                                if ($0_1) {

                                                                                    continue label$25

                                                                                }

                                                                                $5_1 = $8_1 + 16 | 0;

                                                                                $0_1 = HEAP32[($8_1 + 16 | 0) >> 2] | 0;

                                                                                if ($0_1) {

                                                                                    continue label$25

                                                                                }

                                                                                break label$25;

                                                                            }

                                                                            ;

                                                                            HEAP32[$11_1 >> 2] = 0;

                                                                            break label$2;

                                                                        }

                                                                        $3_1 = -1;

                                                                        if ($0_1 >>> 0 > -65 >>> 0) {

                                                                            break label$9

                                                                        }

                                                                        $0_1 = $0_1 + 11 | 0;

                                                                        $3_1 = $0_1 & -8 | 0;

                                                                        $6_1 = HEAP32[(0 + 99432 | 0) >> 2] | 0;

                                                                        if (!$6_1) {

                                                                            break label$9

                                                                        }

                                                                        $11_1 = 0;

                                                                        label$26 : {

                                                                            if ($3_1 >>> 0 < 256 >>> 0) {

                                                                                break label$26

                                                                            }

                                                                            $11_1 = 31;

                                                                            if ($3_1 >>> 0 > 16777215 >>> 0) {

                                                                                break label$26

                                                                            }

                                                                            $0_1 = Math_clz32($0_1 >>> 8 | 0);

                                                                            $11_1 = ((($3_1 >>> (38 - $0_1 | 0) | 0) & 1 | 0) - ($0_1 << 1 | 0) | 0) + 62 | 0;

                                                                        }

                                                                        $4_1 = 0 - $3_1 | 0;

                                                                        label$27 : {

                                                                            label$28 : {

                                                                                label$29 : {

                                                                                    label$30 : {

                                                                                        $5_1 = HEAP32[(($11_1 << 2 | 0) + 99732 | 0) >> 2] | 0;

                                                                                        if ($5_1) {

                                                                                            break label$30

                                                                                        }

                                                                                        $0_1 = 0;

                                                                                        $8_1 = 0;

                                                                                        break label$29;

                                                                                    }

                                                                                    $0_1 = 0;

                                                                                    $7_1 = $3_1 << (($11_1 | 0) == (31 | 0) ? 0 : 25 - ($11_1 >>> 1 | 0) | 0) | 0;

                                                                                    $8_1 = 0;

                                                                                    label$31 : while (1) {

                                                                                        label$32 : {

                                                                                            $2_1 = ((HEAP32[($5_1 + 4 | 0) >> 2] | 0) & -8 | 0) - $3_1 | 0;

                                                                                            if ($2_1 >>> 0 >= $4_1 >>> 0) {

                                                                                                break label$32

                                                                                            }

                                                                                            $4_1 = $2_1;

                                                                                            $8_1 = $5_1;

                                                                                            if ($4_1) {

                                                                                                break label$32

                                                                                            }

                                                                                            $4_1 = 0;

                                                                                            $8_1 = $5_1;

                                                                                            $0_1 = $5_1;

                                                                                            break label$28;

                                                                                        }

                                                                                        $2_1 = HEAP32[($5_1 + 20 | 0) >> 2] | 0;

                                                                                        $5_1 = HEAP32[(($5_1 + (($7_1 >>> 29 | 0) & 4 | 0) | 0) + 16 | 0) >> 2] | 0;

                                                                                        $0_1 = $2_1 ? (($2_1 | 0) == ($5_1 | 0) ? $0_1 : $2_1) : $0_1;

                                                                                        $7_1 = $7_1 << 1 | 0;

                                                                                        if ($5_1) {

                                                                                            continue label$31

                                                                                        }

                                                                                        break label$31;

                                                                                    }

                                                                                    ;

                                                                                }

                                                                                label$33 : {

                                                                                    if ($0_1 | $8_1 | 0) {

                                                                                        break label$33

                                                                                    }

                                                                                    $8_1 = 0;

                                                                                    $0_1 = 2 << $11_1 | 0;

                                                                                    $0_1 = ($0_1 | (0 - $0_1 | 0) | 0) & $6_1 | 0;

                                                                                    if (!$0_1) {

                                                                                        break label$9

                                                                                    }

                                                                                    $0_1 = HEAP32[(((__wasm_ctz_i32($0_1 & (0 - $0_1 | 0) | 0 | 0) | 0) << 2 | 0) + 99732 | 0) >> 2] | 0;

                                                                                }

                                                                                if (!$0_1) {

                                                                                    break label$27

                                                                                }

                                                                            }

                                                                            label$34 : while (1) {

                                                                                $2_1 = ((HEAP32[($0_1 + 4 | 0) >> 2] | 0) & -8 | 0) - $3_1 | 0;

                                                                                $7_1 = $2_1 >>> 0 < $4_1 >>> 0;

                                                                                label$35 : {

                                                                                    $5_1 = HEAP32[($0_1 + 16 | 0) >> 2] | 0;

                                                                                    if ($5_1) {

                                                                                        break label$35

                                                                                    }

                                                                                    $5_1 = HEAP32[($0_1 + 20 | 0) >> 2] | 0;

                                                                                }

                                                                                $4_1 = $7_1 ? $2_1 : $4_1;

                                                                                $8_1 = $7_1 ? $0_1 : $8_1;

                                                                                $0_1 = $5_1;

                                                                                if ($0_1) {

                                                                                    continue label$34

                                                                                }

                                                                                break label$34;

                                                                            }

                                                                            ;

                                                                        }

                                                                        if (!$8_1) {

                                                                            break label$9

                                                                        }

                                                                        if ($4_1 >>> 0 >= ((HEAP32[(0 + 99436 | 0) >> 2] | 0) - $3_1 | 0) >>> 0) {

                                                                            break label$9

                                                                        }

                                                                        $11_1 = HEAP32[($8_1 + 24 | 0) >> 2] | 0;

                                                                        label$36 : {

                                                                            $7_1 = HEAP32[($8_1 + 12 | 0) >> 2] | 0;

                                                                            if (($7_1 | 0) == ($8_1 | 0)) {

                                                                                break label$36

                                                                            }

                                                                            $0_1 = HEAP32[($8_1 + 8 | 0) >> 2] | 0;

                                                                            HEAP32[(0 + 99444 | 0) >> 2] | 0;

                                                                            HEAP32[($0_1 + 12 | 0) >> 2] = $7_1;

                                                                            HEAP32[($7_1 + 8 | 0) >> 2] = $0_1;

                                                                            break label$3;

                                                                        }

                                                                        label$37 : {

                                                                            $5_1 = $8_1 + 20 | 0;

                                                                            $0_1 = HEAP32[$5_1 >> 2] | 0;

                                                                            if ($0_1) {

                                                                                break label$37

                                                                            }

                                                                            $0_1 = HEAP32[($8_1 + 16 | 0) >> 2] | 0;

                                                                            if (!$0_1) {

                                                                                break label$7

                                                                            }

                                                                            $5_1 = $8_1 + 16 | 0;

                                                                        }

                                                                        label$38 : while (1) {

                                                                            $2_1 = $5_1;

                                                                            $7_1 = $0_1;

                                                                            $5_1 = $0_1 + 20 | 0;

                                                                            $0_1 = HEAP32[$5_1 >> 2] | 0;

                                                                            if ($0_1) {

                                                                                continue label$38

                                                                            }

                                                                            $5_1 = $7_1 + 16 | 0;

                                                                            $0_1 = HEAP32[($7_1 + 16 | 0) >> 2] | 0;

                                                                            if ($0_1) {

                                                                                continue label$38

                                                                            }

                                                                            break label$38;

                                                                        }

                                                                        ;

                                                                        HEAP32[$2_1 >> 2] = 0;

                                                                        break label$3;

                                                                    }

                                                                    label$39 : {

                                                                        $0_1 = HEAP32[(0 + 99436 | 0) >> 2] | 0;

                                                                        if ($0_1 >>> 0 < $3_1 >>> 0) {

                                                                            break label$39

                                                                        }

                                                                        $4_1 = HEAP32[(0 + 99448 | 0) >> 2] | 0;

                                                                        label$40 : {

                                                                            label$41 : {

                                                                                $5_1 = $0_1 - $3_1 | 0;

                                                                                if ($5_1 >>> 0 < 16 >>> 0) {

                                                                                    break label$41

                                                                                }

                                                                                $7_1 = $4_1 + $3_1 | 0;

                                                                                HEAP32[($7_1 + 4 | 0) >> 2] = $5_1 | 1 | 0;

                                                                                HEAP32[($4_1 + $0_1 | 0) >> 2] = $5_1;

                                                                                HEAP32[($4_1 + 4 | 0) >> 2] = $3_1 | 3 | 0;

                                                                                break label$40;

                                                                            }

                                                                            HEAP32[($4_1 + 4 | 0) >> 2] = $0_1 | 3 | 0;

                                                                            $0_1 = $4_1 + $0_1 | 0;

                                                                            HEAP32[($0_1 + 4 | 0) >> 2] = HEAP32[($0_1 + 4 | 0) >> 2] | 0 | 1 | 0;

                                                                            $7_1 = 0;

                                                                            $5_1 = 0;

                                                                        }

                                                                        HEAP32[(0 + 99436 | 0) >> 2] = $5_1;

                                                                        HEAP32[(0 + 99448 | 0) >> 2] = $7_1;

                                                                        $0_1 = $4_1 + 8 | 0;

                                                                        break label$1;

                                                                    }

                                                                    label$42 : {

                                                                        $7_1 = HEAP32[(0 + 99440 | 0) >> 2] | 0;

                                                                        if ($7_1 >>> 0 <= $3_1 >>> 0) {

                                                                            break label$42

                                                                        }

                                                                        $4_1 = $7_1 - $3_1 | 0;

                                                                        HEAP32[(0 + 99440 | 0) >> 2] = $4_1;

                                                                        $0_1 = HEAP32[(0 + 99452 | 0) >> 2] | 0;

                                                                        $5_1 = $0_1 + $3_1 | 0;

                                                                        HEAP32[(0 + 99452 | 0) >> 2] = $5_1;

                                                                        HEAP32[($5_1 + 4 | 0) >> 2] = $4_1 | 1 | 0;

                                                                        HEAP32[($0_1 + 4 | 0) >> 2] = $3_1 | 3 | 0;

                                                                        $0_1 = $0_1 + 8 | 0;

                                                                        break label$1;

                                                                    }

                                                                    label$43 : {

                                                                        label$44 : {

                                                                            if (!(HEAP32[(0 + 99900 | 0) >> 2] | 0)) {

                                                                                break label$44

                                                                            }

                                                                            $4_1 = HEAP32[(0 + 99908 | 0) >> 2] | 0;

                                                                            break label$43;

                                                                        }

                                                                        i64toi32_i32$1 = 0;

                                                                        i64toi32_i32$0 = -1;

                                                                        HEAP32[(i64toi32_i32$1 + 99912 | 0) >> 2] = -1;

                                                                        HEAP32[(i64toi32_i32$1 + 99916 | 0) >> 2] = i64toi32_i32$0;

                                                                        i64toi32_i32$1 = 0;

                                                                        i64toi32_i32$0 = 4096;

                                                                        HEAP32[(i64toi32_i32$1 + 99904 | 0) >> 2] = 4096;

                                                                        HEAP32[(i64toi32_i32$1 + 99908 | 0) >> 2] = i64toi32_i32$0;

                                                                        HEAP32[(0 + 99900 | 0) >> 2] = (($1_1 + 12 | 0) & -16 | 0) ^ 1431655768 | 0;

                                                                        HEAP32[(0 + 99920 | 0) >> 2] = 0;

                                                                        HEAP32[(0 + 99872 | 0) >> 2] = 0;

                                                                        $4_1 = 4096;

                                                                    }

                                                                    $0_1 = 0;

                                                                    $6_1 = $3_1 + 47 | 0;

                                                                    $2_1 = $4_1 + $6_1 | 0;

                                                                    $11_1 = 0 - $4_1 | 0;

                                                                    $8_1 = $2_1 & $11_1 | 0;

                                                                    if ($8_1 >>> 0 <= $3_1 >>> 0) {

                                                                        break label$1

                                                                    }

                                                                    $0_1 = 0;

                                                                    label$45 : {

                                                                        $4_1 = HEAP32[(0 + 99868 | 0) >> 2] | 0;

                                                                        if (!$4_1) {

                                                                            break label$45

                                                                        }

                                                                        $5_1 = HEAP32[(0 + 99860 | 0) >> 2] | 0;

                                                                        $9_1 = $5_1 + $8_1 | 0;

                                                                        if ($9_1 >>> 0 <= $5_1 >>> 0) {

                                                                            break label$1

                                                                        }

                                                                        if ($9_1 >>> 0 > $4_1 >>> 0) {

                                                                            break label$1

                                                                        }

                                                                    }

                                                                    label$46 : {

                                                                        label$47 : {

                                                                            if ((HEAPU8[(0 + 99872 | 0) >> 0] | 0) & 4 | 0) {

                                                                                break label$47

                                                                            }

                                                                            label$48 : {

                                                                                label$49 : {

                                                                                    label$50 : {

                                                                                        label$51 : {

                                                                                            label$52 : {

                                                                                                $4_1 = HEAP32[(0 + 99452 | 0) >> 2] | 0;

                                                                                                if (!$4_1) {

                                                                                                    break label$52

                                                                                                }

                                                                                                $0_1 = 99876;

                                                                                                label$53 : while (1) {

                                                                                                    label$54 : {

                                                                                                        $5_1 = HEAP32[$0_1 >> 2] | 0;

                                                                                                        if ($5_1 >>> 0 > $4_1 >>> 0) {

                                                                                                            break label$54

                                                                                                        }

                                                                                                        if (($5_1 + (HEAP32[($0_1 + 4 | 0) >> 2] | 0) | 0) >>> 0 > $4_1 >>> 0) {

                                                                                                            break label$51

                                                                                                        }

                                                                                                    }

                                                                                                    $0_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                                                                    if ($0_1) {

                                                                                                        continue label$53

                                                                                                    }

                                                                                                    break label$53;

                                                                                                }

                                                                                                ;

                                                                                            }

                                                                                            $7_1 = $235(0 | 0) | 0;

                                                                                            if (($7_1 | 0) == (-1 | 0)) {

                                                                                                break label$48

                                                                                            }

                                                                                            $2_1 = $8_1;

                                                                                            label$55 : {

                                                                                                $0_1 = HEAP32[(0 + 99904 | 0) >> 2] | 0;

                                                                                                $4_1 = $0_1 + -1 | 0;

                                                                                                if (!($4_1 & $7_1 | 0)) {

                                                                                                    break label$55

                                                                                                }

                                                                                                $2_1 = ($8_1 - $7_1 | 0) + (($4_1 + $7_1 | 0) & (0 - $0_1 | 0) | 0) | 0;

                                                                                            }

                                                                                            if ($2_1 >>> 0 <= $3_1 >>> 0) {

                                                                                                break label$48

                                                                                            }

                                                                                            label$56 : {

                                                                                                $0_1 = HEAP32[(0 + 99868 | 0) >> 2] | 0;

                                                                                                if (!$0_1) {

                                                                                                    break label$56

                                                                                                }

                                                                                                $4_1 = HEAP32[(0 + 99860 | 0) >> 2] | 0;

                                                                                                $5_1 = $4_1 + $2_1 | 0;

                                                                                                if ($5_1 >>> 0 <= $4_1 >>> 0) {

                                                                                                    break label$48

                                                                                                }

                                                                                                if ($5_1 >>> 0 > $0_1 >>> 0) {

                                                                                                    break label$48

                                                                                                }

                                                                                            }

                                                                                            $0_1 = $235($2_1 | 0) | 0;

                                                                                            if (($0_1 | 0) != ($7_1 | 0)) {

                                                                                                break label$50

                                                                                            }

                                                                                            break label$46;

                                                                                        }

                                                                                        $2_1 = ($2_1 - $7_1 | 0) & $11_1 | 0;

                                                                                        $7_1 = $235($2_1 | 0) | 0;

                                                                                        if (($7_1 | 0) == ((HEAP32[$0_1 >> 2] | 0) + (HEAP32[($0_1 + 4 | 0) >> 2] | 0) | 0 | 0)) {

                                                                                            break label$49

                                                                                        }

                                                                                        $0_1 = $7_1;

                                                                                    }

                                                                                    if (($0_1 | 0) == (-1 | 0)) {

                                                                                        break label$48

                                                                                    }

                                                                                    label$57 : {

                                                                                        if (($3_1 + 48 | 0) >>> 0 > $2_1 >>> 0) {

                                                                                            break label$57

                                                                                        }

                                                                                        $7_1 = $0_1;

                                                                                        break label$46;

                                                                                    }

                                                                                    $4_1 = HEAP32[(0 + 99908 | 0) >> 2] | 0;

                                                                                    $4_1 = (($6_1 - $2_1 | 0) + $4_1 | 0) & (0 - $4_1 | 0) | 0;

                                                                                    if (($235($4_1 | 0) | 0 | 0) == (-1 | 0)) {

                                                                                        break label$48

                                                                                    }

                                                                                    $2_1 = $4_1 + $2_1 | 0;

                                                                                    $7_1 = $0_1;

                                                                                    break label$46;

                                                                                }

                                                                                if (($7_1 | 0) != (-1 | 0)) {

                                                                                    break label$46

                                                                                }

                                                                            }

                                                                            HEAP32[(0 + 99872 | 0) >> 2] = HEAP32[(0 + 99872 | 0) >> 2] | 0 | 4 | 0;

                                                                        }

                                                                        $7_1 = $235($8_1 | 0) | 0;

                                                                        $0_1 = $235(0 | 0) | 0;

                                                                        if (($7_1 | 0) == (-1 | 0)) {

                                                                            break label$4

                                                                        }

                                                                        if (($0_1 | 0) == (-1 | 0)) {

                                                                            break label$4

                                                                        }

                                                                        if ($7_1 >>> 0 >= $0_1 >>> 0) {

                                                                            break label$4

                                                                        }

                                                                        $2_1 = $0_1 - $7_1 | 0;

                                                                        if ($2_1 >>> 0 <= ($3_1 + 40 | 0) >>> 0) {

                                                                            break label$4

                                                                        }

                                                                    }

                                                                    $0_1 = (HEAP32[(0 + 99860 | 0) >> 2] | 0) + $2_1 | 0;

                                                                    HEAP32[(0 + 99860 | 0) >> 2] = $0_1;

                                                                    label$58 : {

                                                                        if ($0_1 >>> 0 <= (HEAP32[(0 + 99864 | 0) >> 2] | 0) >>> 0) {

                                                                            break label$58

                                                                        }

                                                                        HEAP32[(0 + 99864 | 0) >> 2] = $0_1;

                                                                    }

                                                                    label$59 : {

                                                                        label$60 : {

                                                                            $4_1 = HEAP32[(0 + 99452 | 0) >> 2] | 0;

                                                                            if (!$4_1) {

                                                                                break label$60

                                                                            }

                                                                            $0_1 = 99876;

                                                                            label$61 : while (1) {

                                                                                $5_1 = HEAP32[$0_1 >> 2] | 0;

                                                                                $8_1 = HEAP32[($0_1 + 4 | 0) >> 2] | 0;

                                                                                if (($7_1 | 0) == ($5_1 + $8_1 | 0 | 0)) {

                                                                                    break label$59

                                                                                }

                                                                                $0_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                                                if ($0_1) {

                                                                                    continue label$61

                                                                                }

                                                                                break label$6;

                                                                            }

                                                                            ;

                                                                        }

                                                                        label$62 : {

                                                                            label$63 : {

                                                                                $0_1 = HEAP32[(0 + 99444 | 0) >> 2] | 0;

                                                                                if (!$0_1) {

                                                                                    break label$63

                                                                                }

                                                                                if ($7_1 >>> 0 >= $0_1 >>> 0) {

                                                                                    break label$62

                                                                                }

                                                                            }

                                                                            HEAP32[(0 + 99444 | 0) >> 2] = $7_1;

                                                                        }

                                                                        $0_1 = 0;

                                                                        HEAP32[(0 + 99880 | 0) >> 2] = $2_1;

                                                                        HEAP32[(0 + 99876 | 0) >> 2] = $7_1;

                                                                        HEAP32[(0 + 99460 | 0) >> 2] = -1;

                                                                        HEAP32[(0 + 99464 | 0) >> 2] = HEAP32[(0 + 99900 | 0) >> 2] | 0;

                                                                        HEAP32[(0 + 99888 | 0) >> 2] = 0;

                                                                        label$64 : while (1) {

                                                                            $4_1 = $0_1 << 3 | 0;

                                                                            $5_1 = $4_1 + 99468 | 0;

                                                                            HEAP32[($4_1 + 99476 | 0) >> 2] = $5_1;

                                                                            HEAP32[($4_1 + 99480 | 0) >> 2] = $5_1;

                                                                            $0_1 = $0_1 + 1 | 0;

                                                                            if (($0_1 | 0) != (32 | 0)) {

                                                                                continue label$64

                                                                            }

                                                                            break label$64;

                                                                        }

                                                                        ;

                                                                        $0_1 = $2_1 + -40 | 0;

                                                                        $4_1 = ($7_1 + 8 | 0) & 7 | 0 ? (-8 - $7_1 | 0) & 7 | 0 : 0;

                                                                        $5_1 = $0_1 - $4_1 | 0;

                                                                        HEAP32[(0 + 99440 | 0) >> 2] = $5_1;

                                                                        $4_1 = $7_1 + $4_1 | 0;

                                                                        HEAP32[(0 + 99452 | 0) >> 2] = $4_1;

                                                                        HEAP32[($4_1 + 4 | 0) >> 2] = $5_1 | 1 | 0;

                                                                        HEAP32[(($7_1 + $0_1 | 0) + 4 | 0) >> 2] = 40;

                                                                        HEAP32[(0 + 99456 | 0) >> 2] = HEAP32[(0 + 99916 | 0) >> 2] | 0;

                                                                        break label$5;

                                                                    }

                                                                    if ((HEAPU8[($0_1 + 12 | 0) >> 0] | 0) & 8 | 0) {

                                                                        break label$6

                                                                    }

                                                                    if ($4_1 >>> 0 < $5_1 >>> 0) {

                                                                        break label$6

                                                                    }

                                                                    if ($4_1 >>> 0 >= $7_1 >>> 0) {

                                                                        break label$6

                                                                    }

                                                                    HEAP32[($0_1 + 4 | 0) >> 2] = $8_1 + $2_1 | 0;

                                                                    $0_1 = ($4_1 + 8 | 0) & 7 | 0 ? (-8 - $4_1 | 0) & 7 | 0 : 0;

                                                                    $5_1 = $4_1 + $0_1 | 0;

                                                                    HEAP32[(0 + 99452 | 0) >> 2] = $5_1;

                                                                    $7_1 = (HEAP32[(0 + 99440 | 0) >> 2] | 0) + $2_1 | 0;

                                                                    $0_1 = $7_1 - $0_1 | 0;

                                                                    HEAP32[(0 + 99440 | 0) >> 2] = $0_1;

                                                                    HEAP32[($5_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                                                    HEAP32[(($4_1 + $7_1 | 0) + 4 | 0) >> 2] = 40;

                                                                    HEAP32[(0 + 99456 | 0) >> 2] = HEAP32[(0 + 99916 | 0) >> 2] | 0;

                                                                    break label$5;

                                                                }

                                                                $8_1 = 0;

                                                                break label$2;

                                                            }

                                                            $7_1 = 0;

                                                            break label$3;

                                                        }

                                                        label$65 : {

                                                            $8_1 = HEAP32[(0 + 99444 | 0) >> 2] | 0;

                                                            if ($7_1 >>> 0 >= $8_1 >>> 0) {

                                                                break label$65

                                                            }

                                                            HEAP32[(0 + 99444 | 0) >> 2] = $7_1;

                                                            $8_1 = $7_1;

                                                        }

                                                        $5_1 = $7_1 + $2_1 | 0;

                                                        $0_1 = 99876;

                                                        label$66 : {

                                                            label$67 : {

                                                                label$68 : {

                                                                    label$69 : {

                                                                        label$70 : {

                                                                            label$71 : {

                                                                                label$72 : {

                                                                                    label$73 : while (1) {

                                                                                        if ((HEAP32[$0_1 >> 2] | 0 | 0) == ($5_1 | 0)) {

                                                                                            break label$72

                                                                                        }

                                                                                        $0_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                                                        if ($0_1) {

                                                                                            continue label$73

                                                                                        }

                                                                                        break label$71;

                                                                                    }

                                                                                    ;

                                                                                }

                                                                                if (!((HEAPU8[($0_1 + 12 | 0) >> 0] | 0) & 8 | 0)) {

                                                                                    break label$70

                                                                                }

                                                                            }

                                                                            $0_1 = 99876;

                                                                            label$74 : while (1) {

                                                                                label$75 : {

                                                                                    $5_1 = HEAP32[$0_1 >> 2] | 0;

                                                                                    if ($5_1 >>> 0 > $4_1 >>> 0) {

                                                                                        break label$75

                                                                                    }

                                                                                    $5_1 = $5_1 + (HEAP32[($0_1 + 4 | 0) >> 2] | 0) | 0;

                                                                                    if ($5_1 >>> 0 > $4_1 >>> 0) {

                                                                                        break label$69

                                                                                    }

                                                                                }

                                                                                $0_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                                                continue label$74;

                                                                            }

                                                                            ;

                                                                        }

                                                                        HEAP32[$0_1 >> 2] = $7_1;

                                                                        HEAP32[($0_1 + 4 | 0) >> 2] = (HEAP32[($0_1 + 4 | 0) >> 2] | 0) + $2_1 | 0;

                                                                        $11_1 = $7_1 + (($7_1 + 8 | 0) & 7 | 0 ? (-8 - $7_1 | 0) & 7 | 0 : 0) | 0;

                                                                        HEAP32[($11_1 + 4 | 0) >> 2] = $3_1 | 3 | 0;

                                                                        $2_1 = $5_1 + (($5_1 + 8 | 0) & 7 | 0 ? (-8 - $5_1 | 0) & 7 | 0 : 0) | 0;

                                                                        $3_1 = $11_1 + $3_1 | 0;

                                                                        $0_1 = $2_1 - $3_1 | 0;

                                                                        label$76 : {

                                                                            if (($2_1 | 0) != ($4_1 | 0)) {

                                                                                break label$76

                                                                            }

                                                                            HEAP32[(0 + 99452 | 0) >> 2] = $3_1;

                                                                            $0_1 = (HEAP32[(0 + 99440 | 0) >> 2] | 0) + $0_1 | 0;

                                                                            HEAP32[(0 + 99440 | 0) >> 2] = $0_1;

                                                                            HEAP32[($3_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                                                            break label$67;

                                                                        }

                                                                        label$77 : {

                                                                            if (($2_1 | 0) != (HEAP32[(0 + 99448 | 0) >> 2] | 0 | 0)) {

                                                                                break label$77

                                                                            }

                                                                            HEAP32[(0 + 99448 | 0) >> 2] = $3_1;

                                                                            $0_1 = (HEAP32[(0 + 99436 | 0) >> 2] | 0) + $0_1 | 0;

                                                                            HEAP32[(0 + 99436 | 0) >> 2] = $0_1;

                                                                            HEAP32[($3_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                                                            HEAP32[($3_1 + $0_1 | 0) >> 2] = $0_1;

                                                                            break label$67;

                                                                        }

                                                                        label$78 : {

                                                                            $4_1 = HEAP32[($2_1 + 4 | 0) >> 2] | 0;

                                                                            if (($4_1 & 3 | 0 | 0) != (1 | 0)) {

                                                                                break label$78

                                                                            }

                                                                            $6_1 = $4_1 & -8 | 0;

                                                                            label$79 : {

                                                                                label$80 : {

                                                                                    if ($4_1 >>> 0 > 255 >>> 0) {

                                                                                        break label$80

                                                                                    }

                                                                                    $5_1 = HEAP32[($2_1 + 8 | 0) >> 2] | 0;

                                                                                    $8_1 = $4_1 >>> 3 | 0;

                                                                                    $7_1 = ($8_1 << 3 | 0) + 99468 | 0;

                                                                                    label$81 : {

                                                                                        $4_1 = HEAP32[($2_1 + 12 | 0) >> 2] | 0;

                                                                                        if (($4_1 | 0) != ($5_1 | 0)) {

                                                                                            break label$81

                                                                                        }

                                                                                        (wasm2js_i32$0 = 0, wasm2js_i32$1 = (HEAP32[(0 + 99428 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $8_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99428 | 0) >> 2] = wasm2js_i32$1;

                                                                                        break label$79;

                                                                                    }

                                                                                    HEAP32[($5_1 + 12 | 0) >> 2] = $4_1;

                                                                                    HEAP32[($4_1 + 8 | 0) >> 2] = $5_1;

                                                                                    break label$79;

                                                                                }

                                                                                $9_1 = HEAP32[($2_1 + 24 | 0) >> 2] | 0;

                                                                                label$82 : {

                                                                                    label$83 : {

                                                                                        $7_1 = HEAP32[($2_1 + 12 | 0) >> 2] | 0;

                                                                                        if (($7_1 | 0) == ($2_1 | 0)) {

                                                                                            break label$83

                                                                                        }

                                                                                        $4_1 = HEAP32[($2_1 + 8 | 0) >> 2] | 0;

                                                                                        HEAP32[($4_1 + 12 | 0) >> 2] = $7_1;

                                                                                        HEAP32[($7_1 + 8 | 0) >> 2] = $4_1;

                                                                                        break label$82;

                                                                                    }

                                                                                    label$84 : {

                                                                                        $4_1 = $2_1 + 20 | 0;

                                                                                        $5_1 = HEAP32[$4_1 >> 2] | 0;

                                                                                        if ($5_1) {

                                                                                            break label$84

                                                                                        }

                                                                                        $4_1 = $2_1 + 16 | 0;

                                                                                        $5_1 = HEAP32[$4_1 >> 2] | 0;

                                                                                        if ($5_1) {

                                                                                            break label$84

                                                                                        }

                                                                                        $7_1 = 0;

                                                                                        break label$82;

                                                                                    }

                                                                                    label$85 : while (1) {

                                                                                        $8_1 = $4_1;

                                                                                        $7_1 = $5_1;

                                                                                        $4_1 = $7_1 + 20 | 0;

                                                                                        $5_1 = HEAP32[$4_1 >> 2] | 0;

                                                                                        if ($5_1) {

                                                                                            continue label$85

                                                                                        }

                                                                                        $4_1 = $7_1 + 16 | 0;

                                                                                        $5_1 = HEAP32[($7_1 + 16 | 0) >> 2] | 0;

                                                                                        if ($5_1) {

                                                                                            continue label$85

                                                                                        }

                                                                                        break label$85;

                                                                                    }

                                                                                    ;

                                                                                    HEAP32[$8_1 >> 2] = 0;

                                                                                }

                                                                                if (!$9_1) {

                                                                                    break label$79

                                                                                }

                                                                                label$86 : {

                                                                                    label$87 : {

                                                                                        $5_1 = HEAP32[($2_1 + 28 | 0) >> 2] | 0;

                                                                                        $4_1 = ($5_1 << 2 | 0) + 99732 | 0;

                                                                                        if (($2_1 | 0) != (HEAP32[$4_1 >> 2] | 0 | 0)) {

                                                                                            break label$87

                                                                                        }

                                                                                        HEAP32[$4_1 >> 2] = $7_1;

                                                                                        if ($7_1) {

                                                                                            break label$86

                                                                                        }

                                                                                        (wasm2js_i32$0 = 0, wasm2js_i32$1 = (HEAP32[(0 + 99432 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $5_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99432 | 0) >> 2] = wasm2js_i32$1;

                                                                                        break label$79;

                                                                                    }

                                                                                    HEAP32[($9_1 + ((HEAP32[($9_1 + 16 | 0) >> 2] | 0 | 0) == ($2_1 | 0) ? 16 : 20) | 0) >> 2] = $7_1;

                                                                                    if (!$7_1) {

                                                                                        break label$79

                                                                                    }

                                                                                }

                                                                                HEAP32[($7_1 + 24 | 0) >> 2] = $9_1;

                                                                                label$88 : {

                                                                                    $4_1 = HEAP32[($2_1 + 16 | 0) >> 2] | 0;

                                                                                    if (!$4_1) {

                                                                                        break label$88

                                                                                    }

                                                                                    HEAP32[($7_1 + 16 | 0) >> 2] = $4_1;

                                                                                    HEAP32[($4_1 + 24 | 0) >> 2] = $7_1;

                                                                                }

                                                                                $4_1 = HEAP32[($2_1 + 20 | 0) >> 2] | 0;

                                                                                if (!$4_1) {

                                                                                    break label$79

                                                                                }

                                                                                HEAP32[($7_1 + 20 | 0) >> 2] = $4_1;

                                                                                HEAP32[($4_1 + 24 | 0) >> 2] = $7_1;

                                                                            }

                                                                            $0_1 = $6_1 + $0_1 | 0;

                                                                            $2_1 = $2_1 + $6_1 | 0;

                                                                            $4_1 = HEAP32[($2_1 + 4 | 0) >> 2] | 0;

                                                                        }

                                                                        HEAP32[($2_1 + 4 | 0) >> 2] = $4_1 & -2 | 0;

                                                                        HEAP32[($3_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                                                        HEAP32[($3_1 + $0_1 | 0) >> 2] = $0_1;

                                                                        label$89 : {

                                                                            if ($0_1 >>> 0 > 255 >>> 0) {

                                                                                break label$89

                                                                            }

                                                                            $4_1 = ($0_1 & -8 | 0) + 99468 | 0;

                                                                            label$90 : {

                                                                                label$91 : {

                                                                                    $5_1 = HEAP32[(0 + 99428 | 0) >> 2] | 0;

                                                                                    $0_1 = 1 << ($0_1 >>> 3 | 0) | 0;

                                                                                    if ($5_1 & $0_1 | 0) {

                                                                                        break label$91

                                                                                    }

                                                                                    HEAP32[(0 + 99428 | 0) >> 2] = $5_1 | $0_1 | 0;

                                                                                    $0_1 = $4_1;

                                                                                    break label$90;

                                                                                }

                                                                                $0_1 = HEAP32[($4_1 + 8 | 0) >> 2] | 0;

                                                                            }

                                                                            HEAP32[($4_1 + 8 | 0) >> 2] = $3_1;

                                                                            HEAP32[($0_1 + 12 | 0) >> 2] = $3_1;

                                                                            HEAP32[($3_1 + 12 | 0) >> 2] = $4_1;

                                                                            HEAP32[($3_1 + 8 | 0) >> 2] = $0_1;

                                                                            break label$67;

                                                                        }

                                                                        $4_1 = 31;

                                                                        label$92 : {

                                                                            if ($0_1 >>> 0 > 16777215 >>> 0) {

                                                                                break label$92

                                                                            }

                                                                            $4_1 = Math_clz32($0_1 >>> 8 | 0);

                                                                            $4_1 = ((($0_1 >>> (38 - $4_1 | 0) | 0) & 1 | 0) - ($4_1 << 1 | 0) | 0) + 62 | 0;

                                                                        }

                                                                        HEAP32[($3_1 + 28 | 0) >> 2] = $4_1;

                                                                        i64toi32_i32$1 = $3_1;

                                                                        i64toi32_i32$0 = 0;

                                                                        HEAP32[($3_1 + 16 | 0) >> 2] = 0;

                                                                        HEAP32[($3_1 + 20 | 0) >> 2] = i64toi32_i32$0;

                                                                        $5_1 = ($4_1 << 2 | 0) + 99732 | 0;

                                                                        label$93 : {

                                                                            label$94 : {

                                                                                $7_1 = HEAP32[(0 + 99432 | 0) >> 2] | 0;

                                                                                $8_1 = 1 << $4_1 | 0;

                                                                                if ($7_1 & $8_1 | 0) {

                                                                                    break label$94

                                                                                }

                                                                                HEAP32[(0 + 99432 | 0) >> 2] = $7_1 | $8_1 | 0;

                                                                                HEAP32[$5_1 >> 2] = $3_1;

                                                                                HEAP32[($3_1 + 24 | 0) >> 2] = $5_1;

                                                                                break label$93;

                                                                            }

                                                                            $4_1 = $0_1 << (($4_1 | 0) == (31 | 0) ? 0 : 25 - ($4_1 >>> 1 | 0) | 0) | 0;

                                                                            $7_1 = HEAP32[$5_1 >> 2] | 0;

                                                                            label$95 : while (1) {

                                                                                $5_1 = $7_1;

                                                                                if (((HEAP32[($7_1 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($0_1 | 0)) {

                                                                                    break label$68

                                                                                }

                                                                                $7_1 = $4_1 >>> 29 | 0;

                                                                                $4_1 = $4_1 << 1 | 0;

                                                                                $8_1 = ($5_1 + ($7_1 & 4 | 0) | 0) + 16 | 0;

                                                                                $7_1 = HEAP32[$8_1 >> 2] | 0;

                                                                                if ($7_1) {

                                                                                    continue label$95

                                                                                }

                                                                                break label$95;

                                                                            }

                                                                            ;

                                                                            HEAP32[$8_1 >> 2] = $3_1;

                                                                            HEAP32[($3_1 + 24 | 0) >> 2] = $5_1;

                                                                        }

                                                                        HEAP32[($3_1 + 12 | 0) >> 2] = $3_1;

                                                                        HEAP32[($3_1 + 8 | 0) >> 2] = $3_1;

                                                                        break label$67;

                                                                    }

                                                                    $0_1 = $2_1 + -40 | 0;

                                                                    $8_1 = ($7_1 + 8 | 0) & 7 | 0 ? (-8 - $7_1 | 0) & 7 | 0 : 0;

                                                                    $11_1 = $0_1 - $8_1 | 0;

                                                                    HEAP32[(0 + 99440 | 0) >> 2] = $11_1;

                                                                    $8_1 = $7_1 + $8_1 | 0;

                                                                    HEAP32[(0 + 99452 | 0) >> 2] = $8_1;

                                                                    HEAP32[($8_1 + 4 | 0) >> 2] = $11_1 | 1 | 0;

                                                                    HEAP32[(($7_1 + $0_1 | 0) + 4 | 0) >> 2] = 40;

                                                                    HEAP32[(0 + 99456 | 0) >> 2] = HEAP32[(0 + 99916 | 0) >> 2] | 0;

                                                                    $0_1 = ($5_1 + (($5_1 + -39 | 0) & 7 | 0 ? (39 - $5_1 | 0) & 7 | 0 : 0) | 0) + -47 | 0;

                                                                    $8_1 = $0_1 >>> 0 < ($4_1 + 16 | 0) >>> 0 ? $4_1 : $0_1;

                                                                    HEAP32[($8_1 + 4 | 0) >> 2] = 27;

                                                                    i64toi32_i32$2 = 0;

                                                                    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 99884 | 0) >> 2] | 0;

                                                                    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 99888 | 0) >> 2] | 0;

                                                                    $1104 = i64toi32_i32$0;

                                                                    i64toi32_i32$0 = $8_1 + 16 | 0;

                                                                    HEAP32[i64toi32_i32$0 >> 2] = $1104;

                                                                    HEAP32[(i64toi32_i32$0 + 4 | 0) >> 2] = i64toi32_i32$1;

                                                                    i64toi32_i32$2 = 0;

                                                                    i64toi32_i32$1 = HEAP32[(i64toi32_i32$2 + 99876 | 0) >> 2] | 0;

                                                                    i64toi32_i32$0 = HEAP32[(i64toi32_i32$2 + 99880 | 0) >> 2] | 0;

                                                                    $1106 = i64toi32_i32$1;

                                                                    i64toi32_i32$1 = $8_1;

                                                                    HEAP32[($8_1 + 8 | 0) >> 2] = $1106;

                                                                    HEAP32[($8_1 + 12 | 0) >> 2] = i64toi32_i32$0;

                                                                    HEAP32[(0 + 99884 | 0) >> 2] = $8_1 + 8 | 0;

                                                                    HEAP32[(0 + 99880 | 0) >> 2] = $2_1;

                                                                    HEAP32[(0 + 99876 | 0) >> 2] = $7_1;

                                                                    HEAP32[(0 + 99888 | 0) >> 2] = 0;

                                                                    $0_1 = $8_1 + 24 | 0;

                                                                    label$96 : while (1) {

                                                                        HEAP32[($0_1 + 4 | 0) >> 2] = 7;

                                                                        $7_1 = $0_1 + 8 | 0;

                                                                        $0_1 = $0_1 + 4 | 0;

                                                                        if ($7_1 >>> 0 < $5_1 >>> 0) {

                                                                            continue label$96

                                                                        }

                                                                        break label$96;

                                                                    }

                                                                    ;

                                                                    if (($8_1 | 0) == ($4_1 | 0)) {

                                                                        break label$5

                                                                    }

                                                                    HEAP32[($8_1 + 4 | 0) >> 2] = (HEAP32[($8_1 + 4 | 0) >> 2] | 0) & -2 | 0;

                                                                    $7_1 = $8_1 - $4_1 | 0;

                                                                    HEAP32[($4_1 + 4 | 0) >> 2] = $7_1 | 1 | 0;

                                                                    HEAP32[$8_1 >> 2] = $7_1;

                                                                    label$97 : {

                                                                        if ($7_1 >>> 0 > 255 >>> 0) {

                                                                            break label$97

                                                                        }

                                                                        $0_1 = ($7_1 & -8 | 0) + 99468 | 0;

                                                                        label$98 : {

                                                                            label$99 : {

                                                                                $5_1 = HEAP32[(0 + 99428 | 0) >> 2] | 0;

                                                                                $7_1 = 1 << ($7_1 >>> 3 | 0) | 0;

                                                                                if ($5_1 & $7_1 | 0) {

                                                                                    break label$99

                                                                                }

                                                                                HEAP32[(0 + 99428 | 0) >> 2] = $5_1 | $7_1 | 0;

                                                                                $5_1 = $0_1;

                                                                                break label$98;

                                                                            }

                                                                            $5_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                                        }

                                                                        HEAP32[($0_1 + 8 | 0) >> 2] = $4_1;

                                                                        HEAP32[($5_1 + 12 | 0) >> 2] = $4_1;

                                                                        HEAP32[($4_1 + 12 | 0) >> 2] = $0_1;

                                                                        HEAP32[($4_1 + 8 | 0) >> 2] = $5_1;

                                                                        break label$5;

                                                                    }

                                                                    $0_1 = 31;

                                                                    label$100 : {

                                                                        if ($7_1 >>> 0 > 16777215 >>> 0) {

                                                                            break label$100

                                                                        }

                                                                        $0_1 = Math_clz32($7_1 >>> 8 | 0);

                                                                        $0_1 = ((($7_1 >>> (38 - $0_1 | 0) | 0) & 1 | 0) - ($0_1 << 1 | 0) | 0) + 62 | 0;

                                                                    }

                                                                    HEAP32[($4_1 + 28 | 0) >> 2] = $0_1;

                                                                    i64toi32_i32$1 = $4_1;

                                                                    i64toi32_i32$0 = 0;

                                                                    HEAP32[($4_1 + 16 | 0) >> 2] = 0;

                                                                    HEAP32[($4_1 + 20 | 0) >> 2] = i64toi32_i32$0;

                                                                    $5_1 = ($0_1 << 2 | 0) + 99732 | 0;

                                                                    label$101 : {

                                                                        label$102 : {

                                                                            $8_1 = HEAP32[(0 + 99432 | 0) >> 2] | 0;

                                                                            $2_1 = 1 << $0_1 | 0;

                                                                            if ($8_1 & $2_1 | 0) {

                                                                                break label$102

                                                                            }

                                                                            HEAP32[(0 + 99432 | 0) >> 2] = $8_1 | $2_1 | 0;

                                                                            HEAP32[$5_1 >> 2] = $4_1;

                                                                            HEAP32[($4_1 + 24 | 0) >> 2] = $5_1;

                                                                            break label$101;

                                                                        }

                                                                        $0_1 = $7_1 << (($0_1 | 0) == (31 | 0) ? 0 : 25 - ($0_1 >>> 1 | 0) | 0) | 0;

                                                                        $8_1 = HEAP32[$5_1 >> 2] | 0;

                                                                        label$103 : while (1) {

                                                                            $5_1 = $8_1;

                                                                            if (((HEAP32[($5_1 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($7_1 | 0)) {

                                                                                break label$66

                                                                            }

                                                                            $8_1 = $0_1 >>> 29 | 0;

                                                                            $0_1 = $0_1 << 1 | 0;

                                                                            $2_1 = ($5_1 + ($8_1 & 4 | 0) | 0) + 16 | 0;

                                                                            $8_1 = HEAP32[$2_1 >> 2] | 0;

                                                                            if ($8_1) {

                                                                                continue label$103

                                                                            }

                                                                            break label$103;

                                                                        }

                                                                        ;

                                                                        HEAP32[$2_1 >> 2] = $4_1;

                                                                        HEAP32[($4_1 + 24 | 0) >> 2] = $5_1;

                                                                    }

                                                                    HEAP32[($4_1 + 12 | 0) >> 2] = $4_1;

                                                                    HEAP32[($4_1 + 8 | 0) >> 2] = $4_1;

                                                                    break label$5;

                                                                }

                                                                $0_1 = HEAP32[($5_1 + 8 | 0) >> 2] | 0;

                                                                HEAP32[($0_1 + 12 | 0) >> 2] = $3_1;

                                                                HEAP32[($5_1 + 8 | 0) >> 2] = $3_1;

                                                                HEAP32[($3_1 + 24 | 0) >> 2] = 0;

                                                                HEAP32[($3_1 + 12 | 0) >> 2] = $5_1;

                                                                HEAP32[($3_1 + 8 | 0) >> 2] = $0_1;

                                                            }

                                                            $0_1 = $11_1 + 8 | 0;

                                                            break label$1;

                                                        }

                                                        $0_1 = HEAP32[($5_1 + 8 | 0) >> 2] | 0;

                                                        HEAP32[($0_1 + 12 | 0) >> 2] = $4_1;

                                                        HEAP32[($5_1 + 8 | 0) >> 2] = $4_1;

                                                        HEAP32[($4_1 + 24 | 0) >> 2] = 0;

                                                        HEAP32[($4_1 + 12 | 0) >> 2] = $5_1;

                                                        HEAP32[($4_1 + 8 | 0) >> 2] = $0_1;

                                                    }

                                                    $0_1 = HEAP32[(0 + 99440 | 0) >> 2] | 0;

                                                    if ($0_1 >>> 0 <= $3_1 >>> 0) {

                                                        break label$4

                                                    }

                                                    $4_1 = $0_1 - $3_1 | 0;

                                                    HEAP32[(0 + 99440 | 0) >> 2] = $4_1;

                                                    $0_1 = HEAP32[(0 + 99452 | 0) >> 2] | 0;

                                                    $5_1 = $0_1 + $3_1 | 0;

                                                    HEAP32[(0 + 99452 | 0) >> 2] = $5_1;

                                                    HEAP32[($5_1 + 4 | 0) >> 2] = $4_1 | 1 | 0;

                                                    HEAP32[($0_1 + 4 | 0) >> 2] = $3_1 | 3 | 0;

                                                    $0_1 = $0_1 + 8 | 0;

                                                    break label$1;

                                                }

                                                (wasm2js_i32$0 = $230() | 0, wasm2js_i32$1 = 48), HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;

                                                $0_1 = 0;

                                                break label$1;

                                            }

                                            label$104 : {

                                                if (!$11_1) {

                                                    break label$104

                                                }

                                                label$105 : {

                                                    label$106 : {

                                                        $5_1 = HEAP32[($8_1 + 28 | 0) >> 2] | 0;

                                                        $0_1 = ($5_1 << 2 | 0) + 99732 | 0;

                                                        if (($8_1 | 0) != (HEAP32[$0_1 >> 2] | 0 | 0)) {

                                                            break label$106

                                                        }

                                                        HEAP32[$0_1 >> 2] = $7_1;

                                                        if ($7_1) {

                                                            break label$105

                                                        }

                                                        $6_1 = $6_1 & (__wasm_rotl_i32(-2 | 0, $5_1 | 0) | 0) | 0;

                                                        HEAP32[(0 + 99432 | 0) >> 2] = $6_1;

                                                        break label$104;

                                                    }

                                                    HEAP32[($11_1 + ((HEAP32[($11_1 + 16 | 0) >> 2] | 0 | 0) == ($8_1 | 0) ? 16 : 20) | 0) >> 2] = $7_1;

                                                    if (!$7_1) {

                                                        break label$104

                                                    }

                                                }

                                                HEAP32[($7_1 + 24 | 0) >> 2] = $11_1;

                                                label$107 : {

                                                    $0_1 = HEAP32[($8_1 + 16 | 0) >> 2] | 0;

                                                    if (!$0_1) {

                                                        break label$107

                                                    }

                                                    HEAP32[($7_1 + 16 | 0) >> 2] = $0_1;

                                                    HEAP32[($0_1 + 24 | 0) >> 2] = $7_1;

                                                }

                                                $0_1 = HEAP32[($8_1 + 20 | 0) >> 2] | 0;

                                                if (!$0_1) {

                                                    break label$104

                                                }

                                                HEAP32[($7_1 + 20 | 0) >> 2] = $0_1;

                                                HEAP32[($0_1 + 24 | 0) >> 2] = $7_1;

                                            }

                                            label$108 : {

                                                label$109 : {

                                                    if ($4_1 >>> 0 > 15 >>> 0) {

                                                        break label$109

                                                    }

                                                    $0_1 = $4_1 + $3_1 | 0;

                                                    HEAP32[($8_1 + 4 | 0) >> 2] = $0_1 | 3 | 0;

                                                    $0_1 = $8_1 + $0_1 | 0;

                                                    HEAP32[($0_1 + 4 | 0) >> 2] = HEAP32[($0_1 + 4 | 0) >> 2] | 0 | 1 | 0;

                                                    break label$108;

                                                }

                                                HEAP32[($8_1 + 4 | 0) >> 2] = $3_1 | 3 | 0;

                                                $7_1 = $8_1 + $3_1 | 0;

                                                HEAP32[($7_1 + 4 | 0) >> 2] = $4_1 | 1 | 0;

                                                HEAP32[($7_1 + $4_1 | 0) >> 2] = $4_1;

                                                label$110 : {

                                                    if ($4_1 >>> 0 > 255 >>> 0) {

                                                        break label$110

                                                    }

                                                    $0_1 = ($4_1 & -8 | 0) + 99468 | 0;

                                                    label$111 : {

                                                        label$112 : {

                                                            $5_1 = HEAP32[(0 + 99428 | 0) >> 2] | 0;

                                                            $4_1 = 1 << ($4_1 >>> 3 | 0) | 0;

                                                            if ($5_1 & $4_1 | 0) {

                                                                break label$112

                                                            }

                                                            HEAP32[(0 + 99428 | 0) >> 2] = $5_1 | $4_1 | 0;

                                                            $4_1 = $0_1;

                                                            break label$111;

                                                        }

                                                        $4_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                    }

                                                    HEAP32[($0_1 + 8 | 0) >> 2] = $7_1;

                                                    HEAP32[($4_1 + 12 | 0) >> 2] = $7_1;

                                                    HEAP32[($7_1 + 12 | 0) >> 2] = $0_1;

                                                    HEAP32[($7_1 + 8 | 0) >> 2] = $4_1;

                                                    break label$108;

                                                }

                                                $0_1 = 31;

                                                label$113 : {

                                                    if ($4_1 >>> 0 > 16777215 >>> 0) {

                                                        break label$113

                                                    }

                                                    $0_1 = Math_clz32($4_1 >>> 8 | 0);

                                                    $0_1 = ((($4_1 >>> (38 - $0_1 | 0) | 0) & 1 | 0) - ($0_1 << 1 | 0) | 0) + 62 | 0;

                                                }

                                                HEAP32[($7_1 + 28 | 0) >> 2] = $0_1;

                                                i64toi32_i32$1 = $7_1;

                                                i64toi32_i32$0 = 0;

                                                HEAP32[($7_1 + 16 | 0) >> 2] = 0;

                                                HEAP32[($7_1 + 20 | 0) >> 2] = i64toi32_i32$0;

                                                $5_1 = ($0_1 << 2 | 0) + 99732 | 0;

                                                label$114 : {

                                                    label$115 : {

                                                        label$116 : {

                                                            $3_1 = 1 << $0_1 | 0;

                                                            if ($6_1 & $3_1 | 0) {

                                                                break label$116

                                                            }

                                                            HEAP32[(0 + 99432 | 0) >> 2] = $6_1 | $3_1 | 0;

                                                            HEAP32[$5_1 >> 2] = $7_1;

                                                            HEAP32[($7_1 + 24 | 0) >> 2] = $5_1;

                                                            break label$115;

                                                        }

                                                        $0_1 = $4_1 << (($0_1 | 0) == (31 | 0) ? 0 : 25 - ($0_1 >>> 1 | 0) | 0) | 0;

                                                        $3_1 = HEAP32[$5_1 >> 2] | 0;

                                                        label$117 : while (1) {

                                                            $5_1 = $3_1;

                                                            if (((HEAP32[($5_1 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($4_1 | 0)) {

                                                                break label$114

                                                            }

                                                            $3_1 = $0_1 >>> 29 | 0;

                                                            $0_1 = $0_1 << 1 | 0;

                                                            $2_1 = ($5_1 + ($3_1 & 4 | 0) | 0) + 16 | 0;

                                                            $3_1 = HEAP32[$2_1 >> 2] | 0;

                                                            if ($3_1) {

                                                                continue label$117

                                                            }

                                                            break label$117;

                                                        }

                                                        ;

                                                        HEAP32[$2_1 >> 2] = $7_1;

                                                        HEAP32[($7_1 + 24 | 0) >> 2] = $5_1;

                                                    }

                                                    HEAP32[($7_1 + 12 | 0) >> 2] = $7_1;

                                                    HEAP32[($7_1 + 8 | 0) >> 2] = $7_1;

                                                    break label$108;

                                                }

                                                $0_1 = HEAP32[($5_1 + 8 | 0) >> 2] | 0;

                                                HEAP32[($0_1 + 12 | 0) >> 2] = $7_1;

                                                HEAP32[($5_1 + 8 | 0) >> 2] = $7_1;

                                                HEAP32[($7_1 + 24 | 0) >> 2] = 0;

                                                HEAP32[($7_1 + 12 | 0) >> 2] = $5_1;

                                                HEAP32[($7_1 + 8 | 0) >> 2] = $0_1;

                                            }

                                            $0_1 = $8_1 + 8 | 0;

                                            break label$1;

                                        }

                                        label$118 : {

                                            if (!$10_1) {

                                                break label$118

                                            }

                                            label$119 : {

                                                label$120 : {

                                                    $5_1 = HEAP32[($7_1 + 28 | 0) >> 2] | 0;

                                                    $0_1 = ($5_1 << 2 | 0) + 99732 | 0;

                                                    if (($7_1 | 0) != (HEAP32[$0_1 >> 2] | 0 | 0)) {

                                                        break label$120

                                                    }

                                                    HEAP32[$0_1 >> 2] = $8_1;

                                                    if ($8_1) {

                                                        break label$119

                                                    }

                                                    (wasm2js_i32$0 = 0, wasm2js_i32$1 = $9_1 & (__wasm_rotl_i32(-2 | 0, $5_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99432 | 0) >> 2] = wasm2js_i32$1;

                                                    break label$118;

                                                }

                                                HEAP32[($10_1 + ((HEAP32[($10_1 + 16 | 0) >> 2] | 0 | 0) == ($7_1 | 0) ? 16 : 20) | 0) >> 2] = $8_1;

                                                if (!$8_1) {

                                                    break label$118

                                                }

                                            }

                                            HEAP32[($8_1 + 24 | 0) >> 2] = $10_1;

                                            label$121 : {

                                                $0_1 = HEAP32[($7_1 + 16 | 0) >> 2] | 0;

                                                if (!$0_1) {

                                                    break label$121

                                                }

                                                HEAP32[($8_1 + 16 | 0) >> 2] = $0_1;

                                                HEAP32[($0_1 + 24 | 0) >> 2] = $8_1;

                                            }

                                            $0_1 = HEAP32[($7_1 + 20 | 0) >> 2] | 0;

                                            if (!$0_1) {

                                                break label$118

                                            }

                                            HEAP32[($8_1 + 20 | 0) >> 2] = $0_1;

                                            HEAP32[($0_1 + 24 | 0) >> 2] = $8_1;

                                        }

                                        label$122 : {

                                            label$123 : {

                                                if ($4_1 >>> 0 > 15 >>> 0) {

                                                    break label$123

                                                }

                                                $0_1 = $4_1 + $3_1 | 0;

                                                HEAP32[($7_1 + 4 | 0) >> 2] = $0_1 | 3 | 0;

                                                $0_1 = $7_1 + $0_1 | 0;

                                                HEAP32[($0_1 + 4 | 0) >> 2] = HEAP32[($0_1 + 4 | 0) >> 2] | 0 | 1 | 0;

                                                break label$122;

                                            }

                                            HEAP32[($7_1 + 4 | 0) >> 2] = $3_1 | 3 | 0;

                                            $5_1 = $7_1 + $3_1 | 0;

                                            HEAP32[($5_1 + 4 | 0) >> 2] = $4_1 | 1 | 0;

                                            HEAP32[($5_1 + $4_1 | 0) >> 2] = $4_1;

                                            label$124 : {

                                                if (!$6_1) {

                                                    break label$124

                                                }

                                                $3_1 = ($6_1 & -8 | 0) + 99468 | 0;

                                                $0_1 = HEAP32[(0 + 99448 | 0) >> 2] | 0;

                                                label$125 : {

                                                    label$126 : {

                                                        $8_1 = 1 << ($6_1 >>> 3 | 0) | 0;

                                                        if ($8_1 & $2_1 | 0) {

                                                            break label$126

                                                        }

                                                        HEAP32[(0 + 99428 | 0) >> 2] = $8_1 | $2_1 | 0;

                                                        $8_1 = $3_1;

                                                        break label$125;

                                                    }

                                                    $8_1 = HEAP32[($3_1 + 8 | 0) >> 2] | 0;

                                                }

                                                HEAP32[($3_1 + 8 | 0) >> 2] = $0_1;

                                                HEAP32[($8_1 + 12 | 0) >> 2] = $0_1;

                                                HEAP32[($0_1 + 12 | 0) >> 2] = $3_1;

                                                HEAP32[($0_1 + 8 | 0) >> 2] = $8_1;

                                            }

                                            HEAP32[(0 + 99448 | 0) >> 2] = $5_1;

                                            HEAP32[(0 + 99436 | 0) >> 2] = $4_1;

                                        }

                                        $0_1 = $7_1 + 8 | 0;

                                    }

                                    global$0 = $1_1 + 16 | 0;

                                    return $0_1 | 0;

                                }



                                function $232($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $2_1 = 0, $1_1 = 0, $6_1 = 0, $4_1 = 0, $3_1 = 0, $5_1 = 0, $7_1 = 0,

                                        wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    label$1 : {

                                        if (!$0_1) {

                                            break label$1

                                        }

                                        $1_1 = $0_1 + -8 | 0;

                                        $2_1 = HEAP32[($0_1 + -4 | 0) >> 2] | 0;

                                        $0_1 = $2_1 & -8 | 0;

                                        $3_1 = $1_1 + $0_1 | 0;

                                        label$2 : {

                                            if ($2_1 & 1 | 0) {

                                                break label$2

                                            }

                                            if (!($2_1 & 3 | 0)) {

                                                break label$1

                                            }

                                            $2_1 = HEAP32[$1_1 >> 2] | 0;

                                            $1_1 = $1_1 - $2_1 | 0;

                                            $4_1 = HEAP32[(0 + 99444 | 0) >> 2] | 0;

                                            if ($1_1 >>> 0 < $4_1 >>> 0) {

                                                break label$1

                                            }

                                            $0_1 = $2_1 + $0_1 | 0;

                                            label$3 : {

                                                if (($1_1 | 0) == (HEAP32[(0 + 99448 | 0) >> 2] | 0 | 0)) {

                                                    break label$3

                                                }

                                                label$4 : {

                                                    if ($2_1 >>> 0 > 255 >>> 0) {

                                                        break label$4

                                                    }

                                                    $4_1 = HEAP32[($1_1 + 8 | 0) >> 2] | 0;

                                                    $5_1 = $2_1 >>> 3 | 0;

                                                    $6_1 = ($5_1 << 3 | 0) + 99468 | 0;

                                                    label$5 : {

                                                        $2_1 = HEAP32[($1_1 + 12 | 0) >> 2] | 0;

                                                        if (($2_1 | 0) != ($4_1 | 0)) {

                                                            break label$5

                                                        }

                                                        (wasm2js_i32$0 = 0, wasm2js_i32$1 = (HEAP32[(0 + 99428 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $5_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99428 | 0) >> 2] = wasm2js_i32$1;

                                                        break label$2;

                                                    }

                                                    HEAP32[($4_1 + 12 | 0) >> 2] = $2_1;

                                                    HEAP32[($2_1 + 8 | 0) >> 2] = $4_1;

                                                    break label$2;

                                                }

                                                $7_1 = HEAP32[($1_1 + 24 | 0) >> 2] | 0;

                                                label$6 : {

                                                    label$7 : {

                                                        $6_1 = HEAP32[($1_1 + 12 | 0) >> 2] | 0;

                                                        if (($6_1 | 0) == ($1_1 | 0)) {

                                                            break label$7

                                                        }

                                                        $2_1 = HEAP32[($1_1 + 8 | 0) >> 2] | 0;

                                                        HEAP32[($2_1 + 12 | 0) >> 2] = $6_1;

                                                        HEAP32[($6_1 + 8 | 0) >> 2] = $2_1;

                                                        break label$6;

                                                    }

                                                    label$8 : {

                                                        $2_1 = $1_1 + 20 | 0;

                                                        $4_1 = HEAP32[$2_1 >> 2] | 0;

                                                        if ($4_1) {

                                                            break label$8

                                                        }

                                                        $2_1 = $1_1 + 16 | 0;

                                                        $4_1 = HEAP32[$2_1 >> 2] | 0;

                                                        if ($4_1) {

                                                            break label$8

                                                        }

                                                        $6_1 = 0;

                                                        break label$6;

                                                    }

                                                    label$9 : while (1) {

                                                        $5_1 = $2_1;

                                                        $6_1 = $4_1;

                                                        $2_1 = $6_1 + 20 | 0;

                                                        $4_1 = HEAP32[$2_1 >> 2] | 0;

                                                        if ($4_1) {

                                                            continue label$9

                                                        }

                                                        $2_1 = $6_1 + 16 | 0;

                                                        $4_1 = HEAP32[($6_1 + 16 | 0) >> 2] | 0;

                                                        if ($4_1) {

                                                            continue label$9

                                                        }

                                                        break label$9;

                                                    }

                                                    ;

                                                    HEAP32[$5_1 >> 2] = 0;

                                                }

                                                if (!$7_1) {

                                                    break label$2

                                                }

                                                label$10 : {

                                                    label$11 : {

                                                        $4_1 = HEAP32[($1_1 + 28 | 0) >> 2] | 0;

                                                        $2_1 = ($4_1 << 2 | 0) + 99732 | 0;

                                                        if (($1_1 | 0) != (HEAP32[$2_1 >> 2] | 0 | 0)) {

                                                            break label$11

                                                        }

                                                        HEAP32[$2_1 >> 2] = $6_1;

                                                        if ($6_1) {

                                                            break label$10

                                                        }

                                                        (wasm2js_i32$0 = 0, wasm2js_i32$1 = (HEAP32[(0 + 99432 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $4_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99432 | 0) >> 2] = wasm2js_i32$1;

                                                        break label$2;

                                                    }

                                                    HEAP32[($7_1 + ((HEAP32[($7_1 + 16 | 0) >> 2] | 0 | 0) == ($1_1 | 0) ? 16 : 20) | 0) >> 2] = $6_1;

                                                    if (!$6_1) {

                                                        break label$2

                                                    }

                                                }

                                                HEAP32[($6_1 + 24 | 0) >> 2] = $7_1;

                                                label$12 : {

                                                    $2_1 = HEAP32[($1_1 + 16 | 0) >> 2] | 0;

                                                    if (!$2_1) {

                                                        break label$12

                                                    }

                                                    HEAP32[($6_1 + 16 | 0) >> 2] = $2_1;

                                                    HEAP32[($2_1 + 24 | 0) >> 2] = $6_1;

                                                }

                                                $2_1 = HEAP32[($1_1 + 20 | 0) >> 2] | 0;

                                                if (!$2_1) {

                                                    break label$2

                                                }

                                                HEAP32[($6_1 + 20 | 0) >> 2] = $2_1;

                                                HEAP32[($2_1 + 24 | 0) >> 2] = $6_1;

                                                break label$2;

                                            }

                                            $2_1 = HEAP32[($3_1 + 4 | 0) >> 2] | 0;

                                            if (($2_1 & 3 | 0 | 0) != (3 | 0)) {

                                                break label$2

                                            }

                                            HEAP32[(0 + 99436 | 0) >> 2] = $0_1;

                                            HEAP32[($3_1 + 4 | 0) >> 2] = $2_1 & -2 | 0;

                                            HEAP32[($1_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                            HEAP32[($1_1 + $0_1 | 0) >> 2] = $0_1;

                                            return;

                                        }

                                        if ($1_1 >>> 0 >= $3_1 >>> 0) {

                                            break label$1

                                        }

                                        $2_1 = HEAP32[($3_1 + 4 | 0) >> 2] | 0;

                                        if (!($2_1 & 1 | 0)) {

                                            break label$1

                                        }

                                        label$13 : {

                                            label$14 : {

                                                if ($2_1 & 2 | 0) {

                                                    break label$14

                                                }

                                                label$15 : {

                                                    if (($3_1 | 0) != (HEAP32[(0 + 99452 | 0) >> 2] | 0 | 0)) {

                                                        break label$15

                                                    }

                                                    HEAP32[(0 + 99452 | 0) >> 2] = $1_1;

                                                    $0_1 = (HEAP32[(0 + 99440 | 0) >> 2] | 0) + $0_1 | 0;

                                                    HEAP32[(0 + 99440 | 0) >> 2] = $0_1;

                                                    HEAP32[($1_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                                    if (($1_1 | 0) != (HEAP32[(0 + 99448 | 0) >> 2] | 0 | 0)) {

                                                        break label$1

                                                    }

                                                    HEAP32[(0 + 99436 | 0) >> 2] = 0;

                                                    HEAP32[(0 + 99448 | 0) >> 2] = 0;

                                                    return;

                                                }

                                                label$16 : {

                                                    if (($3_1 | 0) != (HEAP32[(0 + 99448 | 0) >> 2] | 0 | 0)) {

                                                        break label$16

                                                    }

                                                    HEAP32[(0 + 99448 | 0) >> 2] = $1_1;

                                                    $0_1 = (HEAP32[(0 + 99436 | 0) >> 2] | 0) + $0_1 | 0;

                                                    HEAP32[(0 + 99436 | 0) >> 2] = $0_1;

                                                    HEAP32[($1_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                                    HEAP32[($1_1 + $0_1 | 0) >> 2] = $0_1;

                                                    return;

                                                }

                                                $0_1 = ($2_1 & -8 | 0) + $0_1 | 0;

                                                label$17 : {

                                                    label$18 : {

                                                        if ($2_1 >>> 0 > 255 >>> 0) {

                                                            break label$18

                                                        }

                                                        $4_1 = HEAP32[($3_1 + 8 | 0) >> 2] | 0;

                                                        $5_1 = $2_1 >>> 3 | 0;

                                                        $6_1 = ($5_1 << 3 | 0) + 99468 | 0;

                                                        label$19 : {

                                                            $2_1 = HEAP32[($3_1 + 12 | 0) >> 2] | 0;

                                                            if (($2_1 | 0) != ($4_1 | 0)) {

                                                                break label$19

                                                            }

                                                            (wasm2js_i32$0 = 0, wasm2js_i32$1 = (HEAP32[(0 + 99428 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $5_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99428 | 0) >> 2] = wasm2js_i32$1;

                                                            break label$17;

                                                        }

                                                        HEAP32[($4_1 + 12 | 0) >> 2] = $2_1;

                                                        HEAP32[($2_1 + 8 | 0) >> 2] = $4_1;

                                                        break label$17;

                                                    }

                                                    $7_1 = HEAP32[($3_1 + 24 | 0) >> 2] | 0;

                                                    label$20 : {

                                                        label$21 : {

                                                            $6_1 = HEAP32[($3_1 + 12 | 0) >> 2] | 0;

                                                            if (($6_1 | 0) == ($3_1 | 0)) {

                                                                break label$21

                                                            }

                                                            $2_1 = HEAP32[($3_1 + 8 | 0) >> 2] | 0;

                                                            HEAP32[(0 + 99444 | 0) >> 2] | 0;

                                                            HEAP32[($2_1 + 12 | 0) >> 2] = $6_1;

                                                            HEAP32[($6_1 + 8 | 0) >> 2] = $2_1;

                                                            break label$20;

                                                        }

                                                        label$22 : {

                                                            $2_1 = $3_1 + 20 | 0;

                                                            $4_1 = HEAP32[$2_1 >> 2] | 0;

                                                            if ($4_1) {

                                                                break label$22

                                                            }

                                                            $2_1 = $3_1 + 16 | 0;

                                                            $4_1 = HEAP32[$2_1 >> 2] | 0;

                                                            if ($4_1) {

                                                                break label$22

                                                            }

                                                            $6_1 = 0;

                                                            break label$20;

                                                        }

                                                        label$23 : while (1) {

                                                            $5_1 = $2_1;

                                                            $6_1 = $4_1;

                                                            $2_1 = $6_1 + 20 | 0;

                                                            $4_1 = HEAP32[$2_1 >> 2] | 0;

                                                            if ($4_1) {

                                                                continue label$23

                                                            }

                                                            $2_1 = $6_1 + 16 | 0;

                                                            $4_1 = HEAP32[($6_1 + 16 | 0) >> 2] | 0;

                                                            if ($4_1) {

                                                                continue label$23

                                                            }

                                                            break label$23;

                                                        }

                                                        ;

                                                        HEAP32[$5_1 >> 2] = 0;

                                                    }

                                                    if (!$7_1) {

                                                        break label$17

                                                    }

                                                    label$24 : {

                                                        label$25 : {

                                                            $4_1 = HEAP32[($3_1 + 28 | 0) >> 2] | 0;

                                                            $2_1 = ($4_1 << 2 | 0) + 99732 | 0;

                                                            if (($3_1 | 0) != (HEAP32[$2_1 >> 2] | 0 | 0)) {

                                                                break label$25

                                                            }

                                                            HEAP32[$2_1 >> 2] = $6_1;

                                                            if ($6_1) {

                                                                break label$24

                                                            }

                                                            (wasm2js_i32$0 = 0, wasm2js_i32$1 = (HEAP32[(0 + 99432 | 0) >> 2] | 0) & (__wasm_rotl_i32(-2 | 0, $4_1 | 0) | 0) | 0), HEAP32[(wasm2js_i32$0 + 99432 | 0) >> 2] = wasm2js_i32$1;

                                                            break label$17;

                                                        }

                                                        HEAP32[($7_1 + ((HEAP32[($7_1 + 16 | 0) >> 2] | 0 | 0) == ($3_1 | 0) ? 16 : 20) | 0) >> 2] = $6_1;

                                                        if (!$6_1) {

                                                            break label$17

                                                        }

                                                    }

                                                    HEAP32[($6_1 + 24 | 0) >> 2] = $7_1;

                                                    label$26 : {

                                                        $2_1 = HEAP32[($3_1 + 16 | 0) >> 2] | 0;

                                                        if (!$2_1) {

                                                            break label$26

                                                        }

                                                        HEAP32[($6_1 + 16 | 0) >> 2] = $2_1;

                                                        HEAP32[($2_1 + 24 | 0) >> 2] = $6_1;

                                                    }

                                                    $2_1 = HEAP32[($3_1 + 20 | 0) >> 2] | 0;

                                                    if (!$2_1) {

                                                        break label$17

                                                    }

                                                    HEAP32[($6_1 + 20 | 0) >> 2] = $2_1;

                                                    HEAP32[($2_1 + 24 | 0) >> 2] = $6_1;

                                                }

                                                HEAP32[($1_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                                HEAP32[($1_1 + $0_1 | 0) >> 2] = $0_1;

                                                if (($1_1 | 0) != (HEAP32[(0 + 99448 | 0) >> 2] | 0 | 0)) {

                                                    break label$13

                                                }

                                                HEAP32[(0 + 99436 | 0) >> 2] = $0_1;

                                                return;

                                            }

                                            HEAP32[($3_1 + 4 | 0) >> 2] = $2_1 & -2 | 0;

                                            HEAP32[($1_1 + 4 | 0) >> 2] = $0_1 | 1 | 0;

                                            HEAP32[($1_1 + $0_1 | 0) >> 2] = $0_1;

                                        }

                                        label$27 : {

                                            if ($0_1 >>> 0 > 255 >>> 0) {

                                                break label$27

                                            }

                                            $2_1 = ($0_1 & -8 | 0) + 99468 | 0;

                                            label$28 : {

                                                label$29 : {

                                                    $4_1 = HEAP32[(0 + 99428 | 0) >> 2] | 0;

                                                    $0_1 = 1 << ($0_1 >>> 3 | 0) | 0;

                                                    if ($4_1 & $0_1 | 0) {

                                                        break label$29

                                                    }

                                                    HEAP32[(0 + 99428 | 0) >> 2] = $4_1 | $0_1 | 0;

                                                    $0_1 = $2_1;

                                                    break label$28;

                                                }

                                                $0_1 = HEAP32[($2_1 + 8 | 0) >> 2] | 0;

                                            }

                                            HEAP32[($2_1 + 8 | 0) >> 2] = $1_1;

                                            HEAP32[($0_1 + 12 | 0) >> 2] = $1_1;

                                            HEAP32[($1_1 + 12 | 0) >> 2] = $2_1;

                                            HEAP32[($1_1 + 8 | 0) >> 2] = $0_1;

                                            return;

                                        }

                                        $2_1 = 31;

                                        label$30 : {

                                            if ($0_1 >>> 0 > 16777215 >>> 0) {

                                                break label$30

                                            }

                                            $2_1 = Math_clz32($0_1 >>> 8 | 0);

                                            $2_1 = ((($0_1 >>> (38 - $2_1 | 0) | 0) & 1 | 0) - ($2_1 << 1 | 0) | 0) + 62 | 0;

                                        }

                                        HEAP32[($1_1 + 28 | 0) >> 2] = $2_1;

                                        HEAP32[($1_1 + 16 | 0) >> 2] = 0;

                                        HEAP32[($1_1 + 20 | 0) >> 2] = 0;

                                        $4_1 = ($2_1 << 2 | 0) + 99732 | 0;

                                        label$31 : {

                                            label$32 : {

                                                label$33 : {

                                                    label$34 : {

                                                        $6_1 = HEAP32[(0 + 99432 | 0) >> 2] | 0;

                                                        $3_1 = 1 << $2_1 | 0;

                                                        if ($6_1 & $3_1 | 0) {

                                                            break label$34

                                                        }

                                                        HEAP32[(0 + 99432 | 0) >> 2] = $6_1 | $3_1 | 0;

                                                        HEAP32[$4_1 >> 2] = $1_1;

                                                        HEAP32[($1_1 + 24 | 0) >> 2] = $4_1;

                                                        break label$33;

                                                    }

                                                    $2_1 = $0_1 << (($2_1 | 0) == (31 | 0) ? 0 : 25 - ($2_1 >>> 1 | 0) | 0) | 0;

                                                    $6_1 = HEAP32[$4_1 >> 2] | 0;

                                                    label$35 : while (1) {

                                                        $4_1 = $6_1;

                                                        if (((HEAP32[($6_1 + 4 | 0) >> 2] | 0) & -8 | 0 | 0) == ($0_1 | 0)) {

                                                            break label$32

                                                        }

                                                        $6_1 = $2_1 >>> 29 | 0;

                                                        $2_1 = $2_1 << 1 | 0;

                                                        $3_1 = ($4_1 + ($6_1 & 4 | 0) | 0) + 16 | 0;

                                                        $6_1 = HEAP32[$3_1 >> 2] | 0;

                                                        if ($6_1) {

                                                            continue label$35

                                                        }

                                                        break label$35;

                                                    }

                                                    ;

                                                    HEAP32[$3_1 >> 2] = $1_1;

                                                    HEAP32[($1_1 + 24 | 0) >> 2] = $4_1;

                                                }

                                                HEAP32[($1_1 + 12 | 0) >> 2] = $1_1;

                                                HEAP32[($1_1 + 8 | 0) >> 2] = $1_1;

                                                break label$31;

                                            }

                                            $0_1 = HEAP32[($4_1 + 8 | 0) >> 2] | 0;

                                            HEAP32[($0_1 + 12 | 0) >> 2] = $1_1;

                                            HEAP32[($4_1 + 8 | 0) >> 2] = $1_1;

                                            HEAP32[($1_1 + 24 | 0) >> 2] = 0;

                                            HEAP32[($1_1 + 12 | 0) >> 2] = $4_1;

                                            HEAP32[($1_1 + 8 | 0) >> 2] = $0_1;

                                        }

                                        $1_1 = (HEAP32[(0 + 99460 | 0) >> 2] | 0) + -1 | 0;

                                        HEAP32[(0 + 99460 | 0) >> 2] = $1_1 ? $1_1 : -1;

                                    }

                                }



                                function $233($0_1, $1_1) {

                                    $0_1 = $0_1 | 0;

                                    $1_1 = $1_1 | 0;

                                    var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, $2_1 = 0, i64toi32_i32$4 = 0,

                                        i64toi32_i32$3 = 0, $13_1 = 0, $6$hi = 0, $8$hi = 0, $3_1 = 0, $3$hi = 0,

                                        $16_1 = 0, i64toi32_i32$2 = 0;

                                    label$1 : {

                                        label$2 : {

                                            if ($0_1) {

                                                break label$2

                                            }

                                            $2_1 = 0;

                                            break label$1;

                                        }

                                        i64toi32_i32$0 = 0;

                                        $6$hi = i64toi32_i32$0;

                                        i64toi32_i32$0 = 0;

                                        $8$hi = i64toi32_i32$0;

                                        i64toi32_i32$0 = $6$hi;

                                        i64toi32_i32$1 = $8$hi;

                                        i64toi32_i32$1 = __wasm_i64_mul($0_1 | 0, i64toi32_i32$0 | 0, $1_1 | 0, i64toi32_i32$1 | 0) | 0;

                                        i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;

                                        $3_1 = i64toi32_i32$1;

                                        $3$hi = i64toi32_i32$0;

                                        $2_1 = i64toi32_i32$1;

                                        if (($1_1 | $0_1 | 0) >>> 0 < 65536 >>> 0) {

                                            break label$1

                                        }

                                        $16_1 = $2_1;

                                        i64toi32_i32$0 = $3$hi;

                                        i64toi32_i32$2 = $3_1;

                                        i64toi32_i32$1 = 0;

                                        i64toi32_i32$3 = 32;

                                        i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;

                                        if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {

                                            i64toi32_i32$1 = 0;

                                            $13_1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;

                                        } else {

                                            i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;

                                            $13_1 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;

                                        }

                                        $2_1 = ($13_1 | 0) != (0 | 0) ? -1 : $16_1;

                                    }

                                    label$3 : {

                                        $0_1 = $231($2_1 | 0) | 0;

                                        if (!$0_1) {

                                            break label$3

                                        }

                                        if (!((HEAPU8[($0_1 + -4 | 0) >> 0] | 0) & 3 | 0)) {

                                            break label$3

                                        }

                                        $229($0_1 | 0, 0 | 0, $2_1 | 0) | 0;

                                    }

                                    return $0_1 | 0;

                                }



                                function $234() {

                                    return __wasm_memory_size() << 16 | 0 | 0;

                                }



                                function $235($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, $2_1 = 0, wasm2js_i32$0 = 0, wasm2js_i32$1 = 0;

                                    $1_1 = HEAP32[(0 + 99420 | 0) >> 2] | 0;

                                    $2_1 = ($0_1 + 7 | 0) & -8 | 0;

                                    $0_1 = $1_1 + $2_1 | 0;

                                    label$1 : {

                                        label$2 : {

                                            if (!$2_1) {

                                                break label$2

                                            }

                                            if ($0_1 >>> 0 <= $1_1 >>> 0) {

                                                break label$1

                                            }

                                        }

                                        label$3 : {

                                            if ($0_1 >>> 0 <= ($234() | 0) >>> 0) {

                                                break label$3

                                            }

                                            if (!(fimport$1($0_1 | 0) | 0)) {

                                                break label$1

                                            }

                                        }

                                        HEAP32[(0 + 99420 | 0) >> 2] = $0_1;

                                        return $1_1 | 0;

                                    }

                                    (wasm2js_i32$0 = $230() | 0, wasm2js_i32$1 = 48), HEAP32[wasm2js_i32$0 >> 2] = wasm2js_i32$1;

                                    return -1 | 0;

                                }



                                function $236($0_1) {

                                    $0_1 = $0_1 | 0;

                                    global$1 = $0_1;

                                }



                                function $237() {

                                    return global$1 | 0;

                                }



                                function $238() {

                                    return global$0 | 0;

                                }



                                function $239($0_1) {

                                    $0_1 = $0_1 | 0;

                                    global$0 = $0_1;

                                }



                                function $240($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0;

                                    $1_1 = (global$0 - $0_1 | 0) & -16 | 0;

                                    global$0 = $1_1;

                                    return $1_1 | 0;

                                }



                                function $241() {

                                    return global$0 | 0;

                                }



                                function $242() {

                                    global$3 = 65536;

                                    global$2 = (0 + 15 | 0) & -16 | 0;

                                }



                                function $243() {

                                    return global$0 - global$2 | 0 | 0;

                                }



                                function $244() {

                                    return global$3 | 0;

                                }



                                function $245() {

                                    return global$2 | 0;

                                }



                                function $246($0_1) {

                                    $0_1 = $0_1 | 0;

                                }



                                function $247($0_1) {

                                    $0_1 = $0_1 | 0;

                                }



                                function $248() {

                                    $246(99924 | 0);

                                    return 99928 | 0;

                                }



                                function $249() {

                                    $247(99924 | 0);

                                }



                                function $250($0_1) {

                                    $0_1 = $0_1 | 0;

                                    return 1 | 0;

                                }



                                function $251($0_1) {

                                    $0_1 = $0_1 | 0;

                                }



                                function $252($0_1) {

                                    $0_1 = $0_1 | 0;

                                    var $1_1 = 0, i64toi32_i32$1 = 0, $2_1 = 0, i64toi32_i32$0 = 0, $3_1 = 0;

                                    label$1 : {

                                        if ($0_1) {

                                            break label$1

                                        }

                                        $1_1 = 0;

                                        label$2 : {

                                            if (!(HEAP32[(0 + 99932 | 0) >> 2] | 0)) {

                                                break label$2

                                            }

                                            $1_1 = $252(HEAP32[(0 + 99932 | 0) >> 2] | 0 | 0) | 0;

                                        }

                                        label$3 : {

                                            if (!(HEAP32[(0 + 99932 | 0) >> 2] | 0)) {

                                                break label$3

                                            }

                                            $1_1 = $252(HEAP32[(0 + 99932 | 0) >> 2] | 0 | 0) | 0 | $1_1 | 0;

                                        }

                                        label$4 : {

                                            $0_1 = HEAP32[($248() | 0) >> 2] | 0;

                                            if (!$0_1) {

                                                break label$4

                                            }

                                            label$5 : while (1) {

                                                $2_1 = 0;

                                                label$6 : {

                                                    if ((HEAP32[($0_1 + 76 | 0) >> 2] | 0 | 0) < (0 | 0)) {

                                                        break label$6

                                                    }

                                                    $2_1 = $250($0_1 | 0) | 0;

                                                }

                                                label$7 : {

                                                    if ((HEAP32[($0_1 + 20 | 0) >> 2] | 0 | 0) == (HEAP32[($0_1 + 28 | 0) >> 2] | 0 | 0)) {

                                                        break label$7

                                                    }

                                                    $1_1 = $252($0_1 | 0) | 0 | $1_1 | 0;

                                                }

                                                label$8 : {

                                                    if (!$2_1) {

                                                        break label$8

                                                    }

                                                    $251($0_1 | 0);

                                                }

                                                $0_1 = HEAP32[($0_1 + 56 | 0) >> 2] | 0;

                                                if ($0_1) {

                                                    continue label$5

                                                }

                                                break label$5;

                                            }

                                            ;

                                        }

                                        $249();

                                        return $1_1 | 0;

                                    }

                                    $2_1 = 0;

                                    label$9 : {

                                        if ((HEAP32[($0_1 + 76 | 0) >> 2] | 0 | 0) < (0 | 0)) {

                                            break label$9

                                        }

                                        $2_1 = $250($0_1 | 0) | 0;

                                    }

                                    label$10 : {

                                        label$11 : {

                                            label$12 : {

                                                if ((HEAP32[($0_1 + 20 | 0) >> 2] | 0 | 0) == (HEAP32[($0_1 + 28 | 0) >> 2] | 0 | 0)) {

                                                    break label$12

                                                }

                                                FUNCTION_TABLE[HEAP32[($0_1 + 36 | 0) >> 2] | 0 | 0]($0_1, 0, 0) | 0;

                                                if (HEAP32[($0_1 + 20 | 0) >> 2] | 0) {

                                                    break label$12

                                                }

                                                $1_1 = -1;

                                                if ($2_1) {

                                                    break label$11

                                                }

                                                break label$10;

                                            }

                                            label$13 : {

                                                $1_1 = HEAP32[($0_1 + 4 | 0) >> 2] | 0;

                                                $3_1 = HEAP32[($0_1 + 8 | 0) >> 2] | 0;

                                                if (($1_1 | 0) == ($3_1 | 0)) {

                                                    break label$13

                                                }

                                                i64toi32_i32$1 = $1_1 - $3_1 | 0;

                                                i64toi32_i32$0 = i64toi32_i32$1 >> 31 | 0;

                                                i64toi32_i32$0 = FUNCTION_TABLE[HEAP32[($0_1 + 40 | 0) >> 2] | 0 | 0]($0_1, i64toi32_i32$1, i64toi32_i32$0, 1) | 0;

                                                i64toi32_i32$1 = i64toi32_i32$HIGH_BITS;

                                            }

                                            $1_1 = 0;

                                            HEAP32[($0_1 + 28 | 0) >> 2] = 0;

                                            i64toi32_i32$0 = $0_1;

                                            i64toi32_i32$1 = 0;

                                            HEAP32[($0_1 + 16 | 0) >> 2] = 0;

                                            HEAP32[($0_1 + 20 | 0) >> 2] = i64toi32_i32$1;

                                            i64toi32_i32$0 = $0_1;

                                            i64toi32_i32$1 = 0;

                                            HEAP32[($0_1 + 4 | 0) >> 2] = 0;

                                            HEAP32[($0_1 + 8 | 0) >> 2] = i64toi32_i32$1;

                                            if (!$2_1) {

                                                break label$10

                                            }

                                        }

                                        $251($0_1 | 0);

                                    }

                                    return $1_1 | 0;

                                }



                                function _ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE(var$0, var$0$hi, var$1, var$1$hi) {

                                    var$0 = var$0 | 0;

                                    var$0$hi = var$0$hi | 0;

                                    var$1 = var$1 | 0;

                                    var$1$hi = var$1$hi | 0;

                                    var i64toi32_i32$4 = 0, i64toi32_i32$0 = 0, i64toi32_i32$1 = 0, var$2 = 0,

                                        i64toi32_i32$2 = 0, i64toi32_i32$3 = 0, var$3 = 0, var$4 = 0, var$5 = 0,

                                        $21_1 = 0, $22_1 = 0, var$6 = 0, $24_1 = 0, $17_1 = 0, $18_1 = 0, $23_1 = 0,

                                        $29_1 = 0, $45_1 = 0, $56$hi = 0, $62$hi = 0;

                                    i64toi32_i32$0 = var$1$hi;

                                    var$2 = var$1;

                                    var$4 = var$2 >>> 16 | 0;

                                    i64toi32_i32$0 = var$0$hi;

                                    var$3 = var$0;

                                    var$5 = var$3 >>> 16 | 0;

                                    $17_1 = Math_imul(var$4, var$5);

                                    $18_1 = var$2;

                                    i64toi32_i32$2 = var$3;

                                    i64toi32_i32$1 = 0;

                                    i64toi32_i32$3 = 32;

                                    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;

                                    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {

                                        i64toi32_i32$1 = 0;

                                        $21_1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;

                                    } else {

                                        i64toi32_i32$1 = i64toi32_i32$0 >>> i64toi32_i32$4 | 0;

                                        $21_1 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$0 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$2 >>> i64toi32_i32$4 | 0) | 0;

                                    }

                                    $23_1 = $17_1 + Math_imul($18_1, $21_1) | 0;

                                    i64toi32_i32$1 = var$1$hi;

                                    i64toi32_i32$0 = var$1;

                                    i64toi32_i32$2 = 0;

                                    i64toi32_i32$3 = 32;

                                    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;

                                    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {

                                        i64toi32_i32$2 = 0;

                                        $22_1 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;

                                    } else {

                                        i64toi32_i32$2 = i64toi32_i32$1 >>> i64toi32_i32$4 | 0;

                                        $22_1 = (((1 << i64toi32_i32$4 | 0) - 1 | 0) & i64toi32_i32$1 | 0) << (32 - i64toi32_i32$4 | 0) | 0 | (i64toi32_i32$0 >>> i64toi32_i32$4 | 0) | 0;

                                    }

                                    $29_1 = $23_1 + Math_imul($22_1, var$3) | 0;

                                    var$2 = var$2 & 65535 | 0;

                                    var$3 = var$3 & 65535 | 0;

                                    var$6 = Math_imul(var$2, var$3);

                                    var$2 = (var$6 >>> 16 | 0) + Math_imul(var$2, var$5) | 0;

                                    $45_1 = $29_1 + (var$2 >>> 16 | 0) | 0;

                                    var$2 = (var$2 & 65535 | 0) + Math_imul(var$4, var$3) | 0;

                                    i64toi32_i32$2 = 0;

                                    i64toi32_i32$1 = $45_1 + (var$2 >>> 16 | 0) | 0;

                                    i64toi32_i32$0 = 0;

                                    i64toi32_i32$3 = 32;

                                    i64toi32_i32$4 = i64toi32_i32$3 & 31 | 0;

                                    if (32 >>> 0 <= (i64toi32_i32$3 & 63 | 0) >>> 0) {

                                        i64toi32_i32$0 = i64toi32_i32$1 << i64toi32_i32$4 | 0;

                                        $24_1 = 0;

                                    } else {

                                        i64toi32_i32$0 = ((1 << i64toi32_i32$4 | 0) - 1 | 0) & (i64toi32_i32$1 >>> (32 - i64toi32_i32$4 | 0) | 0) | 0 | (i64toi32_i32$2 << i64toi32_i32$4 | 0) | 0;

                                        $24_1 = i64toi32_i32$1 << i64toi32_i32$4 | 0;

                                    }

                                    $56$hi = i64toi32_i32$0;

                                    i64toi32_i32$0 = 0;

                                    $62$hi = i64toi32_i32$0;

                                    i64toi32_i32$0 = $56$hi;

                                    i64toi32_i32$2 = $24_1;

                                    i64toi32_i32$1 = $62$hi;

                                    i64toi32_i32$3 = var$2 << 16 | 0 | (var$6 & 65535 | 0) | 0;

                                    i64toi32_i32$1 = i64toi32_i32$0 | i64toi32_i32$1 | 0;

                                    i64toi32_i32$2 = i64toi32_i32$2 | i64toi32_i32$3 | 0;

                                    i64toi32_i32$HIGH_BITS = i64toi32_i32$1;

                                    return i64toi32_i32$2 | 0;

                                }



                                function __wasm_ctz_i32(var$0) {

                                    var$0 = var$0 | 0;

                                    if (var$0) {

                                        return 31 - Math_clz32((var$0 + -1 | 0) ^ var$0 | 0) | 0 | 0

                                    }

                                    return 32 | 0;

                                }



                                function __wasm_i64_mul(var$0, var$0$hi, var$1, var$1$hi) {

                                    var$0 = var$0 | 0;

                                    var$0$hi = var$0$hi | 0;

                                    var$1 = var$1 | 0;

                                    var$1$hi = var$1$hi | 0;

                                    var i64toi32_i32$0 = 0, i64toi32_i32$1 = 0;

                                    i64toi32_i32$0 = var$0$hi;

                                    i64toi32_i32$0 = var$1$hi;

                                    i64toi32_i32$0 = var$0$hi;

                                    i64toi32_i32$1 = var$1$hi;

                                    i64toi32_i32$1 = _ZN17compiler_builtins3int3mul3Mul3mul17h070e9a1c69faec5bE(var$0 | 0, i64toi32_i32$0 | 0, var$1 | 0, i64toi32_i32$1 | 0) | 0;

                                    i64toi32_i32$0 = i64toi32_i32$HIGH_BITS;

                                    i64toi32_i32$HIGH_BITS = i64toi32_i32$0;

                                    return i64toi32_i32$1 | 0;

                                }



                                function __wasm_rotl_i32(var$0, var$1) {

                                    var$0 = var$0 | 0;

                                    var$1 = var$1 | 0;

                                    var var$2 = 0;

                                    var$2 = var$1 & 31 | 0;

                                    var$1 = (0 - var$1 | 0) & 31 | 0;

                                    return ((-1 >>> var$2 | 0) & var$0 | 0) << var$2 | 0 | (((-1 << var$1 | 0) & var$0 | 0) >>> var$1 | 0) | 0 | 0;

                                }



                                // EMSCRIPTEN_END_FUNCS

                                ;

                                bufferView = HEAPU8;

                                initActiveSegments(imports);

                                var FUNCTION_TABLE = Table([]);



                                function __wasm_memory_size() {

                                    return buffer.byteLength / 65536 | 0;

                                }



                                function __wasm_memory_grow(pagesToAdd) {

                                    pagesToAdd = pagesToAdd | 0;

                                    var oldPages = __wasm_memory_size() | 0;

                                    var newPages = oldPages + pagesToAdd | 0;

                                    if ((oldPages < newPages) && (newPages < 65536)) {

                                        var newBuffer = new ArrayBuffer(Math_imul(newPages, 65536));

                                        var newHEAP8 = new Int8Array(newBuffer);

                                        newHEAP8.set(HEAP8);

                                        HEAP8 = new Int8Array(newBuffer);

                                        HEAP16 = new Int16Array(newBuffer);

                                        HEAP32 = new Int32Array(newBuffer);

                                        HEAPU8 = new Uint8Array(newBuffer);

                                        HEAPU16 = new Uint16Array(newBuffer);

                                        HEAPU32 = new Uint32Array(newBuffer);

                                        HEAPF32 = new Float32Array(newBuffer);

                                        HEAPF64 = new Float64Array(newBuffer);

                                        buffer = newBuffer;

                                        memory.buffer = buffer;

                                        bufferView = HEAPU8;

                                    }

                                    return oldPages;

                                }



                                return {

                                    "__wasm_call_ctors": $0,

                                    "Decoder_Interface_init": $1,

                                    "Decoder_Interface_exit": $2,

                                    "Decoder_Interface_Decode": $3,

                                    "Encoder_Interface_init": $4,

                                    "malloc": $231,

                                    "Encoder_Interface_exit": $5,

                                    "Encoder_Interface_Encode": $6,

                                    "__indirect_function_table": FUNCTION_TABLE,

                                    "__errno_location": $230,

                                    "fflush": $252,

                                    "setTempRet0": $236,

                                    "getTempRet0": $237,

                                    "emscripten_stack_init": $242,

                                    "emscripten_stack_get_free": $243,

                                    "emscripten_stack_get_base": $244,

                                    "emscripten_stack_get_end": $245,

                                    "stackSave": $238,

                                    "stackRestore": $239,

                                    "stackAlloc": $240,

                                    "emscripten_stack_get_current": $241

                                };

                            }



                            return asmFunc(info);

                        }



                    )(info);

                },



                instantiate: /** @suppress{checkTypes} */ function (binary, info) {

                    return {

                        then: function (ok) {

                            var module = new WebAssembly.Module(binary);

                            ok({

                                'instance': new WebAssembly.Instance(module, info)

                            });

                            // Emulate a simple WebAssembly.instantiate(..).then(()=>{}).catch(()=>{}) syntax.

                            return {

                                catch: function () {

                                }

                            };

                        }

                    };

                },



                RuntimeError: Error

            };



// We don't need to actually download a wasm binary, mark it as present but empty.

        wasmBinary = [];



// end include: wasm2js.js

        if (typeof WebAssembly != 'object') {

            abort('no native wasm support detected');

        }



// Wasm globals



        var wasmMemory;



//========================================

// Runtime essentials

//========================================



// whether we are quitting the application. no code should run after this.

// set in exit() and abort()

        var ABORT = false;



// set by exit() and abort().  Passed to 'onExit' handler.

// NOTE: This is also used as the process return code code in shell environments

// but only when noExitRuntime is false.

        var EXITSTATUS;



        /** @type {function(*, string=)} */

        function assert(condition, text) {

            if (!condition) {

                abort('Assertion failed' + (text ? ': ' + text : ''));

            }

        }



// We used to include malloc/free by default in the past. Show a helpful error in

// builds with assertions.

        function _free() {

            // Show a helpful error since we used to include free by default in the past.

            abort("free() called but not included in the build - add '_free' to EXPORTED_FUNCTIONS");

        }



// include: runtime_strings.js





// runtime_strings.js: String related runtime functions that are part of both

// MINIMAL_RUNTIME and regular runtime.



        var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;



        /**

         * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given

         * array that contains uint8 values, returns a copy of that string as a

         * Javascript String object.

         * heapOrArray is either a regular array, or a JavaScript typed array view.

         * @param {number} idx

         * @param {number=} maxBytesToRead

         * @return {string}

         */

        function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {

            var endIdx = idx + maxBytesToRead;

            var endPtr = idx;

            // TextDecoder needs to know the byte length in advance, it doesn't stop on

            // null terminator by itself.  Also, use the length info to avoid running tiny

            // strings through TextDecoder, since .subarray() allocates garbage.

            // (As a tiny code save trick, compare endPtr against endIdx using a negation,

            // so that undefined means Infinity)

            while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;



            if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {

                return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));

            }

            var str = '';

            // If building with TextDecoder, we have already computed the string length

            // above, so test loop end condition against that

            while (idx < endPtr) {

                // For UTF8 byte structure, see:

                // http://en.wikipedia.org/wiki/UTF-8#Description

                // https://www.ietf.org/rfc/rfc2279.txt

                // https://tools.ietf.org/html/rfc3629

                var u0 = heapOrArray[idx++];

                if (!(u0 & 0x80)) {

                    str += String.fromCharCode(u0);

                    continue;

                }

                var u1 = heapOrArray[idx++] & 63;

                if ((u0 & 0xE0) == 0xC0) {

                    str += String.fromCharCode(((u0 & 31) << 6) | u1);

                    continue;

                }

                var u2 = heapOrArray[idx++] & 63;

                if ((u0 & 0xF0) == 0xE0) {

                    u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;

                } else {

                    if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');

                    u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);

                }



                if (u0 < 0x10000) {

                    str += String.fromCharCode(u0);

                } else {

                    var ch = u0 - 0x10000;

                    str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));

                }

            }

            return str;

        }



        /**

         * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the

         * emscripten HEAP, returns a copy of that string as a Javascript String object.

         *

         * @param {number} ptr

         * @param {number=} maxBytesToRead - An optional length that specifies the

         *   maximum number of bytes to read. You can omit this parameter to scan the

         *   string until the first \0 byte. If maxBytesToRead is passed, and the string

         *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the

         *   string will cut short at that byte index (i.e. maxBytesToRead will not

         *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing

         *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw

         *   JS JIT optimizations off, so it is worth to consider consistently using one

         * @return {string}

         */

        function UTF8ToString(ptr, maxBytesToRead) {

            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';

        }



        /**

         * Copies the given Javascript String object 'str' to the given byte array at

         * address 'outIdx', encoded in UTF8 form and null-terminated. The copy will

         * require at most str.length*4+1 bytes of space in the HEAP.  Use the function

         * lengthBytesUTF8 to compute the exact number of bytes (excluding null

         * terminator) that this function will write.

         *

         * @param {string} str - The Javascript string to copy.

         * @param {ArrayBufferView|Array<number>} heap - The array to copy to. Each

         *                                               index in this array is assumed

         *                                               to be one 8-byte element.

         * @param {number} outIdx - The starting offset in the array to begin the copying.

         * @param {number} maxBytesToWrite - The maximum number of bytes this function

         *                                   can write to the array.  This count should

         *                                   include the null terminator, i.e. if

         *                                   maxBytesToWrite=1, only the null terminator

         *                                   will be written and nothing else.

         *                                   maxBytesToWrite=0 does not write any bytes

         *                                   to the output, not even the null

         *                                   terminator.

         * @return {number} The number of bytes written, EXCLUDING the null terminator.

         */

        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {

            // Parameter maxBytesToWrite is not optional. Negative values, 0, null,

            // undefined and false each don't write out any bytes.

            if (!(maxBytesToWrite > 0))

                return 0;



            var startIdx = outIdx;

            var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.

            for (var i = 0; i < str.length; ++i) {

                // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code

                // unit, not a Unicode code point of the character! So decode

                // UTF16->UTF32->UTF8.

                // See http://unicode.org/faq/utf_bom.html#utf16-3

                // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description

                // and https://www.ietf.org/rfc/rfc2279.txt

                // and https://tools.ietf.org/html/rfc3629

                var u = str.charCodeAt(i); // possibly a lead surrogate

                if (u >= 0xD800 && u <= 0xDFFF) {

                    var u1 = str.charCodeAt(++i);

                    u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);

                }

                if (u <= 0x7F) {

                    if (outIdx >= endIdx) break;

                    heap[outIdx++] = u;

                } else if (u <= 0x7FF) {

                    if (outIdx + 1 >= endIdx) break;

                    heap[outIdx++] = 0xC0 | (u >> 6);

                    heap[outIdx++] = 0x80 | (u & 63);

                } else if (u <= 0xFFFF) {

                    if (outIdx + 2 >= endIdx) break;

                    heap[outIdx++] = 0xE0 | (u >> 12);

                    heap[outIdx++] = 0x80 | ((u >> 6) & 63);

                    heap[outIdx++] = 0x80 | (u & 63);

                } else {

                    if (outIdx + 3 >= endIdx) break;

                    if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');

                    heap[outIdx++] = 0xF0 | (u >> 18);

                    heap[outIdx++] = 0x80 | ((u >> 12) & 63);

                    heap[outIdx++] = 0x80 | ((u >> 6) & 63);

                    heap[outIdx++] = 0x80 | (u & 63);

                }

            }

            // Null-terminate the pointer to the buffer.

            heap[outIdx] = 0;

            return outIdx - startIdx;

        }



        /**

         * Copies the given Javascript String object 'str' to the emscripten HEAP at

         * address 'outPtr', null-terminated and encoded in UTF8 form. The copy will

         * require at most str.length*4+1 bytes of space in the HEAP.

         * Use the function lengthBytesUTF8 to compute the exact number of bytes

         * (excluding null terminator) that this function will write.

         *

         * @return {number} The number of bytes written, EXCLUDING the null terminator.

         */

        function stringToUTF8(str, outPtr, maxBytesToWrite) {

            assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');

            return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);

        }



        /**

         * Returns the number of bytes the given Javascript string takes if encoded as a

         * UTF8 byte array, EXCLUDING the null terminator byte.

         *

         * @param {string} str - JavaScript string to operator on

         * @return {number} Length, in bytes, of the UTF8 encoded string.

         */

        function lengthBytesUTF8(str) {

            var len = 0;

            for (var i = 0; i < str.length; ++i) {

                // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code

                // unit, not a Unicode code point of the character! So decode

                // UTF16->UTF32->UTF8.

                // See http://unicode.org/faq/utf_bom.html#utf16-3

                var c = str.charCodeAt(i); // possibly a lead surrogate

                if (c <= 0x7F) {

                    len++;

                } else if (c <= 0x7FF) {

                    len += 2;

                } else if (c >= 0xD800 && c <= 0xDFFF) {

                    len += 4;

                    ++i;

                } else {

                    len += 3;

                }

            }

            return len;

        }



// end include: runtime_strings.js

// Memory management



        var HEAP,

            /** @type {!Int8Array} */

            HEAP8,

            /** @type {!Uint8Array} */

            HEAPU8,

            /** @type {!Int16Array} */

            HEAP16,

            /** @type {!Uint16Array} */

            HEAPU16,

            /** @type {!Int32Array} */

            HEAP32,

            /** @type {!Uint32Array} */

            HEAPU32,

            /** @type {!Float32Array} */

            HEAPF32,

            /** @type {!Float64Array} */

            HEAPF64;



        function updateMemoryViews() {

            var b = wasmMemory.buffer;

            Module['HEAP8'] = HEAP8 = new Int8Array(b);

            Module['HEAP16'] = HEAP16 = new Int16Array(b);

            Module['HEAP32'] = HEAP32 = new Int32Array(b);

            Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);

            Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);

            Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);

            Module['HEAPF32'] = HEAPF32 = new Float32Array(b);

            Module['HEAPF64'] = HEAPF64 = new Float64Array(b);

        }



        var STACK_SIZE = 65536;

        if (Module['STACK_SIZE']) assert(STACK_SIZE === Module['STACK_SIZE'], 'the stack size can no longer be determined at runtime')



        var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;

        legacyModuleProp('INITIAL_MEMORY', 'INITIAL_MEMORY');



        assert(INITIAL_MEMORY >= STACK_SIZE, 'INITIAL_MEMORY should be larger than STACK_SIZE, was ' + INITIAL_MEMORY + '! (STACK_SIZE=' + STACK_SIZE + ')');



// check for full engine support (use string 'subarray' to avoid closure compiler confusion)

        assert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,

            'JS engine does not provide full typed array support');



// In non-standalone/normal mode, we create the memory here.

// include: runtime_init_memory.js





// Create the wasm memory. (Note: this only applies if IMPORTED_MEMORY is defined)



        if (Module['wasmMemory']) {

            wasmMemory = Module['wasmMemory'];

        } else {

            wasmMemory = new WebAssembly.Memory({

                'initial': INITIAL_MEMORY / 65536,

                // In theory we should not need to emit the maximum if we want "unlimited"

                // or 4GB of memory, but VMs error on that atm, see

                // https://github.com/emscripten-core/emscripten/issues/14130

                // And in the pthreads case we definitely need to emit a maximum. So

                // always emit one.

                'maximum': 2147483648 / 65536

            });

        }



        updateMemoryViews();



// If the user provides an incorrect length, just use that length instead rather than providing the user to

// specifically provide the memory length with Module['INITIAL_MEMORY'].

        INITIAL_MEMORY = wasmMemory.buffer.byteLength;

        assert(INITIAL_MEMORY % 65536 === 0);



// end include: runtime_init_memory.js



// include: runtime_init_table.js

// In regular non-RELOCATABLE mode the table is exported

// from the wasm module and this will be assigned once

// the exports are available.

        var wasmTable;



// end include: runtime_init_table.js

// include: runtime_stack_check.js





// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.

        function writeStackCookie() {

            var max = _emscripten_stack_get_end();

            assert((max & 3) == 0);

            // If the stack ends at address zero we write our cookies 4 bytes into the

            // stack.  This prevents interference with the (separate) address-zero check

            // below.

            if (max == 0) {

                max += 4;

            }

            // The stack grow downwards towards _emscripten_stack_get_end.

            // We write cookies to the final two words in the stack and detect if they are

            // ever overwritten.

            HEAPU32[((max) >> 2)] = 0x2135467;

            HEAPU32[(((max) + (4)) >> 2)] = 0x89BACDFE;

            // Also test the global address 0 for integrity.

            HEAPU32[0] = 0x63736d65; /* 'emsc' */

        }



        function checkStackCookie() {

            if (ABORT) return;

            var max = _emscripten_stack_get_end();

            // See writeStackCookie().

            if (max == 0) {

                max += 4;

            }

            var cookie1 = HEAPU32[((max) >> 2)];

            var cookie2 = HEAPU32[(((max) + (4)) >> 2)];

            if (cookie1 != 0x2135467 || cookie2 != 0x89BACDFE) {

                abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));

            }

            // Also test the global address 0 for integrity.

            if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {

                abort('Runtime error: The application has corrupted its heap memory area (address zero)!');

            }

        }



// end include: runtime_stack_check.js

// include: runtime_assertions.js





// Endianness check

        (function () {

            var h16 = new Int16Array(1);

            var h8 = new Int8Array(h16.buffer);

            h16[0] = 0x6373;

            if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';

        })();



// end include: runtime_assertions.js

        var __ATPRERUN__ = []; // functions called before the runtime is initialized

        var __ATINIT__ = []; // functions called during startup

        var __ATEXIT__ = []; // functions called during shutdown

        var __ATPOSTRUN__ = []; // functions called after the main() is called



        var runtimeInitialized = false;



        function keepRuntimeAlive() {

            return noExitRuntime;

        }



        function preRun() {



            if (Module['preRun']) {

                if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];

                while (Module['preRun'].length) {

                    addOnPreRun(Module['preRun'].shift());

                }

            }



            callRuntimeCallbacks(__ATPRERUN__);

        }



        function initRuntime() {

            assert(!runtimeInitialized);

            runtimeInitialized = true;



            checkStackCookie();





            callRuntimeCallbacks(__ATINIT__);

        }



        function postRun() {

            checkStackCookie();



            if (Module['postRun']) {

                if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];

                while (Module['postRun'].length) {

                    addOnPostRun(Module['postRun'].shift());

                }

            }



            callRuntimeCallbacks(__ATPOSTRUN__);

        }



        function addOnPreRun(cb) {

            __ATPRERUN__.unshift(cb);

        }



        function addOnInit(cb) {

            __ATINIT__.unshift(cb);

        }



        function addOnExit(cb) {

        }



        function addOnPostRun(cb) {

            __ATPOSTRUN__.unshift(cb);

        }



// include: runtime_math.js





// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul



// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround



// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32



// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc



        assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');

        assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');

        assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');

        assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');



// end include: runtime_math.js

// A counter of dependencies for calling run(). If we need to

// do asynchronous work before running, increment this and

// decrement it. Incrementing must happen in a place like

// Module.preRun (used by emcc to add file preloading).

// Note that you can add dependencies in preRun, even though

// it happens right before run - run will be postponed until

// the dependencies are met.

        var runDependencies = 0;

        var runDependencyWatcher = null;

        var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

        var runDependencyTracking = {};



        function getUniqueRunDependency(id) {

            var orig = id;

            while (1) {

                if (!runDependencyTracking[id]) return id;

                id = orig + Math.random();

            }

        }



        function addRunDependency(id) {

            runDependencies++;



            if (Module['monitorRunDependencies']) {

                Module['monitorRunDependencies'](runDependencies);

            }



            if (id) {

                assert(!runDependencyTracking[id]);

                runDependencyTracking[id] = 1;

                if (runDependencyWatcher === null && typeof setInterval != 'undefined') {

                    // Check for missing dependencies every few seconds

                    runDependencyWatcher = setInterval(function () {

                        if (ABORT) {

                            clearInterval(runDependencyWatcher);

                            runDependencyWatcher = null;

                            return;

                        }

                        var shown = false;

                        for (var dep in runDependencyTracking) {

                            if (!shown) {

                                shown = true;

                                err('still waiting on run dependencies:');

                            }

                            err('dependency: ' + dep);

                        }

                        if (shown) {

                            err('(end of list)');

                        }

                    }, 10000);

                }

            } else {

                err('warning: run dependency added without ID');

            }

        }



        function removeRunDependency(id) {

            runDependencies--;



            if (Module['monitorRunDependencies']) {

                Module['monitorRunDependencies'](runDependencies);

            }



            if (id) {

                assert(runDependencyTracking[id]);

                delete runDependencyTracking[id];

            } else {

                err('warning: run dependency removed without ID');

            }

            if (runDependencies == 0) {

                if (runDependencyWatcher !== null) {

                    clearInterval(runDependencyWatcher);

                    runDependencyWatcher = null;

                }

                if (dependenciesFulfilled) {

                    var callback = dependenciesFulfilled;

                    dependenciesFulfilled = null;

                    callback(); // can add another dependenciesFulfilled

                }

            }

        }



        /** @param {string|number=} what */

        function abort(what) {

            if (Module['onAbort']) {

                Module['onAbort'](what);

            }



            what = 'Aborted(' + what + ')';

            // TODO(sbc): Should we remove printing and leave it up to whoever

            // catches the exception?

            err(what);



            ABORT = true;

            EXITSTATUS = 1;



            // Use a wasm runtime error, because a JS error might be seen as a foreign

            // exception, which means we'd run destructors on it. We need the error to

            // simply make the program stop.

            // FIXME This approach does not work in Wasm EH because it currently does not assume

            // all RuntimeErrors are from traps; it decides whether a RuntimeError is from

            // a trap or not based on a hidden field within the object. So at the moment

            // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that

            // allows this in the wasm spec.



            // Suppress closure compiler warning here. Closure compiler's builtin extern

            // defintion for WebAssembly.RuntimeError claims it takes no arguments even

            // though it can.

            // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.

            /** @suppress {checkTypes} */

            var e = new WebAssembly.RuntimeError(what);



            // Throw the error whether or not MODULARIZE is set because abort is used

            // in code paths apart from instantiation where an exception is expected

            // to be thrown when abort is called.

            throw e;

        }



// {{MEM_INITIALIZER}}



// include: memoryprofiler.js





// end include: memoryprofiler.js

// show errors on likely calls to FS when it was not included

        var FS = {

            error: function () {

                abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');

            },

            init: function () {

                FS.error()

            },

            createDataFile: function () {

                FS.error()

            },

            createPreloadedFile: function () {

                FS.error()

            },

            createLazyFile: function () {

                FS.error()

            },

            open: function () {

                FS.error()

            },

            mkdev: function () {

                FS.error()

            },

            registerDevice: function () {

                FS.error()

            },

            analyzePath: function () {

                FS.error()

            },

            loadFilesFromDB: function () {

                FS.error()

            },



            ErrnoError: function ErrnoError() {

                FS.error()

            },

        };

        Module['FS_createDataFile'] = FS.createDataFile;

        Module['FS_createPreloadedFile'] = FS.createPreloadedFile;



// include: URIUtils.js





// Prefix of data URIs emitted by SINGLE_FILE and related options.

        var dataURIPrefix = 'data:application/octet-stream;base64,';



// Indicates whether filename is a base64 data URI.

        function isDataURI(filename) {

            // Prefix of data URIs emitted by SINGLE_FILE and related options.

            return filename.startsWith(dataURIPrefix);

        }



// Indicates whether filename is delivered via file protocol (as opposed to http/https)

        function isFileURI(filename) {

            return filename.startsWith('file://');

        }



// end include: URIUtils.js

        /** @param {boolean=} fixedasm */

        function createExportWrapper(name, fixedasm) {

            return function () {

                var displayName = name;

                var asm = fixedasm;

                if (!fixedasm) {

                    asm = Module['asm'];

                }

                assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');

                if (!asm[name]) {

                    assert(asm[name], 'exported native function `' + displayName + '` not found');

                }

                return asm[name].apply(null, arguments);

            };

        }



        var wasmBinaryFile;

        wasmBinaryFile = '<<< WASM_BINARY_FILE >>>';

        if (!isDataURI(wasmBinaryFile)) {

            wasmBinaryFile = locateFile(wasmBinaryFile);

        }



        function getBinary(file) {

            try {

                if (file == wasmBinaryFile && wasmBinary) {

                    return new Uint8Array(wasmBinary);

                }

                var binary = tryParseAsDataURI(file);

                if (binary) {

                    return binary;

                }

                if (readBinary) {

                    return readBinary(file);

                }

                throw "sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)";

            } catch (err) {

                abort(err);

            }

        }



        function getBinaryPromise() {

            // If we don't have the binary yet, try to to load it asynchronously.

            // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.

            // See https://github.com/github/fetch/pull/92#issuecomment-140665932

            // Cordova or Electron apps are typically loaded from a file:// url.

            // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.

            if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {

                if (typeof fetch == 'function'

                    && !isFileURI(wasmBinaryFile)

                ) {

                    return fetch(wasmBinaryFile, {credentials: 'same-origin'}).then(function (response) {

                        if (!response['ok']) {

                            throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";

                        }

                        return response['arrayBuffer']();

                    }).catch(function () {

                        return getBinary(wasmBinaryFile);

                    });

                } else {

                    if (readAsync) {

                        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)

                        return new Promise(function (resolve, reject) {

                            readAsync(wasmBinaryFile, function (response) {

                                resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response)))

                            }, reject)

                        });

                    }

                }

            }



            // Otherwise, getBinary should be able to get it synchronously

            return Promise.resolve().then(function () {

                return getBinary(wasmBinaryFile);

            });

        }



        function instantiateSync(file, info) {

            var instance;

            var module;

            var binary;

            try {

                binary = getBinary(file);

                module = new WebAssembly.Module(binary);

                instance = new WebAssembly.Instance(module, info);

            } catch (e) {

                var str = e.toString();

                err('failed to compile wasm module: ' + str);

                if (str.includes('imported Memory') ||

                    str.includes('memory import')) {

                    err('Memory size incompatibility issues may be due to changing INITIAL_MEMORY at runtime to something too large. Use ALLOW_MEMORY_GROWTH to allow any size memory (and also make sure not to set INITIAL_MEMORY at runtime to something smaller than it was at compile time).');

                }

                throw e;

            }

            return [instance, module];

        }



// Create the wasm instance.

// Receives the wasm imports, returns the exports.

        function createWasm() {

            // prepare imports

            var info = {

                'env': asmLibraryArg,

                'wasi_snapshot_preview1': asmLibraryArg,

            };

            // Load the wasm module and create an instance of using native support in the JS engine.

            // handle a generated wasm instance, receiving its exports and

            // performing other necessary setup

            /** @param {WebAssembly.Module=} module*/

            function receiveInstance(instance, module) {

                var exports = instance.exports;



                Module['asm'] = exports;



                wasmTable = Module['asm']['__indirect_function_table'];

                assert(wasmTable, "table not found in wasm exports");



                addOnInit(Module['asm']['__wasm_call_ctors']);



                removeRunDependency('wasm-instantiate');



            }



            // wait for the pthread pool (if any)

            addRunDependency('wasm-instantiate');



            // Prefer streaming instantiation if available.



            // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback

            // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel

            // to any other async startup actions they are performing.

            // Also pthreads and wasm workers initialize the wasm instance through this path.

            if (Module['instantiateWasm']) {

                try {

                    var exports = Module['instantiateWasm'](info, receiveInstance);

                    return exports;

                } catch (e) {

                    err('Module.instantiateWasm callback failed with error: ' + e);

                    return false;

                }

            }



            var result = instantiateSync(wasmBinaryFile, info);

            // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193,

            // the above line no longer optimizes out down to the following line.

            // When the regression is fixed, we can remove this if/else.

            receiveInstance(result[0]);

            return Module['asm']; // exports were assigned here

        }



// Globals used by JS i64 conversions (see makeSetValue)

        var tempDouble;

        var tempI64;



// === Body ===



        var ASM_CONSTS = {};





        /** @constructor */

        function ExitStatus(status) {

            this.name = 'ExitStatus';

            this.message = 'Program terminated with exit(' + status + ')';

            this.status = status;

        }



        function callRuntimeCallbacks(callbacks) {

            while (callbacks.length > 0) {

                // Pass the module as the first argument.

                callbacks.shift()(Module);

            }

        }





        /**

         * @param {number} ptr

         * @param {string} type

         */

        function getValue(ptr, type = 'i8') {

            if (type.endsWith('*')) type = '*';

            switch (type) {

                case 'i1':

                    return HEAP8[((ptr) >> 0)];

                case 'i8':

                    return HEAP8[((ptr) >> 0)];

                case 'i16':

                    return HEAP16[((ptr) >> 1)];

                case 'i32':

                    return HEAP32[((ptr) >> 2)];

                case 'i64':

                    return HEAP32[((ptr) >> 2)];

                case 'float':

                    return HEAPF32[((ptr) >> 2)];

                case 'double':

                    return HEAPF64[((ptr) >> 3)];

                case '*':

                    return HEAPU32[((ptr) >> 2)];

                default:

                    abort('invalid type for getValue: ' + type);

            }

            return null;

        }



        function intArrayToString(array) {

            var ret = [];

            for (var i = 0; i < array.length; i++) {

                var chr = array[i];

                if (chr > 0xFF) {

                    if (ASSERTIONS) {

                        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');

                    }

                    chr &= 0xFF;

                }

                ret.push(String.fromCharCode(chr));

            }

            return ret.join('');

        }



        function ptrToString(ptr) {

            assert(typeof ptr === 'number');

            return '0x' + ptr.toString(16).padStart(8, '0');

        }





        /**

         * @param {number} ptr

         * @param {number} value

         * @param {string} type

         */

        function setValue(ptr, value, type = 'i8') {

            if (type.endsWith('*')) type = '*';

            switch (type) {

                case 'i1':

                    HEAP8[((ptr) >> 0)] = value;

                    break;

                case 'i8':

                    HEAP8[((ptr) >> 0)] = value;

                    break;

                case 'i16':

                    HEAP16[((ptr) >> 1)] = value;

                    break;

                case 'i32':

                    HEAP32[((ptr) >> 2)] = value;

                    break;

                case 'i64':

                    (tempI64 = [value >>> 0, (tempDouble = value, (+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble) / 4294967296.0))), 4294967295.0)) | 0) >>> 0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble))) >>> 0)) / 4294967296.0))))) >>> 0) : 0)], HEAP32[((ptr) >> 2)] = tempI64[0], HEAP32[(((ptr) + (4)) >> 2)] = tempI64[1]);

                    break;

                case 'float':

                    HEAPF32[((ptr) >> 2)] = value;

                    break;

                case 'double':

                    HEAPF64[((ptr) >> 3)] = value;

                    break;

                case '*':

                    HEAPU32[((ptr) >> 2)] = value;

                    break;

                default:

                    abort('invalid type for setValue: ' + type);

            }

        }



        function warnOnce(text) {

            if (!warnOnce.shown) warnOnce.shown = {};

            if (!warnOnce.shown[text]) {

                warnOnce.shown[text] = 1;

                if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;

                err(text);

            }

        }



        function _emscripten_memcpy_big(dest, src, num) {

            HEAPU8.copyWithin(dest, src, src + num);

        }



        function getHeapMax() {

            // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate

            // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side

            // for any code that deals with heap sizes, which would require special

            // casing all heap size related code to treat 0 specially.

            return 2147483648;

        }



        function emscripten_realloc_buffer(size) {

            var b = wasmMemory.buffer;

            try {

                // round size grow request up to wasm page size (fixed 64KB per spec)

                wasmMemory.grow((size - b.byteLength + 65535) >>> 16); // .grow() takes a delta compared to the previous size

                updateMemoryViews();

                return 1 /*success*/;

            } catch (e) {

                err('emscripten_realloc_buffer: Attempted to grow heap from ' + b.byteLength + ' bytes to ' + size + ' bytes, but got error: ' + e);

            }

            // implicit 0 return to save code size (caller will cast "undefined" into 0

            // anyhow)

        }



        function _emscripten_resize_heap(requestedSize) {

            var oldSize = HEAPU8.length;

            requestedSize = requestedSize >>> 0;

            // With multithreaded builds, races can happen (another thread might increase the size

            // in between), so return a failure, and let the caller retry.

            assert(requestedSize > oldSize);



            // Memory resize rules:

            // 1.  Always increase heap size to at least the requested size, rounded up

            //     to next page multiple.

            // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap

            //     geometrically: increase the heap size according to

            //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most

            //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).

            // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap

            //     linearly: increase the heap size by at least

            //     MEMORY_GROWTH_LINEAR_STEP bytes.

            // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by

            //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest

            // 4.  If we were unable to allocate as much memory, it may be due to

            //     over-eager decision to excessively reserve due to (3) above.

            //     Hence if an allocation fails, cut down on the amount of excess

            //     growth, in an attempt to succeed to perform a smaller allocation.



            // A limit is set for how much we can grow. We should not exceed that

            // (the wasm binary specifies it, so if we tried, we'd fail anyhow).

            var maxHeapSize = getHeapMax();

            if (requestedSize > maxHeapSize) {

                err('Cannot enlarge memory, asked to go up to ' + requestedSize + ' bytes, but the limit is ' + maxHeapSize + ' bytes!');

                return false;

            }



            let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;



            // Loop through potential heap size increases. If we attempt a too eager

            // reservation that fails, cut down on the attempted size and reserve a

            // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)

            for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {

                var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth

                // but limit overreserving (default to capping at +96MB overgrowth at most)

                overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);



                var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));



                var replacement = emscripten_realloc_buffer(newSize);

                if (replacement) {

                    err('Warning: Enlarging memory arrays, this is not fast! ' + [oldSize, newSize]);



                    return true;

                }

            }

            err('Failed to grow the heap from ' + oldSize + ' bytes to ' + newSize + ' bytes, not enough memory!');

            return false;

        }





        var ALLOC_NORMAL = 0;



        var ALLOC_STACK = 1;



        function allocate(slab, allocator) {

            var ret;

            assert(typeof allocator == 'number', 'allocate no longer takes a type argument')

            assert(typeof slab != 'number', 'allocate no longer takes a number as arg0')



            if (allocator == ALLOC_STACK) {

                ret = stackAlloc(slab.length);

            } else {

                ret = _malloc(slab.length);

            }



            if (!slab.subarray && !slab.slice) {

                slab = new Uint8Array(slab);

            }

            HEAPU8.set(slab, ret);

            return ret;

        }



        var ASSERTIONS = true;



// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149



// This code was written by Tyler Akins and has been placed in the

// public domain.  It would be nice if you left this header intact.

// Base64 code from Tyler Akins -- http://rumkin.com



        /**

         * Decodes a base64 string.

         * @param {string} input The string to decode.

         */

        var decodeBase64 = typeof atob == 'function' ? atob : function (input) {

            var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';



            var output = '';

            var chr1, chr2, chr3;

            var enc1, enc2, enc3, enc4;

            var i = 0;

            // remove all characters that are not A-Z, a-z, 0-9, +, /, or =

            input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');

            do {

                enc1 = keyStr.indexOf(input.charAt(i++));

                enc2 = keyStr.indexOf(input.charAt(i++));

                enc3 = keyStr.indexOf(input.charAt(i++));

                enc4 = keyStr.indexOf(input.charAt(i++));



                chr1 = (enc1 << 2) | (enc2 >> 4);

                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);

                chr3 = ((enc3 & 3) << 6) | enc4;



                output = output + String.fromCharCode(chr1);



                if (enc3 !== 64) {

                    output = output + String.fromCharCode(chr2);

                }

                if (enc4 !== 64) {

                    output = output + String.fromCharCode(chr3);

                }

            } while (i < input.length);

            return output;

        };



// Converts a string of base64 into a byte array.

// Throws error on invalid input.

        function intArrayFromBase64(s) {

            if (typeof ENVIRONMENT_IS_NODE == 'boolean' && ENVIRONMENT_IS_NODE) {

                var buf = Buffer.from(s, 'base64');

                return new Uint8Array(buf['buffer'], buf['byteOffset'], buf['byteLength']);

            }



            try {

                var decoded = decodeBase64(s);

                var bytes = new Uint8Array(decoded.length);

                for (var i = 0; i < decoded.length; ++i) {

                    bytes[i] = decoded.charCodeAt(i);

                }

                return bytes;

            } catch (_) {

                throw new Error('Converting base64 string to bytes failed.');

            }

        }



// If filename is a base64 data URI, parses and returns data (Buffer on node,

// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.

        function tryParseAsDataURI(filename) {

            if (!isDataURI(filename)) {

                return;

            }



            return intArrayFromBase64(filename.slice(dataURIPrefix.length));

        }





        function checkIncomingModuleAPI() {

            ignoredModuleProp('fetchSettings');

        }



        var asmLibraryArg = {

            "emscripten_memcpy_big": _emscripten_memcpy_big,

            "emscripten_resize_heap": _emscripten_resize_heap,

            "memory": wasmMemory

        };

        var asm = createWasm();

        /** @type {function(...*):?} */

        var ___wasm_call_ctors = Module["___wasm_call_ctors"] = createExportWrapper("__wasm_call_ctors", asm);



        /** @type {function(...*):?} */

        var _Decoder_Interface_init = Module["_Decoder_Interface_init"] = createExportWrapper("Decoder_Interface_init", asm);



        /** @type {function(...*):?} */

        var _Decoder_Interface_exit = Module["_Decoder_Interface_exit"] = createExportWrapper("Decoder_Interface_exit", asm);



        /** @type {function(...*):?} */

        var _Decoder_Interface_Decode = Module["_Decoder_Interface_Decode"] = createExportWrapper("Decoder_Interface_Decode", asm);



        /** @type {function(...*):?} */

        var _Encoder_Interface_init = Module["_Encoder_Interface_init"] = createExportWrapper("Encoder_Interface_init", asm);



        /** @type {function(...*):?} */

        var _malloc = Module["_malloc"] = createExportWrapper("malloc", asm);



        /** @type {function(...*):?} */

        var _Encoder_Interface_exit = Module["_Encoder_Interface_exit"] = createExportWrapper("Encoder_Interface_exit", asm);



        /** @type {function(...*):?} */

        var _Encoder_Interface_Encode = Module["_Encoder_Interface_Encode"] = createExportWrapper("Encoder_Interface_Encode", asm);



        /** @type {function(...*):?} */

        var ___errno_location = Module["___errno_location"] = createExportWrapper("__errno_location", asm);



        /** @type {function(...*):?} */

        var _fflush = Module["_fflush"] = createExportWrapper("fflush", asm);



        /** @type {function(...*):?} */

        var setTempRet0 = Module["setTempRet0"] = createExportWrapper("setTempRet0", asm);



        /** @type {function(...*):?} */

        var getTempRet0 = Module["getTempRet0"] = createExportWrapper("getTempRet0", asm);



        /** @type {function(...*):?} */

        var _emscripten_stack_init = Module["_emscripten_stack_init"] = asm["emscripten_stack_init"]



        /** @type {function(...*):?} */

        var _emscripten_stack_get_free = Module["_emscripten_stack_get_free"] = asm["emscripten_stack_get_free"]



        /** @type {function(...*):?} */

        var _emscripten_stack_get_base = Module["_emscripten_stack_get_base"] = asm["emscripten_stack_get_base"]



        /** @type {function(...*):?} */

        var _emscripten_stack_get_end = Module["_emscripten_stack_get_end"] = asm["emscripten_stack_get_end"]



        /** @type {function(...*):?} */

        var stackSave = Module["stackSave"] = createExportWrapper("stackSave", asm);



        /** @type {function(...*):?} */

        var stackRestore = Module["stackRestore"] = createExportWrapper("stackRestore", asm);



        /** @type {function(...*):?} */

        var stackAlloc = Module["stackAlloc"] = createExportWrapper("stackAlloc", asm);



        /** @type {function(...*):?} */

        var _emscripten_stack_get_current = Module["_emscripten_stack_get_current"] = asm["emscripten_stack_get_current"]





// === Auto-generated postamble setup entry stuff ===



        Module["setValue"] = setValue;

        Module["getValue"] = getValue;

        Module["allocate"] = allocate;

        var unexportedRuntimeSymbols = [

            'run',

            'UTF8ArrayToString',

            'UTF8ToString',

            'stringToUTF8Array',

            'stringToUTF8',

            'lengthBytesUTF8',

            'addOnPreRun',

            'addOnInit',

            'addOnPreMain',

            'addOnExit',

            'addOnPostRun',

            'addRunDependency',

            'removeRunDependency',

            'FS_createFolder',

            'FS_createPath',

            'FS_createDataFile',

            'FS_createPreloadedFile',

            'FS_createLazyFile',

            'FS_createLink',

            'FS_createDevice',

            'FS_unlink',

            'getLEB',

            'getFunctionTables',

            'alignFunctionTables',

            'registerFunctions',

            'prettyPrint',

            'getCompilerSetting',

            'out',

            'err',

            'callMain',

            'abort',

            'keepRuntimeAlive',

            'wasmMemory',

            'stackAlloc',

            'stackSave',

            'stackRestore',

            'getTempRet0',

            'setTempRet0',

            'writeStackCookie',

            'checkStackCookie',

            'intArrayFromBase64',

            'tryParseAsDataURI',

            'ptrToString',

            'zeroMemory',

            'stringToNewUTF8',

            'exitJS',

            'getHeapMax',

            'emscripten_realloc_buffer',

            'ENV',

            'ERRNO_CODES',

            'ERRNO_MESSAGES',

            'setErrNo',

            'inetPton4',

            'inetNtop4',

            'inetPton6',

            'inetNtop6',

            'readSockaddr',

            'writeSockaddr',

            'DNS',

            'getHostByName',

            'Protocols',

            'Sockets',

            'getRandomDevice',

            'warnOnce',

            'traverseStack',

            'UNWIND_CACHE',

            'convertPCtoSourceLocation',

            'readEmAsmArgsArray',

            'readEmAsmArgs',

            'runEmAsmFunction',

            'runMainThreadEmAsm',

            'jstoi_q',

            'jstoi_s',

            'getExecutableName',

            'listenOnce',

            'autoResumeAudioContext',

            'dynCallLegacy',

            'getDynCaller',

            'dynCall',

            'handleException',

            'runtimeKeepalivePush',

            'runtimeKeepalivePop',

            'callUserCallback',

            'maybeExit',

            'safeSetTimeout',

            'asmjsMangle',

            'asyncLoad',

            'alignMemory',

            'mmapAlloc',

            'handleAllocator',

            'writeI53ToI64',

            'writeI53ToI64Clamped',

            'writeI53ToI64Signaling',

            'writeI53ToU64Clamped',

            'writeI53ToU64Signaling',

            'readI53FromI64',

            'readI53FromU64',

            'convertI32PairToI53',

            'convertI32PairToI53Checked',

            'convertU32PairToI53',

            'getCFunc',

            'ccall',

            'cwrap',

            'uleb128Encode',

            'sigToWasmTypes',

            'generateFuncType',

            'convertJsFunctionToWasm',

            'freeTableIndexes',

            'functionsInTableMap',

            'getEmptyTableSlot',

            'updateTableMap',

            'addFunction',

            'removeFunction',

            'reallyNegative',

            'unSign',

            'strLen',

            'reSign',

            'formatString',

            'PATH',

            'PATH_FS',

            'intArrayFromString',

            'intArrayToString',

            'AsciiToString',

            'stringToAscii',

            'UTF16Decoder',

            'UTF16ToString',

            'stringToUTF16',

            'lengthBytesUTF16',

            'UTF32ToString',

            'stringToUTF32',

            'lengthBytesUTF32',

            'allocateUTF8',

            'allocateUTF8OnStack',

            'writeStringToMemory',

            'writeArrayToMemory',

            'writeAsciiToMemory',

            'SYSCALLS',

            'getSocketFromFD',

            'getSocketAddress',

            'JSEvents',

            'registerKeyEventCallback',

            'specialHTMLTargets',

            'maybeCStringToJsString',

            'findEventTarget',

            'findCanvasEventTarget',

            'getBoundingClientRect',

            'fillMouseEventData',

            'registerMouseEventCallback',

            'registerWheelEventCallback',

            'registerUiEventCallback',

            'registerFocusEventCallback',

            'fillDeviceOrientationEventData',

            'registerDeviceOrientationEventCallback',

            'fillDeviceMotionEventData',

            'registerDeviceMotionEventCallback',

            'screenOrientation',

            'fillOrientationChangeEventData',

            'registerOrientationChangeEventCallback',

            'fillFullscreenChangeEventData',

            'registerFullscreenChangeEventCallback',

            'JSEvents_requestFullscreen',

            'JSEvents_resizeCanvasForFullscreen',

            'registerRestoreOldStyle',

            'hideEverythingExceptGivenElement',

            'restoreHiddenElements',

            'setLetterbox',

            'currentFullscreenStrategy',

            'restoreOldWindowedStyle',

            'softFullscreenResizeWebGLRenderTarget',

            'doRequestFullscreen',

            'fillPointerlockChangeEventData',

            'registerPointerlockChangeEventCallback',

            'registerPointerlockErrorEventCallback',

            'requestPointerLock',

            'fillVisibilityChangeEventData',

            'registerVisibilityChangeEventCallback',

            'registerTouchEventCallback',

            'fillGamepadEventData',

            'registerGamepadEventCallback',

            'registerBeforeUnloadEventCallback',

            'fillBatteryEventData',

            'battery',

            'registerBatteryEventCallback',

            'setCanvasElementSize',

            'getCanvasElementSize',

            'demangle',

            'demangleAll',

            'jsStackTrace',

            'stackTrace',

            'ExitStatus',

            'getEnvStrings',

            'checkWasiClock',

            'flush_NO_FILESYSTEM',

            'dlopenMissingError',

            'createDyncallWrapper',

            'setImmediateWrapped',

            'clearImmediateWrapped',

            'polyfillSetImmediate',

            'promiseMap',

            'newNativePromise',

            'getPromise',

            'uncaughtExceptionCount',

            'exceptionLast',

            'exceptionCaught',

            'ExceptionInfo',

            'exception_addRef',

            'exception_decRef',

            'Browser',

            'setMainLoop',

            'wget',

            'FS',

            'MEMFS',

            'TTY',

            'PIPEFS',

            'SOCKFS',

            '_setNetworkCallback',

            'tempFixedLengthArray',

            'miniTempWebGLFloatBuffers',

            'heapObjectForWebGLType',

            'heapAccessShiftForWebGLHeap',

            'GL',

            'emscriptenWebGLGet',

            'computeUnpackAlignedImageSize',

            'emscriptenWebGLGetTexPixelData',

            'emscriptenWebGLGetUniform',

            'webglGetUniformLocation',

            'webglPrepareUniformLocationsBeforeFirstUse',

            'webglGetLeftBracePos',

            'emscriptenWebGLGetVertexAttrib',

            'writeGLArray',

            'AL',

            'SDL_unicode',

            'SDL_ttfContext',

            'SDL_audio',

            'SDL',

            'SDL_gfx',

            'GLUT',

            'EGL',

            'GLFW_Window',

            'GLFW',

            'GLEW',

            'IDBStore',

            'runAndAbortIfError',

            'ALLOC_NORMAL',

            'ALLOC_STACK',

        ];

        unexportedRuntimeSymbols.forEach(unexportedRuntimeSymbol);

        var missingLibrarySymbols = [

            'zeroMemory',

            'stringToNewUTF8',

            'exitJS',

            'setErrNo',

            'inetPton4',

            'inetNtop4',

            'inetPton6',

            'inetNtop6',

            'readSockaddr',

            'writeSockaddr',

            'getHostByName',

            'getRandomDevice',

            'traverseStack',

            'convertPCtoSourceLocation',

            'readEmAsmArgs',

            'runEmAsmFunction',

            'runMainThreadEmAsm',

            'jstoi_q',

            'jstoi_s',

            'getExecutableName',

            'listenOnce',

            'autoResumeAudioContext',

            'dynCallLegacy',

            'getDynCaller',

            'dynCall',

            'handleException',

            'runtimeKeepalivePush',

            'runtimeKeepalivePop',

            'callUserCallback',

            'maybeExit',

            'safeSetTimeout',

            'asmjsMangle',

            'asyncLoad',

            'alignMemory',

            'mmapAlloc',

            'handleAllocator',

            'writeI53ToI64',

            'writeI53ToI64Clamped',

            'writeI53ToI64Signaling',

            'writeI53ToU64Clamped',

            'writeI53ToU64Signaling',

            'readI53FromI64',

            'readI53FromU64',

            'convertI32PairToI53',

            'convertI32PairToI53Checked',

            'convertU32PairToI53',

            'getCFunc',

            'ccall',

            'cwrap',

            'uleb128Encode',

            'sigToWasmTypes',

            'generateFuncType',

            'convertJsFunctionToWasm',

            'getEmptyTableSlot',

            'updateTableMap',

            'addFunction',

            'removeFunction',

            'reallyNegative',

            'unSign',

            'strLen',

            'reSign',

            'formatString',

            'intArrayFromString',

            'AsciiToString',

            'stringToAscii',

            'UTF16ToString',

            'stringToUTF16',

            'lengthBytesUTF16',

            'UTF32ToString',

            'stringToUTF32',

            'lengthBytesUTF32',

            'allocateUTF8',

            'allocateUTF8OnStack',

            'writeStringToMemory',

            'writeArrayToMemory',

            'writeAsciiToMemory',

            'getSocketFromFD',

            'getSocketAddress',

            'registerKeyEventCallback',

            'maybeCStringToJsString',

            'findEventTarget',

            'findCanvasEventTarget',

            'getBoundingClientRect',

            'fillMouseEventData',

            'registerMouseEventCallback',

            'registerWheelEventCallback',

            'registerUiEventCallback',

            'registerFocusEventCallback',

            'fillDeviceOrientationEventData',

            'registerDeviceOrientationEventCallback',

            'fillDeviceMotionEventData',

            'registerDeviceMotionEventCallback',

            'screenOrientation',

            'fillOrientationChangeEventData',

            'registerOrientationChangeEventCallback',

            'fillFullscreenChangeEventData',

            'registerFullscreenChangeEventCallback',

            'JSEvents_requestFullscreen',

            'JSEvents_resizeCanvasForFullscreen',

            'registerRestoreOldStyle',

            'hideEverythingExceptGivenElement',

            'restoreHiddenElements',

            'setLetterbox',

            'softFullscreenResizeWebGLRenderTarget',

            'doRequestFullscreen',

            'fillPointerlockChangeEventData',

            'registerPointerlockChangeEventCallback',

            'registerPointerlockErrorEventCallback',

            'requestPointerLock',

            'fillVisibilityChangeEventData',

            'registerVisibilityChangeEventCallback',

            'registerTouchEventCallback',

            'fillGamepadEventData',

            'registerGamepadEventCallback',

            'registerBeforeUnloadEventCallback',

            'fillBatteryEventData',

            'battery',

            'registerBatteryEventCallback',

            'setCanvasElementSize',

            'getCanvasElementSize',

            'demangle',

            'demangleAll',

            'jsStackTrace',

            'stackTrace',

            'getEnvStrings',

            'checkWasiClock',

            'flush_NO_FILESYSTEM',

            'createDyncallWrapper',

            'setImmediateWrapped',

            'clearImmediateWrapped',

            'polyfillSetImmediate',

            'newNativePromise',

            'getPromise',

            'ExceptionInfo',

            'exception_addRef',

            'exception_decRef',

            'setMainLoop',

            '_setNetworkCallback',

            'heapObjectForWebGLType',

            'heapAccessShiftForWebGLHeap',

            'emscriptenWebGLGet',

            'computeUnpackAlignedImageSize',

            'emscriptenWebGLGetTexPixelData',

            'emscriptenWebGLGetUniform',

            'webglGetUniformLocation',

            'webglPrepareUniformLocationsBeforeFirstUse',

            'webglGetLeftBracePos',

            'emscriptenWebGLGetVertexAttrib',

            'writeGLArray',

            'SDL_unicode',

            'SDL_ttfContext',

            'SDL_audio',

            'GLFW_Window',

            'runAndAbortIfError',

        ];

        missingLibrarySymbols.forEach(missingLibrarySymbol)





        var calledRun;



        dependenciesFulfilled = function runCaller() {

            // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)

            if (!calledRun) run();

            if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled

        };



        function stackCheckInit() {

            // This is normally called automatically during __wasm_call_ctors but need to

            // get these values before even running any of the ctors so we call it redundantly

            // here.

            _emscripten_stack_init();

            // TODO(sbc): Move writeStackCookie to native to to avoid this.

            writeStackCookie();

        }



        /** @type {function(Array=)} */

        function run(args) {

            args = args || arguments_;



            if (runDependencies > 0) {

                return;

            }



            stackCheckInit();



            preRun();



            // a preRun added a dependency, run will be called later

            if (runDependencies > 0) {

                return;

            }



            function doRun() {

                // run may have just been called through dependencies being fulfilled just in this very frame,

                // or while the async setStatus time below was happening

                if (calledRun) return;

                calledRun = true;

                Module['calledRun'] = true;



                if (ABORT) return;



                initRuntime();



                if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();



                assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');



                postRun();

            }



            if (Module['setStatus']) {

                Module['setStatus']('Running...');

                setTimeout(function () {

                    setTimeout(function () {

                        Module['setStatus']('');

                    }, 1);

                    doRun();

                }, 1);

            } else {

                doRun();

            }

            checkStackCookie();

        }



        function checkUnflushedContent() {

            // Compiler settings do not allow exiting the runtime, so flushing

            // the streams is not possible. but in ASSERTIONS mode we check

            // if there was something to flush, and if so tell the user they

            // should request that the runtime be exitable.

            // Normally we would not even include flush() at all, but in ASSERTIONS

            // builds we do so just for this check, and here we see if there is any

            // content to flush, that is, we check if there would have been

            // something a non-ASSERTIONS build would have not seen.

            // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0

            // mode (which has its own special function for this; otherwise, all

            // the code is inside libc)

            var oldOut = out;

            var oldErr = err;

            var has = false;

            out = err = (x) => {

                has = true;

            }

            try { // it doesn't matter if it fails

                _fflush(0);

            } catch (e) {

            }

            out = oldOut;

            err = oldErr;

            if (has) {

                warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');

                warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');

            }

        }



        if (Module['preInit']) {

            if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];

            while (Module['preInit'].length > 0) {

                Module['preInit'].pop()();

            }

        }



        run();





        return {

            allocate: Module['allocate'],

            setValue: Module['setValue'],

            getValue: Module['getValue'],

            Decoder_Interface_init: Module['_Decoder_Interface_init'],

            Decoder_Interface_exit: Module['_Decoder_Interface_exit'],

            Decoder_Interface_Decode: Module['_Decoder_Interface_Decode'],

            Encoder_Interface_init: Module['_Encoder_Interface_init'],

            Encoder_Interface_exit: Module['_Encoder_Interface_exit'],

            Encoder_Interface_Encode: Module['_Encoder_Interface_Encode']

        };

    })();

"use strict";

function _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
function _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError("attempted to get private field on non-instance"); } return fn; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**

 * Different modes imply different block sizes:

 * modes = MR475, MR515, MR59, MR67, MR74, MR795, MR102, MR122, MRSID

 * indexes =   0,     1,    2,    3,    4,     5,     6,     7,     8

 * bits =     12,      13,   15,   17,   19,    20,    26,    31,     5

 * samples =  160

 */
var AMRDecoder = /*#__PURE__*/function () {
  function AMRDecoder(params) {
    _classCallCheck(this, AMRDecoder);
    !params && (params = {});
    this.params = params;
    this.block_size = 20;
    this.frame_size = 160;
  }
  _createClass(AMRDecoder, [{
    key: "init",
    value: function init() {
      // Create decoder
      this.state = AMRNB.Decoder_Interface_init();

      // 'XXX' - change to parameters

      // Input Buffer
      this.input = AMRNB.allocate(new Int8Array(20), 0);

      // Buffer to store the audio samples
      this.buffer = AMRNB.allocate(new Int16Array(160), 0);
    }
  }, {
    key: "validate",
    value: function validate(magic) {
      var is_str = magic.constructor === String.prototype.constructor;
      if (is_str) {
        return magic === AMR.MAGIC_NUMBER_STRING;
      }
      for (var i = -1; ++i < 6;) {
        if (AMR.MAGIC_NUMBER[i] !== magic[i]) {
          return false;
        }
      }
      return true;
    }
  }, {
    key: "read",
    value: function read(offset, data) {
      // block_size = 31 ==> [mode(1):frames(30)]
      var is_str = data.constructor === String.prototype.constructor,
        dec_mode = is_str ? Binary.toUint8(data[0]) : data[0];
      var nb = AMR.modes[dec_mode >> 3 & 0x000F];
      var input_addr = this.input,
        len = offset + nb > data.length ? data.length - offset : nb;
      for (var m = offset - 1, k = 0, bits; ++m < offset + len; k += 1) {
        bits = !is_str ? data[m] : Binary.toUint8(data[m]);
        AMRNB.setValue(input_addr + k, bits, 'i8');
      }
      return len;
    }
  }, {
    key: "process",
    value: function process(data) {
      var is_str = data.constructor === String.prototype.constructor,
        head = is_str ? data.substring(0, 6) : data.subarray(0, 6);
      if (!this.validate(head)) return;
      data = is_str ? data.substring(6) : data.subarray(6);
      var benchmark = !!this.params.benchmark;
      benchmark && console.time('decode');
      var output_offset = 0,
        offset = 0,
        len = 0;

      // Varies from quality
      var total_packets = Math.ceil(data.length / this.block_size),
        estimated_size = this.frame_size * total_packets,
        tot = 0;
      var input_addr = this.input;
      var buffer_addr = this.buffer;
      var state_addr = this.state;
      if (!this.output || this.output.length < estimated_size) {
        this.output = new Float32Array(estimated_size);
      }
      while (offset < data.length) {
        // Benchmarking
        benchmark && console.time('decode_packet_offset_' + offset);

        // Read bits
        len = this.read(offset, data);

        // Decode the data
        AMRNB.Decoder_Interface_Decode(state_addr, input_addr, buffer_addr, 0);

        // Write the samples to the output buffer
        this.write(output_offset, this.frame_size, buffer_addr);

        // Benchmarking
        benchmark && console.timeEnd('decode_packet_offset_' + offset);
        offset += len + 1;
        output_offset += this.frame_size;
        ++tot;
      }
      benchmark && console.timeEnd('decode');
      return new Float32Array(this.output.subarray(0, output_offset));
    }
  }, {
    key: "write",
    value: function write(offset, nframes, addr) {
      for (var m = 0, k = offset - 1; ++k < offset + nframes; m += 2) {
        this.output[k] = AMRNB.getValue(addr + m, "i16") / 32768;
      }
    }
  }, {
    key: "close",
    value: function close() {
      AMRNB.Decoder_Interface_exit(this.state);
    }
  }]);
  return AMRDecoder;
}();
var AMREncoder = /*#__PURE__*/function () {
  function AMREncoder(params) {
    _classCallCheck(this, AMREncoder);
    !params && (params = {});
    this.params = params;
    this.mode = params.mode || 5; // MR795 by default
    this.frame_size = 160;
    this.block_size = AMR.modes[this.mode];
    this.dtx = params.dtx + 0 || 0;
  }
  _createClass(AMREncoder, [{
    key: "init",
    value: function init() {
      // Create Encoder
      this.state = AMRNB.Encoder_Interface_init(this.dtx);
      this.input = AMRNB.allocate(new Int16Array(this.frame_size), 0);
      this.buffer = AMRNB.allocate(new Int8Array(this.block_size), 0);
    }
  }, {
    key: "read",
    value: function read(offset, length, data) {
      var input_addr = this.input,
        len = offset + length > data.length ? data.length - offset : length;
      for (var m = offset - 1, k = 0; ++m < offset + len; k += 2) {
        AMRNB.setValue(input_addr + k, data[m], 'i16');
      }
      return len;
    }
  }, {
    key: "write",
    value: function write(offset, nb, addr) {
      for (var m = 0, k = offset - 1; ++k < offset + nb; m += 1) {
        this.output[k] = AMRNB.getValue(addr + m, 'i8');
      }
    }
  }, {
    key: "process",
    value: function process(pcmdata) {
      var benchmark = this.params.benchmark;
      benchmark && console.time('encode');
      var output_offset = 0,
        offset = 0,
        len,
        nb,
        err,
        tm_str,
        total_packets = Math.ceil(pcmdata.length / this.frame_size),
        estimated_size = this.block_size + total_packets;
      if (!this.output || this.output.length < estimated_size) {
        this.output = new Uint8Array(estimated_size + 6);
      }
      for (var i = -1; ++i < 6;) {
        this.output[i] = AMR.MAGIC_NUMBER[i];
      }
      output_offset += 6;
      var input_addr = this.input,
        buffer_addr = this.buffer;
      while (offset < pcmdata.length) {
        benchmark && console.time('encode_packet_offset_' + offset);

        // Frames to the input buffer
        len = this.read(offset, this.frame_size, pcmdata);

        // Encode the frame
        nb = AMRNB.Encoder_Interface_Encode(this.state, this.mode, input_addr, buffer_addr, 0);

        // Write the size and frame
        this.write(output_offset, nb, buffer_addr);
        benchmark && console.timeEnd('encode_packet_offset_' + offset);
        output_offset += nb;
        offset += len;
      }
      benchmark && console.timeEnd('encode');
      return new Uint8Array(this.output.subarray(0, output_offset));
    }
  }, {
    key: "close",
    value: function close() {
      AMRNB.Encoder_Interface_exit(this.state);
    }
  }]);
  return AMREncoder;
}();
var AMR = /*#__PURE__*/function () {
  function AMR(params) {
    _classCallCheck(this, AMR);
    !params && (params = {});
    this.params = params;
    this.frame_size = 320 || params.frame_size;
    this.ring_size = 2304 || params.ring_size;
    this.linoffset = 0;
    this.ringoffset = 0;
    this.modoffset = 0;
    this.linbuf = new Int16Array(this.frame_size);
    this.ring = new Int16Array(this.ring_size * 2);
    this.modframes = new Int16Array(this.frame_size);
    this.framesbuf = [];
    this.decoder = new AMRDecoder(params);
    this.encoder = new AMREncoder(params);
    this.init();
  }
  _createClass(AMR, [{
    key: "init",
    value: function init() {
      this.decoder.init();
      this.encoder.init();
    }
  }, {
    key: "encode",
    value: function encode(data, isFile) {
      if (!!isFile) {
        return this.encoder.process(data);
      }
      // ring spin
      for (var i = -1, j = this.ringoffset; ++i < data.length; ++j) {
        this.ring[j] = data[i];
      }
      this.ringoffset += data.length;
      // has enough to decode
      if (this.ringoffset > this.linoffset && this.ringoffset - this.linoffset < this.frame_size) {
        return;
      }
      // buffer fill
      for (var _i = -1; ++_i < this.linbuf.length;) {
        this.linbuf[_i] = this.ring[this.linoffset + _i];
      }
      this.linoffset += this.linbuf.length;
      this.framesbuf = this.encoder.process(this.linbuf);
      if (this.ringoffset > this.ring_size) {
        this.modoffset = this.ringoffset % this.ring_size;
        this.ringoffset = 0;
      }
      if (this.linoffset > this.ring_size) {
        this.linoffset = 0;
      }
      return this.framesbuf;
    }
  }, {
    key: "decode",
    value: function decode(bitstream) {
      return this.decoder.process(bitstream);
    }
  }, {
    key: "close",
    value: function close() {
      this.encoder.close();
      this.decoder.close();
    }
  }, {
    key: "onerror",
    value: function onerror(message, code) {
      console.error("AMR Error " + code + ": " + message);
    }
  }]);
  return AMR;
}();
_defineProperty(AMR, "modes", {
  0: 12,
  1: 13,
  2: 15,
  3: 17,
  4: 19,
  5: 20,
  6: 26,
  7: 31,
  8: 5
});
_defineProperty(AMR, "MAGIC_NUMBER", [35, 33, 65, 77, 82, 10]);
_defineProperty(AMR, "MAGIC_NUMBER_STRING", "#!AMR\n");
var CBuffer = /*#__PURE__*/function () {
  function CBuffer() {
    _classCallCheck(this, CBuffer);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    // if no arguments, then nothing needs to be set
    if (0 === args.length) {
      throw "Missing Argument: You must pass a valid buffer length";
    }
    // this is the same in either scenario
    this.size = this.start = 0;
    // set to callback fn if data is about to be overwritten
    this.overflow = null;
    // emulate Array based on passed arguments
    if (1 < args.length || 'number' != typeof args[0]) {
      this.data = new Float32Array(args.length);
      this.end = (this.length = args.length) - 1;
      this.push.apply(this, args);
    } else {
      this.data = new Float32Array(args[0]);
      this.end = (this.length = args[0]) - 1;
    }
  }

  /* mutator methods */

  // pop last item
  _createClass(CBuffer, [{
    key: "pop",
    value: function pop() {
      var item;
      if (0 === this.size) return;
      item = this.data[this.end];
      // remove the reference to the object so it can be garbage collected
      delete this.data[this.end];
      this.end = (this.end - 1 + this.length) % this.length;
      --this.size;
      return item;
    }

    // push item to the end
  }, {
    key: "push",
    value: function push() {
      // check if overflow is set, and if data is about to be overwritten
      if (this.overflow && this.length < this.size + arguments.length) {
        // call overflow function and send data that's about to be overwritten
        for (var i = -1; ++i < this.size + arguments.length - this.length;) {
          this.overflow(this.data[(this.end + i + 1) % this.length], this);
        }
      }
      // push items to the end, wrapping and erasing existing items
      // using arguments variable directly to reduce gc footprint
      for (var _i2 = -1; ++_i2 < arguments.length;) {
        this.data[(this.end + _i2 + 1) % this.length] = _i2 < 0 || arguments.length <= _i2 ? undefined : arguments[_i2];
      }
      // recalculate size
      if (this.length > this.size) {
        if (this.length < this.size + arguments.length) this.size = this.length;else this.size += arguments.length;
      }
      // recalculate end
      this.end = (this.end + arguments.length) % this.length;
      // recalculate start
      this.start = (this.length + this.end - this.size + 1) % this.length;
      // return number current number of items in CBuffer
      return this.size;
    }
  }, {
    key: "reverse",
    value: function reverse() {
      for (var i = -1; ++i < ~~(this.size >> 1);) {
        var tmp = this.data[(this.start + i) % this.length];
        this.data[(this.start + i) % this.length] = this.data[(this.start + (this.size - i - 1)) % this.length];
        this.data[(this.start + (this.size - i - 1)) % this.length] = tmp;
      }
      return this;
    }

    // rotate buffer to the left by cntr, or by 1
  }, {
    key: "rotateLeft",
    value: function rotateLeft(cntr) {
      if (void 0 === cntr) cntr = 1;
      if ('number' != typeof cntr) throw "Argument must be a number";
      while (0 <= --cntr) {
        this.push(this.shift());
      }
      return this;
    }

    // rotate buffer to the right by cntr, or by 1
  }, {
    key: "rotateRight",
    value: function rotateRight(cntr) {
      if (void 0 === cntr) cntr = 1;
      if ('number' != typeof cntr) throw "Argument must be a number";
      while (0 <= --cntr) {
        this.unshift(this.pop());
      }
      return this;
    }

    // remove and return first item
  }, {
    key: "shift",
    value: function shift() {
      var item;
      // check if there are any items in CBuff
      if (0 === this.size) return;
      // store first item for return
      item = this.data[this.start];
      // recalculate start of CBuffer
      this.start = (this.start + 1) % this.length;
      // decrement size
      --this.size;
      return item;
    }

    // add item to beginning of buffer
  }, {
    key: "unshift",
    value: function unshift() {
      // check if overflow is set, and if data is about to be overwritten
      if (this.overflow && this.length < this.size + arguments.length) {
        // call overflow function and send data that's about to be overwritten
        for (var i = -1; ++i < this.size + arguments.length;) {
          this.overflow(this.data[this.end - i % this.length], this);
        }
      }
      for (var _i3 = -1; ++_i3 < arguments.length;) {
        this.data[(this.length + this.start - _i3 % this.length - 1) % this.length] = _i3 < 0 || arguments.length <= _i3 ? undefined : arguments[_i3];
      }
      if (0 > this.length - this.size) {
        this.end += this.length - this.size - arguments.length;
        if (0 > this.end) this.end = this.length + this.end % this.length;
      }
      if (this.length > this.size) {
        if (this.length < this.size + arguments.length) this.size = this.length;else this.size += arguments.length;
      }
      this.start -= arguments.length;
      if (0 > this.start) this.start = this.length + this.start % this.length;
      return this.size;
    }

    /* accessor methods */

    // return index of first metched element
  }, {
    key: "indexOf",
    value: function indexOf(arg, idx) {
      if (void 0 === idx) idx = 0;
      for (var i = idx - 1; ++i < this.size;) {
        if (arg === this.data[(this.start + idx) % this.length]) return idx;
      }
      return -1;
    }

    // return last index of the first match
  }, {
    key: "lastIndexOf",
    value: function lastIndexOf(arg, idx) {
      if (void 0 === idx) idx = this.size - 1;
      for (var i = idx + 1; --i > -1;) {
        if (arg === this.data[(this.start + idx) % this.length]) return idx;
      }
      return -1;
    }

    // return the index an item would be inserted to if this
    // is a sorted circular buffer
  }, {
    key: "sortedIndex",
    value: function sortedIndex(value, comparitor, context) {
      comparitor = comparitor || function (a, b) {
        return a === b ? 0 : a > b ? 1 : -1;
      };
      var low = this.start;
      var high = this.size - 1;

      // Tricky part is finding if its before or after the pivot
      // we can get this info by checking if the target is less than
      // the last item. After that it's just a typical binary search
      if (low && 0 < comparitor.call(context, value, this.data[high])) {
        low = 0;
        high = this.end;
      }
      while (high > low) {
        var mid = low + high >>> 1;
        if (0 < comparitor.call(context, value, this.data[mid])) low = mid + 1;else high = mid;
      }
      return ((low - this.start) % this.size + this.size) % this.size;
    }

    /* iteration methods */

    // check every item in the array against a test
  }, {
    key: "every",
    value: function every(callback, context) {
      for (var i = -1; ++i < this.size;) {
        if (!callback.call(context, this.data[(this.start + i) % this.length], i, this)) return false;
      }
      return true;
    }

    // loop through each item in buffer
    // TODO: figure out how to emulate Array use better
  }, {
    key: "forEach",
    value: function forEach(callback, context) {
      for (var i = -1; ++i < this.size;) {
        callback.call(context, this.data[(this.start + i) % this.length], i, this);
      }
    }

    // check items agains test until one returns true
    // TODO: figure out how to emuldate Array use better
  }, {
    key: "some",
    value: function some(callback, context) {
      for (var i = -1; ++i < this.size;) {
        if (callback.call(context, this.data[(this.start + i) % this.length], i, this)) return true;
      }
      return false;
    }

    // calculate the average value of a circular buffer
  }, {
    key: "avg",
    value: function avg() {
      return 0 === this.size ? 0 : this.sum() / this.size;
    }

    // loop through each item in buffer and calculate sum
  }, {
    key: "sum",
    value: function sum() {
      var index = this.size;
      var s = 0;
      while (--index) s += this.data[index];
      return s;
    }

    // loop through each item in buffer and calculate median
  }, {
    key: "median",
    value: function median() {
      if (0 === this.size) return 0;
      var values = this.slice().sort(function (a, b) {
        return a === b ? 0 : a > b ? 1 : -1;
      });
      var half = Math.floor(values.length >> 1);
      if (values.length % 2) return values[half];else return (values[half - 1] + values[half]) / 2.0;
    }

    /* utility methods */
    // reset pointers to buffer with zero items
    // note: this will not remove values in cbuffer, so if for security values
    //       need to be overwritten, run .fill(null).empty()
  }, {
    key: "empty",
    value: function empty() {
      this.size = this.start = 0;
      this.end = this.length - 1;
      return this;
    }

    // fill all places with passed value or function
  }, {
    key: "fill",
    value: function fill(arg) {
      if ('function' == typeof arg) {
        for (var i = -1; ++i < this.length;) {
          this.data[i] = arg();
        }
      } else {
        for (var _i4 = -1; ++_i4 < this.length;) {
          this.data[_i4] = arg;
        }
      }
      // reposition start / end
      this.start = 0;
      this.end = this.length - 1;
      this.size = this.length;
      return this;
    }

    // return first item in buffer
  }, {
    key: "first",
    value: function first() {
      return this.data[this.start];
    }

    // return last item in buffer
  }, {
    key: "last",
    value: function last() {
      return this.data[this.end];
    }

    // return specific index in buffer
  }, {
    key: "get",
    value: function get(arg) {
      return this.data[(this.start + arg) % this.length];
    }
  }, {
    key: "isFull",
    value: function isFull() {
      return this.length === this.size;
    }

    // set value at specified index
  }, {
    key: "set",
    value: function set(idx, arg) {
      return this.data[(this.start + idx) % this.length] = arg;
    }

    // return clean array of values
  }, {
    key: "toArray",
    value: function toArray() {
      return this.slice();
    }

    // slice the buffer to an array
  }, {
    key: "slice",
    value: function slice(start, end) {
      var length = this.size;
      start = +start || 0;
      if (0 > start) {
        if (end <= start) return [];
        start = -start > length ? 0 : length + start;
      }
      if (null === end || length < end) {
        end += length;
      } else if (0 > end) {
        end += length;
      } else {
        end = +end || 0;
      }
      length = end > start ? end - start : 0;
      var result = Array(length);
      for (var i = 0; ++i < length;) {
        result[i] = this.data[(this.start + start + i) % this.length];
      }
      return result;
    }
  }]);
  return CBuffer;
}();
var FFT = /*#__PURE__*/function () {
  function FFT(bufferSize) {
    _classCallCheck(this, FFT);
    this.bufferSize = bufferSize;
    this.real = new Float64Array(bufferSize);
    this.imag = new Float64Array(bufferSize);
    this.rbo = new Uint32Array(bufferSize);
    for (var limit = 1, bit = bufferSize >> 1; bufferSize > limit; limit <<= 1, bit >>= 1) {
      for (var i = -1, offset = limit; ++i < limit; ++offset) {
        this.rbo[offset] = this.rbo[i] + bit;
      }
    }
    this.treal = new Float64Array(bufferSize >> 1);
    this.timag = new Float64Array(bufferSize >> 1);
    for (var _i5 = -1, n = bufferSize >> 1; ++_i5 < n;) {
      this.treal[_i5] = +Math.cos(Math.PI * _i5 / n);
      this.timag[_i5] = -Math.sin(Math.PI * _i5 / n);
    }
  }
  _createClass(FFT, [{
    key: "forward",
    value: function forward(buffer) {
      var bufferSize = this.bufferSize;
      var rbo = this.rbo;
      var real = this.real;
      var imag = this.imag;

      // let k = Math.floor(Math.log(bufferSize) / Math.LN2);

      // if (Math.pow(2, k) !== bufferSize) { throw "Invalid buffer size, must be a power of 2." };
      if (!!(bufferSize & bufferSize - 1)) {
        throw "Invalid buffer size, must be a power of 2.";
      }
      if (buffer.length !== bufferSize) {
        throw "Supplied buffer is not the same size as defined FFT. FFT Size: " + bufferSize + " Buffer Size: " + buffer.length;
      }
      for (var i = -1; ++i < bufferSize;) {
        real[i] = buffer[rbo[i]];
        imag[i] = 0;
      }
      this.transform(real, imag, 1);
    }
  }, {
    key: "inverse",
    value: function inverse(real, imag, buffer) {
      var bufferSize = this.bufferSize;
      var rbo = this.rbo;
      real = real || this.real;
      imag = imag || this.imag;
      var revReal = new Float64Array(bufferSize);
      var revImag = new Float64Array(bufferSize);
      for (var i = -1; ++i < real.length;) {
        revReal[i] = real[rbo[i]];
        revImag[i] = imag[rbo[i]];
      }
      real = revReal;
      imag = revImag;
      this.transform(real, imag, -1);
      for (var _i6 = -1; ++_i6 < bufferSize;) {
        buffer[_i6] = real[_i6] / bufferSize;
      }
    }
  }, {
    key: "transform",
    value: function transform(real, imag, conj) {
      var bufferSize = this.bufferSize;
      var treal = this.treal;
      var timag = this.timag;
      for (var layer = 1, order = 1, N = bufferSize; order < N; order <<= 1, layer += 1) {
        for (var group = 0, factor = N >> layer; group < order; group += 1) {
          for (var bf = group, radix = group * factor; bf < N; bf += order << 1) {
            var bfr = bf + order;
            var tr = treal[radix] * real[bfr] - conj * timag[radix] * imag[bfr];
            var ti = treal[radix] * imag[bfr] + conj * timag[radix] * real[bfr];
            real[bfr] = real[bf] - tr;
            imag[bfr] = imag[bf] - ti;
            real[bf] = real[bf] + tr;
            imag[bf] = imag[bf] + ti;
          }
        }
      }
    }
  }]);
  return FFT;
}();
var PhaseVocoder = /*#__PURE__*/function () {
  function PhaseVocoder(winSize) {
    _classCallCheck(this, PhaseVocoder);
    var hlfSize = (winSize >> 1) + 1;
    this.winSize = winSize;
    this.ha = this.hs = Math.round(winSize >> 2);
    this.omega = new Float64Array(hlfSize);
    for (var i = -1, n = hlfSize; ++i < n;) {
      this.omega[i] = Math.PI * i / n;
    }
    this.prevInputPhase = this._create_constant_array(winSize >> 1, 0, Float64Array);
    this.prevOutputPhase = this._create_constant_array(winSize >> 1, 0, Float64Array);
    this.overlapBuffers = new CBuffer(winSize).fill(0);
    this.owOverlapBuffers = new CBuffer(winSize).fill(0);

    // Hann Window
    this.framingWindow = new Float64Array(winSize);
    for (var _i7 = -1, _n = winSize; ++_i7 < _n;) {
      this.framingWindow[_i7] = Math.pow(Math.sin(Math.PI * _i7 / _n), 2);
    }
    this.fft = new FFT(winSize);
    this.processObj = {
      fftObj: {
        real: new Float64Array(hlfSize),
        imag: new Float64Array(hlfSize),
        magnitude: new Float64Array(hlfSize),
        phase: new Float64Array(hlfSize)
      },
      pvObj: {
        real: this._create_constant_array(winSize, 0, Float32Array),
        imag: this._create_constant_array(winSize, 0, Float32Array),
        magnitude: this._create_constant_array(winSize, 0, Float32Array),
        phase: this._create_constant_array(winSize, 0, Float32Array)
      },
      processedFrame: new Float64Array(winSize)
    };
    this.pvStepObj = {
      phTh: new Float64Array(hlfSize)
    };
  }
  _createClass(PhaseVocoder, [{
    key: "_create_constant_array",
    value: function _create_constant_array(size, constant, T) {
      var arr = new (!T ? Array : T)(size);
      for (var i = -1; ++i < size;) {
        arr[i] = constant;
      }
      return arr;
    }
  }, {
    key: "process",
    value: function process(inputArray, outputArray) {
      // ----------------------------------
      // ----------ANALYSIS STEP-----------
      // ----------------------------------
      var fftObj = this.processObj.fftObj;
      var pvObj = this.processObj.pvObj;
      var processedFrame = this.processObj.processedFrame;
      // FOR SOME REASON, IF I DON'T CREATE A NEW "phase" ARHaY, I GET ARTIFACTS.
      this.stft(inputArray, processedFrame, fftObj);
      var prevInputPhase = this.prevInputPhase;
      var prevOutputPhase = this.prevOutputPhase;
      var omega = this.omega;
      this.pv_step(fftObj, prevInputPhase, prevOutputPhase, omega, pvObj);
      this.prevOutputPhase = pvObj.phase;
      this.prevInputPhase = new Float32Array(fftObj.phase);
      this.istft(pvObj.real, pvObj.imag, processedFrame);

      // ----------------------------------
      // ------OVERLAP AND SLIDE STEP------
      // ----------------------------------
      var overlapBuffers = this.overlapBuffers;
      var owOverlapBuffers = this.owOverlapBuffers;
      this.overlap_and_slide(processedFrame, overlapBuffers, owOverlapBuffers, outputArray);
    }
  }, {
    key: "pv_step",
    value: function pv_step(fftObj, prevInputPhase, prevOutputPhase, omega, pvObj) {
      var hs = this.hs;
      var ha = this.ha;
      var phase = fftObj.phase;
      var mag = fftObj.magnitude;
      var phTh = this.pvStepObj.phTh;
      for (var i = -1, index = 0, prevPeak = 0, prevRegStart = 0, prevInstPhaseAdv = 0; ++i < omega.length;) {
        var expectedPhaseAdv = omega[i] * ha;
        var auxHeterodynedPhaseIncr = phase[i] - prevInputPhase[i] - expectedPhaseAdv;
        var heterodynedPhaseIncr = auxHeterodynedPhaseIncr - 2 * Math.PI * Math.round(auxHeterodynedPhaseIncr / (2 * Math.PI));
        var instPhaseAdvPerSampleHop = omega[i] + heterodynedPhaseIncr / ha;
        var instPhaseAdv = instPhaseAdvPerSampleHop * hs;
        if (Math.max(mag[i - 2] | 0, mag[i - 1] | 0, mag[i + 1] | 0, mag[i + 2] | 0) < mag[i]) {
          var peak = i;
          var regStart = Math.ceil(prevPeak + peak >> 1) | 0;
          var reg = Math.max(0, regStart - prevRegStart);
          prevRegStart = regStart;
          for (var j = 0; j < reg; ++j, ++index) {
            phTh[index] = prevOutputPhase[prevPeak] + prevInstPhaseAdv - phase[prevPeak];
          }
          prevPeak = peak;
          prevInstPhaseAdv = instPhaseAdv;
        }
      }
      for (var _i8 = -1; ++_i8 < phTh.length;) {
        var theta = phTh[_i8];
        var phThRe = Math.cos(theta);
        var phThIm = Math.sin(theta);
        pvObj.real[_i8] = phThRe * fftObj.real[_i8] - phThIm * fftObj.imag[_i8];
        pvObj.imag[_i8] = phThRe * fftObj.imag[_i8] + phThIm * fftObj.real[_i8];
        pvObj.phase[_i8] = Math.atan2(pvObj.imag[_i8], pvObj.real[_i8]);
      }
    }
  }, {
    key: "overlap_and_slide",
    value: function overlap_and_slide(processedFrame, overlapBuffers, owOverlapBuffers, outputArray) {
      var hs = this.hs;
      var winSize = this.winSize;
      var framingWindow = this.framingWindow;
      for (var i = -1; ++i < hs;) {
        var oSample = overlapBuffers.shift() || 0;
        var owSample = owOverlapBuffers.shift() || 1;
        outputArray.push(oSample / Math.max(10e-3, owSample));
        // outputArray.push(oSample);

        overlapBuffers.push(0);
        owOverlapBuffers.push(0);
      }
      for (var _i9 = -1; ++_i9 < winSize;) {
        var _oSample = overlapBuffers.shift();
        var _owSample = owOverlapBuffers.shift();
        overlapBuffers.push(processedFrame[_i9] + _oSample);
        owOverlapBuffers.push(framingWindow[_i9] + _owSample);
      }
    }
  }, {
    key: "stft",
    value: function stft(inputFrame, processedFrame, fftObj) {
      var winSize = this.winSize;
      var fft = this.fft;
      var hlfSize = Math.round(winSize >> 1) + 1;
      var framingWindow = this.framingWindow;
      for (var i = -1; ++i < winSize;) {
        processedFrame[i] = inputFrame[i] * framingWindow[i];
      }
      fft.forward(processedFrame);
      fftObj.real = fft.real;
      fftObj.imag = fft.imag;
      var real = fftObj.real,
        imag = fftObj.imag;
      var mag = fftObj.magnitude,
        phase = fftObj.phase;
      for (var _i10 = -1, n = winSize >> 1; ++_i10 < n;) {
        mag[_i10] = 2 * Math.sqrt(real[_i10] * real[_i10] + imag[_i10] * imag[_i10]);
        phase[_i10] = Math.atan2(imag[_i10], real[_i10]);
      }
    }
  }, {
    key: "istft",
    value: function istft(real, imag, timeFrame) {
      var fft = this.fft;
      fft.inverse(real, imag, timeFrame);
    }
  }, {
    key: "get_analysis_hop",
    value: function get_analysis_hop() {
      return this.ha;
    }
  }, {
    key: "get_synthesis_hop",
    value: function get_synthesis_hop() {
      return this.hs;
    }
  }, {
    key: "get_alpha",
    value: function get_alpha() {
      return Math.round(this.hs / this.ha * 10) / 10;
    }
  }, {
    key: "get_framing_window",
    value: function get_framing_window() {
      return this.framingWindow;
    }
  }, {
    key: "get_squared_framing_window",
    value: function get_squared_framing_window() {
      return this.squaredFramingWindow;
    }
  }, {
    key: "set_alpha",
    value: function set_alpha(alpha) {
      var winSize = this.winSize;
      this.ha = Math.round(winSize >> 2);
      this.hs = Math.round(alpha * this.ha);
    }
  }, {
    key: "get_alpha_step",
    value: function get_alpha_step() {
      return 1 / this.ha;
    }
  }, {
    key: "set_hops",
    value: function set_hops(ha, hs) {
      this.ha = ha;
      this.hs = hs;
    }
  }]);
  return PhaseVocoder;
}();
var BPV = /*#__PURE__*/function () {
  function BPV(buffer, frameSize) {
    _classCallCheck(this, BPV);
    this.frameSize = frameSize = frameSize || 4096;
    this.pvL = new PhaseVocoder(frameSize);
    this.pvR = new PhaseVocoder(frameSize);
    this.buffer = buffer;
    this.pos = 0;
    this.alpha = 1;
    this.midBufL = new CBuffer(Math.round(frameSize << 1));
    this.midBufR = new CBuffer(Math.round(frameSize << 1));
  }
  _createClass(BPV, [{
    key: "process",
    value: function process(outputBuffer) {
      var buffer = this.buffer;
      var frameSize = this.frameSize;
      var midBufL = this.midBufL;
      var midBufR = this.midBufR;
      if (!buffer) return;
      var sampleCounter = 0;

      // console.log(buffer.numberOfChannels);
      var il = buffer.getChannelData(0);
      var ir = buffer.getChannelData(1 < buffer.numberOfChannels ? 1 : 0);
      var ol = outputBuffer.getChannelData(0);
      var or = outputBuffer.getChannelData(1);
      while (0 < midBufR.size && sampleCounter < outputBuffer.length) {
        var index = sampleCounter++;
        ol[index] = midBufL.shift();
        or[index] = midBufR.shift();
      }
      if (outputBuffer.length === sampleCounter) return;
      do {
        var bufL = il.subarray(this.pos, this.pos + frameSize);
        var bufR = ir.subarray(this.pos, this.pos + frameSize);
        if (void 0 !== this.alpha && this.pvL.get_alpha() !== this.alpha && this.pvR.get_alpha() !== this.alpha) {
          this.pvL.set_alpha(this.alpha);
          this.pvR.set_alpha(this.alpha);
          this.alpha = void 0;
        }

        /* LEFT */
        this.pvL.process(bufL, midBufL);
        this.pvR.process(bufR, midBufR);
        for (var i = sampleCounter - 1; ++i < outputBuffer.length && this.midBufL.size > 0;) {
          ol[i] = midBufL.shift();
          or[i] = midBufR.shift();
        }
        sampleCounter += this.pvL.get_synthesis_hop();
        this.pos += this.pvL.get_analysis_hop();
      } while (outputBuffer.length > sampleCounter);
    }
  }, {
    key: "get_pos",
    value: function get_pos() {
      return this.pos;
    }
  }, {
    key: "set_pos",
    value: function set_pos(pos) {
      this.pos = pos;
    }
  }, {
    key: "get_alpha",
    value: function get_alpha() {
      return this.alpha;
    }
  }, {
    key: "set_alpha",
    value: function set_alpha(alpha) {
      this.alpha = alpha;
    }
  }]);
  return BPV;
}();
var _wait = /*#__PURE__*/new WeakSet();
var _createAudio = /*#__PURE__*/new WeakSet();
var _encodeWAVData = /*#__PURE__*/new WeakSet();
var _decodeBuffer = /*#__PURE__*/new WeakSet();
var _destory = /*#__PURE__*/new WeakSet();
var _start = /*#__PURE__*/new WeakSet();
var _resume = /*#__PURE__*/new WeakSet();
var _suspend = /*#__PURE__*/new WeakSet();
var AudioC = /*#__PURE__*/function () {
  function AudioC() {
    _classCallCheck(this, AudioC);
    _classPrivateMethodInitSpec(this, _suspend);
    _classPrivateMethodInitSpec(this, _resume);
    _classPrivateMethodInitSpec(this, _start);
    _classPrivateMethodInitSpec(this, _destory);
    _classPrivateMethodInitSpec(this, _decodeBuffer);
    _classPrivateMethodInitSpec(this, _encodeWAVData);
    _classPrivateMethodInitSpec(this, _createAudio);
    _classPrivateMethodInitSpec(this, _wait);
    this.sampleRate = 44100;
    this.bufferSize = 1024; // STFT帧移
    this.pos = 0;
    this.playbackRate = 1.0;
    this.gainValue = 1.5;

    // create web audio api context
    var _AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext;
    if (!(this.ctx = new _AudioContext())) {
      throw new Error('Web Audio API is Unsupported.');
    }
    // this.ctxLoadStart = new Date();
    // window.inter = (window.inter && clearInterval(window.inter)) || setInterval(() => {
    //     console.log(this.ctx.currentTime)
    // }, 1000);
    // Create AMR
    this.amr = new AMR({
      benchmark: false
    });
    if (!(this.ac = new AbortController())) {
      throw new Error('AbortController API is Unsupported.');
    }
    this.rawData = null;
    this.buffer = null;
    this.source = null;
    this.processor = null;
    this.analyser = null;
    this.gain = null;
    this.srcSec = 0;
    this.waitTime = 1000;
    this.totalTime = 0;
    this.onended = null;
  }
  _createClass(AudioC, [{
    key: "loadBlob",
    value: function loadBlob(blob) {
      var _this = this;
      return new Promise(function (resolve) {
        var reader = new window.FileReader();
        reader.onload = function (event) {
          var target = event.target;
          return resolve(target.result);
        };
        reader.readAsArrayBuffer(blob);
      }).then(function (data) {
        return _classPrivateMethodGet(_this, _decodeBuffer, _decodeBuffer2).call(_this, data);
      });
    }
  }, {
    key: "loadUrl",
    value: function loadUrl(url) {
      var _this2 = this;
      return new Promise(function (resolve, reject) {
        var xhr = new window.XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.setRequestHeader('Access-Control-Allow-Headers', '*');
        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
        xhr.responseType = "arraybuffer";
        xhr.onreadystatechange = function () {
          if (xhr.readyState === 4) return resolve(xhr.response);
        };
        xhr.onerror = function (event) {
          return reject(new Error("Failed to fetch ".concat(url)));
        };
        xhr.send();
      }).then(function (data) {
        return _classPrivateMethodGet(_this2, _decodeBuffer, _decodeBuffer2).call(_this2, data);
      });
    }
  }, {
    key: "playAudio",
    value: function playAudio() {
      _classPrivateMethodGet(this, _start, _start2).call(this);
    }
  }, {
    key: "stopAudio",
    value: function stopAudio() {
      _classPrivateMethodGet(this, _destory, _destory2).call(this);
    }
  }, {
    key: "resumeAudio",
    value: function resumeAudio() {
      _classPrivateMethodGet(this, _resume, _resume2).call(this);
    }
  }, {
    key: "suspendAudio",
    value: function suspendAudio() {
      _classPrivateMethodGet(this, _suspend, _suspend2).call(this);
    }
  }, {
    key: "skipAudio",
    value: function skipAudio(offset) {
      var buffer = this.buffer;
      this.srcSec = offset;
      this.pos = Math.round(this.srcSec * buffer.length / buffer.duration);
      // (function rec(self) {
      //     ++self.srcSec;
      //     self.#wait(self.waitTime).then(() => rec(self));
      // })(this);
      this.ac.abort();
      (function rec() {
        var _this3 = this;
        ++this.srcSec;
        _classPrivateMethodGet(this, _wait, _wait2).call(this, this.waitTime).then(function () {
          return rec.bind(_this3)();
        });
      }).bind(this)();
    }
  }, {
    key: "setPlaybackRate",
    value: function setPlaybackRate(value) {
      this.playbackRate = value;
      this.waitTime = Math.ceil(1000 / value);
    }
  }, {
    key: "setGainValue",
    value: function setGainValue(value) {
      this.gainValue = Math.max(0, Math.min(Math.round(value * 10) / 10, 1.5));
    }
  }, {
    key: "getTotalTime",
    value: function getTotalTime() {
      return this.totalTime;
    }
  }, {
    key: "getCurrentTime",
    value: function getCurrentTime() {
      return this.srcSec || 0;
    }
  }, {
    key: "getState",
    value: function getState() {
      return this.ctx.state;
    }
  }, {
    key: "onEnded",
    value: function onEnded(cb) {
      this.onended = cb;
    }
  }, {
    key: "getRawData",
    value: function getRawData() {
      return this.rawData;
    }
  }, {
    key: "getWavData",
    value: function getWavData(buffer) {
      var audioBuffer = buffer || this.buffer;
      var numberOfChannels = audioBuffer.numberOfChannels;
      var sampleRate = audioBuffer.sampleRate;
      var channelLength = audioBuffer.length;
      var totalLength = numberOfChannels * channelLength;
      var data = new Float32Array(totalLength);
      for (var i = -1, dst = 0; ++i < channelLength; dst += numberOfChannels) {
        for (var j = -1; ++j < numberOfChannels;) {
          data[j + dst] = audioBuffer.getChannelData(j)[i];
        }
      }
      var dataBuffer = data.buffer;
      return _classPrivateMethodGet(this, _encodeWAVData, _encodeWAVData2).call(this, dataBuffer, numberOfChannels, sampleRate);
    }
  }]);
  return AudioC;
}();
function _wait2(ms) {
  return new Promise(function (resolve) {
    var _this4 = this;
    var controller = this.ac = new AbortController();
    var signal = controller.signal;
    this.timer = this.timer && clearTimeout(this.timer) || setTimeout(resolve, ms);
    signal.addEventListener("abort", function () {
      _this4.timer && clearTimeout(_this4.timer);
    });
  }.bind(this));
}
function _createAudio2() {
  // create BufferSourceNode and Analyser and Gain
  this.source = this.ctx.createBufferSource();
  this.processor = this.ctx.createScriptProcessor(this.bufferSize, 1, 2);
  this.analyser = this.ctx.createAnalyser();
  this.gain = this.ctx.createGain();
  // connect source to analyser to gain node to speakers
  this.source.connect(this.processor);
  this.processor.connect(this.analyser);
  this.analyser.connect(this.gain);
  this.gain.connect(this.ctx.destination);
}
function _encodeWAVData2(buffer, numberOfChannels, sampleRate) {
  var dataBuffer = buffer;
  var numFrames = dataBuffer.byteLength / Float32Array.BYTES_PER_ELEMENT;
  // wav header
  var bytesPerSample = 4,
    format = 3;
  var blockAlign = numberOfChannels * bytesPerSample;
  var byteRate = sampleRate * blockAlign;
  var dataSize = numFrames * blockAlign;
  var headBuffer = new ArrayBuffer(44);
  var dv = new DataView(headBuffer);
  var p = 0;
  function writeString(s) {
    for (var i = -1; ++i < s.length;) {
      dv.setUint8(p + i, s.charCodeAt(i));
    }
    p += s.length;
  }
  function writeUint32(d) {
    dv.setUint32(p, d, true);
    p += 4;
  }
  function writeUint16(d) {
    dv.setUint16(p, d, true);
    p += 2;
  }
  writeString('RIFF'); // ChunkID
  writeUint32(dataSize + 36); // ChunkSize
  writeString('WAVE'); // Format
  writeString('fmt '); // Subchunk1ID
  writeUint32(16); // Subchunk1Size
  writeUint16(format); // AudioFormat https://i.stack.imgur.com/BuSmb.png
  writeUint16(numberOfChannels); // NumChannels
  writeUint32(sampleRate); // SampleRate
  writeUint32(byteRate); // ByteRate
  writeUint16(blockAlign); // BlockAlign
  writeUint16(bytesPerSample * 8); // BitsPerSample
  writeString('data'); // Subchunk2ID
  writeUint32(dataSize); // Subchunk2Size

  var headerArray = new Uint8Array(headBuffer);
  var wavArray = new Uint8Array(headerArray.length + dataBuffer.byteLength);

  // prepend header, then add pcmBytes
  wavArray.set(headerArray, 0);
  wavArray.set(new Uint8Array(dataBuffer), headerArray.length);
  return wavArray;
}
function _decodeBuffer2(audioData) {
  var _this5 = this;
  _classPrivateMethodGet(this, _destory, _destory2).call(this);
  return new Promise(function (resolve) {
    var decodedData = _this5.amr.decode(new Uint8Array(_this5.rawData = audioData));
    if (!decodedData) {
      return resolve();
    }
    // let buf = this.ctx.createBuffer(1, decodedData.length, 8000);
    // (buf && buf.copyToChannel) ? buf.copyToChannel(decodedData, 0, 0): buf.getChannelData(0).set(decodedData);
    // console.log(buf);
    var wavData = _classPrivateMethodGet(_this5, _encodeWAVData, _encodeWAVData2).call(_this5, decodedData.buffer, 1, 8000);
    var AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext;
    if (!(_this5.ctx = new AudioContext({
      sampleRate: 8000
    }))) {
      throw new Error('Web Audio API is Unsupported.');
    }
    // console.log(this.ctx.sampleRate);
    var buffer = _this5.ctx.decodeAudioData(wavData.buffer);
    return resolve(buffer);
  }).then(function (buffer) {
    if (!!buffer) return buffer;
    var AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext;
    if (!(_this5.ctx = new AudioContext({
      sampleRate: 44100
    }))) {
      throw new Error('Web Audio API is Unsupported.');
    }
    // console.log(this.ctx.sampleRate);

    return _this5.ctx.decodeAudioData(_this5.rawData = audioData);
  }).then(function (buffer) {
    if (!buffer) {
      throw new Error("unsupported audio format");
    }
    // this.bufferLoadOffset = (new Date() - this.ctxLoadStart) / 1000;
    _this5.sampleRate = buffer.sampleRate;
    _this5.buffer = buffer;
    _this5.totalTime = buffer.duration;
    _this5.srcSec = 0 && ++_this5.srcSec;
    // this.interID && clearInterval(this.interID);
    // this.waitID && clearTimeout(this.waitID);
    _this5.ac.abort();
    return buffer;
  })["catch"](function (e) {
    console.error("Failed to decode: ".concat(e.message));
  });
}
function _destory2() {
  this.gain && this.gain.disconnect(this.ctx.destination);
  this.analyser && this.analyser.disconnect(this.gain);
  this.processor && this.processor.disconnect(this.analyser);
  this.source && this.source.disconnect(this.processor);
  this.source = this.processor = this.analyser = this.gain = null;
}
function _start2() {
  // const self = this;
  var buffer = this.buffer;
  this.source = this.ctx.createBufferSource();
  this.processor = this.ctx.createScriptProcessor(this.bufferSize, 1, 2);
  this.analyser = this.ctx.createAnalyser();
  this.gain = this.ctx.createGain();
  this.source.connect(this.processor);
  this.processor.connect(this.analyser);
  this.analyser.connect(this.gain);
  this.gain.connect(this.ctx.destination);

  // const sampleRate = buffer.sampleRate;
  var windowSize = 1024; // STFT帧长
  // const hopSize = 512 || windowSize / 4; // STFT帧移

  this.pv = new BPV(this.buffer, windowSize);
  this.processor.onaudioprocess = function (event) {
    var inputBuffer = event.inputBuffer;
    var outputBuffer = event.outputBuffer;
    var gainValue = this.gainValue;
    var playbackRate = this.playbackRate;
    var pos = this.pos;
    var buffer = this.buffer;
    if (void 0 !== gainValue) {
      this.gain.gain.value = gainValue;
      this.gainValue = void 0;
    }
    if (void 0 !== playbackRate) {
      this.pv.set_alpha(Math.round(1 / playbackRate * 10) / 10); // stretchFactor 倍速播放
      this.playbackRate = void 0;
    }
    if (void 0 !== pos) {
      this.pv.set_pos(pos);
      this.pos = void 0;
    }
    // console.log(buffer.length, Math.round(self.srcSec * buffer.length / buffer.duration))
    if (buffer.length < Math.round((this.srcSec - 1) * buffer.length / buffer.duration)) {
      this.ac.abort();
      _classPrivateMethodGet(this, _destory, _destory2).call(this);
    } else {
      this.pv.process(outputBuffer);
      var averageArray = outputBuffer.getChannelData(0);
      if (2 === outputBuffer.numberOfChannels) {
        var arrR = outputBuffer.getChannelData(1);
        for (var i = -1; ++i < arrR.length;) {
          averageArray[i] = (averageArray[i] + arrR[i]) / 2;
        }
      }
      inputBuffer.copyToChannel(averageArray, 0, 0);
    }
  }.bind(this);
  this.gain && (this.gain.gain.value = 1.5);
  this.source && (this.source.onended = this.onended);
  // start the source playing
  this.source && this.source.start(0, this.srcSec = 0);
  this.ac.abort();
  // ++this.srcSec;
  // this.interID = (this.interID && clearInterval(this.interID)) || setInterval(() => ++this.srcSec, 1000);
  // (function rec(self) {
  //     ++self.srcSec;
  //     self.#wait(self.waitTime).then(() => rec(self));
  // })(this);
  (function rec() {
    var _this6 = this;
    ++this.srcSec;
    _classPrivateMethodGet(this, _wait, _wait2).call(this, this.waitTime).then(function () {
      return rec.bind(_this6)();
    });
  }).bind(this)();
}
function _resume2() {
  this.ctx && this.ctx.resume();
  // this.interID = (this.interID && clearInterval(this.interID)) || setInterval(() => ++this.srcSec, 1000);
  // (function rec(self) {
  //     ++self.srcSec;
  //     self.#wait(self.waitTime).then(() => rec(self));
  // })(this);
  this.ac.abort();
  (function rec() {
    var _this7 = this;
    ++this.srcSec;
    _classPrivateMethodGet(this, _wait, _wait2).call(this, this.waitTime).then(function () {
      return rec.bind(_this7)();
    });
  }).bind(this)();
}
function _suspend2() {
  // const self = this;
  this.ctx && this.ctx.suspend();
  // this.interID && clearInterval(this.interID);
  // self.waitID && clearTimeout(self.waitID);
  this.ac.abort();
}


    return window.AudioC = AudioC;

});

